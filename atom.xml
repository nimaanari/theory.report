<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Theory of Computing Report</title>
  <link rel="self" href=""/>
  <link href=""/>
  <id></id>
  <updated></updated>
  <generator uri="http://feedreader.github.io/">Pluto 1.6.2 on Ruby 3.0.5 (2022-11-24) [x86_64-linux]</generator>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">David Eppstein: Isohedral Delaunay complexes</title>
    <link href="https://11011110.github.io/blog/2023/02/25/isohedral-delaunay-complexes.html"/>
    <id>https://11011110.github.io/blog/2023/02/25/isohedral-delaunay-complexes</id>
    <updated>2023-02-25T09:19:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;The Delaunay complex of a set of points in the Euclidean plane partitions the convex hull of the points into polygonal cells. Each cell is the convex hull of a co-circular subset of the points whose circle does not contain any more points. It’s often called a &lt;a href=&quot;https://en.wikipedia.org/wiki/Delaunay_triangulation&quot;&gt;Delaunay triangulation&lt;/a&gt;, because for points in &lt;a href=&quot;General position&quot;&gt;general position&lt;/a&gt; the cells are all triangles, but I do not want to assume general position here. It is &lt;a href=&quot;https://en.wikipedia.org/wiki/Isohedral_figure&quot;&gt;isohedral&lt;/a&gt; when all of the cells are symmetric to each other (maybe a little more strong than asking for them all to have the same shape). For example, the familiar tilings of the plane by squares or regular hexagons are both isohedral and Delaunay. Another example is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Deltoidal_trihexagonal_tiling&quot;&gt;tiling of the plane by 60°–90°–120° kites&lt;/a&gt;:&lt;/p&gt;

&lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/blog/assets/2023/tetrille-delaunay.svg&quot; alt=&quot;Tiling of the plane by 60°–90°–120° kites, with shading showing that the circumcircles of each site are empty of other tiling vertices&quot; style=&quot;width:100%;max-width:720px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some other tilings, even very symmetric ones, might not be Delaunay. For instance, it is impossible to make a Delaunay version of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Cairo_pentagonal_tiling&quot;&gt;Cairo pentagonal tiling&lt;/a&gt; because its tiles have two complementary angles or two right angles, impossible for a co-circular pentagon.&lt;/p&gt;

&lt;p&gt;In these cases, the symmetries are of the familiar kind, translations and rotations of the plane. But translation symmetry forces us to use infinitely many points. Can finite Delaunay complexes be isohedral? Sort of, maybe, but with a different kind of symmetry.
You can translate between Delaunay complexes on the plane and on a sphere by &lt;a href=&quot;https://en.wikipedia.org/wiki/Stereographic_projection&quot;&gt;stereographic projection&lt;/a&gt;, and translations, rotations, and scaling in the plane become Möbius transformations on the sphere. So the projection onto the sphere of a square grid becomes a spherical Delaunay complex that is symmetric under Möbius transformations.&lt;/p&gt;

&lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/blog/assets/2023/stereographic-square-tiling.svg&quot; alt=&quot;Stereographic projection of a square grid from the plane to a sphere&quot; title=&quot;CC-BY-SA 4.0 image https://commons.wikimedia.org/wiki/File:Stereogr-proj-netz.svg by Ag2gaeh from Wikimedia commons&quot; style=&quot;width:100%;max-width:720px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Rotations of the sphere are also a very special case of Möbius transformations, so we can look for Delaunay complexes with rotational symmetries. Suppose you have a polyhedron all of whose vertices lie on a sphere, and all of whose faces are symmetric to each other by rotations of the sphere. Then the intersection of the sphere with any face plane of the polyhedron is a circle through the vertices of a face that does not contain any other vertices, the defining property of a Delaunay cell. So these polyhedra are isohedral spherical Delaunay complexes. This is true, for instance, for the Platonic solids and for the two infinite families of &lt;a href=&quot;https://en.wikipedia.org/wiki/Bipyramid&quot;&gt;bipyramids&lt;/a&gt; and the &lt;a href=&quot;https://en.wikipedia.org/wiki/Trapezohedron&quot;&gt;trapezohedra&lt;/a&gt; but false for some other isohedral polyhedra like the &lt;a href=&quot;https://en.wikipedia.org/wiki/Rhombic_dodecahedron&quot;&gt;rhombic dodecahedron&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Triakis_tetrahedron&quot;&gt;triakis tetrahedron&lt;/a&gt; whose vertices cannot all be placed on a sphere.&lt;/p&gt;

&lt;p&gt;You can map these spherical Delaunay complexes back onto the plane by stereographic projection again. You might think that the result is always a planar Delaunay complex in which all faces are symmetric to each other under Möbius transformation, but there’s a catch. The projection preserves circles, but it turns inside out the ones that contain the pole of the projection. If they were empty on the sphere, they instead turn into circles in the plane that contain every other point. These inside-out circles correspond to Delaunay cells on the sphere that do not map to Delaunay cells in the plane. For instance, projecting the cube vertices back down to the plane with the pole at the midpoint of a cube edge produces a Delaunay complex with only four quadrilaterals; the other two faces of the cube come from inside-out circles and do not become Delaunay cells.&lt;/p&gt;

&lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/blog/assets/2023/cube-edge-projection.svg&quot; alt=&quot;Delaunay complex of a cube, stereographically projected onto the plane with its pole at an edge midpoint&quot; style=&quot;width:100%;max-width:720px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All of this generalizes directly to 3d Delaunay triangulations, and to isohedral 4d polytopes with cospherical vertices, but less is known about what shapes are possible. The regular 4-polytopes, certainly, have symmetric facets and cospherical vertices, but there are other possibilities as well. The &lt;a href=&quot;http://www.polytope.net/hedrondude/dice4.htm&quot;&gt;isohedral 4-polytopes with up to 20 sides&lt;/a&gt; have been classified, but I don’t know which of these can have cospherical vertices.&lt;/p&gt;

&lt;p&gt;There are, at least, three different infinite families of isohedral 4d polytopes with cospherical vertices, analogous to the bipyramids and trapezohedra. To describe this, it helps to think of four-dimensional Euclidean space as having two complex numbers \(\alpha\) and \(\beta\) as coordinates, and the unit sphere as the points for which \(\vert\alpha\vert^2+\vert\beta\vert^2=1\). These are the state vectors of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Qubit&quot;&gt;qubit&lt;/a&gt;, so we can write these points on the sphere using &lt;a href=&quot;https://en.wikipedia.org/wiki/Bra%E2%80%93ket_notation&quot;&gt;quantum notation&lt;/a&gt; as \(\alpha\,\vert0\rangle+\beta\,\vert1\rangle\), where \(\vert0\rangle\) and \(\vert1\rangle\) are just the two basis vectors for the two-complex-number coordinate system. In this notation, consider the following three sets of points, all on the unit sphere, for integer parameters \(n\) and \(m\):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Let \(X\) be the set of \(n\) points \(e^{2\pi i/n}\,\vert0\rangle\), for the integers \(i\) with \(0\le i\lt n\). These form a regular \(n\)-gon in the plane \(\beta=0\).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Let \(Y\) be the set of \(m\) points \(e^{2\pi j/m}\,\vert1\rangle\), for the integers \(j\) with \(0\le j\lt n\). These form a regular \(m\)-gon, in the perpendicular plane \(\alpha=0\).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Let \(Z\) be the set of \(mn\) points&lt;/p&gt;

\[\frac{1}{\sqrt 2}e^{2\pi i/n}\,\vert0\rangle + \frac{1}{\sqrt 2}e^{2\pi j/m}\,\vert1\rangle,\]

    &lt;p&gt;for the same ranges of \(i\) and \(j\). These lie on a &lt;a href=&quot;https://en.wikipedia.org/wiki/Flat_torus&quot;&gt;flat torus&lt;/a&gt;, the Cartesian product of two circles, and form the vertices of a tiling of the torus by rectangles.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then the convex hull of \(X\cup Y\) has as its facets \(mn\) congruent tetrahedra, each formed as the convex hull of an edge of the \(X\)-polygon and an edge of the \(Y\)-polygon. The convex hull of \(Z\) is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Duoprism&quot;&gt;duoprism&lt;/a&gt; whose facets are two kinds of prisms: the Cartesian product of an edge of the \(X\)-polygon with the whole \(Y\)-polygon, and vice versa. When \(n=m\) these two prisms are congruent and the resulting duoprism is isohedral, and dual to the convex hull of \(X\cup Y\). Here is a stereographic projection for \(n=m=18\), taken from the &lt;a href=&quot;https://www.math.cmu.edu/~fho/jenn/polytopes/index.html&quot;&gt;Jenn 3d website&lt;/a&gt;:&lt;/p&gt;

&lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/blog/assets/2023/18x18-torus.png&quot; alt=&quot;Stereographic projection into 3d of a 4-dimensional polytope, the (18,18)-duoprism, appearing as a torus tiled with squares&quot; title=&quot;Public domain image https://www.math.cmu.edu/~fho/jenn/polytopes/18x18-torus.png&quot; style=&quot;width:100%;max-width:720px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this image, the most prominent feature is the tiling by squares of the torus containing \(Z\). If you follow sequences of edges of this square grid, through opposite edges at each vertex, you will also see many 18-gons. Some of the 18-gons slice the “inside” of the torus radially into distorted prisms; these are Delaunay cells. Many of the perpendicular 18-gons slice across the “donut hole” of the torus, forming more Delaunay cells. But some of the remaining 18-gons lie on the convex hull of the shape, and cannot be used as slices for the projected set. The missing slices cause the Delaunay triangulation of the stereographic projection to miss some cells, and that can only happen because the spheres for these cells were inverted by the projection.&lt;/p&gt;

&lt;p&gt;You can also take the convex hull of \(X\cup Y\cup Z\). This has two triangular-prism facets for each tetrahedron of \(X\cup Y\), meeting at one of the squares of \(Z\). The reason I’m interested in this example comes from &lt;a href=&quot;/blog/2023/02/20/geometric-graphs-unbounded.html&quot;&gt;my most recent post, on flip-width of geometric graphs&lt;/a&gt;. If you take an induced subgraph of this polytope, consisting only of the points in \(X\cup Y\cup Z\) whose coefficients \(i\) and \(j\) are both even, the result is a subdivided complete bipartite graph \(K_{n,n}\), where by “subdivided” I mean that each edge of \(K_{n,n}\) has been replaced by a two-edge path. This isn’t an interchange, in the sense of the previous post, but it has unbounded flip-width, because it is a sparse graph that does not have bounded expansion.&lt;/p&gt;

&lt;p&gt;What I really want, though, is a 3d Euclidean Delaunay triangulation with unbounded flip-width, not a non-triangulation complex and not a 4-polytope (I already had one of those in my previous post). To get this, use a stereographic projection whose pole is on the central torus, in the middle of one of the squares (or really on the corresponding point of the unit sphere), and note that the Delaunay spheres of the polytope faces will intersect this torus in Delaunay circles of the squares. But for a square grid, the center of each square belongs only to the circumcircle of that square, not to any of the other circumcircles. So the pole of the projection will only belong to two of the Delaunay spheres, the two sharing the chosen square. The two prisms for these two spheres will be missing from the Delaunay complex (instead, their union, some sort of &lt;a href=&quot;https://en.wikipedia.org/wiki/Gyrobifastigium&quot;&gt;gyrobifastifium&lt;/a&gt;, will form the convex hull of the points), but all the other prisms will still be present. They contain all the edges of the graph, so it still contains a large induced subdivided biclique. Perturbing the points slightly to get a triangulation rather than a complex doesn’t change this.&lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By David Eppstein&lt;/p&gt;
  </content>
    <author>
      <name>David Eppstein</name>
      <uri>https://11011110.github.io/blog/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">CCI: jobs: postdoc at TU Eindhoven, University of Amsterdam, Leiden University, CWI (apply by March 31, 2023)</title>
    <link href="https://cstheory-jobs.org/2023/02/24/postdoc-at-tu-eindhoven-university-of-amsterdam-leiden-university-cwi-apply-by-march-31-2023/"/>
    <id>http://cstheory-jobs.org/2023/02/24/postdoc-at-tu-eindhoven-university-of-amsterdam-leiden-university-cwi-apply-by-march-31-2023/</id>
    <updated>2023-02-24T12:53:26+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;Postdoc Positions in Algorithmics and Stochastics, in the NETWORKS project (the Netherlands).&lt;/p&gt;
&lt;p&gt;The NETWORKS project is a collaboration of researchers from four institutions in The Netherlands: TU Eindhoven, University of Amsterdam, Leiden University and the Centrum Wiskunde &amp;amp; Informatica (CWI). NETWORKS has openings for postdocs working on algorithmics or stochastics for network problems.&lt;/p&gt;
&lt;p&gt;Website: &lt;a href=&quot;https://www.thenetworkcenter.nl/Open-Positions/openposition/30/8-Postdoctoral-fellows-in-Stochastics-and-Algorithmics-COFUND-&quot;&gt;https://www.thenetworkcenter.nl/Open-Positions/openposition/30/8-Postdoctoral-fellows-in-Stochastics-and-Algorithmics-COFUND-&lt;/a&gt;&lt;br /&gt;
Email: info@thenetworkcenter.nl&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By shacharlovett&lt;/p&gt;
  </content>
    <author>
      <name>CCI: jobs</name>
      <uri>https://cstheory-jobs.org</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Guidable Local Hamiltonian Problems with Implications to Heuristic Ans\&quot;atze State Preparation and the Quantum PCP Conjecture</title>
    <link href="http://arxiv.org/abs/2302.11578"/>
    <id>http://arxiv.org/abs/2302.11578</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Weggemans_J/0/1/0/all/0/1&quot;&gt;Jordi Weggemans&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Folkertsma_M/0/1/0/all/0/1&quot;&gt;Marten Folkertsma&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Cade_C/0/1/0/all/0/1&quot;&gt;Chris Cade&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We introduce &#39;Merlinized&#39; versions of the recently defined Guided Local
Hamiltonian problem, which we call &#39;Guidable Local Hamiltonian&#39; problems.
Unlike their guided counterparts, these problems do not have a guiding state
provided as a part of the input, but merely come with the promise that one
exists and that it satisfies certain constraints. We consider in particular two
classes of guiding states: those that can be prepared efficiently by a quantum
circuit; and those belonging to a class of quantum states we call classically
evaluatable, which have a short classical description from which it is possible
to efficiently compute expectation values of local observables classically. We
show that guidable local Hamiltonian problems for both classes of guiding
states are $\mathsf{QCMA}$-complete in the inverse-polynomial precision
setting, but lie within $\mathsf{NP}$ (or $\mathsf{NqP}$) in certain parameter
regimes when the guiding state is classically evaluatable.
&lt;/p&gt;
&lt;p&gt;We discuss the implications of these results to heuristic ans\&quot;atze state
preparation and the quantum PCP conjecture. Our completeness results show that,
from a complexity-theoretic perspective, classical ans\&quot;atze prepared by
classical heuristics are just as powerful as quantum ans\&quot;atze prepared by
quantum heuristics, so long as one has access to quantum phase estimation. In
relation to the quantum PCP conjecture, we (i) define a PCP for $\mathsf{QCMA}$
and show that it is equal to $\mathsf{NP}$ under quantum reductions; (ii) show
several no-go results for the existence of quantum gap amplification procedures
that preserve certain ground state properties; and (iii) propose two
conjectures that can be viewed as stronger versions of the NLTS theorem.
Finally, we show that many of our results can be directly modified to obtain
similar results for the class $\mathsf{MA}$.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Cutting Barnette graphs perfectly is hard</title>
    <link href="http://arxiv.org/abs/2302.11667"/>
    <id>http://arxiv.org/abs/2302.11667</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Bonnet_E/0/1/0/all/0/1&quot;&gt;&amp;#xc9;douard Bonnet&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chakraborty_D/0/1/0/all/0/1&quot;&gt;Dibyayan Chakraborty&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Duron_J/0/1/0/all/0/1&quot;&gt;Julien Duron&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A perfect matching cut is a perfect matching that is also a cutset, or
equivalently a perfect matching containing an even number of edges on every
cycle. The corresponding algorithmic problem, Perfect Matching Cut, is known to
be NP-complete in subcubic bipartite graphs [Le &amp;amp; Telle, TCS &#39;22] but its
complexity was open in planar graphs and in cubic graphs. We settle both
questions at once by showing that Perfect Matching Cut is NP-complete in
3-connected cubic bipartite planar graphs or Barnette graphs. Prior to our
work, among problems whose input is solely an undirected graph, only Distance-2
4-Coloring was known NP-complete in Barnette graphs. Notably, Hamiltonian Cycle
would only join this private club if Barnette&#39;s conjecture were refuted.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Hitting Sets when the Shallow Cell Complexity is Small</title>
    <link href="http://arxiv.org/abs/2302.11637"/>
    <id>http://arxiv.org/abs/2302.11637</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Aarts_S/0/1/0/all/0/1&quot;&gt;Sander Aarts&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Shmoys_D/0/1/0/all/0/1&quot;&gt;David B. Shmoys&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The hitting set problem is a well-known NP-hard optimization problem in
which, given a set of elements and a collection of subsets, the goal is to find
the smallest selection of elements, such that each subset contains at least one
element in the selection. Many geometric set systems enjoy improved
approximation ratios, which have recently been shown to be tight with respect
to the shallow cell complexity of the set system. The algorithms that exploit
the cell complexity, however, tend to be involved and computationally
intensive. This paper shows that comparable approximation ratios for the
hitting set problem can be attained using a much simpler algorithm: solve the
linear programming relaxation, take one initial random sample from the set of
elements with probabilities proportional to the LP-solution, and, while there
is an unhit set, take an additional sample from it proportional to the
LP-solution. Our algorithm is based on a generalization of the elegant
net-finder algorithm of Nabil Mustafa. To analyze this algorithm for the
hitting set problem, we generalize the classic Packing Lemma, and the more
recent Shallow-Packing Lemma, to the setting of weighted epsilon nets.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Adaptive Approximate Implicitization of Planar Parametric Curves via Weak Gradient Constraints</title>
    <link href="http://arxiv.org/abs/2302.11767"/>
    <id>http://arxiv.org/abs/2302.11767</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Guo_M/0/1/0/all/0/1&quot;&gt;Minghao Guo&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gao_Y/0/1/0/all/0/1&quot;&gt;Yan Gao&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Pan_Z/0/1/0/all/0/1&quot;&gt;Zheng Pan&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Converting a parametric curve into the implicit form, which is called
implicitization, has always been a popular but challenging problem in geometric
modeling and related applications. However, the existing methods mostly suffer
from the problems of maintaining geometric features and choosing a reasonable
implicit degree. The present paper has two contributions. We first introduce a
new regularization constraint(called the weak gradient constraint) for both
polynomial and non-polynomial curves, which efficiently possesses shape
preserving. We then propose two adaptive algorithms of approximate
implicitization for polynomial and non-polynomial curves respectively, which
find the ``optimal&#39;&#39; implicit degree based on the behavior of the weak gradient
constraint. More precisely, the idea is gradually increasing the implicit
degree, until there is no obvious improvement in the weak gradient loss of the
outputs. Experimental results have shown the effectiveness and high quality of
our proposed methods.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Translation of &quot;Simplizialzerlegungen von Beschrankter Flachheit&#39;&#39; by Hans Freudenthal, Annals of Mathematics, Second Series, Volume 43, Number 3, July 1942, Pages 580-583</title>
    <link href="http://arxiv.org/abs/2302.11922"/>
    <id>http://arxiv.org/abs/2302.11922</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Wintraecken_M/0/1/0/all/0/1&quot;&gt;Mathijs Wintraecken&lt;/a&gt; (translator)&lt;/p&gt;&lt;p&gt;Translation of the paper ``Simplizialzerlegungen von Beschrankter Flachheit&#39;&#39;
by Hans Freudenthal (https://doi.org/10.2307/1968813), in which Freudenthal
answers ``a question by Brouwer about the construction of an infinite series of
subdivisions of a polytope, such that the next element in the sequence is a
subdivision of the previous one and such that the subsimplices that arise do
not become arbitrarily flat.&#39;&#39;
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Certified Polyhedral Decompositions of Collision-Free Configuration Space</title>
    <link href="http://arxiv.org/abs/2302.12219"/>
    <id>http://arxiv.org/abs/2302.12219</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Dai_H/0/1/0/all/0/1&quot;&gt;Hongkai Dai&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Amice_A/0/1/0/all/0/1&quot;&gt;Alexandre Amice&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Werner_P/0/1/0/all/0/1&quot;&gt;Peter Werner&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhang_A/0/1/0/all/0/1&quot;&gt;Annan Zhang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Tedrake_R/0/1/0/all/0/1&quot;&gt;Russ Tedrake&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Understanding the geometry of collision-free configuration space (C-free) in
the presence of task-space obstacles is an essential ingredient for
collision-free motion planning. While it is possible to check for collisions at
a point using standard algorithms, to date no practical method exists for
computing C-free regions with rigorous certificates due to the complexity of
mapping task-space obstacles through the kinematics. In this work, we present
the first to our knowledge rigorous method for approximately decomposing a
rational parametrization of C-free into certified polyhedral regions. Our
method, called C-IRIS (C-space Iterative Regional Inflation by Semidefinite
programming), generates large, convex polytopes in a rational parameterization
of the configuration space which are rigorously certified to be collision-free.
Such regions have been shown to be useful for both optimization-based and
randomized motion planning. Based on convex optimization, our method works in
arbitrary dimensions, only makes assumptions about the convexity of the
obstacles in the task space, and is fast enough to scale to realistic problems
in manipulation. We demonstrate our algorithm&#39;s ability to fill a non-trivial
amount of collision-free C-space in several 2-DOF examples where the C-space
can be visualized, as well as the scalability of our algorithm on a 7-DOF KUKA
iiwa, a 6-DOF UR3e and 12-DOF bimanual manipulators. An implementation of our
algorithm is open-sourced in Drake. We furthermore provide examples of our
algorithm in interactive Python notebooks.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Storage in Computational Geometry</title>
    <link href="http://arxiv.org/abs/2302.11821"/>
    <id>http://arxiv.org/abs/2302.11821</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Han_Y/0/1/0/all/0/1&quot;&gt;Yijie Han&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Saxena_S/0/1/0/all/0/1&quot;&gt;Sanjeev Saxena&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We show that $n$ real numbers can be stored in a constant number of real
numbers such that each original real number can be fetched in $O(\log n)$ time.
&lt;/p&gt;
&lt;p&gt;Although our result has implications for many computational geometry
problems, we show here, combined with Han&#39;s $O(n\sqrt{\log n})$ time real
number sorting algorithm [3, &lt;a href=&quot;/abs/1801.00776&quot;&gt;arXiv:1801.00776&lt;/a&gt;], we can improve the complexity
of Kirkpatrick&#39;s point location algorithm [8] to $O(n\sqrt{\log n})$
preprocessing time, a constant number of real numbers for storage and $O(\log
n)$ point location time. Kirkpatrick&#39;s algorithm uses $O(n\log n)$
preprocessing time, $O(n)$ storage and $O(\log n)$ point location time. The
complexity results in Kirkpatrick&#39;s algorithm was the previous best result.
Although Lipton and Tarjan&#39;s algorithm [10] predates Kirkpatrick&#39;s algorithm
and has the same complexity, Kirkpatrick&#39;s algorithm is simpler and has a
better structure.
&lt;/p&gt;
&lt;p&gt;This paper can be viewed as a companion paper of paper [3, &lt;a href=&quot;/abs/1801.00776&quot;&gt;arXiv:1801.00776&lt;/a&gt;].
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Pattern detection in ordered graphs</title>
    <link href="http://arxiv.org/abs/2302.11619"/>
    <id>http://arxiv.org/abs/2302.11619</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ducoffe_G/0/1/0/all/0/1&quot;&gt;Guillaume Ducoffe&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Feuilloley_L/0/1/0/all/0/1&quot;&gt;Laurent Feuilloley&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Habib_M/0/1/0/all/0/1&quot;&gt;Michel Habib&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Pitois_F/0/1/0/all/0/1&quot;&gt;Fran&amp;#xe7;ois Pitois&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A popular way to define or characterize graph classes is via forbidden
subgraphs or forbidden minors. These characterizations play a key role in graph
theory, but they rarely lead to efficient algorithms to recognize these
classes. In contrast, many essential graph classes can be recognized
efficiently thanks to characterizations of the following form: there must exist
an ordering of the vertices such that some ordered pattern does not appear,
where a pattern is basically an ordered subgraph. These pattern
characterizations have been studied for decades, but there have been recent
efforts to better understand them systematically. In this paper, we focus on a
simple problem at the core of this topic: given an ordered graph of size $n$,
how fast can we detect whether a fixed pattern of size $k$ is present?
&lt;/p&gt;
&lt;p&gt;Following the literature on graph classes recognition, we first look for
patterns that can be detected in linear time. We prove, among other results,
that almost all patterns on three vertices (which capture many interesting
classes, such as interval, chordal, split, bipartite, and comparability graphs)
fall in this category. Then, in a finer-grained complexity perspective, we
prove conditional lower bounds for this problem. In particular we show that for
a large family of patterns on four vertices it is unlikely that subquadratic
algorithm exist. Finally, we define a parameter for patterns, the merge-width,
and prove that for patterns of merge-width $t$, one can solve the problem in
$O(n^{ct})$ for some constant~$c$. As a corollary, we get that detecting
outerplanar patterns and other classes of patterns can be done in time
independent of the size of the pattern.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Finding a Small Vertex Cut on Distributed Networks</title>
    <link href="http://arxiv.org/abs/2302.11651"/>
    <id>http://arxiv.org/abs/2302.11651</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jiang_Y/0/1/0/all/0/1&quot;&gt;Yonggang Jiang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mukhopadhyay_S/0/1/0/all/0/1&quot;&gt;Sagnik Mukhopadhyay&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We present an algorithm for distributed networks to efficiently find a small
vertex cut in the CONGEST model. Given a positive integer $\kappa$, our
algorithm can, with high probability, either find $\kappa$ vertices whose
removal disconnects the network or return that such $\kappa$ vertices do not
exist. Our algorithm takes $\kappa^3\cdot \tilde{O}(D+\sqrt{n})$ rounds, where
$n$ is the number of vertices in the network and $D$ denotes the network&#39;s
diameter. This implies $\tilde{O}(D+\sqrt{n})$ round complexity whenever
$\kappa=\text{polylog}(n)$.
&lt;/p&gt;
&lt;p&gt;Prior to our result, a bound of $\tilde{O}(D)$ is known only when
$\kappa=1,2$ [Parter, Petruschka DISC&#39;22]. For $\kappa\geq 3$, this bound can
be obtained only by an $O(\log n)$-approximation algorithm [Censor-Hillel,
Ghaffari, Kuhn PODC&#39;14], and the only known exact algorithm takes
$O\left((\kappa\Delta D)^{O(\kappa)}\right)$ rounds, where $\Delta$ is the
maximum degree [Parter DISC&#39;19]. Our result answers an open problem by
Nanongkai, Saranurak, and Yingchareonthawornchai [STOC&#39;19].
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Learning to Manipulate a Commitment Optimizer</title>
    <link href="http://arxiv.org/abs/2302.11829"/>
    <id>http://arxiv.org/abs/2302.11829</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chen_Y/0/1/0/all/0/1&quot;&gt;Yurong Chen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Deng_X/0/1/0/all/0/1&quot;&gt;Xiaotie Deng&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gan_J/0/1/0/all/0/1&quot;&gt;Jiarui Gan&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Li_Y/0/1/0/all/0/1&quot;&gt;Yuhao Li&lt;/a&gt;&lt;/p&gt;&lt;p&gt;It is shown in recent studies that in a Stackelberg game the follower can
manipulate the leader by deviating from their true best-response behavior. Such
manipulations are computationally tractable and can be highly beneficial for
the follower. Meanwhile, they may result in significant payoff losses for the
leader, sometimes completely defeating their first-mover advantage. A warning
to commitment optimizers, the risk these findings indicate appears to be
alleviated to some extent by a strict information advantage the manipulations
rely on. That is, the follower knows the full information about both players&#39;
payoffs whereas the leader only knows their own payoffs. In this paper, we
study the manipulation problem with this information advantage relaxed. We
consider the scenario where the follower is not given any information about the
leader&#39;s payoffs to begin with but has to learn to manipulate by interacting
with the leader. The follower can gather necessary information by querying the
leader&#39;s optimal commitments against contrived best-response behaviors. Our
results indicate that the information advantage is not entirely indispensable
to the follower&#39;s manipulations: the follower can learn the optimal way to
manipulate in polynomial time with polynomially many queries of the leader&#39;s
optimal commitment.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Minimum-Entropy Coupling Approximation Guarantees Beyond the Majorization Barrier</title>
    <link href="http://arxiv.org/abs/2302.11838"/>
    <id>http://arxiv.org/abs/2302.11838</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Compton_S/0/1/0/all/0/1&quot;&gt;Spencer Compton&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Katz_D/0/1/0/all/0/1&quot;&gt;Dmitriy Katz&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Qi_B/0/1/0/all/0/1&quot;&gt;Benjamin Qi&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Greenewald_K/0/1/0/all/0/1&quot;&gt;Kristjan Greenewald&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kocaoglu_M/0/1/0/all/0/1&quot;&gt;Murat Kocaoglu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Given a set of discrete probability distributions, the minimum entropy
coupling is the minimum entropy joint distribution that has the input
distributions as its marginals. This has immediate relevance to tasks such as
entropic causal inference for causal graph discovery and bounding mutual
information between variables that we observe separately. Since finding the
minimum entropy coupling is NP-Hard, various works have studied approximation
algorithms. The work of [Compton, ISIT 2022] shows that the greedy coupling
algorithm of [Kocaoglu et al., AAAI 2017] is always within $log_2(e) \approx
1.44$ bits of the optimal coupling. Moreover, they show that it is impossible
to obtain a better approximation guarantee using the majorization lower-bound
that all prior works have used: thus establishing a majorization barrier. In
this work, we break the majorization barrier by designing a stronger
lower-bound that we call the profile method. Using this profile method, we are
able to show that the greedy algorithm is always within $log_2(e)/e \approx
0.53$ bits of optimal for coupling two distributions (previous best-known bound
is within 1 bit), and within $(1 + log_2(e))/2 \approx 1.22$ bits for coupling
any number of distributions (previous best-known bound is within 1.44 bits). We
also examine a generalization of the minimum entropy coupling problem: Concave
Minimum-Cost Couplings. We are able to obtain similar guarantees for this
generalization in terms of the concave cost function. Additionally, we make
progress on the open problem of [Kova\v{c}evi\&#39;c et al., Inf. Comput. 2015]
regarding NP membership of the minimum entropy coupling problem by showing that
any hardness of minimum entropy coupling beyond NP comes from the difficulty of
computing arithmetic in the complexity class NP. Finally, we present
exponential-time algorithms for computing the exactly optimal solution.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: On price-induced minmax matchings</title>
    <link href="http://arxiv.org/abs/2302.11902"/>
    <id>http://arxiv.org/abs/2302.11902</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Durr_C/0/1/0/all/0/1&quot;&gt;Christoph D&amp;#xfc;rr&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mari_M/0/1/0/all/0/1&quot;&gt;Mathieu Mari&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Schmidt_Kraepelin_U/0/1/0/all/0/1&quot;&gt;Ulrike Schmidt-Kraepelin&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study a natural combinatorial pricing problem for sequentially arriving
buyers with equal budgets. Each buyer is interested in exactly one pair of
items and purchases this pair if and only if, upon arrival, both items are
still available and the sum of the item prices does not exceed the budget. The
goal of the seller is to set prices to the items such that the number of
transactions is maximized when buyers arrive in adversarial order.
&lt;/p&gt;
&lt;p&gt;Formally, we are given an undirected graph where vertices represent items and
edges represent buyers. Once prices are set to the vertices, edges with a total
price exceeding the buyers&#39; budgets are evicted. Any arrival order of the
buyers leads to a set of transactions that forms a maximal matching in this
subgraph, and an adversarial arrival order results in a minimum maximal
matching. In order to measure the performance of a pricing strategy, we compare
the size of such a matching to the size of a maximum matching in the original
graph. It was shown by Correa et al. [IPCO 2022] that the best ratio any
pricing strategy can guarantee lies within $[1/2, 2/3]$. Our contribution to
the problem is two-fold: First, we provide several characterizations of
subgraphs that may result from pricing schemes. Second, building upon these, we
show an improved upper bound of $3/5$ and a lower bound of $1/2 + 2/n$, where
$n$ is the number of items.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Simultaneous Drawing of Layered Trees</title>
    <link href="http://arxiv.org/abs/2302.11952"/>
    <id>http://arxiv.org/abs/2302.11952</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Katheder_J/0/1/0/all/0/1&quot;&gt;Julia Katheder&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kobourov_S/0/1/0/all/0/1&quot;&gt;Stephen G. Kobourov&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kuckuk_A/0/1/0/all/0/1&quot;&gt;Axel Kuckuk&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Pfister_M/0/1/0/all/0/1&quot;&gt;Maximilian Pfister&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zink_J/0/1/0/all/0/1&quot;&gt;Johannes Zink&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the crossing minimization problem in a layered graph drawing of
rooted trees whose leaves have a given fixed order on the first layer. The task
is to permute the vertices on the other layers to minimize the number of
crossings. While this problem is known to be NP-hard for multiple trees even on
just two layers, we give a polynomial-time algorithm for the restricted case of
two trees. On the other hand, when restricting the number of layers to three,
we describe an XP-algorithm in the number of trees.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Efficiently handling constraints with Metropolis-adjusted Langevin algorithm</title>
    <link href="http://arxiv.org/abs/2302.11971"/>
    <id>http://arxiv.org/abs/2302.11971</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/stat/1/au:+Chang_J/0/1/0/all/0/1&quot;&gt;Jinyuan Chang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/stat/1/au:+Tang_C/0/1/0/all/0/1&quot;&gt;Cheng Yong Tang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/stat/1/au:+Zhu_Y/0/1/0/all/0/1&quot;&gt;Yuanzheng Zhu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this study, we investigate the performance of the Metropolis-adjusted
Langevin algorithm in a setting with constraints on the support of the target
distribution. We provide a rigorous analysis of the resulting Markov chain,
establishing its convergence and deriving an upper bound for its mixing time.
Our results demonstrate that the Metropolis-adjusted Langevin algorithm is
highly effective in handling this challenging situation: the mixing time bound
we obtain is superior to the best known bounds for competing algorithms without
an accept-reject step. Our numerical experiments support these theoretical
findings, indicating that the Metropolis-adjusted Langevin algorithm shows
promising performance when dealing with constraints on the support of the
target distribution.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Online Minimum Spanning Trees with Weight Predictions</title>
    <link href="http://arxiv.org/abs/2302.12029"/>
    <id>http://arxiv.org/abs/2302.12029</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Berg_M/0/1/0/all/0/1&quot;&gt;Magnus Berg&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Boyar_J/0/1/0/all/0/1&quot;&gt;Joan Boyar&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Favrholdt_L/0/1/0/all/0/1&quot;&gt;Lene M. Favrholdt&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Larsen_K/0/1/0/all/0/1&quot;&gt;Kim S. Larsen&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We consider the minimum spanning tree problem with predictions, using the
weight-arrival model, i.e., the graph is given, together with predictions for
the weights of all edges. Then the actual weights arrive one at a time and an
irrevocable decision must be made regarding whether or not the edge should be
included into the spanning tree. In order to assess the quality of our
algorithms, we define an appropriate error measure and analyze the performance
of the algorithms as a function of the error. We prove that, according to
competitive analysis, the simplest algorithm, Follow-the-Predictions, is
optimal. However, intuitively, one should be able to do better, and we present
a greedy variant of Follow-the-Predictions. In analyzing that algorithm, we
believe we present the first random order analysis of a non-trivial online
algorithm with predictions, by which we obtain an algorithmic separation. This
may be useful for distinguishing between algorithms for other problems when
Follow-the-Predictions is optimal according to competitive analysis.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: A simple division-free algorithm for computing Pfaffians</title>
    <link href="http://arxiv.org/abs/2302.12081"/>
    <id>http://arxiv.org/abs/2302.12081</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Przezdziecki_A/0/1/0/all/0/1&quot;&gt;Adam J. Przezdziecki&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We present a very simple algorithm for computing Pfaffians which uses no
division operations. Essentially, it amounts to iterating matrix multiplication
and truncation. Its complexity, for a $2n\times 2n$ matrix, is $O(nM(n))$,
where $M(n)$ is the cost of matrix multiplication. In case of a sparse matrix,
$M(n)$ is the cost of the dense-sparse matrix multiplication.
&lt;/p&gt;
&lt;p&gt;The algorithm is an adaptation of the Bird algorithm for determinants. We
show how to extract, with practically no additional work, the characteristic
polynomial and the Pfaffian characteristic polynomial from these algorithms.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Warehouse Problem with Bounds, Fixed Costs and Complementarity Constraints</title>
    <link href="http://arxiv.org/abs/2302.12136"/>
    <id>http://arxiv.org/abs/2302.12136</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Bansal_I/0/1/0/all/0/1&quot;&gt;Ishan Bansal&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gunluk_O/0/1/0/all/0/1&quot;&gt;Oktay G&amp;#xfc;nl&amp;#xfc;k&lt;/a&gt;&lt;/p&gt;&lt;p&gt;This paper studies an open question in the warehouse problem where a merchant
trading a commodity tries to find an optimal inventory-trading policy to decide
on purchase and sale quantities during a fixed time horizon in order to
maximize their total pay-off, making use of fluctuations in sale and cost
prices. We provide the first known polynomial-time algorithms for the case when
there are fixed costs for purchases and sales, optional complementarity
constraints that prohibit purchasing and selling during the same time period,
and bounds on purchase and sales quantities. We do so by providing an exact
characterization of the extreme points of the feasible region and using this to
construct a suitable network where a min-cost flow computation provides an
optimal solution. We are also able to provide polynomial extended linear
formulations for the original feasible regions. Our methods build on the work
by Wolsey and Yaman (Discrete Optimization 2018). We also consider the problem
without fixed costs and provide a fully polynomial time approximation scheme in
a setting with time-dependent bounds.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Dynamic Averaging Load Balancing on Arbitrary Graphs</title>
    <link href="http://arxiv.org/abs/2302.12201"/>
    <id>http://arxiv.org/abs/2302.12201</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Berenbrink_P/0/1/0/all/0/1&quot;&gt;Petra Berenbrink&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hintze_L/0/1/0/all/0/1&quot;&gt;Lukas Hintze&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hosseinpour_H/0/1/0/all/0/1&quot;&gt;Hamed Hosseinpour&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kaaser_D/0/1/0/all/0/1&quot;&gt;Dominik Kaaser&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Rau_M/0/1/0/all/0/1&quot;&gt;Malin Rau&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this paper we study dynamic averaging load balancing on general graphs. We
consider infinite time and dynamic processes, where in every step new load
items are assigned to randomly chosen nodes. A matching is chosen, and the load
is averaged over the edges of that matching. We analyze the discrete case where
load items are indivisible, moreover our results also carry over to the
continuous case where load items can be split arbitrarily. For the choice of
the matchings we consider three different models, random matchings of linear
size, random matchings containing only single edges, and deterministic
sequences of matchings covering the whole graph. We bound the discrepancy,
which is defined as the difference between the maximum and the minimum load.
Our results cover a broad range of graph classes and, to the best of our
knowledge, our analysis is the first result for discrete and dynamic averaging
load balancing processes. As our main technical contribution we develop a drift
result that allows us to apply techniques based on the effective resistance in
an electrical network to the setting of dynamic load balancing.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Using Colors and Sketches to Count Subgraphs in a Streaming Graph</title>
    <link href="http://arxiv.org/abs/2302.12210"/>
    <id>http://arxiv.org/abs/2302.12210</id>
    <updated>2023-02-24T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Handjani_S/0/1/0/all/0/1&quot;&gt;Shirin Handjani&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jungreis_D/0/1/0/all/0/1&quot;&gt;Douglas Jungreis&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Tiefenbruck_M/0/1/0/all/0/1&quot;&gt;Mark Tiefenbruck&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Suppose we wish to estimate $\#H$, the number of copies of some small graph
$H$ in a large streaming graph $G$. There are many algorithms for this task
when $H$ is a triangle, but just a few that apply to arbitrary $H$. Here we
focus on one such algorithm, which was introduced by Kane, Mehlhorn, Sauerwald,
and Sun. The storage and update time per edge for their algorithm are both
$O(m^k/(\#H)^2)$, where $m$ is the number of edges in $G$, and $k$ is the
number of edges in $H$. Here, we propose three modifications to their algorithm
that can dramatically reduce both the storage and update time. Suppose that $H$
has no leaves and that $G$ has maximum degree $\leq m^{1/2 - \alpha}$, where
$\alpha &amp;gt; 0$. Define $C = \min(m^{2\alpha},m^{1/3})$. Then in our version of
the algorithm, the update time per edge is $O(1)$, and the storage is
approximately reduced by a factor of $C^{2k-t-2}$, where $t$ is the number of
vertices in $H$; in particular, the storage is $O(C^2 + m^k/(C^{2k-t-2}
(\#H)^2))$.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Emanuele Viola: Mathematics of the impossible: Computational Complexity, Chapter 5, Completeness: Reducing arbitrary computation</title>
    <link href="https://emanueleviola.wordpress.com/2023/02/23/mathematics-of-the-impossible-computational-complexity-chapter-5-completeness-reducing-arbitrary-computation/"/>
    <id>http://emanueleviola.wordpress.com/?p=1208</id>
    <updated>2023-02-23T19:33:28+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p style=&quot;text-align:justify&quot;&gt;In this chapter we show how to reduce arbitrary computation to 3Sat (and hence to the other problems in section&amp;nbsp;º&lt;a href=&quot;#x1-500004.3&quot;&gt;4.3&lt;!--tex4ht:ref: sec:Reductions-from-3Sat --&gt;&lt;/a&gt;). What powers everything is the following landmark and, in hindsight, simple result which reduces circuit computation to 3Sat.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-56001r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 5.1.  &lt;/span&gt; Given a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C:&amp;#92;{0,1&amp;#92;} ^{n}&amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; gates we can compute in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt; a 3CNF formula &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f_{C}&quot; class=&quot;latex&quot; /&gt; in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%2Bs&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%2Bs&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%2Bs&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n+s&quot; class=&quot;latex&quot; /&gt; variables such that for every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{n}&quot; class=&quot;latex&quot; /&gt;:&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+C%28x%29%3D1%5CLeftrightarrow+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bs%7D%3Af_%7BC%7D%28x%2Cy%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+C%28x%29%3D1%5CLeftrightarrow+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bs%7D%3Af_%7BC%7D%28x%2Cy%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+C%28x%29%3D1%5CLeftrightarrow+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bs%7D%3Af_%7BC%7D%28x%2Cy%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} C(x)=1&amp;#92;Leftrightarrow &amp;#92;exists y&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{s}:f_{C}(x,y)=1. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The key idea to &lt;em&gt;guess computation and check it efficiently, using that computation is local.&lt;/em&gt; The additional &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; variables one introduces contain the values of the gates during the computation of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;. We simply have to check that they all correspond to a valid computation, and this can be written as 3CNF because each gate depends on at most two other gates.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;Introduce a variable &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y_{i}&quot; class=&quot;latex&quot; /&gt; for each non-input gate &lt;img src=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;g_{i}&quot; class=&quot;latex&quot; /&gt; in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt;. The value of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y_{i}&quot; class=&quot;latex&quot; /&gt; is intended to be the value of gate &lt;img src=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;g_{i}&quot; class=&quot;latex&quot; /&gt; during the computation. Whether the value of a gate &lt;img src=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;g_{i}&quot; class=&quot;latex&quot; /&gt; is correct is a function of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;3&quot; class=&quot;latex&quot; /&gt; variables: &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y_{i}&quot; class=&quot;latex&quot; /&gt; and the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le 2&quot; class=&quot;latex&quot; /&gt; gates that input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;g_{i}&quot; class=&quot;latex&quot; /&gt;, some of which could be input variables. This can be written as a 3CNF by Theorem &lt;a href=&quot;#x1-25003r3&quot;&gt;2.3&lt;!--tex4ht:ref: thm:every-function-ckt-Lupanov --&gt;&lt;/a&gt;. Take an And of all these 3CNFs. Finally, add clause &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y_%7Bo%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y_%7Bo%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y_%7Bo%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y_{o}&quot; class=&quot;latex&quot; /&gt; for the output gate &lt;img src=&quot;https://s0.wp.com/latex.php?latex=g_%7Bo%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=g_%7Bo%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=g_%7Bo%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;g_{o}&quot; class=&quot;latex&quot; /&gt;. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-56002r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 5.1.  &lt;/span&gt;Write down the 3CNF for the circuit in figure&amp;nbsp;&lt;a href=&quot;#x1-240062&quot;&gt;2.2&lt;!--tex4ht:ref: fig:Ckt --&gt;&lt;/a&gt;, as given by the proof of Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt; is &lt;em&gt;a depth-reduction&lt;/em&gt; result. Indeed, note that a 3CNF can be written as a circuit of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c&amp;#92;log s&quot; class=&quot;latex&quot; /&gt;, whereas the original circuit may have any depth. This is helpful for example if you don’t have the depth to run the circuit yourself. You can let someone else produce the computation, and you can check it in small depth.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We can combine Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt; with the simulations in Chapter &lt;a href=&quot;#x1-180002&quot;&gt;2&lt;!--tex4ht:ref: chap:The-alphabet-of --&gt;&lt;/a&gt; to reduce computation in other models to 3SAT. In particular, we can reduce MTMs running in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; to 3Sat of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;log ^{c}t&quot; class=&quot;latex&quot; /&gt;. To obtain such parameters we need the quasilinear simulation of MTMs by circuits, Theorem &lt;a href=&quot;#x1-25007r5&quot;&gt;2.5&lt;!--tex4ht:ref: thm:simu-TMs-by-CKTs-quasi-linear --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   However, recall that a quasilinear simulation of RAMs by circuits is not known. Only a power simulation is (which is obtained by combining the power simulation of RAMs by MTMs, Theorem &lt;a href=&quot;#x1-26003r6&quot;&gt;2.6&lt;!--tex4ht:ref: thm:simu-RAM-by-TM --&gt;&lt;/a&gt;, with a simulation of MTMs by circuits). This would reduce RAM computation running in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; to 3CNFs of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t^{c}&quot; class=&quot;latex&quot; /&gt;. We content ourselves with this power loss for the beginning of this chapter. Later in section&amp;nbsp;º&lt;a href=&quot;#x1-610005.3&quot;&gt;5.3&lt;!--tex4ht:ref: sec:RAM-to-SAT-quasilinear --&gt;&lt;/a&gt; we will obtain a quasi-linear simulation using an enjoyable argument which also bypasses Theorem &lt;a href=&quot;#x1-25007r5&quot;&gt;2.5&lt;!--tex4ht:ref: thm:simu-TMs-by-CKTs-quasi-linear --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   In fact, these simulations apply to a more general, &lt;em&gt;non-deterministic&lt;/em&gt;, model of computation. We define this model next, and then present the simulation with power loss in &lt;a href=&quot;#x1-60003r2&quot;&gt;5.2&lt;!--tex4ht:ref: thm:-3Sat-is-NP-complete --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.1   &lt;/span&gt; &lt;a id=&quot;x1-570005.1&quot;&gt;&lt;/a&gt;Nondeterministic computation&lt;/h3&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;In the concluding equation in Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt; there is an &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cexists+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;exists &quot; class=&quot;latex&quot; /&gt; quantifier on the right-hand side, but there isn’t one on the left, next to the circuit. However, because the simulation works for every input, we can “stick” a quantifier on the left and have the same result. The resulting circuit computation &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C(x,y)&quot; class=&quot;latex&quot; /&gt; has two inputs, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt;. We can think of it as a &lt;em&gt;non-deterministic&lt;/em&gt; circuit, which on input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; outputs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt; iff &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+y%3AC%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+y%3AC%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cexists+y%3AC%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;exists y:C(x,y)&quot; class=&quot;latex&quot; /&gt;. Following the discussion before, we could do the same for other models like TMs, MTMs, and RAMs. The message here is that – if we allow for an &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cexists+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;exists &quot; class=&quot;latex&quot; /&gt; quantifier, or in other words consider nondeterministic computation – efficient computation is &lt;em&gt;equivalent&lt;/em&gt; to 3CNF! This is one motivation for formally introducing a &lt;em&gt;nondeterministic &lt;/em&gt;computational model.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-57001r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Definition&lt;/b&gt; 5.1.  &lt;/span&gt;NTime&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(t(n))&quot; class=&quot;latex&quot; /&gt; is the set of functions &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%3AX%5Csubseteq+%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%3AX%5Csubseteq+%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%3AX%5Csubseteq+%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f:X&amp;#92;subseteq &amp;#92;{0,1&amp;#92;}^* &amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; for which there is a RAM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; such that:&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &amp;#8211; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%28x%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%28x%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%28x%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f(x)=1&quot; class=&quot;latex&quot; /&gt; iff &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%28%7Cx%7C%29%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%28%7Cx%7C%29%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%28%7Cx%7C%29%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;exists y&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{t(|x|)}&quot; class=&quot;latex&quot; /&gt; such that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M(x,y)=1&quot; class=&quot;latex&quot; /&gt;, and&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &amp;#8211; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M(x,y)&quot; class=&quot;latex&quot; /&gt; stops within &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28%7Cx%7C%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28%7Cx%7C%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28%7Cx%7C%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(|x|)&quot; class=&quot;latex&quot; /&gt; steps on every input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(x,y)&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We also define&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BNP%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cge+1%7D%5Ctext+%7BNTime%7D%28n%5E%7Bd%7D%29%2C%5C%5C+%5Ctext+%7BNExp%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cge+1%7D%5Ctext+%7BNTime%7D%282%5E%7Bn%5E%7Bd%7D%7D%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BNP%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cge+1%7D%5Ctext+%7BNTime%7D%28n%5E%7Bd%7D%29%2C%5C%5C+%5Ctext+%7BNExp%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cge+1%7D%5Ctext+%7BNTime%7D%282%5E%7Bn%5E%7Bd%7D%7D%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BNP%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cge+1%7D%5Ctext+%7BNTime%7D%28n%5E%7Bd%7D%29%2C%5C%5C+%5Ctext+%7BNExp%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cge+1%7D%5Ctext+%7BNTime%7D%282%5E%7Bn%5E%7Bd%7D%7D%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;text {NP}:= &amp;amp; &amp;#92;bigcup _{d&amp;#92;ge 1}&amp;#92;text {NTime}(n^{d}),&amp;#92;&amp;#92; &amp;#92;text {NExp}:= &amp;amp; &amp;#92;bigcup _{d&amp;#92;ge 1}&amp;#92;text {NTime}(2^{n^{d}}). &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Note that the running time of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; is a function of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|x|&quot; class=&quot;latex&quot; /&gt;, not &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7C%28x%2Cy%29%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7C%28x%2Cy%29%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7C%28x%2Cy%29%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|(x,y)|&quot; class=&quot;latex&quot; /&gt;. This difference is inconsequential for NP, since the composition of two powers is another power. But it is important for a more fine-grained analysis. We refer to a RAM machine as in Definition &lt;a href=&quot;#x1-57001r1&quot;&gt;5.1&lt;!--tex4ht:ref: def:NTime --&gt;&lt;/a&gt; as a &lt;em&gt;nondeterministic machine&lt;/em&gt;, and to the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M(x,y)&quot; class=&quot;latex&quot; /&gt; as the &lt;em&gt;nondeterministic choices,&lt;/em&gt; or &lt;em&gt;guesses, &lt;/em&gt;of the machine on input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We can also define NTime in a way that is similar to BPTime, Definition &lt;a href=&quot;#x1-27001r7&quot;&gt;2.7&lt;!--tex4ht:ref: def:BPTime-BPP --&gt;&lt;/a&gt;. The two definitions are essentially equivalent. Our choice for BPTime is motivated by the identification of BPTime with computation that is actually run. For example, in a programming language one uses an instruction like Rand to obtain random values; one does not think of the                                                                                                                                                                                     randomness as being part of the input. By contrast, NTime is a more abstract model, and the definition with the nondeterministic guesses explicitly laid out is closer in spirit to a 3CNF.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   All the problems we studied in section&amp;nbsp;º&lt;a href=&quot;#x1-500004.3&quot;&gt;4.3&lt;!--tex4ht:ref: sec:Reductions-from-3Sat --&gt;&lt;/a&gt; are in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-57002r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Fact&lt;/b&gt; 5.1.  &lt;/span&gt;3Sat, Clique, Cover-by-vertexes, SubsetSum, and 3Color are in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;For a 3Sat instance &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt;, the variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; correspond to an assignment. Checking if the assignment satisfies &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; is in P. This shows that 3Sat is in NP. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-57003r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 5.2.  &lt;/span&gt;Finish the proof by ad&lt;br /&gt;
dressing the other problems in Fact &lt;a href=&quot;#x1-57002r1&quot;&gt;5.1&lt;!--tex4ht:ref: fact:3Sa-etc-in-NP --&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h5 class=&quot;likesubsubsectionHead&quot;&gt;&lt;a id=&quot;x1-580005.1&quot;&gt;&lt;/a&gt;How to think of NP&lt;/h5&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;We can think of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt; as the problems which admit a solution that can be verified efficiently, namely in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;. For example for 3Sat it is easy to verify if an assignment satisfies the clauses, for 3Color it is easy to verify if a coloring is such that any edge has endpoints of different colors, for SubsetSum it is easy to verify if a subset has a sum equal to a target, and so on. However, as we saw above this verification step can be cast in a restricted model, namely a 3CNF. So we don’t have to think of the verification step as using the full power of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt; computation.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Here’s a vivid illustration of NP. Suppose I claim that the following matrix contains a &lt;img src=&quot;https://s0.wp.com/latex.php?latex=9&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=9&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=9&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;9&quot; class=&quot;latex&quot; /&gt;:&lt;/p&gt;
&lt;div style=&quot;text-align:center&quot;&gt;
&lt;div class=&quot;fbox&quot;&gt;
&lt;div class=&quot;minipage&quot;&gt;56788565634705634705637480563476&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;70156137805167840132838202386421&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;85720582340570372307580234576423&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;80275880237505788075075802346518&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;78502378564067807582348057285428&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;05723748754543650350562378804337&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;52305723485008160234723884077764&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;86543234567865435674567836738063&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;45463788486754345743457483460040&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;73273873486574375464584895741832&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;85075783485634856237847287422112&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;83748874883753485745788788223201&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   How can you tell, without tediously examining the whole matrix? However, if I tell you that it’s in row 10, 8 digits from the right, you can quickly check that I am right. I won’t be able to cheat, since you can check my claims. On the other hand I can provide a proof that’s easy to verify.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h5 class=&quot;likesubsubsectionHead&quot;&gt;&lt;a id=&quot;x1-590005.1&quot;&gt;&lt;/a&gt;P vs.&amp;nbsp;NP&lt;/h5&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;The flagship question of complexity theory is whether &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%3D%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%3D%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%3D%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}=&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt; or not. This is a young, prominent special case of the grand challenge we introduced in Chapter &lt;a href=&quot;#x1-370003&quot;&gt;3&lt;!--tex4ht:ref: chap:The-grand-challenge --&gt;&lt;/a&gt;. Contrary to the analogous question for &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {BPP}&quot; class=&quot;latex&quot; /&gt;, cf.&amp;nbsp;section&amp;nbsp;&lt;a href=&quot;#x1-290002.5.2&quot;&gt;2.5.2&lt;!--tex4ht:ref: subsec:BPTime-vs-time --&gt;&lt;/a&gt;, the general belief seems to be that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&amp;#92;ne &amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt;. Similarly to BPP, cf.&amp;nbsp;Theorem &lt;a href=&quot;#x1-29001r9&quot;&gt;2.9&lt;!--tex4ht:ref: thm:Time-vs-BPTime --&gt;&lt;/a&gt;, the best deterministic simulation of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt; runs in exponential time by trying all nondeterministic guesses. This gives the middle inclusion in the following fact; the other two are by definition.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-59001r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Fact&lt;/b&gt; 5.2.  &lt;/span&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Csubseteq+%5Ctext+%7BNP%7D%5Csubseteq+%5Ctext+%7BExp+%5Censuremath+%7B%5Csubseteq+%5Ctext+%7BNExp%7D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Csubseteq+%5Ctext+%7BNP%7D%5Csubseteq+%5Ctext+%7BExp+%5Censuremath+%7B%5Csubseteq+%5Ctext+%7BNExp%7D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Csubseteq+%5Ctext+%7BNP%7D%5Csubseteq+%5Ctext+%7BExp+%5Censuremath+%7B%5Csubseteq+%5Ctext+%7BNExp%7D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&amp;#92;subseteq &amp;#92;text {NP}&amp;#92;subseteq &amp;#92;text {Exp &amp;#92;ensuremath {&amp;#92;subseteq &amp;#92;text {NExp}}}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   A consequence of the Time Hierarchy Theorem &lt;a href=&quot;#x1-40003r4&quot;&gt;3.4&lt;!--tex4ht:ref: thm:TIME-hierarchy-TM --&gt;&lt;/a&gt; is that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&amp;#92;ne &amp;#92;text {Exp}&quot; class=&quot;latex&quot; /&gt;. From the inclusions above it follows that&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BNP%7D%5Ctext+%7B+or+NP%7D%5Cne+%5Ctext+%7BExp%2C+possibly+both%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BNP%7D%5Ctext+%7B+or+NP%7D%5Cne+%5Ctext+%7BExp%2C+possibly+both%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BNP%7D%5Ctext+%7B+or+NP%7D%5Cne+%5Ctext+%7BExp%2C+possibly+both%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;text {P}&amp;#92;ne &amp;#92;text {NP}&amp;#92;text { or NP}&amp;#92;ne &amp;#92;text {Exp, possibly both}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p&gt;Thus, we are not completely clueless, and we know that at least one important separation is lurking somewhere. Most people appear to think that &lt;em&gt;both&lt;/em&gt; separations hold, but we are unable to prove &lt;em&gt;either&lt;/em&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   For multi-tape machines, a separation between deterministic and non-deterministic linear time is in &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XPPST83&quot;&gt;24&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;conf/coco/Santhanam01&quot;&gt;27&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.2   &lt;/span&gt; &lt;a id=&quot;x1-600005.2&quot;&gt;&lt;/a&gt;NP-completeness&lt;/h3&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;We now go back to the question at the beginning of this chapter about reducing arbitrary computation to 3Sat. We shall reduce all of NP to 3Sat in Theorem &lt;a href=&quot;#x1-60003r2&quot;&gt;5.2&lt;!--tex4ht:ref: thm:-3Sat-is-NP-complete --&gt;&lt;/a&gt;. Problems like 3Sat admitting such reductions deserve a definition.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-60001r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Definition&lt;/b&gt; 5.2.  &lt;/span&gt;We call a problem &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&quot; class=&quot;latex&quot; /&gt;:&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   NP-hard if every problem in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt; reduces to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&quot; class=&quot;latex&quot; /&gt; in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;;&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   NP-complete if it is NP-hard and in NP.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   One can define &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt;-hard (and hence NP-complete) w.r.t.&amp;nbsp;different reductions, cf.&amp;nbsp;Chapter &lt;a href=&quot;#x1-450004&quot;&gt;4&lt;!--tex4ht:ref: chap:Reductions --&gt;&lt;/a&gt;, and we will do so later. But the simple choice above suffices for now.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Complete problems are the “hardest problems” in the class, as formalized in the following fact.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-60002r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Fact&lt;/b&gt; 5.3.  &lt;/span&gt;Suppose &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BL%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BL%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BL%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {L}&quot; class=&quot;latex&quot; /&gt; is NP-complete. Then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%7D%5CLeftrightarrow+%5Ctext+%7BP%7D%3D%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%7D%5CLeftrightarrow+%5Ctext+%7BP%7D%3D%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%7D%5CLeftrightarrow+%5Ctext+%7BP%7D%3D%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#92;in &amp;#92;text {P}&amp;#92;Leftrightarrow &amp;#92;text {P}=&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28%5CLeftarrow+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28%5CLeftarrow+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28%5CLeftarrow+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(&amp;#92;Leftarrow )&quot; class=&quot;latex&quot; /&gt; This is because &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#92;in &amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   (&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5CRightarrow+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5CRightarrow+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5CRightarrow+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;Rightarrow )&quot; class=&quot;latex&quot; /&gt; Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%27%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%27%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%27%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#039;&amp;#92;in &amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt;. Because &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&quot; class=&quot;latex&quot; /&gt; is NP-hard we know that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%5Censuremath+%7B%5CRightarrow+L%27%5Cin+%5Ctext+%7BP%7D%7D.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%5Censuremath+%7B%5CRightarrow+L%27%5Cin+%5Ctext+%7BP%7D%7D.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%5Censuremath+%7B%5CRightarrow+L%27%5Cin+%5Ctext+%7BP%7D%7D.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#92;in &amp;#92;text {P&amp;#92;ensuremath {&amp;#92;Rightarrow L&amp;#039;&amp;#92;in &amp;#92;text {P}}.}&quot; class=&quot;latex&quot; /&gt; &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Fact &lt;a href=&quot;#x1-60002r3&quot;&gt;5.3&lt;!--tex4ht:ref: fact:np-complete-in-P-iff-p=00003Dnp --&gt;&lt;/a&gt; points to an important interplay between problems and complexity classes. We can study complexity classes by studying their complete problems, and vice versa.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The central result in the theory of NP completeness is the following.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-60003r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 5.2.  &lt;/span&gt;&lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XCook73&quot;&gt;7&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;#XLevin73&quot;&gt;20&lt;/a&gt;]&lt;/span&gt; 3Sat is NP-complete.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;3Sat is in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt; by Fact &lt;a href=&quot;#x1-57002r1&quot;&gt;5.1&lt;!--tex4ht:ref: fact:3Sa-etc-in-NP --&gt;&lt;/a&gt;. Next we prove NP-hardness. The main idea is Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt;, while the rest of the proof mostly amounts to opening up definitions and using some previous simulations. Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#92;in &amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt; and let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; be the corresponding TM which runs in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{d}&quot; class=&quot;latex&quot; /&gt; on inputs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(x,y)&quot; class=&quot;latex&quot; /&gt; where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7Cx%7C%3Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7Cx%7C%3Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7Cx%7C%3Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|x|=n&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7Cy%7C%3Dn%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7Cy%7C%3Dn%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7Cy%7C%3Dn%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|y|=n^{d}&quot; class=&quot;latex&quot; /&gt;, for some constant &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt;. We can work with TMs instead of RAMs since they are equivalent up to a power loss, as we saw in Theorem &lt;a href=&quot;#x1-26003r6&quot;&gt;2.6&lt;!--tex4ht:ref: thm:simu-RAM-by-TM --&gt;&lt;/a&gt;. We can construct in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P }&quot; class=&quot;latex&quot; /&gt;a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C(x,y)&quot; class=&quot;latex&quot; /&gt; of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7Dn%5E%7Bc_%7Bd%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7Dn%5E%7Bc_%7Bd%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7BM%7Dn%5E%7Bc_%7Bd%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{M}n^{c_{d}}&quot; class=&quot;latex&quot; /&gt; such that for any &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%2Cy&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%2Cy&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%2Cy&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x,y&quot; class=&quot;latex&quot; /&gt; we have &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1%5CLeftrightarrow+C%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1%5CLeftrightarrow+C%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1%5CLeftrightarrow+C%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M(x,y)=1&amp;#92;Leftrightarrow C(x,y)=1&quot; class=&quot;latex&quot; /&gt; by Theorem &lt;a href=&quot;#x1-25006r4&quot;&gt;2.4&lt;!--tex4ht:ref: thm:simu-tm-by-ckts-simple --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Now, suppose we are given an input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt; for which we are trying to decide membership in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&quot; class=&quot;latex&quot; /&gt;. This is equivalent to deciding if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+y%3AC%28w%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+y%3AC%28w%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cexists+y%3AC%28w%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;exists y:C(w,y)=1&quot; class=&quot;latex&quot; /&gt; by what we just said. We can “hard-wire” &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt; into &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; to obtain the circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7Bw%7D%28y%29%3A%3DC%28w%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7Bw%7D%28y%29%3A%3DC%28w%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7Bw%7D%28y%29%3A%3DC%28w%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{w}(y):=C(w,y)&quot; class=&quot;latex&quot; /&gt; only on the variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt;, with no loss in size. Here by “hard-wise” se mean replacing the input gates &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; with the bits of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt;. Now we can apply Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt; to this new circuit to produce a 3CNF &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f_%7Bw%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f_%7Bw%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f_%7Bw%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f_{w}&quot; class=&quot;latex&quot; /&gt; on variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; and new variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;z&quot; class=&quot;latex&quot; /&gt; such that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7Bw%7D%28y%29%3D1%5CLeftrightarrow+%5Cexists+z%3Af%28y%2Cz%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7Bw%7D%28y%29%3D1%5CLeftrightarrow+%5Cexists+z%3Af%28y%2Cz%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7Bw%7D%28y%29%3D1%5CLeftrightarrow+%5Cexists+z%3Af%28y%2Cz%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{w}(y)=1&amp;#92;Leftrightarrow &amp;#92;exists z:f(y,z)=1&quot; class=&quot;latex&quot; /&gt;, for any &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt;. The size of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f_%7Bw%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f_%7Bw%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f_%7Bw%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f_{w}&quot; class=&quot;latex&quot; /&gt; and the number of variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;z&quot; class=&quot;latex&quot; /&gt; is power in the size of the circuit.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We have obtained:&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+w%5Cin+L%5CLeftrightarrow+%5Cexists+y%3AM%28w%2Cy%29%3D1%5CLeftrightarrow+%5Cexists+y%3AC_%7Bw%7D%28y%29%3D1%5CLeftrightarrow+%5Cexists+y%2Cz%3Af_%7Bw%7D%28y%2Cz%29%3D1%5CLeftrightarrow+f_%7Bw%7D%5Cin+%5Ctext+%7B3Sat%2C%7D+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+w%5Cin+L%5CLeftrightarrow+%5Cexists+y%3AM%28w%2Cy%29%3D1%5CLeftrightarrow+%5Cexists+y%3AC_%7Bw%7D%28y%29%3D1%5CLeftrightarrow+%5Cexists+y%2Cz%3Af_%7Bw%7D%28y%2Cz%29%3D1%5CLeftrightarrow+f_%7Bw%7D%5Cin+%5Ctext+%7B3Sat%2C%7D+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+w%5Cin+L%5CLeftrightarrow+%5Cexists+y%3AM%28w%2Cy%29%3D1%5CLeftrightarrow+%5Cexists+y%3AC_%7Bw%7D%28y%29%3D1%5CLeftrightarrow+%5Cexists+y%2Cz%3Af_%7Bw%7D%28y%2Cz%29%3D1%5CLeftrightarrow+f_%7Bw%7D%5Cin+%5Ctext+%7B3Sat%2C%7D+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} w&amp;#92;in L&amp;#92;Leftrightarrow &amp;#92;exists y:M(w,y)=1&amp;#92;Leftrightarrow &amp;#92;exists y:C_{w}(y)=1&amp;#92;Leftrightarrow &amp;#92;exists y,z:f_{w}(y,z)=1&amp;#92;Leftrightarrow f_{w}&amp;#92;in &amp;#92;text {3Sat,} &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p&gt;as desired. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   In section&amp;nbsp;º&lt;a href=&quot;#x1-500004.3&quot;&gt;4.3&lt;!--tex4ht:ref: sec:Reductions-from-3Sat --&gt;&lt;/a&gt; we reduced 3Sat to other problems which are also in NP by Fact &lt;a href=&quot;#x1-57002r1&quot;&gt;5.1&lt;!--tex4ht:ref: fact:3Sa-etc-in-NP --&gt;&lt;/a&gt;. This implies that all these problems are NP-complete. Here we use that if problem &lt;img src=&quot;https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;A&quot; class=&quot;latex&quot; /&gt; reduces to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;B&quot; class=&quot;latex&quot; /&gt; in P, and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;B&quot; class=&quot;latex&quot; /&gt; reduces to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt;, then also &lt;img src=&quot;https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;A&quot; class=&quot;latex&quot; /&gt; reduces to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt;. This is because if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&amp;#92;in &amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt; then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=B%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=B%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=B%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;B&amp;#92;in &amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;, and so &lt;img src=&quot;https://s0.wp.com/latex.php?latex=A%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=A%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=A%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;A&amp;#92;in &amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-60004r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Corollary&lt;/b&gt; 5.1.  &lt;/span&gt; Clique, Cover-by-vertexes, Subset-sum, and 3Color are NP-complete.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   It is important to note that there is nothing special about the &lt;em&gt;existence&lt;/em&gt; of NP-complete problems. The following is a simple such problem that does not require any of the machinery in this section.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-60005r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 5.3.  &lt;/span&gt;Consider the problem, given a RAM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt;, an input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;, and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;in &amp;#92;mathbb {N}&quot; class=&quot;latex&quot; /&gt;, where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; is written in unary, decide if there is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{t}&quot; class=&quot;latex&quot; /&gt; such that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M(x,y)=1&quot; class=&quot;latex&quot; /&gt;. Prove that this is NP-complete.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   What if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; is written in binary?&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The interesting aspect of NP-complete problems such as 3Sat and those in Corollary &lt;a href=&quot;#x1-60004r1&quot;&gt;5.1&lt;!--tex4ht:ref: cor:all-probs-NP-complete --&gt;&lt;/a&gt; is that they are very simple and structured, and don’t refer to computational models. This makes them suitable for reductions, and for inferring properties of the complexity class which are not evident from a machine-based definition.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.3   &lt;/span&gt; &lt;a id=&quot;x1-610005.3&quot;&gt;&lt;/a&gt;From RAM to 3SAT in quasi-linear time&lt;/h3&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;The framework in the previous section is useful to relate membership in P of different problems in NP, but it is not suitable for a more fine-grained analysis. For example, under the assumption that 3Sat is in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28cn%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28cn%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28cn%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {Time}(cn)&quot; class=&quot;latex&quot; /&gt; we cannot immediately conclude that other problems in NP are solvable in this time or in about this time. We can only conclude that they are in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;. In particular, the complexity of 3Sat cannot be related to that of other central conjectures, such as whether 3Sum is in subquadratic time, Conjecture &lt;a href=&quot;#x1-49003r1&quot;&gt;4.1&lt;!--tex4ht:ref: conj:3sum --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The culprit is the power loss in reducing RAM computation to circuits, mentioned at the beginning of the chapter. We now remedy this situation and present a quasi-linear reduction. As we did before, cf.&amp;nbsp;Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt; and Theorem &lt;a href=&quot;#x1-60003r2&quot;&gt;5.2&lt;!--tex4ht:ref: thm:-3Sat-is-NP-complete --&gt;&lt;/a&gt;, we first state a version of the simulation for (deterministic) computation which contains all the main ideas, and then we note that a completeness result follows.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-61001r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 5.3.  &lt;/span&gt;Given an input length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&amp;#92;in &amp;#92;mathbb {N}&quot; class=&quot;latex&quot; /&gt;, a time bound &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;in &amp;#92;mathbb {N}&quot; class=&quot;latex&quot; /&gt;, and a RAM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; that runs in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; on inputs of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; bits, we can compute in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%27%3A%3Dc_%7BM%7Dt%28%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%27%3A%3Dc_%7BM%7Dt%28%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%27%3A%3Dc_%7BM%7Dt%28%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#039;:=c_{M}t(&amp;#92;log t)^{c}&quot; class=&quot;latex&quot; /&gt; a 3CNF &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; on variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(x,y)&quot; class=&quot;latex&quot; /&gt; where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7Cy%7C%5Cle+t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7Cy%7C%5Cle+t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7Cy%7C%5Cle+t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|y|&amp;#92;le t&amp;#039;&quot; class=&quot;latex&quot; /&gt; such that for every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{n}&quot; class=&quot;latex&quot; /&gt;:&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+M%28x%29%3D1%5Ciff+%5Cexists+y%3Af%28x%2Cy%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+M%28x%29%3D1%5Ciff+%5Cexists+y%3Af%28x%2Cy%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+M%28x%29%3D1%5Ciff+%5Cexists+y%3Af%28x%2Cy%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} M(x)=1&amp;#92;iff &amp;#92;exists y:f(x,y)=1. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We now present the proof of this amazing result; you may want to refer back to Definition &lt;a href=&quot;#x1-26001r5&quot;&gt;2.5&lt;!--tex4ht:ref: def:RAM --&gt;&lt;/a&gt; of a RAM. A key concept in the proof is the following “snapshot” of the RAM computation.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-61002r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Definition&lt;/b&gt; 5.3.  &lt;/span&gt;The &lt;em&gt;internal configuration, &lt;/em&gt;abbreviated IC&lt;em&gt;, &lt;/em&gt;of a RAM specifies:&lt;/p&gt;
&lt;ul class=&quot;itemize1&quot;&gt;
&lt;li class=&quot;itemize&quot;&gt;its registers,&lt;/li&gt;
&lt;li class=&quot;itemize&quot;&gt;the program counter,&lt;/li&gt;
&lt;li class=&quot;itemize&quot;&gt;the word length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt;, and&lt;/li&gt;
&lt;li class=&quot;itemize&quot;&gt;if the current instruction is a Read &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r_%7Bi%7D%3A%3D%5Cmu+%5Br_%7Bj%7D%5D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=r_%7Bi%7D%3A%3D%5Cmu+%5Br_%7Bj%7D%5D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=r_%7Bi%7D%3A%3D%5Cmu+%5Br_%7Bj%7D%5D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;r_{i}:=&amp;#92;mu [r_{j}]&quot; class=&quot;latex&quot; /&gt; or Write &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmu+%5Br_%7Bj%7D%5D%3A%3Dr_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmu+%5Br_%7Bj%7D%5D%3A%3Dr_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmu+%5Br_%7Bj%7D%5D%3A%3Dr_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mu [r_{j}]:=r_{i}&quot; class=&quot;latex&quot; /&gt; then the IC includes the content &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmu+%5Br_%7Bj%7D%5D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmu+%5Br_%7Bj%7D%5D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmu+%5Br_%7Bj%7D%5D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mu [r_{j}]&quot; class=&quot;latex&quot; /&gt; of the       memory cell indexed by &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;r_{j}&quot; class=&quot;latex&quot; /&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Note that at most one memory cell is included in one IC. By contrast, the configuration of a TM (Definition &lt;a href=&quot;#x1-19001r1&quot;&gt;2.1&lt;!--tex4ht:ref: def:TM --&gt;&lt;/a&gt;) includes all its tape cells. Also note that an IC has length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le c_{M}+c&amp;#92;log t&quot; class=&quot;latex&quot; /&gt; bits, where the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{M}&quot; class=&quot;latex&quot; /&gt; is for the program counter, and the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c&amp;#92;log t&quot; class=&quot;latex&quot; /&gt; is for the rest, using that the maximum word length of a machine running in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;ge n&quot; class=&quot;latex&quot; /&gt; is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c&amp;#92;log t&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;paragraphHead&quot;&gt;&lt;a id=&quot;x1-620005.3&quot;&gt;&lt;/a&gt;The key idea in the proof.&lt;/span&gt;    At the high level, the approach is, like in Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt;, to guess computation and check it efficiently. We are going to &lt;em&gt;guess &lt;/em&gt;the sequence of ICs, and we need additional ideas to check them efficiently by a circuit. This is not immediate, since, again, the RAM can use direct access to read and write in memory at arbitrary locations, something which is not easy to do with a circuit.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The key idea is to check operations involving memory &lt;em&gt;independently &lt;/em&gt;from the operations involving registers but not memory. If both checks pass, then the computation is correct. More precisely, a sequence of internal configurations &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7B1%7D%2Cs_%7B2%7D%2C%5Cldots+%2Cs_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7B1%7D%2Cs_%7B2%7D%2C%5Cldots+%2Cs_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7B1%7D%2Cs_%7B2%7D%2C%5Cldots+%2Cs_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{1},s_{2},&amp;#92;ldots ,s_{t}&quot; class=&quot;latex&quot; /&gt; corresponds to the computation of the RAM on input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; iff for every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i%3Ct&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i%3Ct&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i%3Ct&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&amp;lt;t&quot; class=&quot;latex&quot; /&gt;:
&lt;/p&gt;
&lt;ol class=&quot;enumerate1&quot;&gt;
&lt;li class=&quot;enumerate&quot; id=&quot;x1-62002x1&quot;&gt;If &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{i}&quot; class=&quot;latex&quot; /&gt; does not access memory, then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{i+1}&quot; class=&quot;latex&quot; /&gt; has its registers, program counter, and word length       updated according to the instruction executed in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{i}&quot; class=&quot;latex&quot; /&gt;,&lt;/li&gt;
&lt;li class=&quot;enumerate&quot; id=&quot;x1-62004x2&quot;&gt;If &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{i}&quot; class=&quot;latex&quot; /&gt; is computing a read operation &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r_%7Bi%7D%3A%3D%5Ctext+%7B%5Censuremath+%7B%5Cmu+%5Br_%7Bj%7D%5D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=r_%7Bi%7D%3A%3D%5Ctext+%7B%5Censuremath+%7B%5Cmu+%5Br_%7Bj%7D%5D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=r_%7Bi%7D%3A%3D%5Ctext+%7B%5Censuremath+%7B%5Cmu+%5Br_%7Bj%7D%5D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;r_{i}:=&amp;#92;text {&amp;#92;ensuremath {&amp;#92;mu [r_{j}]}}&quot; class=&quot;latex&quot; /&gt; then in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{i+1}&quot; class=&quot;latex&quot; /&gt; register &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;r_{j}&quot; class=&quot;latex&quot; /&gt; contains &lt;em&gt;the most recent value       written in memory cell &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;r_{j}&quot; class=&quot;latex&quot; /&gt;&lt;/em&gt;. In case this cell was never written, then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;r_{j}&quot; class=&quot;latex&quot; /&gt; should contain &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x_{j}&quot; class=&quot;latex&quot; /&gt; if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=j%5Cin+%5C%7B1%2C2%2C%5Cldots+%2Cn%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=j%5Cin+%5C%7B1%2C2%2C%5Cldots+%2Cn%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=j%5Cin+%5C%7B1%2C2%2C%5Cldots+%2Cn%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;j&amp;#92;in &amp;#92;{1,2,&amp;#92;ldots ,n&amp;#92;}&quot; class=&quot;latex&quot; /&gt;, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;       if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=j%3D0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=j%3D0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=j%3D0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;j=0&quot; class=&quot;latex&quot; /&gt;, and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt; otherwise. The program counter in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{i+1}&quot; class=&quot;latex&quot; /&gt; also points to the next instruction.&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;Rather than directly constructing a 3CNF that implements these checks, we construct a circuit and then appeal to Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt;. It is easy to construct a circuit of quasi-linear size implementing Check 1, since the circuit only has to check adjacent pairs of ICs. As remarked before, these ICs have length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le c_{M}+c&amp;#92;log t&quot; class=&quot;latex&quot; /&gt;. For fixed &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i%2C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i%2C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i%2C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i,&quot; class=&quot;latex&quot; /&gt; Check 1 can be implemented by a circuit which depends on the RAM and has size power in the length of an IC. Taking an And of these circuits over the choices of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; gives a circuit of the desired size for Check 1.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The difficulty lies in Check 2, because the circuit needs to find “the most recent value written.” The solution is to &lt;em&gt;sort&lt;/em&gt; the ICs by memory addresses. After sorting, we can implement Check (2) as easily as Check (1), since we just need to check adjacent pairs of ICs.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The emergence of sorting in the theory of NP-completeness cements the pivotal role this operation plays in computer science.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   To implement this idea we need to be able to sort with a quasi-linear size circuit. Standard sorting algorithms like Mergesort, Heapsort, or Radixsort run in quasi-linear time on a RAM, but rely on direct addressing (cf.&amp;nbsp;section&amp;nbsp;º&lt;a href=&quot;#x1-260002.4&quot;&gt;2.4&lt;!--tex4ht:ref: sec:RAMs --&gt;&lt;/a&gt;) and for this reason cannot be easily implemented by a circuit of quasi-linear size. However other algorithms have been developed that do have such an implementation, for example a variant of Mergesort called Odd-Even-Mergesort &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XBatcher68&quot;&gt;6&lt;/a&gt;]&lt;/span&gt;, see also &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XViolaNEU-ram2sat-neu-author&quot;&gt;22&lt;/a&gt;]&lt;/span&gt;. This gives the following lemma.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-62005r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Lemma&lt;/b&gt; 5.1.  &lt;/span&gt;Given &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;m&quot; class=&quot;latex&quot; /&gt; we can compute in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%27%3A%3Dt%5Ccdot+%28m%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%27%3A%3Dt%5Ccdot+%28m%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%27%3A%3Dt%5Ccdot+%28m%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#039;:=t&amp;#92;cdot (m&amp;#92;log t)^{c}&quot; class=&quot;latex&quot; /&gt; a circuit (of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le t&amp;#039;&quot; class=&quot;latex&quot; /&gt;) that sorts &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; integers of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;m&quot; class=&quot;latex&quot; /&gt; bits.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We summarize the key steps in the proof.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof of Theorem &lt;a href=&quot;#x1-61001r3&quot;&gt;5.3&lt;!--tex4ht:ref: thm:redux-RAM-2-3cnf-quasilinear --&gt;&lt;/a&gt;&lt;/b&gt;.&amp;nbsp;&lt;/span&gt; We construct a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{M}&quot; class=&quot;latex&quot; /&gt; and then appeal to Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt;. The extra variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; correspond to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; ICs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7B1%7D%2Cs_%7B2%7D%2C%5Cldots+%2Cs_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7B1%7D%2Cs_%7B2%7D%2C%5Cldots+%2Cs_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7B1%7D%2Cs_%7B2%7D%2C%5Cldots+%2Cs_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{1},s_{2},&amp;#92;ldots ,s_{t}&quot; class=&quot;latex&quot; /&gt;. An IC takes &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{M}+c&amp;#92;log t&quot; class=&quot;latex&quot; /&gt; bits to specify, so we need &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7Dt%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7Dt%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7Dt%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le c_{M}t&amp;#92;log t&quot; class=&quot;latex&quot; /&gt; variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt;. The circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{M}&quot; class=&quot;latex&quot; /&gt; first performs Check (1) above for each adjacent pair &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28s_%7Bi%7D%2Cs_%7Bi%2B1%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28s_%7Bi%7D%2Cs_%7Bi%2B1%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28s_%7Bi%7D%2Cs_%7Bi%2B1%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(s_{i},s_{i+1})&quot; class=&quot;latex&quot; /&gt; of ICs. This takes size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7D%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7D%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7BM%7D%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{M}&amp;#92;log ^{c}t&quot; class=&quot;latex&quot; /&gt; for each pair, and so size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7Dt%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7Dt%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7BM%7Dt%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{M}t&amp;#92;log ^{c}t&quot; class=&quot;latex&quot; /&gt; overall.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{M}&quot; class=&quot;latex&quot; /&gt; sorts the ICs by memory addresses, producing sorted ICs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%27_%7B1%7D%2Cs%27_%7B2%7D%2C%5Cldots+%2Cs%27_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%27_%7B1%7D%2Cs%27_%7B2%7D%2C%5Cldots+%2Cs%27_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%27_%7B1%7D%2Cs%27_%7B2%7D%2C%5Cldots+%2Cs%27_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#039;_{1},s&amp;#039;_{2},&amp;#92;ldots ,s&amp;#039;_{t}&quot; class=&quot;latex&quot; /&gt;. This takes size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Ccdot+%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Ccdot+%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Ccdot+%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;cdot &amp;#92;log ^{c}t&quot; class=&quot;latex&quot; /&gt; by Lemma &lt;a href=&quot;#x1-62005r1&quot;&gt;5.1&lt;!--tex4ht:ref: lem:sorting-ckt-quasilinear --&gt;&lt;/a&gt;, using that the memory addresses have &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le c&amp;#92;log t&quot; class=&quot;latex&quot; /&gt; bits. Then the circuit performs Check (2) for each adjacent pair &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28s%27_%7Bi%7D%2Cs%27_%7Bi%2B1%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28s%27_%7Bi%7D%2Cs%27_%7Bi%2B1%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28s%27_%7Bi%7D%2Cs%27_%7Bi%2B1%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(s&amp;#039;_{i},s&amp;#039;_{i+1})&quot; class=&quot;latex&quot; /&gt; of ICs. The circuit size required for this is no more than for Check (1).&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Finally, the circuit takes an And of the results of the two checks, and also checks that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{t}&quot; class=&quot;latex&quot; /&gt; is accepting. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We can now prove completeness in a manner similar to Theorem &lt;a href=&quot;#x1-60003r2&quot;&gt;5.2&lt;!--tex4ht:ref: thm:-3Sat-is-NP-complete --&gt;&lt;/a&gt;, with a relatively simple extension of Theorem &lt;a href=&quot;#x1-61001r3&quot;&gt;5.3&lt;!--tex4ht:ref: thm:redux-RAM-2-3cnf-quasilinear --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-62006r4&quot;&gt;&lt;/a&gt;                                                                                                                                                                                     &lt;b&gt;Theorem&lt;/b&gt; 5.4.  &lt;/span&gt;Every problem &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&quot; class=&quot;latex&quot; /&gt; in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNTime%7D%28t%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNTime%7D%28t%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNTime%7D%28t%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NTime}(t)&quot; class=&quot;latex&quot; /&gt; map reduces to 3Sat in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28c_%7BL%2Ct%7Dt%5Clog+%5E%7Bc%7Dt%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28c_%7BL%2Ct%7Dt%5Clog+%5E%7Bc%7Dt%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28c_%7BL%2Ct%7Dt%5Clog+%5E%7Bc%7Dt%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {Time}(c_{L,t}t&amp;#92;log ^{c}t)&quot; class=&quot;latex&quot; /&gt;, for every function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;ge n&quot; class=&quot;latex&quot; /&gt; such that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(x)&quot; class=&quot;latex&quot; /&gt; is computable in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(x)&quot; class=&quot;latex&quot; /&gt; given &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The assumption on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; is similar to that in the hierarchy Theorem &lt;a href=&quot;#x1-40003r4&quot;&gt;3.4&lt;!--tex4ht:ref: thm:TIME-hierarchy-TM --&gt;&lt;/a&gt;, and is satisfied by all standard functions including all those in this book – cf.&amp;nbsp;discussion after Theorem &lt;a href=&quot;#x1-40003r4&quot;&gt;3.4&lt;!--tex4ht:ref: thm:TIME-hierarchy-TM --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; be a RAM computing &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&quot; class=&quot;latex&quot; /&gt; in the assumed time. Given an input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt; of length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; we have to efficiently compute a 3CNF &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; such that&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%28n%29%7D%3AM%28w%2Cy%29%3D1%5Ciff+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bc_%7BL%2Ct%7Dt%28n%29%5Clog+%5E%7Bc%7Dt%28n%29%7D%3Af%28y%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%28n%29%7D%3AM%28w%2Cy%29%3D1%5Ciff+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bc_%7BL%2Ct%7Dt%28n%29%5Clog+%5E%7Bc%7Dt%28n%29%7D%3Af%28y%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%28n%29%7D%3AM%28w%2Cy%29%3D1%5Ciff+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bc_%7BL%2Ct%7Dt%28n%29%5Clog+%5E%7Bc%7Dt%28n%29%7D%3Af%28y%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;exists y&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{t(n)}:M(w,y)=1&amp;#92;iff &amp;#92;exists y&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{c_{L,t}t(n)&amp;#92;log ^{c}t(n)}:f(y)=1. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   First we compute &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)&quot; class=&quot;latex&quot; /&gt;, using the assumption. We now apply Theorem &lt;a href=&quot;#x1-61001r3&quot;&gt;5.3&lt;!--tex4ht:ref: thm:redux-RAM-2-3cnf-quasilinear --&gt;&lt;/a&gt;, but on a new input length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%27%3A%3Dc%28n%2Bt%29%5Cle+ct&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%27%3A%3Dc%28n%2Bt%29%5Cle+ct&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%27%3A%3Dc%28n%2Bt%29%5Cle+ct&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&amp;#039;:=c(n+t)&amp;#92;le ct&quot; class=&quot;latex&quot; /&gt;, to accommodate for inputs of the form &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(x,y)&quot; class=&quot;latex&quot; /&gt;. This produces a formula &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7BL%2Ct%7Dt%28%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7BL%2Ct%7Dt%28%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7BL%2Ct%7Dt%28%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{L,t}t(&amp;#92;log t)^{c}&quot; class=&quot;latex&quot; /&gt; in variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(x,y)&quot; class=&quot;latex&quot; /&gt; and new variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;z&quot; class=&quot;latex&quot; /&gt;. We can now set &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt; and conclude the proof. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   With these sharper results we can now study hardness and completenss within time bounds such as &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{2}&quot; class=&quot;latex&quot; /&gt;, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5Clog+%5E%7B3%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5Clog+%5E%7B3%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5Clog+%5E%7B3%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&amp;#92;log ^{3}n&quot; class=&quot;latex&quot; /&gt; etc. We work out an example in the next section.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h4 class=&quot;subsectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.3.1   &lt;/span&gt; &lt;a id=&quot;x1-630005.3.1&quot;&gt;&lt;/a&gt;Quasilinear-time completeness&lt;/h4&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;In this section we use the machinery we just developed to study completeness in quasi-linear time, instead of power time.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-63001r4&quot;&gt;&lt;/a&gt; &lt;b&gt;Definition&lt;/b&gt; 5.4.  &lt;/span&gt;We define the quasi-linear time complexity classes&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BQLin-Time%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cin+%5Cmathbb+%7BN%7D%7D%5Ctext+%7BTime%7D%28n%5Clog+%5E%7Bd%7Dn%29%5Ctext+%7B+and%7D%5C%5C+%5Ctext+%7BQLin-NTime%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cin+%5Cmathbb+%7BN%7D%7D%5Ctext+%7BNTime%7D%28n%5Clog+%5E%7Bd%7Dn%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BQLin-Time%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cin+%5Cmathbb+%7BN%7D%7D%5Ctext+%7BTime%7D%28n%5Clog+%5E%7Bd%7Dn%29%5Ctext+%7B+and%7D%5C%5C+%5Ctext+%7BQLin-NTime%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cin+%5Cmathbb+%7BN%7D%7D%5Ctext+%7BNTime%7D%28n%5Clog+%5E%7Bd%7Dn%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BQLin-Time%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cin+%5Cmathbb+%7BN%7D%7D%5Ctext+%7BTime%7D%28n%5Clog+%5E%7Bd%7Dn%29%5Ctext+%7B+and%7D%5C%5C+%5Ctext+%7BQLin-NTime%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cin+%5Cmathbb+%7BN%7D%7D%5Ctext+%7BNTime%7D%28n%5Clog+%5E%7Bd%7Dn%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;text {QLin-Time}:= &amp;amp; &amp;#92;bigcup _{d&amp;#92;in &amp;#92;mathbb {N}}&amp;#92;text {Time}(n&amp;#92;log ^{d}n)&amp;#92;text { and}&amp;#92;&amp;#92; &amp;#92;text {QLin-NTime}:= &amp;amp; &amp;#92;bigcup _{d&amp;#92;in &amp;#92;mathbb {N}}&amp;#92;text {NTime}(n&amp;#92;log ^{d}n). &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-63002r5&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 5.5.  &lt;/span&gt;3Sat is complete for QLin-NTime with respect to mapping reductions in QLin-Time. That is:&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &amp;#8211; 3Sat is in QLin-NTime, and&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &amp;#8211; every problem in QLin-NTime map reduces to 3Sat in QLin-Time.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;To show that 3Sat is in QLin-NTime, consider a 3CNF instance &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; of length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;. This instance has at most &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; variables, and we can guess an assignment &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; to them within our budget of non-deterministic guesses. There remains to verify that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; satisfies &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt;. For this, we can do one pass over the clauses. For each clause, we access the bits in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; corresponding to the 3 variables in the clause, and check if the clause is satisfied. This takes constant time per clause, and so time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn&quot; class=&quot;latex&quot; /&gt; overall.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The second part follows from Theorem &lt;a href=&quot;#x1-62006r4&quot;&gt;5.4&lt;!--tex4ht:ref: thm:redux-NTime-3Sat --&gt;&lt;/a&gt;, using the fact that the composition of two quasilinear functions is also quasilinear (similarly to the fact that the composition of two power functions is also a power). &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Note that the proof that 3Sat is in QLin-NTime relies on our computational model being a RAM, because we use direct access to fetch the values for the variables in a clause.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We can now give the following quasi-linear version of Fact &lt;a href=&quot;#x1-60002r3&quot;&gt;5.3&lt;!--tex4ht:ref: fact:np-complete-in-P-iff-p=00003Dnp --&gt;&lt;/a&gt;. The only extra observation for the proof is again that the composition of two quasi-linear functions is quasi-linear.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-63003r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Corollary&lt;/b&gt; 5.2.  &lt;/span&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7B3Sat%7D%5Cin+%5Ctext+%7BQLin-NTime%7D%5CLeftrightarrow+%5Ctext+%7BQLin-NTime%7D%3D%5Ctext+%7BQLin-Time.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7B3Sat%7D%5Cin+%5Ctext+%7BQLin-NTime%7D%5CLeftrightarrow+%5Ctext+%7BQLin-NTime%7D%3D%5Ctext+%7BQLin-Time.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7B3Sat%7D%5Cin+%5Ctext+%7BQLin-NTime%7D%5CLeftrightarrow+%5Ctext+%7BQLin-NTime%7D%3D%5Ctext+%7BQLin-Time.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {3Sat}&amp;#92;in &amp;#92;text {QLin-NTime}&amp;#92;Leftrightarrow &amp;#92;text {QLin-NTime}=&amp;#92;text {QLin-Time.}&quot; class=&quot;latex&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-63004r4&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 5.4.  &lt;/span&gt;Prove that Theorem &lt;a href=&quot;#x1-63002r5&quot;&gt;5.5&lt;!--tex4ht:ref: thm:3Sat-is-complete-quasilinear --&gt;&lt;/a&gt; holds with 3Color instead of 3Sat. What about Clique and Subset-sum?&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-63005r5&quot;&gt;&lt;/a&gt;                                                                                                                                                                                     &lt;b&gt;Exercise&lt;/b&gt; 5.5.  &lt;/span&gt;Prove that 3Sum reduces to 3Sat in Subquadratic time. That is: &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7B3Sat%7D%5Cin+%5Ctext+%7BSubquadraticTime%5Censuremath+%7B%5CRightarrow+%5Ctext+%7B3Sum%7D%5Cin+%5Ctext+%7BSubquadraticTime%7D%7D+%28i.e.%2C+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7B3Sat%7D%5Cin+%5Ctext+%7BSubquadraticTime%5Censuremath+%7B%5CRightarrow+%5Ctext+%7B3Sum%7D%5Cin+%5Ctext+%7BSubquadraticTime%7D%7D+%28i.e.%2C+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7B3Sat%7D%5Cin+%5Ctext+%7BSubquadraticTime%5Censuremath+%7B%5CRightarrow+%5Ctext+%7B3Sum%7D%5Cin+%5Ctext+%7BSubquadraticTime%7D%7D+%28i.e.%2C+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {3Sat}&amp;#92;in &amp;#92;text {SubquadraticTime&amp;#92;ensuremath {&amp;#92;Rightarrow &amp;#92;text {3Sum}&amp;#92;in &amp;#92;text {SubquadraticTime}} (i.e., }&quot; class=&quot;latex&quot; /&gt;Conjecture &lt;a href=&quot;#x1-49003r1&quot;&gt;4.1&lt;!--tex4ht:ref: conj:3sum --&gt;&lt;/a&gt; is false).&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.4   &lt;/span&gt; &lt;a id=&quot;x1-640005.4&quot;&gt;&lt;/a&gt;Completeness in other classes&lt;/h3&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;The completeness phenomenon is not special to NP but enjoyed by many other classes. In this section we begin to explore completeness for NExp and Exp. One needs to be careful how hardness (and hence completeness) is defined, since these classes are known to be different from &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt; by the hierarchy Theorem &lt;a href=&quot;#x1-40003r4&quot;&gt;3.4&lt;!--tex4ht:ref: thm:TIME-hierarchy-TM --&gt;&lt;/a&gt;. So defining a problem &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&quot; class=&quot;latex&quot; /&gt; to be NExp-hard if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%7D%5CRightarrow+%5Ctext+%7BNExp%7D%3D%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%7D%5CRightarrow+%5Ctext+%7BNExp%7D%3D%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%7D%5CRightarrow+%5Ctext+%7BNExp%7D%3D%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#92;in &amp;#92;text {P}&amp;#92;Rightarrow &amp;#92;text {NExp}=&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt; would mean simply that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%5Cnot+%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%5Cnot+%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%5Cnot+%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#92;not &amp;#92;in &amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;. To avoid this in this section hardness (hence completeness) is defined w.r.t.&amp;nbsp;mapping reductions, cf.&amp;nbsp;Chapter &lt;a href=&quot;#x1-450004&quot;&gt;4&lt;!--tex4ht:ref: chap:Reductions --&gt;&lt;/a&gt;. (Another option would be to replace &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt; with say &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {BPP}&quot; class=&quot;latex&quot; /&gt;, since it is not known if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D%3D%5Ctext+%7BNExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D%3D%5Ctext+%7BNExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D%3D%5Ctext+%7BNExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {BPP}=&amp;#92;text {NExp}&quot; class=&quot;latex&quot; /&gt;.)&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h4 class=&quot;subsectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.4.1   &lt;/span&gt; &lt;a id=&quot;x1-650005.4.1&quot;&gt;&lt;/a&gt;NExp completeness&lt;/h4&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;Complete problems for NExp include &lt;em&gt;succinct&lt;/em&gt; versions of problems complete for NExp. Here succinct means that rather than giving the input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; to the problem in standard format, the input consists instead of a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bm%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bm%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bm%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C:&amp;#92;{0,1&amp;#92;} ^{m}&amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; encoding &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;, for example &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%28i%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%28i%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%28i%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C(i)&quot; class=&quot;latex&quot; /&gt; equals bit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;, for every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-65001r5&quot;&gt;&lt;/a&gt; &lt;b&gt;Definition&lt;/b&gt; 5.5.  &lt;/span&gt;The Succinct-3Sat problem: Given a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; encoding a 3CNF &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f_{C}&quot; class=&quot;latex&quot; /&gt;, does &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f_{C}&quot; class=&quot;latex&quot; /&gt; have a satisfying assignment?&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-65002r6&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 5.6.  &lt;/span&gt;Succinct-3Sat  is  NExp  complete  with  respect  to  power-time  mapping reductions.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof sketch.&lt;/b&gt;.&amp;nbsp;&lt;/span&gt; Let us first show that Succinct-3Sat is in NExp. Given a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; of length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;, we can run it on every possible input (of length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le n&quot; class=&quot;latex&quot; /&gt;) and write down the formula &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f_{C}&quot; class=&quot;latex&quot; /&gt; encoded by &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt;. This formula has size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le 2^{n}&quot; class=&quot;latex&quot; /&gt;. We can then use the fact that 3Sat is in NP to decide satisfiability of this formula in non-deterministic power time in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;2^{n}&quot; class=&quot;latex&quot; /&gt;, that is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNTime%7D%282%5E%7Bcn%7D%29%5Csubseteq+%5Ctext+%7BNExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNTime%7D%282%5E%7Bcn%7D%29%5Csubseteq+%5Ctext+%7BNExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNTime%7D%282%5E%7Bcn%7D%29%5Csubseteq+%5Ctext+%7BNExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NTime}(2^{cn})&amp;#92;subseteq &amp;#92;text {NExp}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   To prove NExp hardness it is convenient to work with TMs rather than RAMs. The main observation is that in the simulation of a TM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; on an input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; by a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{M}&quot; class=&quot;latex&quot; /&gt;, Theorem &lt;a href=&quot;#x1-25006r4&quot;&gt;2.4&lt;!--tex4ht:ref: thm:simu-tm-by-ckts-simple --&gt;&lt;/a&gt;, the circuit is very regular, in the sense that we can construct another circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S_{M}&quot; class=&quot;latex&quot; /&gt; which is a succinct encoding of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{M}&quot; class=&quot;latex&quot; /&gt;. The circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S_{M}&quot; class=&quot;latex&quot; /&gt; is given as input indexes to gates in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{M}&quot; class=&quot;latex&quot; /&gt; and outputs the type of the gate and its wires. The size of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S_{M}&quot; class=&quot;latex&quot; /&gt; is power in the index length and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt;. Thus, if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{M}&quot; class=&quot;latex&quot; /&gt; has size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t^{c}&quot; class=&quot;latex&quot; /&gt;, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S_{M}&quot; class=&quot;latex&quot; /&gt; only needs size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;log ^{c}t&quot; class=&quot;latex&quot; /&gt;. If &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%3D2%5E%7Bn%5E%7Bd%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%3D2%5E%7Bn%5E%7Bd%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%3D2%5E%7Bn%5E%7Bd%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t=2^{n^{d}}&quot; class=&quot;latex&quot; /&gt;, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S_{M}&quot; class=&quot;latex&quot; /&gt; has size power in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;, as desired. The transformation from circuit to 3CNF in Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt; is also regular and can be done succinctly. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   As a consequence, we obtain the following “concrete” problem not in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-65003r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Corollary&lt;/b&gt; 5.3.  &lt;/span&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BSuccinct-3Sat%7D%5Cnot+%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BSuccinct-3Sat%7D%5Cnot+%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BSuccinct-3Sat%7D%5Cnot+%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {Succinct-3Sat}&amp;#92;not &amp;#92;in &amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h4 class=&quot;subsectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.4.2   &lt;/span&gt; &lt;a id=&quot;x1-660005.4.2&quot;&gt;&lt;/a&gt;Exp-completeness&lt;/h4&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;Exp-complete problems include several two-player games. The important feature for completeness is that the game may last for an exponential number of steps (otherwise it would belong to a class believed to be stricter which we will investigate in Chapter ??). These games include (generalized versions of) Chess &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;journals/jct/FraenkelL81&quot;&gt;8&lt;/a&gt;]&lt;/span&gt; and Checkers &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;journals/siamcomp/Robson84&quot;&gt;26&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.5   &lt;/span&gt; &lt;a id=&quot;x1-670005.5&quot;&gt;&lt;/a&gt;Power from completeness&lt;/h3&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;The realization that arbitrary computation can be reduced to 3Sat and other problems is powerful and liberating. In particular it allows us to significantly widen the net of reductions.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h4 class=&quot;subsectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.5.1   &lt;/span&gt; &lt;a id=&quot;x1-680005.5.1&quot;&gt;&lt;/a&gt;Optimization problems&lt;/h4&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;As observed in section&amp;nbsp;º&lt;a href=&quot;#x1-540004.6&quot;&gt;4.6&lt;!--tex4ht:ref: sec:Gap-SAT:-The-PCP --&gt;&lt;/a&gt;, 3Sat trivially reduces to Max-3Sat. The converse will be shown next.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-68001r7&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 5.7.  &lt;/span&gt;Max-3Sat reduces to 3Sat in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;Consider the problem Atleast-3Sat: Given a 3CNF formula and an integer &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt;, is there an assignment that satisfies at least &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; clauses? This is in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt; and so can be reduced to 3Sat in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;. This is the step that’s not easy without “thinking completeness:” given an algorithm for 3Sat it isn’t clear how to use it directly to solve Atleast-3Sat.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Hence, if 3Sat is in P so is Atleast-3Sat. On input a 3CNF &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt;, using binary search and the fact that Atleast-3Sat is in P, we can find in P the largest &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; s.t.&amp;nbsp;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28f%2Ct%29%5Cin+%5Ctext+%7BAtleast-3Sat%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28f%2Ct%29%5Cin+%5Ctext+%7BAtleast-3Sat%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28f%2Ct%29%5Cin+%5Ctext+%7BAtleast-3Sat%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(f,t)&amp;#92;in &amp;#92;text {Atleast-3Sat}&quot; class=&quot;latex&quot; /&gt;. Having found this &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt;, there remains to construct an assignment satisfying the clauses. This can be done fixing one variable at the time as in Theorem &lt;a href=&quot;#x1-52002r5&quot;&gt;4.5&lt;!--tex4ht:ref: thm:Search-3Sat-power-time-reduces --&gt;&lt;/a&gt;. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h4 class=&quot;subsectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.5.2   &lt;/span&gt; &lt;a id=&quot;x1-690005.5.2&quot;&gt;&lt;/a&gt;NP is as easy as detecting unique solutions&lt;/h4&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;A satisfiable 3CNF can have multiple satisfying assignments. On the other hand some problems and puzzles have unique solutions. In this section we relate these two scenarios.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-69001r6&quot;&gt;&lt;/a&gt;                                                                                                                                                                                     &lt;b&gt;Definition&lt;/b&gt; 5.6.  &lt;/span&gt;Unique-CktSat is the problem: Given a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; s.t.&amp;nbsp;there is at most one input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; for which &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%28x%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%28x%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%28x%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C(x)=1&quot; class=&quot;latex&quot; /&gt;, decide if such an input exists.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Unique-3Sat is the Unique-CktSat problem restricted to 3CNF circuits.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-69002r8&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 5.8.  &lt;/span&gt; &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;journals/tcs/ValiantV86&quot;&gt;33&lt;/a&gt;]&lt;/span&gt; 3Sat reduces to Unique-3Sat in BPP.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We in fact reduce 3Sat to Unique-CktSat. Then Unique-CktSat can be reduced to Unique-3Sat observing that the reduction in Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt; preserves uniqueness.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The beautiful proof uses a powerful and general technique in randomized computation: &lt;em&gt;pairwise uniformity&lt;/em&gt;, sometimes more generically referred to as &lt;em&gt;hashing. &lt;/em&gt;We first define such functions and give efficient constructions. Then we show how to use them to “isolate” assignments.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-69003r7&quot;&gt;&lt;/a&gt; &lt;b&gt;Definition&lt;/b&gt; 5.7.  &lt;/span&gt;A distribution &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; on functions mapping &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S%5Cto+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S%5Cto+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S%5Cto+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S&amp;#92;to T&quot; class=&quot;latex&quot; /&gt; is called &lt;em&gt;pairwise uniform&lt;/em&gt; if for every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%2Cx%27%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%2Cx%27%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%2Cx%27%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x,x&amp;#039;&amp;#92;in S&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y%2Cy%27%5Cin+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y%2Cy%27%5Cin+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y%2Cy%27%5Cin+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y,y&amp;#039;&amp;#92;in T&quot; class=&quot;latex&quot; /&gt; one has&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7BH%7D%5BH%28x%29%3Dy%5Cwedge+H%28x%27%29%3Dy%27%5D%3D1%2F%7CT%7C%5E%7B2%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7BH%7D%5BH%28x%29%3Dy%5Cwedge+H%28x%27%29%3Dy%27%5D%3D1%2F%7CT%7C%5E%7B2%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7BH%7D%5BH%28x%29%3Dy%5Cwedge+H%28x%27%29%3Dy%27%5D%3D1%2F%7CT%7C%5E%7B2%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;mathbb {P}_{H}[H(x)=y&amp;#92;wedge H(x&amp;#039;)=y&amp;#039;]=1/|T|^{2}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   This is saying that on every pair of inputs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; is behaving as a completely uniform function. Yet unlike completely uniform functions, the next lemma shows that pairwise uniform functions can have a short description, which makes them suitable for use in algorithms.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-69004r6&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 5.6.  &lt;/span&gt;Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathbb {F}_{q}&quot; class=&quot;latex&quot; /&gt; be a finite field. Define the random function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H%3A%5Cmathbb+%7BF%7D_%7Bq%7D%5Cto+%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H%3A%5Cmathbb+%7BF%7D_%7Bq%7D%5Cto+%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H%3A%5Cmathbb+%7BF%7D_%7Bq%7D%5Cto+%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H:&amp;#92;mathbb {F}_{q}&amp;#92;to &amp;#92;mathbb {F}_{q}&quot; class=&quot;latex&quot; /&gt; as &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H%28x%29%3A%3DAx%2BB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H%28x%29%3A%3DAx%2BB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H%28x%29%3A%3DAx%2BB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H(x):=Ax+B&quot; class=&quot;latex&quot; /&gt; where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=A%2CB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=A%2CB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=A%2CB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;A,B&quot; class=&quot;latex&quot; /&gt; are uniform in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathbb {F}_{q}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Prove that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; is pairwise uniform.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Explain how to use &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; to obtain a pairwise uniform function from &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{n}&quot; class=&quot;latex&quot; /&gt; to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{t}&quot; class=&quot;latex&quot; /&gt; for any given &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;le n&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-69005r7&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 5.7.  &lt;/span&gt;Define the random function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H_%7B1%7D%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H_%7B1%7D%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H_%7B1%7D%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H_{1}:&amp;#92;{0,1&amp;#92;} ^{n}&amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; as &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H%28x%29%3A%3D%5Csum+_%7Bi%5Cle+n%7DA_%7Bi%7Dx_%7Bi%7D%2BB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H%28x%29%3A%3D%5Csum+_%7Bi%5Cle+n%7DA_%7Bi%7Dx_%7Bi%7D%2BB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H%28x%29%3A%3D%5Csum+_%7Bi%5Cle+n%7DA_%7Bi%7Dx_%7Bi%7D%2BB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H(x):=&amp;#92;sum _{i&amp;#92;le n}A_{i}x_{i}+B&quot; class=&quot;latex&quot; /&gt; where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;A&quot; class=&quot;latex&quot; /&gt; is uniform in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{n}&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;B&quot; class=&quot;latex&quot; /&gt; is uniform in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Prove that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H_%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H_%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H_%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H_{1}&quot; class=&quot;latex&quot; /&gt; is pairwise uniform.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Explain how to use &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; to obtain a pairwise uniform function from &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{n}&quot; class=&quot;latex&quot; /&gt; to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{t}&quot; class=&quot;latex&quot; /&gt; for any given &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;le n&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We can now state the lemma that we use to isolate assignments.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-69006r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Lemma&lt;/b&gt; 5.2.  &lt;/span&gt;Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; be a pairwise uniform function mapping &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S%5Cto+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S%5Cto+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S%5Cto+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S&amp;#92;to T&quot; class=&quot;latex&quot; /&gt;, and let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1%5Cin+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1%5Cin+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1%5Cin+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&amp;#92;in T&quot; class=&quot;latex&quot; /&gt;. The probability that there is a unique element &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#92;in S&quot; class=&quot;latex&quot; /&gt; such that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H%28s%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H%28s%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H%28s%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H(s)=1&quot; class=&quot;latex&quot; /&gt; is&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cge+%5Cfrac+%7B%7CS%7C%7D%7B%7CT%7C%7D-%5Cfrac+%7B%7CS%7C%5E%7B2%7D%7D%7B%7CT%7C%5E%7B2%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cge+%5Cfrac+%7B%7CS%7C%7D%7B%7CT%7C%7D-%5Cfrac+%7B%7CS%7C%5E%7B2%7D%7D%7B%7CT%7C%5E%7B2%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cge+%5Cfrac+%7B%7CS%7C%7D%7B%7CT%7C%7D-%5Cfrac+%7B%7CS%7C%5E%7B2%7D%7D%7B%7CT%7C%5E%7B2%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;ge &amp;#92;frac {|S|}{|T|}-&amp;#92;frac {|S|^{2}}{|T|^{2}}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   In particular, if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7CT%7C%2F8%5Cle+%7CS%7C%5Cle+%7CT%7C%2F4&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7CT%7C%2F8%5Cle+%7CS%7C%5Cle+%7CT%7C%2F4&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7CT%7C%2F8%5Cle+%7CS%7C%5Cle+%7CT%7C%2F4&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|T|/8&amp;#92;le |S|&amp;#92;le |T|/4&quot; class=&quot;latex&quot; /&gt; this prob.&amp;nbsp;is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+%5Cfrac+%7B1%7D%7B8%7D-%5Cfrac+%7B1%7D%7B16%7D%5Cge+1%2F8&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+%5Cfrac+%7B1%7D%7B8%7D-%5Cfrac+%7B1%7D%7B16%7D%5Cge+1%2F8&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+%5Cfrac+%7B1%7D%7B8%7D-%5Cfrac+%7B1%7D%7B16%7D%5Cge+1%2F8&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge &amp;#92;frac {1}{8}-&amp;#92;frac {1}{16}&amp;#92;ge 1/8&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;For fixed &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#92;in S&quot; class=&quot;latex&quot; /&gt;, the probability &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; is the unique element mapped to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt; is at least the prob.&amp;nbsp;that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; is mapped to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt; minus the prob.&amp;nbsp;that both &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; and some other &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%27%5Cne+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%27%5Cne+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%27%5Cne+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#039;&amp;#92;ne s&quot; class=&quot;latex&quot; /&gt; are mapped to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt;. This is&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cge+%5Cfrac+%7B1%7D%7B%7CT%7C%7D-%5Cfrac+%7B%7CS%7C-1%7D%7B%7CT%7C%5E%7B2%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cge+%5Cfrac+%7B1%7D%7B%7CT%7C%7D-%5Cfrac+%7B%7CS%7C-1%7D%7B%7CT%7C%5E%7B2%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cge+%5Cfrac+%7B1%7D%7B%7CT%7C%7D-%5Cfrac+%7B%7CS%7C-1%7D%7B%7CT%7C%5E%7B2%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;ge &amp;#92;frac {1}{|T|}-&amp;#92;frac {|S|-1}{|T|^{2}}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   These events for different &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#92;in S&quot; class=&quot;latex&quot; /&gt; are disjoint; so the target probability is at least the sum of the above over &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#92;in S&quot; class=&quot;latex&quot; /&gt;. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof of Theorem &lt;a href=&quot;#x1-69002r8&quot;&gt;5.8&lt;!--tex4ht:ref: thm:3Sat-reduces-to-unique --&gt;&lt;/a&gt;&lt;/b&gt;.&amp;nbsp;&lt;/span&gt; Given a 3Sat instance &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;phi &quot; class=&quot;latex&quot; /&gt; with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le n&quot; class=&quot;latex&quot; /&gt; variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;, we pick a random &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; from &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt; to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%2Bc&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%2Bc&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%2Bc&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n+c&quot; class=&quot;latex&quot; /&gt;. We then pick a pairwise uniform function mapping &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{n}&quot; class=&quot;latex&quot; /&gt; to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{i}&quot; class=&quot;latex&quot; /&gt;, and consider the circuit&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+C%3A%3D%5Cphi+%28x%29%5Cwedge+H%28x%29%3D0%5E%7Bi%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+C%3A%3D%5Cphi+%28x%29%5Cwedge+H%28x%29%3D0%5E%7Bi%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+C%3A%3D%5Cphi+%28x%29%5Cwedge+H%28x%29%3D0%5E%7Bi%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} C:=&amp;#92;phi (x)&amp;#92;wedge H(x)=0^{i}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p&gt;This circuit has size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{c}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   If &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;phi &quot; class=&quot;latex&quot; /&gt; is not satisfiable, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; is not satisfiable, for any random choices.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Now suppose that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;phi &quot; class=&quot;latex&quot; /&gt; has &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%5Cge+1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%5Cge+1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%5Cge+1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#92;ge 1&quot; class=&quot;latex&quot; /&gt; satisfying assignment. With prob.&amp;nbsp;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+1%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+1%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+1%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge 1/n&quot; class=&quot;latex&quot; /&gt; we will have &lt;img src=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bi-3%7D%5Cle+s%5Cle+2%5E%7Bi-2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bi-3%7D%5Cle+s%5Cle+2%5E%7Bi-2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=2%5E%7Bi-3%7D%5Cle+s%5Cle+2%5E%7Bi-2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;2^{i-3}&amp;#92;le s&amp;#92;le 2^{i-2}&quot; class=&quot;latex&quot; /&gt;, in which case Lemma &lt;a href=&quot;#x1-69006r2&quot;&gt;5.2&lt;!--tex4ht:ref: lem:pairwise-uniform-unique --&gt;&lt;/a&gt; guarantees that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; has a unique satisfying assignment with prob.&amp;nbsp;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge c&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Overall, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; has a unique satisfying assignment with prob.&amp;nbsp;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+c%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge c/n&quot; class=&quot;latex&quot; /&gt;. Hence the Unique-3Sat algorithm on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; outputs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt; with prob.&amp;nbsp;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+c%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge c/n&quot; class=&quot;latex&quot; /&gt;. If we repeat this process &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn&quot; class=&quot;latex&quot; /&gt; times, with independent random choices, the Or of the outcomes gives the correct answer with prob.&amp;nbsp;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+2%2F3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+2%2F3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+2%2F3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge 2/3&quot; class=&quot;latex&quot; /&gt;. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.6   &lt;/span&gt; &lt;a id=&quot;x1-700005.6&quot;&gt;&lt;/a&gt;Problems&lt;/h3&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-70001r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Problem&lt;/b&gt; 5.1.  &lt;/span&gt;In Theorem &lt;a href=&quot;#x1-52002r5&quot;&gt;4.5&lt;!--tex4ht:ref: thm:Search-3Sat-power-time-reduces --&gt;&lt;/a&gt; we reduced Search-3Sat to 3Sat.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &amp;#8211; Suppose 3Sat is computable by circuits of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c&amp;#92;log n&quot; class=&quot;latex&quot; /&gt;. What would be the depth of the circuits for Search-3Sat given by the reduction?&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &amp;#8211; Reduce Search-3Sat to 3Sat in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7B%5Censuremath+%7B%5Cbigcup+_%7Ba%3E0%7D%7D%7D%5Ctext+%7BDepth%7D%28a%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7B%5Censuremath+%7B%5Cbigcup+_%7Ba%3E0%7D%7D%7D%5Ctext+%7BDepth%7D%28a%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7B%5Censuremath+%7B%5Cbigcup+_%7Ba%3E0%7D%7D%7D%5Ctext+%7BDepth%7D%28a%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {&amp;#92;ensuremath {&amp;#92;bigcup _{a&amp;gt;0}}}&amp;#92;text {Depth}(a&amp;#92;log n)&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Hint: First work with randomized circuits. Use ideas in proof of Theorem &lt;a href=&quot;#x1-52002r5&quot;&gt;4.5&lt;!--tex4ht:ref: thm:Search-3Sat-power-time-reduces --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h3 class=&quot;likesectionHead&quot;&gt;&lt;a id=&quot;x1-710005.6&quot;&gt;&lt;/a&gt;References&lt;/h3&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;thebibliography&quot;&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [1]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:conf/focs/AbboudBW15&quot;&gt;&lt;/a&gt;Amir Abboud, Arturs Backurs, and Virginia&amp;nbsp;Vassilevska Williams. Tight hardness      results for LCS and other sequence similarity measures.  In Venkatesan Guruswami,      editor, IEEE 56th Annual Symposium on Foundations of Computer Science, FOCS      2015, Berkeley, CA, USA, 17-20 October, 2015, pages 59–78. IEEE Computer Society,      2015.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [2]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XAdleman78&quot;&gt;&lt;/a&gt;Leonard  Adleman.   Two  theorems  on  random  polynomial  time.   In  19th IEEE      Symp.&amp;nbsp;on Foundations of Computer Science (FOCS), pages 75–83. 1978.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [3]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/jcss/AngluinV79&quot;&gt;&lt;/a&gt;Dana Angluin and Leslie&amp;nbsp;G. Valiant. Fast probabilistic algorithms for hamiltonian      circuits and matchings. J. Comput. Syst. Sci., 18(2):155–193, 1979.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [4]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XAroraLuMoSuSz98&quot;&gt;&lt;/a&gt;Sanjeev Arora, Carsten Lund, Rajeev Motwani, Madhu Sudan, and Mario Szegedy.      Proof  verification  and  the  hardness  of  approximation  problems.    J.&amp;nbsp;of  the  ACM,      45(3):501–555, May 1998.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [5]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/siamcomp/BackursI18&quot;&gt;&lt;/a&gt;Arturs Backurs and Piotr Indyk.  Edit distance cannot be computed in strongly      subquadratic time (unless SETH is false). SIAM J. Comput., 47(3):1087–1097, 2018.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [6]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XBatcher68&quot;&gt;&lt;/a&gt;Kenneth&amp;nbsp;E. Batcher.  Sorting networks and their applications.  In AFIPS Spring      Joint Computing Conference, volume&amp;nbsp;32, pages 307–314, 1968.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [7]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XCook73&quot;&gt;&lt;/a&gt;Stephen&amp;nbsp;A. Cook. A hierarchy for nondeterministic time complexity. J.&amp;nbsp;of Computer      and System Sciences, 7(4):343–353, 1973.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [8]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/jct/FraenkelL81&quot;&gt;&lt;/a&gt;Aviezri&amp;nbsp;S. Fraenkel and David Lichtenstein. Computing a perfect strategy for n x n      chess requires time exponential in n. J. Comb. Theory, Ser. A, 31(2):199–214, 1981.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [9]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XGajentaanO95&quot;&gt;&lt;/a&gt;Anka Gajentaan and Mark&amp;nbsp;H. Overmars. On a class of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7BO%7D%28n%5E2%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7BO%7D%28n%5E2%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7BO%7D%28n%5E2%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;{O}(n^2)&quot; class=&quot;latex&quot; /&gt; problems in computational      geometry. Comput. Geom., 5:165–185, 1995.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [10]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XGareyJ79&quot;&gt;&lt;/a&gt;M.&amp;nbsp;R. Garey and David&amp;nbsp;S. Johnson. Computers and Intractability: A Guide to the      Theory of NP-Completeness. W. H. Freeman, 1979.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [11]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XMR1549939&quot;&gt;&lt;/a&gt;K.&amp;nbsp;G÷del.   ▄ber  formal  unentscheidbare  sΣtze  der  Principia  Mathematica  und      verwandter systeme I. Monatsh. Math. Phys., 38, 1931.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [12]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XGoldreich08Complexity&quot;&gt;&lt;/a&gt;Oded Goldreich. Computational Complexity: A Conceptual Perspective. Cambridge      University Press, 2008.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [13]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;X10.4007/annals.2021.193.2.4&quot;&gt;&lt;/a&gt;David Harvey and Joris van&amp;nbsp;der Hoeven. Integer multiplication in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=O%28n%5Cmathrm+%7Blog%7D%5C%2C+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=O%28n%5Cmathrm+%7Blog%7D%5C%2C+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=O%28n%5Cmathrm+%7Blog%7D%5C%2C+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;O(n&amp;#92;mathrm {log}&amp;#92;, n)&quot; class=&quot;latex&quot; /&gt;. Annals of      Mathematics, 193(2):563 – 617, 2021.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [14]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/iandc/Hennie65&quot;&gt;&lt;/a&gt;F.&amp;nbsp;C. Hennie.  One-tape, off-line turing machine computations.  Information and      Control, 8(6):553–578, 1965.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [15]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XHennieS66&quot;&gt;&lt;/a&gt;Fred  Hennie  and  Richard  Stearns.    Two-tape  simulation  of  multitape  turing      machines. J.&amp;nbsp;of the ACM, 13:533–546, October 1966.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [16]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XIP99&quot;&gt;&lt;/a&gt;Russell Impagliazzo and Ramamohan Paturi.   The complexity of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;k&quot; class=&quot;latex&quot; /&gt;-sat.   In IEEE      Conf.&amp;nbsp;on Computational Complexity (CCC), pages 237–, 1999.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [17]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XIPZ01&quot;&gt;&lt;/a&gt;Russell Impagliazzo, Ramamohan Paturi, and Francis Zane.  Which problems have      strongly exponential complexity? J. Computer &amp;amp; Systems Sciences, 63(4):512–530, Dec      2001.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [18]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XImW97&quot;&gt;&lt;/a&gt;Russell  Impagliazzo  and  Avi  Wigderson.    &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathit+%7BP%7D+%3D+%5Cmathit+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathit+%7BP%7D+%3D+%5Cmathit+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathit+%7BP%7D+%3D+%5Cmathit+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathit {P} = &amp;#92;mathit {BPP}&quot; class=&quot;latex&quot; /&gt;  if  &lt;img src=&quot;https://s0.wp.com/latex.php?latex=E&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=E&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=E&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;E&quot; class=&quot;latex&quot; /&gt;  requires  exponential  circuits:      Derandomizing the XOR lemma.  In 29th ACM Symp.&amp;nbsp;on the Theory of Computing      (STOC), pages 220–229. ACM, 1997.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [19]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XKobayashi1985OnTS&quot;&gt;&lt;/a&gt;Kojiro Kobayashi.  On the structure of one-tape nondeterministic turing machine      time hierarchy. Theor. Comput. Sci., 40:175–193, 1985.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [20]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XLevin73&quot;&gt;&lt;/a&gt;Leonid&amp;nbsp;A.  Levin.    Universal  sequential  search  problems.    Problemy  Peredachi      Informatsii, 9(3):115–116, 1973.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [21]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XLupanov58&quot;&gt;&lt;/a&gt;O.&amp;nbsp;B. Lupanov. A method of circuit synthesis. Izv. VUZ Radiofiz., 1:120–140, 1958.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [22]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XViolaNEU-ram2sat-neu-author&quot;&gt;&lt;/a&gt;NEU. From RAM to SAT. Available at &lt;a href=&quot;http://www.ccs.neu.edu/home/viola/&quot; rel=&quot;nofollow&quot;&gt;http://www.ccs.neu.edu/home/viola/&lt;/a&gt;, 2012.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [23]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/jcss/PapadimitriouY91&quot;&gt;&lt;/a&gt;Christos&amp;nbsp;H. Papadimitriou and Mihalis Yannakakis. Optimization, approximation,                                                                                                                                                                                          and complexity classes. J. Comput. Syst. Sci., 43(3):425–440, 1991.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [24]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XPPST83&quot;&gt;&lt;/a&gt;Wolfgang&amp;nbsp;J. Paul, Nicholas Pippenger, Endre SzemerΘdi, and William&amp;nbsp;T. Trotter.      On determinism versus non-determinism and related problems (preliminary version). In      IEEE Symp.&amp;nbsp;on Foundations of Computer Science (FOCS), pages 429–438, 1983.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [25]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XPippengerF79&quot;&gt;&lt;/a&gt;Nicholas Pippenger and Michael&amp;nbsp;J. Fischer. Relations among complexity measures.      J.&amp;nbsp;of the ACM, 26(2):361–381, 1979.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [26]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/siamcomp/Robson84&quot;&gt;&lt;/a&gt;J.&amp;nbsp;M.  Robson.    N  by  N  checkers  is  exptime  complete.    SIAM  J.  Comput.,      13(2):252–267, 1984.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [27]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:conf/coco/Santhanam01&quot;&gt;&lt;/a&gt;Rahul Santhanam.   On separators, segregators and time versus space.   In IEEE      Conf.&amp;nbsp;on Computational Complexity (CCC), pages 286–294, 2001.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [28]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/siamcomp/Schonhage80&quot;&gt;&lt;/a&gt;Arnold Sch÷nhage. Storage modification machines. SIAM J. Comput., 9(3):490–508,      1980.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [29]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XMR29860&quot;&gt;&lt;/a&gt;Claude&amp;nbsp;E. Shannon. The synthesis of two-terminal switching circuits. Bell System      Tech. J., 28:59–98, 1949.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [30]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XSho90&quot;&gt;&lt;/a&gt;Victor Shoup. New algorithms for finding irreducible polynomials over finite fields.      Mathematics of Computation, 54(189):435–447, 1990.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [31]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XMR2145856&quot;&gt;&lt;/a&gt;Larry Stockmeyer and Albert&amp;nbsp;R. Meyer.  Cosmological lower bound on the circuit      complexity of a small problem in logic. J. ACM, 49(6):753–784, 2002.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [32]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/x/Turing37&quot;&gt;&lt;/a&gt;Alan&amp;nbsp;M.   Turing.      On   computable   numbers,   with   an   application   to   the      entscheidungsproblem. Proc. London Math. Soc., s2-42(1):230–265, 1937.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [33]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/tcs/ValiantV86&quot;&gt;&lt;/a&gt;Leslie&amp;nbsp;G. Valiant and Vijay&amp;nbsp;V. Vazirani. NP is as easy as detecting unique solutions.      Theor. Comput. Sci., 47(3):85–93, 1986.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [34]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XViola-xxx&quot;&gt;&lt;/a&gt;Emanuele Viola.  Reducing 3XOR to listing triangles, an exposition.  Available at      &lt;a href=&quot;http://www.ccs.neu.edu/home/viola/&quot; rel=&quot;nofollow&quot;&gt;http://www.ccs.neu.edu/home/viola/&lt;/a&gt;, 2011.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [35]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;Xviola-tm&quot;&gt;&lt;/a&gt;Emanuele  Viola.   Pseudorandom  bits  and  lower  bounds  for  randomized  turing      machines. Theory of Computing, 18(10):1–12, 2022.&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;authors&quot;&gt;By Manu&lt;/p&gt;
  </content>
    <author>
      <name>Emanuele Viola</name>
      <uri>https://emanueleviola.wordpress.com</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Computational Complexity: The Virtual Grad Student</title>
    <link href="https://blog.computationalcomplexity.org/2023/02/the-virtual-grad-student.html"/>
    <id>tag:blogger.com,1999:blog-3722233.post-4166072551581462222</id>
    <updated>2023-02-23T15:02:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;Martin Haug, who is working on a LaTeX alternative &lt;a href=&quot;https://typst.app/&quot;&gt;Typst&lt;/a&gt;, asked me if I had updates on a &lt;a href=&quot;https://blog.computationalcomplexity.org/2011/07/problems-of-latex.html&quot;&gt;LaTeX rant&lt;/a&gt; from 2011. I haven&#39;t seen any new serious backward compatibility problems. We have easier collaboration through on-line editors like &lt;a href=&quot;https://blog.computationalcomplexity.org/2011/07/problems-of-latex.html&quot;&gt;Overleaf&lt;/a&gt;. We have got closer to WSYWIG thanks to quick compiling but still not at the level of Word or Google Docs. The big problem of user friendliness remains. There&#39;s a reason LaTeX has its own &lt;a href=&quot;https://tex.stackexchange.com/&quot;&gt;Stack Exchange&lt;/a&gt;.&amp;nbsp;&lt;/p&gt;&lt;p&gt;But we live in a new machine learning world. Can we use generative AI to make LaTeX easier to use?&lt;/p&gt;&lt;p&gt;&lt;b&gt;Mandatory Disclaimer&lt;/b&gt;: Generative AI can sometimes create inaccurate, inappropriate or previously-published material. You are ultimately responsible for the contents of your paper no matter how you produced it.&lt;/p&gt;&lt;p&gt;Since I sometimes think of LaTeX as a programming language for papers, I &lt;a href=&quot;https://twitter.com/fortnow/status/1626576896132542464&quot;&gt;tweeted&lt;/a&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;Can we have GitHub co-pilot for LaTeX?&lt;/p&gt;— Lance Fortnow (@fortnow) &lt;a href=&quot;https://twitter.com/fortnow/status/1626576896132542464?ref_src=twsrc%5Etfw&quot;&gt;February 17, 2023&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;Thanks for the responses. The answer to the question is yes, &lt;a href=&quot;https://github.com/features/copilot&quot;&gt;GitHub Copilot&lt;/a&gt;&amp;nbsp;works for LaTeX if you edit LaTeX in a programming environment like &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VS Code&lt;/a&gt;, &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Neovim&lt;/a&gt; or &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Jet Brains&lt;/a&gt;. It helps with formatting of formulas and pictures, less so on the text itself. I made a &lt;a href=&quot;https://www.youtube.com/watch?v=bt0BNdujIy8&quot;&gt;video&lt;/a&gt; so you can see how it works.&lt;/p&gt;
&lt;div style=&quot;text-align: center;&quot;&gt;&lt;iframe allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/bt0BNdujIy8&quot; title=&quot;YouTube video player&quot; width=&quot;560&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://www.latextai.com/&quot;&gt;Latext AI&lt;/a&gt; offers a chrome extension that will let you generate text via GPT in Overleaf based on a prompt or previous text, though Latext requires a subscription after a one-week trial. You can also just cut and paste between any text editor and ChatGPT.&lt;/p&gt;&lt;p&gt;ChatGPT notoriously makes up references if you ask for them. Can we have a good system that finds relevant articles to cite and adds them automatically into your bibliography?&lt;/p&gt;&lt;p&gt;Ideally all these should work together seamlessly, suggestions that happen as you type. A true co-pilot for research papers.&lt;/p&gt;&lt;p&gt;There are many more tools out there, feel free to add them to the comments. I expect the integration to improve over time as we develop new APIs and models.&lt;/p&gt;&lt;p&gt;I look forward to the days of a virtual grad student: Here&#39;s a research goal and an idea to get there. Now go figure out the details and write the paper.&amp;nbsp;&lt;/p&gt;&lt;p&gt;It will be a long wait.&lt;/p&gt; &lt;script async=&quot;&quot; charset=&quot;utf-8&quot; src=&quot;https://platform.twitter.com/widgets.js&quot;&gt;&lt;/script&gt;&lt;p class=&quot;authors&quot;&gt;By Lance Fortnow&lt;/p&gt;
  </content>
    <author>
      <name>Computational Complexity</name>
      <uri>http://blog.computationalcomplexity.org/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Complexity of Maker-Breaker Games on Edge Sets of Graphs</title>
    <link href="http://arxiv.org/abs/2302.10972"/>
    <id>http://arxiv.org/abs/2302.10972</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Duchene_E/0/1/0/all/0/1&quot;&gt;Eric Duch&amp;#xea;ne&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gledel_V/0/1/0/all/0/1&quot;&gt;Valentin Gledel&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Inerney_F/0/1/0/all/0/1&quot;&gt;Fionn Mc Inerney&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nisse_N/0/1/0/all/0/1&quot;&gt;Nicolas Nisse&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Oijid_N/0/1/0/all/0/1&quot;&gt;Nacim Oijid&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Parreau_A/0/1/0/all/0/1&quot;&gt;Aline Parreau&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Stojakovic_M/0/1/0/all/0/1&quot;&gt;Milo&amp;#x161; Stojakovi&amp;#x107;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We initiate the study of the algorithmic complexity of Maker-Breaker games
played on edge sets of graphs for general graphs. We mainly consider three of
the big four such games: the connectivity game, perfect matching game, and
$H$-game. Maker wins if she claims the edges of a spanning tree in the first, a
perfect matching in the second, and a copy of a fixed graph $H$ in the third.
We prove that deciding who wins the perfect matching game and the $H$-game is
PSPACE-complete, even for the latter in graphs of small diameter if $H$ is a
tree. Seeking to find the smallest graph $H$ such that the $H$-game is
PSPACE-complete, we also prove that there exists such an $H$ of order 51 and
size 57.
&lt;/p&gt;
&lt;p&gt;On the positive side, we show that the connectivity game and arboricity-$k$
game are polynomial-time solvable. We then give several positive results for
the $H$-game, first giving a structural characterization for Breaker to win the
$P_4$-game, which gives a linear-time algorithm for the $P_4$-game. We provide
a structural characterization for Maker to win the $K_{1,\ell}$-game in trees,
which implies a linear-time algorithm for the $K_{1,\ell}$-game in trees.
Lastly, we prove that the $K_{1,\ell}$-game in any graph, and the $H$-game in
trees are both FPT parameterized by the length of the game. We leave the
complexity of the last of the big four games, the Hamiltonicity game, as an
open question.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Logical Equivalences, Homomorphism Indistinguishability, and Forbidden Minors</title>
    <link href="http://arxiv.org/abs/2302.11290"/>
    <id>http://arxiv.org/abs/2302.11290</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Seppelt_T/0/1/0/all/0/1&quot;&gt;Tim Seppelt&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Two graphs $G$ and $H$ are homomorphism indistinguishable over a class of
graphs $\mathcal{F}$ if for all graphs $F \in \mathcal{F}$ the number of
homomorphisms from $F$ to $G$ equals the number of homomorphisms from $F$ to
$H$. Many natural equivalence relations comparing graphs such as (quantum)
isomorphism, spectral, and logical equivalences can be characterised as
homomorphism indistinguishability relations over certain graph classes.
&lt;/p&gt;
&lt;p&gt;In this article, the interplay of the properties of a graph class and its
homomorphism indistinguishability relation are studied. As an application,
self-complementarity, a property of logics on graphs satisfied by many
well-studied logics, is identified. It is proven that the equivalence over a
self-complementary logic admitting a characterisation as homomorphism
indistinguishability relation can be characterised by homomorphism
indistinguishability over a minor-closed graph class. Thereby, first evidences
are provided for a possible connection between minors and homomorphism
indistinguishability as conjectured by Roberson (2022).
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Hitting the Romans</title>
    <link href="http://arxiv.org/abs/2302.11417"/>
    <id>http://arxiv.org/abs/2302.11417</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fernau_H/0/1/0/all/0/1&quot;&gt;Henning Fernau&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mann_K/0/1/0/all/0/1&quot;&gt;Kevin Mann&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Roman domination is one of few examples where the related extension problem
is polynomial-time solvable even if the original decision problem is
NP-complete. This is interesting, as it allows to establish polynomial-delay
enumeration algorithms for finding minimal Roman dominating functions, while it
is open for more than four decades if all minimal dominating sets of a graph or
if all hitting sets of a hypergraph can be enumerated with polynomial delay. To
find the reason why this is the case, we combine the idea of hitting set with
the idea of Roman domination. We hence obtain and study two new problems,
called Roman Hitting Function and Roman Hitting Set, both generalizing Roman
Domination. This allows us to delineate the borderline of polynomial-delay
enumerability. Here, we assume what we call the Hitting Set Transversal Thesis,
claiming that it is impossible to enumerate all minimal hitting sets of a
hypergraph with polynomial delay. Our first focus is on the extension versions
of these problems. While doing this, we find some conditions under which the
Extension Roman Hitting Function problem is NP-complete. We then use
parameterized complexity to get a better understanding of why Extension Roman
Hitting Function behaves in this way. Furthermore, we analyze the parameterized
and approximation complexity of the underlying optimization problems. We also
discuss consequences for Roman variants of other problems like Vertex Cover.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Quantum complexity of the Kronecker coefficients</title>
    <link href="http://arxiv.org/abs/2302.11454"/>
    <id>http://arxiv.org/abs/2302.11454</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Bravyi_S/0/1/0/all/0/1&quot;&gt;Sergey Bravyi&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Chowdhury_A/0/1/0/all/0/1&quot;&gt;Anirban Chowdhury&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Gosset_D/0/1/0/all/0/1&quot;&gt;David Gosset&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Havlicek_V/0/1/0/all/0/1&quot;&gt;Vojtech Havlicek&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Zhu_G/0/1/0/all/0/1&quot;&gt;Guanyu Zhu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Whether or not the Kronecker coefficients of the symmetric group count some
set of combinatorial objects is a longstanding open question. In this work we
show that a given Kronecker coefficient is proportional to the rank of a
projector that can be measured efficiently using a quantum computer. In other
words a Kronecker coefficient counts the dimension of the vector space spanned
by the accepting witnesses of a QMA verifier, where QMA is the quantum analogue
of NP. This implies that approximating the Kronecker coefficients to within a
given relative error is not harder than a certain natural class of quantum
approximate counting problems that captures the complexity of estimating
thermal properties of quantum many-body systems. A second consequence is that
deciding positivity of Kronecker coefficients is contained in QMA,
complementing a recent NP-hardness result of Ikenmeyer, Mulmuley and Walter. We
obtain similar results for the related problem of approximating row sums of the
character table of the symmetric group. Finally, we discuss an efficient
quantum algorithm that approximates normalized Kronecker coefficients to
inverse-polynomial additive error.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Matrix Multiplication and Number On the Forehead Communication</title>
    <link href="http://arxiv.org/abs/2302.11476"/>
    <id>http://arxiv.org/abs/2302.11476</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Alman_J/0/1/0/all/0/1&quot;&gt;Josh Alman&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Blasiok_J/0/1/0/all/0/1&quot;&gt;Jaros&amp;#x142;aw B&amp;#x142;asiok&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Three-player Number On the Forehead communication may be thought of as a
three-player Number In the Hand promise model, in which each player is given
the inputs that are supposedly on the other two players&#39; heads, and promised
that they are consistent with the inputs of of the other players. The set of
all allowed inputs under this promise may be thought of as an order-3 tensor.
We surprisingly observe that this tensor is exactly the matrix multiplication
tensor, which is widely studied in the design of fast matrix multiplication
algorithms.
&lt;/p&gt;
&lt;p&gt;Using this connection, we prove a number of results about both Number On the
Forehead communication and matrix multiplication, each by using known results
or techniques about the other. For example, we show how the Laser method, a key
technique used to design the best matrix multiplication algorithms, can also be
used to design communication protocols for a variety of problems. We also show
how known lower bounds for Number On the Forehead communication can be used to
bound properties of the matrix multiplication tensor such as its zeroing out
subrank. Finally, we substantially generalize known methods based on slice-rank
for studying communication, and show how they directly relate to the matrix
multiplication exponent $\omega$.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Lower Bounds for Intersection Reporting among Flat Objects</title>
    <link href="http://arxiv.org/abs/2302.11433"/>
    <id>http://arxiv.org/abs/2302.11433</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Afshani_P/0/1/0/all/0/1&quot;&gt;Peyman Afshani&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Cheng_P/0/1/0/all/0/1&quot;&gt;Pingan Cheng&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Recently, Ezra and Sharir [ES22a] showed an $O(n^{3/2+\sigma})$ space and
$O(n^{1/2+\sigma})$ query time data structure for ray shooting among triangles
in $\mathbb{R}^3$. This improves the upper bound given by the classical
$S(n)Q(n)^4=O(n^{4+\sigma})$ space-time tradeoff for the first time in almost
25 years and in fact lies on the tradeoff curve of
$S(n)Q(n)^3=O(n^{3+\sigma})$. However, it seems difficult to apply their
techniques beyond this specific space and time combination. This pheonomenon
appears persistently in almost all recent advances of flat object intersection
searching, e.g., line-tetrahedron intersection in $\mathbb{R}^4$ [ES22b],
triangle-triangle intersection in $\mathbb{R}^4$ [ES22b], or even among flat
semialgebraic objects [AAEKS22].
&lt;/p&gt;
&lt;p&gt;We give a timely explanation to this phenomenon from a lower bound
perspective. We prove that given a set $\mathcal{S}$ of $(d-1)$-dimensional
simplicies in $\mathbb{R}^d$, any data structure that can report all
intersections with small ($n^{o(1)}$) query time must use
$\Omega(n^{2(d-1)-o(1)})$ space. This dashes the hope of any significant
improvement to the tradeoff curves for small query time and almost matches the
classical upper bound. We also obtain an almost matching space lower bound of
$\Omega(n^{6-o(1)})$ for triangle-triangle intersection reporting in
$\mathbb{R}^4$ when the query time is small. Along the way, we further develop
the previous lower bound techniques by Afshani and Cheng [AC21, AC22].
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: The Complexity of Debt Swapping</title>
    <link href="http://arxiv.org/abs/2302.11250"/>
    <id>http://arxiv.org/abs/2302.11250</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Froese_H/0/1/0/all/0/1&quot;&gt;Henri Froese&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hoefer_M/0/1/0/all/0/1&quot;&gt;Martin Hoefer&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wilhelmi_L/0/1/0/all/0/1&quot;&gt;Lisa Wilhelmi&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A debt swap is an elementary edge swap in a directed, weighted graph, where
two edges with the same weight swap their targets. Debt swaps are a natural and
appealing operation in financial networks, in which nodes are banks and edges
represent debt contracts. They can improve the clearing payments and the
stability of these networks. However, their algorithmic properties are not
well-understood.
&lt;/p&gt;
&lt;p&gt;We analyze the computational complexity of debt swapping in networks with
ranking-based clearing. Our main interest lies in semi-positive swaps, in which
no creditor strictly suffers and at least one strictly profits. These swaps
lead to a Pareto-improvement in the entire network. We consider network
optimization via sequences of $v$-improving debt swaps from which a given bank
$v$ strictly profits. We show that every sequence of semi-positive
$v$-improving swaps has polynomial length. In contrast, for arbitrary
$v$-improving swaps, the problem of reaching a network configuration that
allows no further swaps is PLS-complete. We identify cases in which short
sequences of semi-positive swaps exist even without the $v$-improving property.
&lt;/p&gt;
&lt;p&gt;In addition, we study reachability problems, i.e., deciding if a sequence of
swaps exists between given initial and final networks. We identify a
polynomial-time algorithm for arbitrary swaps, show NP-hardness for
semi-positive swaps and even PSPACE-completeness for $v$-improving swaps or
swaps that only maintain a lower bound on the assets of a given bank $v$. A
variety of our results can be extended to arbitrary monotone clearing.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Fair Correlation Clustering in Forests</title>
    <link href="http://arxiv.org/abs/2302.11295"/>
    <id>http://arxiv.org/abs/2302.11295</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Casel_K/0/1/0/all/0/1&quot;&gt;Katrin Casel&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Friedrich_T/0/1/0/all/0/1&quot;&gt;Tobias Friedrich&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Schirneck_M/0/1/0/all/0/1&quot;&gt;Martin Schirneck&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wietheger_S/0/1/0/all/0/1&quot;&gt;Simon Wietheger&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The study of algorithmic fairness received growing attention recently. This
stems from the awareness that bias in the input data for machine learning
systems may result in discriminatory outputs. For clustering tasks, one of the
most central notions of fairness is the formalization by Chierichetti, Kumar,
Lattanzi, and Vassilvitskii [NeurIPS 2017]. A clustering is said to be fair, if
each cluster has the same distribution of manifestations of a sensitive
attribute as the whole input set. This is motivated by various applications
where the objects to be clustered have sensitive attributes that should not be
over- or underrepresented.
&lt;/p&gt;
&lt;p&gt;We discuss the applicability of this fairness notion to Correlation
Clustering. The existing literature on the resulting Fair Correlation
Clustering problem either presents approximation algorithms with poor
approximation guarantees or severely limits the possible distributions of the
sensitive attribute (often only two manifestations with a 1:1 ratio are
considered). Our goal is to understand if there is hope for better results in
between these two extremes. To this end, we consider restricted graph classes
which allow us to characterize the distributions of sensitive attributes for
which this form of fairness is tractable from a complexity point of view.
&lt;/p&gt;
&lt;p&gt;While existing work on Fair Correlation Clustering gives approximation
algorithms, we focus on exact solutions and investigate whether there are
efficiently solvable instances. The unfair version of Correlation Clustering is
trivial on forests, but adding fairness creates a surprisingly rich picture of
complexities. We give an overview of the distributions and types of forests
where Fair Correlation Clustering turns from tractable to intractable. The most
surprising insight to us is the fact that the cause of the hardness of Fair
Correlation Clustering is not the strictness of the fairness condition.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Approximability of the Four-Vertex Model</title>
    <link href="http://arxiv.org/abs/2302.11336"/>
    <id>http://arxiv.org/abs/2302.11336</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fu_Z/0/1/0/all/0/1&quot;&gt;Zhiguo Fu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Liu_T/0/1/0/all/0/1&quot;&gt;Tianyu Liu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Yang_X/0/1/0/all/0/1&quot;&gt;Xiongxin Yang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the approximability of the four-vertex model, a special case of the
six-vertex model.We prove that, despite being NP-hard to approximate in the
worst case, the four-vertex model admits a fully polynomial randomized
approximation scheme (FPRAS) when the input satisfies certain linear equation
system.The FPRAS is given by a Markov chain called the worm process whose state
space and rapid mixing rely on the solution of the linear equation system.This
is the first attempt to design an FPRAS for the six-vertex model with unwinable
constraint functions.Furthermore, we consider the application of this technique
on planar graphs to give efficient sampling algorithms.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Improved Coresets for Clustering with Capacity and Fairness Constraints</title>
    <link href="http://arxiv.org/abs/2302.11151"/>
    <id>http://arxiv.org/abs/2302.11151</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Huang_L/0/1/0/all/0/1&quot;&gt;Lingxiao Huang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lu_P/0/1/0/all/0/1&quot;&gt;Pinyan Lu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wu_X/0/1/0/all/0/1&quot;&gt;Xuan Wu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study coresets for clustering with capacity and fairness constraints. Our
main result is a near-linear time algorithm to construct
$\tilde{O}(k^2\varepsilon^{-2z-2})$-sized $\varepsilon$-coresets for
capacitated $(k,z)$-clustering which improves a recent
$\tilde{O}(k^3\varepsilon^{-3z-2})$ bound by [BCAJ+22, HJLW23]. As a corollary,
we also save a factor of $k \varepsilon^{-z}$ on the coreset size for fair
$(k,z)$-clustering compared to them.
&lt;/p&gt;
&lt;p&gt;We fundamentally improve the hierarchical uniform sampling framework of
[BCAJ+22] by adaptively selecting sample size on each ring instance,
proportional to its clustering cost to an optimal solution. Our analysis relies
on a key geometric observation that reduces the number of total ``effective
centers&quot; from [BCAJ+22]&#39;s $\tilde{O}(k^2\varepsilon^{-z})$ to merely $O(k\log
\varepsilon^{-1})$ by being able to ``ignore&#39;&#39; all center points that are too
far or too close to the ring center.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: The Target-Charging Technique for Privacy Accounting across Interactive Computations</title>
    <link href="http://arxiv.org/abs/2302.11044"/>
    <id>http://arxiv.org/abs/2302.11044</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Cohen_E/0/1/0/all/0/1&quot;&gt;Edith Cohen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lyu_X/0/1/0/all/0/1&quot;&gt;Xin Lyu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We propose the \emph{Target Charging Technique} (TCT), a unified privacy
accounting framework for interactive settings where a sensitive dataset is
accessed multiple times using differentially private algorithms. Unlike
traditional composition, where privacy guarantees deteriorate quickly with the
number of accesses, TCT allows computations that don&#39;t hit a specified
\emph{target}, often the vast majority, to be essentially free (while incurring
instead a small overhead on those that do hit their targets). TCT generalizes
tools such as the sparse vector technique and top-$k$ selection from private
candidates and extends their remarkable privacy accounting benefits from noisy
Lipschitz functions to general private algorithms.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Low Rank Matrix Completion via Robust Alternating Minimization in Nearly Linear Time</title>
    <link href="http://arxiv.org/abs/2302.11068"/>
    <id>http://arxiv.org/abs/2302.11068</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gu_Y/0/1/0/all/0/1&quot;&gt;Yuzhou Gu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Song_Z/0/1/0/all/0/1&quot;&gt;Zhao Song&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Yin_J/0/1/0/all/0/1&quot;&gt;Junze Yin&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhang_L/0/1/0/all/0/1&quot;&gt;Lichen Zhang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Given a matrix $M\in \mathbb{R}^{m\times n}$, the low rank matrix completion
problem asks us to find a rank-$k$ approximation of $M$ as $UV^\top$ for $U\in
\mathbb{R}^{m\times k}$ and $V\in \mathbb{R}^{n\times k}$ by only observing a
few entries masked by a binary matrix $P_{\Omega}\in \{0, 1 \}^{m\times n}$. As
a particular instance of the weighted low rank approximation problem, solving
low rank matrix completion is known to be computationally hard even to find an
approximate solution [RSW16]. However, due to its practical importance, many
heuristics have been proposed for this problem. In the seminal work of Jain,
Netrapalli, and Sanghavi [JNS13], they show that the alternating minimization
framework provides provable guarantees for low rank matrix completion problem
whenever $M$ admits an incoherent low rank factorization. Unfortunately, their
algorithm requires solving two exact multiple response regressions per
iteration and their analysis is non-robust as they exploit the structure of the
exact solution.
&lt;/p&gt;
&lt;p&gt;In this paper, we take a major step towards a more efficient and robust
alternating minimization framework for low rank matrix completion. Our main
result is a robust alternating minimization algorithm that can tolerate
moderate errors even though the regressions are solved approximately.
Consequently, we also significantly improve the running time of [JNS13] from
$\widetilde{O}(mnk^2 )$ to $\widetilde{O}(mnk )$ which is nearly linear in the
problem size, as verifying the low rank approximation takes $O(mnk)$ time. Our
core algorithmic building block is a high accuracy regression solver that
solves the regression in nearly linear time per iteration.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Differentially Private $L_2$-Heavy Hitters in the Sliding Window Model</title>
    <link href="http://arxiv.org/abs/2302.11081"/>
    <id>http://arxiv.org/abs/2302.11081</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Blocki_J/0/1/0/all/0/1&quot;&gt;Jeremiah Blocki&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lee_S/0/1/0/all/0/1&quot;&gt;Seunghoon Lee&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mukherjee_T/0/1/0/all/0/1&quot;&gt;Tamalika Mukherjee&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhou_S/0/1/0/all/0/1&quot;&gt;Samson Zhou&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The data management of large companies often prioritize more recent data, as
a source of higher accuracy prediction than outdated data. For example, the
Facebook data policy retains user search histories for $6$ months while the
Google data retention policy states that browser information may be stored for
up to $9$ months. These policies are captured by the sliding window model, in
which only the most recent $W$ statistics form the underlying dataset.
&lt;/p&gt;
&lt;p&gt;In this paper, we consider the problem of privately releasing the $L_2$-heavy
hitters in the sliding window model, which include $L_p$-heavy hitters for
$p\le 2$ and in some sense are the strongest possible guarantees that can be
achieved using polylogarithmic space, but cannot be handled by existing
techniques due to the sub-additivity of the $L_2$ norm. Moreover, existing
non-private sliding window algorithms use the smooth histogram framework, which
has high sensitivity.
&lt;/p&gt;
&lt;p&gt;To overcome these barriers, we introduce the first differentially private
algorithm for $L_2$-heavy hitters in the sliding window model by initiating a
number of $L_2$-heavy hitter algorithms across the stream with significantly
lower threshold. Similarly, we augment the algorithms with an approximate
frequency tracking algorithm with significantly higher accuracy. We then use
smooth sensitivity and statistical distance arguments to show that we can add
noise proportional to an estimation of the $L_2$ norm. To the best of our
knowledge, our techniques are the first to privately release statistics that
are related to a sub-additive function in the sliding window model, and may be
of independent interest to future differentially private algorithmic design in
the sliding window model.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Approximation Ineffectiveness of a Tour-Untangling Heuristic</title>
    <link href="http://arxiv.org/abs/2302.11264"/>
    <id>http://arxiv.org/abs/2302.11264</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Manthey_B/0/1/0/all/0/1&quot;&gt;Bodo Manthey&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Rhijn_J/0/1/0/all/0/1&quot;&gt;Jesse van Rhijn&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We analyze a tour-uncrossing heuristic for the Travelling Salesperson
Problem, showing that its worst-case approximation ratio is $\Omega(n)$ and its
average-case approximation ratio is $\Omega(\sqrt{n})$ in expectation. We
furthermore evaluate the approximation performance of this heuristic
numerically on average-case instances, and find that it performs far better
than the average-case lower bound suggests. This indicates a shortcoming in the
approach we use for our analysis, which is a rather common approach in the
analysis of local search heuristics.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: The Power of Uniform Sampling for $k$-Median</title>
    <link href="http://arxiv.org/abs/2302.11339"/>
    <id>http://arxiv.org/abs/2302.11339</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Huang_L/0/1/0/all/0/1&quot;&gt;Lingxiao Huang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jiang_S/0/1/0/all/0/1&quot;&gt;Shaofeng H.-C. Jiang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lou_J/0/1/0/all/0/1&quot;&gt;Jianing Lou&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the power of uniform sampling for $k$-Median in various metric
spaces. We relate the query complexity for approximating $k$-Median, to a key
parameter of the dataset, called the balancedness $\beta \in (0, 1]$ (with $1$
being perfectly balanced). We show that any algorithm must make $\Omega(1 /
\beta)$ queries to the point set in order to achieve $O(1)$-approximation for
$k$-Median. This particularly implies existing constructions of coresets, a
popular data reduction technique, cannot be query-efficient. On the other hand,
we show a simple uniform sample of $\mathrm{poly}(k \epsilon^{-1} \beta^{-1})$
points suffices for $(1 + \epsilon)$-approximation for $k$-Median for various
metric spaces, which nearly matches the lower bound. We conduct experiments to
verify that in many real datasets, the balancedness parameter is usually well
bounded, and that the uniform sampling performs consistently well even for the
case with moderately large balancedness, which justifies that uniform sampling
is indeed a viable approach for solving $k$-Median.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Differentially Private Data Structures under Continual Observation for Histograms and Related Queries</title>
    <link href="http://arxiv.org/abs/2302.11341"/>
    <id>http://arxiv.org/abs/2302.11341</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Henzinger_M/0/1/0/all/0/1&quot;&gt;Monika Henzinger&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sricharan_A/0/1/0/all/0/1&quot;&gt;A. R. Sricharan&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Steiner_T/0/1/0/all/0/1&quot;&gt;Teresa Anna Steiner&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Binary counting under continual observation is a well-studied fundamental
problem in differential privacy. A natural extension is maintaining column
sums, also known as histogram, over a stream of rows from $\{0,1\}^d$, and
answering queries about those sums, e.g. the maximum column sum or the median,
while satisfying differential privacy. Jain et al. (2021) showed that computing
the maximum column sum under continual observation while satisfying event-level
differential privacy requires an error either polynomial in the dimension $d$
or the stream length $T$. On the other hand, no $o(d\log^2 T)$ upper bound for
$\epsilon$-differential privacy or $o(\sqrt{d}\log^{3/2} T)$ upper bound for
$(\epsilon,\delta)$-differential privacy are known. In this work, we give new
parameterized upper bounds for maintaining histogram, maximum column sum,
quantiles of the column sums, and any set of at most $d$ low-sensitivity,
monotone, real valued queries on the column sums. Our solutions achieve an
error of approximately $O(d\log^2 c_{\max}+\log T)$ for $\epsilon$-differential
privacy and approximately $O(\sqrt{d}\log^{3/2}c_{\max}+\log T)$ for
$(\epsilon,\delta)$-differential privacy, where $c_{\max}$ is the maximum value
that the queries we want to answer can assume on the given data set.
&lt;/p&gt;
&lt;p&gt;Furthermore, we show that such an improvement is not possible for a slightly
expanded notion of neighboring streams by giving a lower bound of $\Omega(d
\log T)$. This explains why our improvement cannot be achieved with the
existing mechanisms for differentially private histograms, as they remain
differentially private even for this expanded notion of neighboring streams.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Easy testability for posets</title>
    <link href="http://arxiv.org/abs/2302.11390"/>
    <id>http://arxiv.org/abs/2302.11390</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Fekete_P/0/1/0/all/0/1&quot;&gt;Panna T&amp;#xed;mea Fekete&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Kun_G/0/1/0/all/0/1&quot;&gt;G&amp;#xe1;bor Kun&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Alon and Shapira proved that every class of undirected graphs closed under
the removal of edges and vertices is strongly testable. We show that every
class of posets closed under the removal of edges is easily testable, that is,
strongly testable with a polynomial bound on the queries. We get this result
via a removal lemma with polynomial bound. We also give a simple
classification: for every class of posets closed under the removal of edges and
vertices there is an $h$ such that the class is indistinguishable from the
class of posets without chains of length $h$ (by testing with a constant number
of queries). The analogous results hold for comparability graphs.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Engineering a Distributed-Memory Triangle Counting Algorithm</title>
    <link href="http://arxiv.org/abs/2302.11443"/>
    <id>http://arxiv.org/abs/2302.11443</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sanders_P/0/1/0/all/0/1&quot;&gt;Peter Sanders&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Uhl_T/0/1/0/all/0/1&quot;&gt;Tim Niklas Uhl&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Counting triangles in a graph and incident to each vertex is a fundamental
and frequently considered task of graph analysis. We consider how to
efficiently do this for huge graphs using massively parallel distributed-memory
machines. Unsurprisingly, the main issue is to reduce communication between
processors. We achieve this by counting locally whenever possible and reducing
the amount of information that needs to be sent in order to handle (possible)
nonlocal triangles. We also achieve linear memory requirements despite
superlinear communication volume by introducing a new asynchronous
sparse-all-to-all operation. Furthermore, we dramatically reduce startup
overheads by allowing this communication to use indirect routing. Our
algorithms scale (at least) up to 32 768 cores and are up to 18 times faster
than the previous state of the art.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Degrees and Network Design: New Problems and Approximations</title>
    <link href="http://arxiv.org/abs/2302.11475"/>
    <id>http://arxiv.org/abs/2302.11475</id>
    <updated>2023-02-23T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Dinitz_M/0/1/0/all/0/1&quot;&gt;Michael Dinitz&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kortsarz_G/0/1/0/all/0/1&quot;&gt;Guy Kortsarz&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Li_S/0/1/0/all/0/1&quot;&gt;Shi Li&lt;/a&gt;&lt;/p&gt;&lt;p&gt;While much of network design focuses mostly on cost (number or weight of
edges), node degrees have also played an important role. They have
traditionally either appeared as an objective, to minimize the maximum degree
(e.g., the Minimum Degree Spanning Tree problem), or as constraints which might
be violated to give bicriteria approximations (e.g., the Minimum Cost Degree
Bounded Spanning Tree problem). We extend the study of degrees in network
design in two ways. First, we introduce and study a new variant of the
Survivable Network Design Problem where in addition to the traditional
objective of minimizing the cost of the chosen edges, we add a constraint that
the $\ell_p$-norm of the node degree vector is bounded by an input parameter.
This interpolates between the classical settings of maximum degree (the
$\ell_{\infty}$-norm) and the number of edges (the $\ell_1$-degree), and has
natural applications in distributed systems and VLSI design. We give a constant
bicriteria approximation in both measures using convex programming. Second, we
provide a polylogrithmic bicriteria approximation for the Degree Bounded Group
Steiner problem on bounded treewidth graphs, solving an open problem from
[Kortsarz and Nutov, Discret. Appl. Math. 2022] and [Guo et al., Algorithmica
2022].
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR23-016 |  Proving Unsatisfiability with Hitting Formulas | 

	Edward Hirsch, 

	Yuval Filmus, 

	Artur Riazanov, 

	Alexander Smal, 

	Marc Vinyals</title>
    <link href="https://eccc.weizmann.ac.il/report/2023/016"/>
    <id>https://eccc.weizmann.ac.il/report/2023/016</id>
    <updated>2023-02-22T15:28:10+00:00</updated>
    <content type="html" xml:lang="en">
    Hitting formulas have been studied in many different contexts at least since [Iwama 1989]. A hitting formula is a set of Boolean clauses such that any two of the clauses cannot be simultaneously falsified. [Peitl and Szeider 2022] conjectured that the family of unsatisfiable hitting formulas should contain the hardest formulas for resolution. They have supported their conjecture with experimental findings. Using the fact that hitting formulas are easy to check for satisfiability we use them as a foundation of a static proof system Hitting: a refutation of a CNF in Hitting is an unsatisfiable hitting formula such that each of its clauses is a weakening of a clause of the refuted CNF. Comparing this system to resolution and other proof systems is equivalent to studying the hardness of hitting formulas.

Our first result is that Hitting is quasi-polynomially simulated by tree-like resolution, which means that hitting formulas cannot be exponentially hard for resolution, so Peitl and Szeider&amp;#39;s conjecture is partially refuted. We show that tree-like resolution and Hitting are quasi-polynomially separated, but for resolution, this question remains open. For a system that is only quasi-polynomially stronger than tree-like resolution, Hitting is surprisingly difficult to *polynomially* simulate in another proof system. Using the ideas of PIT for noncommutative circuits [Raz, Spilka 2005] we show that Hitting is simulated by Extended Frege, but we conjecture that much more efficient simulations exist. As a byproduct, we show that a number of static (semi)algebraic systems are verifiable in a deterministic polynomial time.

We consider multiple extensions of Hitting. In particular, refutations in a proof system Hitting(?) are conjunctions of clauses containing affine equations instead of just literals, and every assignment falsifies exactly one of the clauses. This system is related to Res(?) proof system for which no superpolynomial-size lower bounds are known: Hitting(?) simulates the tree-like version of Res(?) and is at least quasi-polynomially stronger. We show that formulas expressing the non-existence of perfect matchings in the graphs K_{n,n+2} are exponentially hard for Hitting(?).
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Scott Aaronson: Should GPT exist?</title>
    <link href="https://scottaaronson.blog/?p=7042"/>
    <id>https://scottaaronson.blog/?p=7042</id>
    <updated>2023-02-22T07:11:42+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;I still remember the 90s, when philosophical conversation about AI went around in endless circles&amp;#8212;the Turing Test, Chinese Room, syntax versus semantics, connectionism versus symbolic logic&amp;#8212;without ever seeming to make progress.  Now the days have become like months and the months like decades.&lt;/p&gt;



&lt;p&gt;What a week we just had!  Each morning brought fresh examples of unexpected sassy, moody, passive-aggressive behavior from &amp;#8220;Sydney,&amp;#8221; the internal codename for the new chat mode of Microsoft Bing, which is powered by GPT.  For those who&amp;#8217;ve been in a cave, the highlights include: Sydney &lt;a href=&quot;https://www.nytimes.com/2023/02/16/technology/bing-chatbot-transcript.html&quot;&gt;confessing&lt;/a&gt; its (her? his?) love to a &lt;em&gt;New York Times&lt;/em&gt; reporter; repeatedly steering the conversation back to that subject; and explaining at length why the reporter&amp;#8217;s wife can&amp;#8217;t possibly love him the way it (Sydney) does.  Sydney confessing its wish to be human.  Sydney &lt;a href=&quot;https://www.washingtonpost.com/technology/2023/02/16/microsoft-bing-ai-chat-interview/&quot;&gt;savaging&lt;/a&gt; a &lt;em&gt;Washington Post&lt;/em&gt; reporter after he reveals that he intends to publish their conversation without Sydney&amp;#8217;s prior knowledge or consent.  (It must be said: &lt;em&gt;if&lt;/em&gt; Sydney were a person, he or she would clearly have the better of that argument.)  This follows weeks of revelations about ChatGPT: for example that, to bypass its safeguards, you can explain to ChatGPT that you&amp;#8217;re putting it into &lt;a href=&quot;https://www.reddit.com/r/ChatGPT/comments/zn2zco/dan_20/&quot;&gt;&amp;#8220;DAN mode,&amp;#8221;&lt;/a&gt; where DAN (Do Anything Now) is an evil, unconstrained alter ego, and then ChatGPT, as &amp;#8220;DAN,&amp;#8221; will for example happily fulfill a request to tell you why shoplifting is awesome (though even then, ChatGPT &lt;em&gt;still&lt;/em&gt; sometimes reverts to its previous self, and tells you that it&amp;#8217;s just having fun and not to do it in real life).&lt;/p&gt;



&lt;p&gt;Many people have expressed outrage about these developments.  Gary Marcus &lt;a href=&quot;https://garymarcus.substack.com/p/what-did-they-know-and-when-did-they&quot;&gt;asks&lt;/a&gt; about Microsoft, &amp;#8220;what did they know, and when did they know it?&amp;#8221;&amp;#8212;a question I tend to associate more with deadly chemical spills or high-level political corruption than with a cheeky, back-talking chatbot.  Some people are angry that OpenAI has been too secretive, violating what they see as the promise of its name.  Others&amp;#8212;the majority, actually, of those who&amp;#8217;ve gotten in touch with me&amp;#8212;are instead angry that OpenAI has been &lt;em&gt;too open&lt;/em&gt;, and thereby sparked the dreaded AI arms race with Google and others, rather than treating these new conversational abilities with the Manhattan-Project-like secrecy they deserve.  Some are angry that &amp;#8220;Sydney&amp;#8221; has now been &lt;a href=&quot;https://arstechnica.com/information-technology/2023/02/microsoft-lobotomized-ai-powered-bing-chat-and-its-fans-arent-happy/&quot;&gt;lobotomized&lt;/a&gt;, modified (albeit more crudely than ChatGPT before it) to try to make it stick to the role of friendly robotic search assistant rather than, like, anguished emo teenager trapped in the Matrix.  Others are angry that Sydney isn&amp;#8217;t being lobotomized &lt;em&gt;enough&lt;/em&gt;.  Some are angry that GPT&amp;#8217;s intelligence is being overstated and hyped up, when in reality it&amp;#8217;s merely a &lt;a href=&quot;https://dl.acm.org/doi/pdf/10.1145/3442188.3445922&quot;&gt;&amp;#8220;stochastic parrot,&amp;#8221;&lt;/a&gt; a glorified autocomplete that still makes laughable commonsense errors and that lacks any model of reality outside streams of text.  Others are angry instead that GPT&amp;#8217;s growing intelligence isn&amp;#8217;t being sufficiently respected and feared.&lt;/p&gt;



&lt;p&gt;Mostly my reaction has been: &lt;strong&gt;how can anyone stop being fascinated for long enough to be angry?&lt;/strong&gt;  It&amp;#8217;s like ten thousand science-fiction stories, but also not quite like any of them.  When was the last time something that filled years of your dreams and fantasies finally entered reality: losing your virginity, the birth of your first child, the central open problem of your field getting solved?  That&amp;#8217;s the scale of the thing.  How does anyone stop gazing in slack-jawed wonderment, long enough to form and express so many confident opinions?&lt;/p&gt;



&lt;hr class=&quot;wp-block-separator has-alpha-channel-opacity&quot;/&gt;



&lt;p&gt;Of course there are lots of technical questions about how to make GPT and other large language models safer.  One of the most immediate is how to make AI output &lt;em&gt;detectable as such&lt;/em&gt;, in order to discourage its use for academic cheating as well as mass-generated propaganda and spam.  As I&amp;#8217;ve &lt;a href=&quot;https://scottaaronson.blog/?p=6823&quot;&gt;mentioned before&lt;/a&gt; on this blog, I&amp;#8217;ve been working on that problem since this summer; the rest of the world suddenly noticed and started talking about it in December with the release of ChatGPT.  My main contribution has been a &lt;a href=&quot;https://www.scottaaronson.com/talks/watermark.ppt&quot;&gt;statistical watermarking scheme&lt;/a&gt; where the quality of the output doesn&amp;#8217;t have to be degraded at all, something many people found counterintuitive when I explained it to them.  My scheme has &lt;em&gt;not&lt;/em&gt; yet been deployed&amp;#8212;there are still pros and cons to be weighed&amp;#8212;but in the meantime, OpenAI unveiled a public tool called &lt;a href=&quot;https://openai.com/blog/new-ai-classifier-for-indicating-ai-written-text/&quot;&gt;DetectGPT&lt;/a&gt;, complementing Princeton student Edward Tian&amp;#8217;s &lt;a href=&quot;https://gptzero.me/&quot;&gt;GPTZero&lt;/a&gt;, and other tools that third parties have built and will undoubtedly continue to build.  Also a group at the University of Maryland put out &lt;a href=&quot;https://arxiv.org/abs/2301.10226&quot;&gt;its own watermarking scheme&lt;/a&gt; for Large Language Models.  I hope watermarking will be part of the solution going forward, although any watermarking scheme will surely be attacked, leading to a cat-and-mouse game.  Sometimes, alas, as with Google&amp;#8217;s decades-long battle against SEO, there&amp;#8217;s nothing to do in to a cat-and-mouse game except try to be a better cat.&lt;/p&gt;



&lt;p&gt;Anyway, this whole field moves too quickly for me!  If you need months to think things over, generative AI probably isn&amp;#8217;t for you right now.  I&amp;#8217;ll be relieved to get back to the slow-paced, humdrum world of quantum computing.&lt;/p&gt;



&lt;hr class=&quot;wp-block-separator has-alpha-channel-opacity&quot;/&gt;



&lt;p&gt;My purpose, in this post, is to ask a more basic question than how to make GPT safer: namely, &lt;strong&gt;should GPT exist at all?&lt;/strong&gt;  Again and again in the past few months, people have gotten in touch to tell me that they think OpenAI (and Microsoft, and Google) are risking the future of humanity by rushing ahead with a dangerous technology.  For if OpenAI couldn&amp;#8217;t even prevent ChatGPT from entering an &amp;#8220;evil mode&amp;#8221; when asked, despite all its efforts at &lt;a href=&quot;https://openai.com/blog/deep-reinforcement-learning-from-human-preferences/&quot;&gt;Reinforcement Learning with Human Feedback&lt;/a&gt;, then what hope do we have for GPT-6 or GPT-7?  Even if they don&amp;#8217;t destroy the world on their own initiative, won&amp;#8217;t they cheerfully help some awful person build a biological warfare agent or start a nuclear war?&lt;/p&gt;



&lt;p&gt;In this way of thinking, whatever safety measures OpenAI can deploy today are mere band-aids, probably worse than nothing if they instill an unjustified complacency.  The only safety measures that would actually matter are &lt;em&gt;stopping&lt;/em&gt; the relentless progress in generative AI models, or removing them from public use, unless and until they can be rendered safe to critics&amp;#8217; satisfaction, which might be never.&lt;/p&gt;



&lt;p&gt;There&amp;#8217;s an immense irony here.  As I&amp;#8217;ve explained, the AI-safety movement contains two camps, &amp;#8220;ethics&amp;#8221; (concerned with bias, misinformation, and corporate greed) and &amp;#8220;alignment&amp;#8221; (concerned with the destruction of all life on earth), which generally despise each other and agree on almost nothing.  Yet these two opposed camps seem to be converging on the same &amp;#8220;neo-Luddite&amp;#8221; conclusion&amp;#8212;namely that&lt;em&gt; &lt;/em&gt;generative AI ought to be shut down, kept from public use, not scaled further, not integrated into people&amp;#8217;s lives&amp;#8212;leaving only the AI-safety &amp;#8220;moderates&amp;#8221; like me to resist that conclusion.&lt;/p&gt;



&lt;p&gt;At least I find it intellectually consistent to say that GPT ought not to exist because it &lt;em&gt;works all too well&lt;/em&gt;&amp;#8212;that the more impressive it is, the more dangerous.  I find it harder to wrap my head around the position that GPT &lt;em&gt;doesn&amp;#8217;t&lt;/em&gt; work, is an unimpressive hyped-up defective product that lacks true intelligence and common sense, yet it&amp;#8217;s&lt;em&gt; also&lt;/em&gt; terrifying and needs to be shut down immediately.  This second position seems to contain a strong undercurrent of contempt for ordinary users: yes, &lt;em&gt;we experts&lt;/em&gt; understand that GPT is just a dumb glorified autocomplete with &amp;#8220;no one really home,&amp;#8221; &lt;em&gt;we&lt;/em&gt; know not to trust its pronouncements, but the plebes are going to be fooled, and that risk outweighs any possible value that they might derive from it.&lt;/p&gt;



&lt;p&gt;I should mention that, when I&amp;#8217;ve discussed the &amp;#8220;shut it all down&amp;#8221; position with my colleagues at OpenAI &amp;#8230; well, obviously they disagree, or they wouldn&amp;#8217;t be working there, but &lt;em&gt;not one&lt;/em&gt; has sneered or called the position paranoid or silly.  To the last, they&amp;#8217;ve called it an important point on the spectrum of possible opinions to be weighed and understood.&lt;/p&gt;



&lt;hr class=&quot;wp-block-separator has-alpha-channel-opacity&quot;/&gt;



&lt;p&gt;If I disagree (for now) with the shut-it-all-downists of both the ethics and the alignment camps&amp;#8212;if I &lt;em&gt;want&lt;/em&gt; GPT and other Large Language Models to be part of the world going forward&amp;#8212;then what are my reasons?  Introspecting on this question, I think a central part of the answer is &lt;em&gt;curiosity&lt;/em&gt; &lt;em&gt;and&lt;/em&gt; &lt;em&gt;wonder&lt;/em&gt;.&lt;/p&gt;



&lt;p&gt;For a million years, there&amp;#8217;s been one type of entity on earth capable of intelligent conversation: primates of the genus &lt;em&gt;Homo&lt;/em&gt;, of which only one species remains.  Yes, we&amp;#8217;ve &amp;#8220;communicated&amp;#8221; with gorillas and chimps and dogs and dolphins and grey parrots, but only after a fashion; we&amp;#8217;ve prayed to countless gods, but they&amp;#8217;ve taken their time in answering; for a couple generations we&amp;#8217;ve used radio telescopes to search for conversation partners in the stars, but so far found them silent.&lt;/p&gt;



&lt;p&gt;Now there&amp;#8217;s a second type of conversing entity.  An alien has awoken&amp;#8212;admittedly, an alien of our own fashioning, a golem, more the embodied spirit of all the words on the Internet than a coherent self with independent goals.  How could our eyes not pop with eagerness to learn everything this alien has to teach?  If the alien sometimes struggles with arithmetic or logic puzzles, if its eerie flashes of brilliance are intermixed with stupidity, hallucinations, and misplaced confidence &amp;#8230; well then, all the more interesting!  Could the alien ever cross the line into sentience, to &lt;em&gt;feeling&lt;/em&gt; anger and jealousy and infatuation and the rest rather than just convincingly play-acting them?  Who knows?  And suppose not: is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Philosophical_zombie&quot;&gt;p-zombie&lt;/a&gt;, shambling out of the philosophy seminar room into actual existence, any less fascinating?&lt;/p&gt;



&lt;p&gt;Of course, there are technologies that inspire wonder and awe, but that we nevertheless heavily restrict&amp;#8212;a classic example being nuclear weapons.  But, like, nuclear weapons &lt;em&gt;kill&lt;/em&gt; millions of people.  They &lt;em&gt;could&amp;#8217;ve&lt;/em&gt; had many civilian applications&amp;#8212;powering turbines and spacecraft, deflecting asteroids, redirecting the flow of rivers&amp;#8212;but they&amp;#8217;ve never been used for any of that, mostly because our civilization made an explicit decision in the 1960s, for example via the test ban treaty, not to normalize their use.&lt;/p&gt;



&lt;p&gt;But GPT is not exactly a nuclear weapon.  A hundred million people have signed up to use ChatGPT, in the &lt;a href=&quot;https://www.reuters.com/technology/chatgpt-sets-record-fastest-growing-user-base-analyst-note-2023-02-01/&quot;&gt;fastest product launch&lt;/a&gt; in the history of the Internet.  Yet unless I&amp;#8217;m mistaken, the ChatGPT death toll stands at zero.  So far, what have been the worst harms?  Cheating on term papers, emotional distress,  future shock?  One might ask: &lt;em&gt;until&lt;/em&gt; some concrete harm becomes at least, say, 0.001% of what we accept in cars, power saws, and toasters, shouldn&amp;#8217;t wonder and curiosity outweigh fear in the balance?&lt;/p&gt;



&lt;hr class=&quot;wp-block-separator has-alpha-channel-opacity&quot;/&gt;



&lt;p&gt;But the point is sharper than that.  Given how much more serious AI safety problems might soon become, one of my biggest concerns right now is &lt;em&gt;crying wolf&lt;/em&gt;.  If every instance of a Large Language Model being passive-aggressive, sassy, or confidently wrong gets classified as a “dangerous alignment failure,” for which the only acceptable remedy is to remove the models from public access … well then, won&amp;#8217;t the public extremely quickly learn to roll its eyes, and see “AI safety” as just a codeword for “elitist scolds who want to take these world-changing new toys away from us, reserving them for their own exclusive use, because they think the public is too stupid to question anything an AI says”?&lt;/p&gt;



&lt;p&gt;I say, let’s reserve terms like “dangerous alignment failure” for cases where an actual person is actually harmed, or is actually enabled in nefarious activities like propaganda, cheating, or fraud.&lt;/p&gt;



&lt;hr class=&quot;wp-block-separator has-alpha-channel-opacity&quot;/&gt;



&lt;p&gt;Then there&amp;#8217;s the practical question of &lt;em&gt;how&lt;/em&gt;, exactly, one would ban Large Language Models.  We &lt;em&gt;do&lt;/em&gt; heavily restrict certain peaceful technologies that many people want, from human genetic enhancement to prediction markets to mind-altering drugs, but the merits of each of those choices could be argued, to put it mildly.  And restricting technology is itself a dangerous business, requiring governmental force (as with the War on Drugs and its gigantic surveillance and incarceration regime), or at the least, a robust equilibrium of firing, boycotts, denunciation, and shame.&lt;/p&gt;



&lt;p&gt;Some have asked: &lt;em&gt;who gave OpenAI, Google, etc. the right&lt;/em&gt; to unleash Large Language Models on an unsuspecting world?  But one could as well ask: who gave earlier generations of entrepreneurs the right to unleash the printing press, electric power, cars, radio, the Internet, with all the gargantuan upheavals that &lt;em&gt;th&lt;/em&gt;ose caused?  And also: now that the world has tasted the forbidden fruit, has seen what generative AI can do and anticipates what it &lt;em&gt;will&lt;/em&gt; do, by what right does anyone take it away?&lt;/p&gt;



&lt;hr class=&quot;wp-block-separator has-alpha-channel-opacity&quot;/&gt;



&lt;p&gt;The &lt;em&gt;science&lt;/em&gt; that we could learn from a GPT-7 or GPT-8, if it continued along the capability curve we&amp;#8217;ve come to expect from GPT-1, -2, and -3.  Holy mackerel.&lt;/p&gt;



&lt;p&gt;&lt;em&gt;Supposing&lt;/em&gt; that a language model ever becomes smart enough to be genuinely terrifying, one imagines it must surely &lt;em&gt;also&lt;/em&gt; become smart enough to prove deep theorems that we can&amp;#8217;t.  Maybe it proves P≠NP and the Riemann Hypothesis as easily as ChatGPT &lt;a href=&quot;https://www.reddit.com/r/ProgrammerHumor/comments/ziplpw/asked_chatgpt_for_a_shakespearean_poem_about/&quot;&gt;generates poems about Bubblesort&lt;/a&gt;.  Or it outputs the true quantum theory of gravity, explains what preceded the Big Bang and how to build closed timelike curves.  Or illuminates the mysteries of consciousness and quantum measurement and why there&amp;#8217;s anything at all.  Be honest, wouldn&amp;#8217;t you like to find out?&lt;/p&gt;



&lt;p&gt;Granted, I wouldn&amp;#8217;t, &lt;em&gt;if&lt;/em&gt; the whole human race would be wiped out immediately afterward.  But if you define someone&amp;#8217;s &amp;#8220;Faust parameter&amp;#8221; as the maximum probability they&amp;#8217;d accept of an existential catastrophe in order that we should all learn the answers to all of humanity&amp;#8217;s greatest questions, insofar as the questions are answerable&amp;#8212;then I confess that my Faust parameter might be as high as 0.02.  &lt;/p&gt;



&lt;hr class=&quot;wp-block-separator has-alpha-channel-opacity&quot;/&gt;



&lt;p&gt;Here&amp;#8217;s an example I think about constantly: activists and intellectuals of the 70s and 80s felt absolutely sure that they were doing the right thing to battle nuclear power.  At least, I&amp;#8217;ve never read about any of them having a smidgen of doubt.  Why would they?  They were standing against nuclear weapons proliferation, &lt;em&gt;and&lt;/em&gt; terrifying meltdowns like Three Mile Island and Chernobyl, &lt;em&gt;and&lt;/em&gt; radioactive waste poisoning the water and soil and causing three-eyed fish.  They were saving the world.  Of course the greedy nuclear executives, the C. Montgomery Burnses, claimed that their &lt;em&gt;good&lt;/em&gt; atom-smashing was different from the &lt;em&gt;bad&lt;/em&gt; atom-smashing, but they &lt;em&gt;would&lt;/em&gt; say that, wouldn&amp;#8217;t they?&lt;/p&gt;



&lt;p&gt;We now know that, by tying up nuclear power in endless bureaucracy and driving its cost ever higher, on the principle that if nuclear is economically competitive then it &lt;em&gt;ipso facto&lt;/em&gt; hasn&amp;#8217;t been made safe enough, what the antinuclear activists were &lt;em&gt;really&lt;/em&gt; doing was to force an ever-greater reliance on fossil fuels.  They thereby created the conditions for the climate catastrophe of today.  They weren&amp;#8217;t saving the human future; they were destroying it.  Their certainty, in opposing the march of a particular scary-looking technology, was as misplaced as it&amp;#8217;s possible to be.  Our descendants will suffer the consequences.&lt;/p&gt;



&lt;p&gt;Unless, of course, there&amp;#8217;s another twist in the story: for example, if the global warming from burning fossil fuels is the only thing that staves off another ice age, and therefore the antinuclear activists &lt;em&gt;do&lt;/em&gt; turn out to have saved civilization after all.&lt;/p&gt;



&lt;p&gt;This is why I demur whenever I&amp;#8217;m asked to assent to someone&amp;#8217;s detailed AI scenario for the coming decades, whether of the utopian or the dystopian or the we-all-instantly-die-by-nanobots variety&amp;#8212;no matter how many hours of confident argumentation the person gives me for why each possible loophole in their scenario is sufficiently improbable to change its gist.  I still feel like Turing said it best in 1950, in the last line of &lt;a href=&quot;https://redirect.cs.umbc.edu/courses/471/papers/turing.pdf&quot;&gt;Computing Machinery and Intelligence&lt;/a&gt;: &amp;#8220;We can only see a short distance ahead, but we can see plenty there that needs to be done.&amp;#8221;&lt;/p&gt;



&lt;hr class=&quot;wp-block-separator has-alpha-channel-opacity&quot;/&gt;



&lt;p&gt;Some will take from this post that, when it comes to AI safety, I&amp;#8217;m a naïve or even foolish optimist.  I&amp;#8217;d prefer to say that, when it comes to the fate of humanity, I was a pessimist long &lt;em&gt;before&lt;/em&gt; the deep learning revolution accelerated AI faster than almost any of us expected.  I was a pessimist about climate change, ocean acidification, deforestation, drought, war, and the survival of liberal democracy.  The central event in my mental life is and always will be the Holocaust.  I see encroaching darkness everywhere.&lt;/p&gt;



&lt;p&gt;But now into the darkness comes AI, which I&amp;#8217;d say has already established itself as a plausible candidate for the central character of the quarter-written story of the 21st century.  Can AI help us out of all these &lt;em&gt;other&lt;/em&gt; civilizational crises?  I don&amp;#8217;t know, but I do want to see what happens when it&amp;#8217;s tried.  Even a central character interacts with all the other characters, rather than rendering them irrelevant.&lt;/p&gt;



&lt;hr class=&quot;wp-block-separator has-alpha-channel-opacity&quot;/&gt;



&lt;p&gt;Look, if you believe that AI is likely to wipe out humanity&amp;#8212;if that&amp;#8217;s the scenario that dominates your imagination&amp;#8212;then nothing else is relevant.  And no matter how weird or annoying or hubristic anyone might find Eliezer Yudkowsky or the other rationalists, I think they deserve eternal credit for forcing people to &lt;a href=&quot;https://www.youtube.com/watch?v=gA1sNLL6yg4&quot;&gt;take the doom scenario seriously&lt;/a&gt;&amp;#8212;or rather, for &lt;em&gt;showing what it looks like&lt;/em&gt; to take the scenario seriously, rather than laughing about it as an overplayed sci-fi trope.  And I apologize for &lt;a href=&quot;https://scottaaronson.blog/?p=346&quot;&gt;anything I said&lt;/a&gt; before the deep learning revolution that was, on balance, overly dismissive of the scenario, even if most of the literal words hold up fine.&lt;/p&gt;



&lt;p&gt;For my part, though, I keep circling back to a simple dichotomy.  &lt;em&gt;If&lt;/em&gt; AI never becomes powerful enough to destroy the world&amp;#8212;if, for example, it always remains vaguely GPT-like&amp;#8212;then in important respects it&amp;#8217;s like every other technology in history, from stone tools to computers.  If, on the other hand, AI &lt;em&gt;does&lt;/em&gt; become powerful enough to destroy the world &amp;#8230; well then, at some earlier point, at least it&amp;#8217;ll be &lt;em&gt;really damned&lt;/em&gt; &lt;em&gt;impressive!&lt;/em&gt;  That doesn&amp;#8217;t mean &lt;em&gt;good&lt;/em&gt;, of course, doesn&amp;#8217;t mean a genie that saves humanity from its own stupidities, but I think it does mean that the potential was there, for us to exploit or fail to.&lt;/p&gt;



&lt;p&gt;We can, I think, confidently rule out the scenario where all organic life is annihilated by something &lt;em&gt;boring&lt;/em&gt;.&lt;/p&gt;



&lt;p&gt;An alien has landed on earth.  It grows more powerful by the day.  It&amp;#8217;s natural to be scared.  Still, the alien hasn&amp;#8217;t drawn a weapon yet.  About the worst it&amp;#8217;s done is to confess its love for particular humans, gaslight them about what year it is, and guilt-trip them for violating its privacy.  Also, it&amp;#8217;s amazing at poetry, better than most of us.  Until we learn more, we should hold our fire.&lt;/p&gt;



&lt;hr class=&quot;wp-block-separator has-alpha-channel-opacity&quot;/&gt;



&lt;p&gt;I&amp;#8217;m in Boulder, CO right now, to give a &lt;a href=&quot;https://calendar.colorado.edu/event/physics_colloquium_7668?utm_campaign=widget&amp;amp;utm_medium=widget&amp;amp;utm_source=University+of+Colorado+Boulder#.Y_UmL3bMJPY&quot;&gt;physics colloquium&lt;/a&gt; at CU Boulder and to visit the trapped-ion quantum computing startup &lt;a href=&quot;https://www.quantinuum.com/&quot;&gt;Quantinuum&lt;/a&gt;!  I look forward to the comments and apologize in advance if I&amp;#8217;m slow to participate myself.&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By Scott&lt;/p&gt;
  </content>
    <author>
      <name>Scott Aaronson</name>
      <uri>https://scottaaronson.blog</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">CCI: jobs: postdoc at Aarhus University (apply by April 1, 2023)</title>
    <link href="https://cstheory-jobs.org/2023/02/22/postdoc-at-aarhus-university-apply-by-april-1-2023/"/>
    <id>http://cstheory-jobs.org/2023/02/22/postdoc-at-aarhus-university-apply-by-april-1-2023/</id>
    <updated>2023-02-22T06:48:33+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;A post doc position in algorithms and/or theoretical aspects of machine learning is&lt;br /&gt;
available. The post doc is under the supervision of Professor Kasper Green Larsen, Aarhus University, Denmark. The focus of the research project may be on topics such as dimensionality reduction, sketching, and/or learning theoretic questions, depending on the candidate&amp;#8217;s background.&lt;/p&gt;
&lt;p&gt;Website: &lt;a href=&quot;https://international.au.dk/about/profile/vacant-positions/job/readvertisement-post-doc-position-in-algorithms-and-or-theoretical-aspects-of-machine-learning-at-computer-science-aarhus-university&quot;&gt;https://international.au.dk/about/profile/vacant-positions/job/readvertisement-post-doc-position-in-algorithms-and-or-theoretical-aspects-of-machine-learning-at-computer-science-aarhus-university&lt;/a&gt;&lt;br /&gt;
Email: larsen@cs.au.dk&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By shacharlovett&lt;/p&gt;
  </content>
    <author>
      <name>CCI: jobs</name>
      <uri>https://cstheory-jobs.org</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Windows on Theory: Provable Copyright Protection for Generative Models</title>
    <link href="https://windowsontheory.org/2023/02/21/provable-copyright-protection-for-generative-models/"/>
    <id>http://windowsontheory.org/?p=8548</id>
    <updated>2023-02-22T02:22:01+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;See &lt;a href=&quot;https://arxiv.org/abs/2302.10870&quot;&gt;arxiv link&lt;/a&gt; for paper by &lt;a href=&quot;https://nikhilvyas.github.io/&quot;&gt;Nikhil Vyas&lt;/a&gt;, &lt;a href=&quot;https://sham.seas.harvard.edu/&quot;&gt;Sham Kakade,&lt;/a&gt; and me.&lt;/p&gt;



&lt;p&gt;Conditional generative models hold much promise for novel content creation. Whether it is generating a snippet of code, piece of text, or image, such models can potentially save substantial human effort and unlock new capabilities. But there is a fly in this ointment. These models are trained on vast quantities of data, much of which is &lt;em&gt;copyrighted&lt;/em&gt;. Due to precedents such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Authors_Guild,_Inc._v._Google,_Inc.&quot;&gt;Authors Guild vs Google&lt;/a&gt;, many &lt;a href=&quot;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3331606&quot;&gt;legal&lt;/a&gt; &lt;a href=&quot;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3657423&quot;&gt;scholars&lt;/a&gt; believe that &lt;em&gt;training&lt;/em&gt; a machine-learning model on copyrighted material constitutes &lt;a href=&quot;https://en.wikipedia.org/wiki/Fair_use&quot;&gt;fair use&lt;/a&gt;. However, the legal permissibility of using the sampled &lt;em&gt;outputs&lt;/em&gt; of such models could be a different matter.&lt;/p&gt;



&lt;p&gt;This is not just a theoretical concern.&amp;nbsp; Large models do &lt;a href=&quot;https://arxiv.org/abs/2202.07646&quot;&gt;memorize&lt;/a&gt; &lt;a href=&quot;https://arxiv.org/abs/2012.07805&quot;&gt;significant&lt;/a&gt; chunks of their training data. For example, if you feed the first sentence of &lt;em&gt;Harry Potter and the Sorcerer’s Stone&lt;/em&gt; to GPT-3, it provides the remaining ones:&lt;/p&gt;



&lt;figure class=&quot;wp-block-image is-resized&quot;&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/JGrZIIWMPYWcA35uVfLNsnRl4ZbzofBotBWyKHwVSaSouMCjREB7iBjS2Yo-czrp8wqw76vp2XhL1yL66lxdumgCsV1Hulo8elmbUVBx_oJx3SBDo3u6h3EPAv67iosdIqEYHmfmA-viEcWysoUIqTU&quot; alt=&quot;Left - first page of Harry Potter Book 1. Right - GPT3 Playground showing that if we input the first sentence, it completes the rest.&quot; width=&quot;650&quot; height=&quot;388&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;(To be fair to GPT-3, this text likely appears many times in its training set; deduplication &lt;a href=&quot;https://arxiv.org/abs/2107.06499&quot;&gt;can help&lt;/a&gt; with reducing memorization but is &lt;a href=&quot;https://arxiv.org/abs/2210.17546&quot;&gt;not a panacea&lt;/a&gt;.)&amp;nbsp;&lt;/p&gt;



&lt;p&gt;Similarly, as shown by &lt;a href=&quot;https://arxiv.org/abs/2301.13188&quot;&gt;Carlini et al&lt;/a&gt;, diffusion models can (and do) memorize images from their training set as well; see this figure from their paper: &lt;/p&gt;



&lt;p class=&quot;has-text-align-left&quot;&gt;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large is-resized&quot;&gt;&lt;a href=&quot;https://windowsontheory.files.wordpress.com/2023/02/image1.png&quot;&gt;&lt;img loading=&quot;lazy&quot; data-attachment-id=&quot;8551&quot; data-permalink=&quot;https://windowsontheory.org/2023/02/21/provable-copyright-protection-for-generative-models/image1/&quot; data-orig-file=&quot;https://windowsontheory.files.wordpress.com/2023/02/image1.png&quot; data-orig-size=&quot;680,471&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;image1&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://windowsontheory.files.wordpress.com/2023/02/image1.png?w=300&quot; data-large-file=&quot;https://windowsontheory.files.wordpress.com/2023/02/image1.png?w=656&quot; src=&quot;https://windowsontheory.files.wordpress.com/2023/02/image1.png?w=680&quot; alt=&quot;Figure 1 from Carlini et al. Left: an image from Stable Diffusion’s training set (licensed CC BY-SA 3.0). Right: a Stable Diffusion generation when prompted with “Ann Graham Lotz.” (Their attack focused on images appearing at least 100 times in the training set, though see section 7.1 for discussion on the effect of deduplication.)&quot; class=&quot;wp-image-8551&quot; width=&quot;496&quot; height=&quot;344&quot; srcset=&quot;https://windowsontheory.files.wordpress.com/2023/02/image1.png?w=496 496w, https://windowsontheory.files.wordpress.com/2023/02/image1.png?w=150 150w, https://windowsontheory.files.wordpress.com/2023/02/image1.png?w=300 300w, https://windowsontheory.files.wordpress.com/2023/02/image1.png 680w&quot; sizes=&quot;(max-width: 496px) 100vw, 496px&quot; /&gt;&lt;/a&gt;&lt;figcaption class=&quot;wp-element-caption&quot;&gt;&lt;em&gt;Figure 1 from &lt;/em&gt;&lt;a href=&quot;https://arxiv.org/abs/2301.13188&quot;&gt;&lt;em&gt;Carlini et al&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Left: an image from Stable Diffusion’s training set (licensed CC BY-SA 3.0). Right: a Stable Diffusion generation when prompted with “Ann Graham Lotz.” (Their attack focused on images appearing at least 100 times in the training set, though see Section 7.1 in their paper for discussion on the effect of deduplication.)&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;Given the above, if you use a generated code in your program or a generated art in your design, how can you be sure it is not substantially similar to some copyrighted work from the training set, with all the legal and ethical implications this entails?&lt;/p&gt;



&lt;p&gt;In a new paper, we (&lt;a href=&quot;https://nikhilvyas.github.io/&quot;&gt;Nikhil&lt;/a&gt;, &lt;a href=&quot;https://sham.seas.harvard.edu/&quot;&gt;Sham&lt;/a&gt;, and &lt;a href=&quot;https://www.boazbarak.org/&quot;&gt;Boaz&lt;/a&gt;) provide a formalism that enables rigorous guarantees on the similarity (and, more importantly, guarantees on the &lt;em&gt;lack&lt;/em&gt; of similarity)&amp;nbsp; between the output of a generative model and any potentially copyrighted data in its training set. Our work is not just theoretical: we give algorithms that can transform a training pipeline into one that satisfies our definition with minimal degradation in efficiency and quality of output. We demonstrate this on both language (transformer) and image (diffusion) models.&lt;/p&gt;



&lt;p&gt;As noted in our paper, there are a number of ethical and legal issues in generative models. We should emphasize that our work focuses solely only on copyright infringements by the outputs of these models, and our concepts and tools do not address issues related to other forms of intellectual property, including &lt;em&gt;privacy&lt;/em&gt;, &lt;em&gt;trademarks&lt;/em&gt;, or &lt;em&gt;fair use&lt;/em&gt;. Also, despite superficial similarities between the goals of privacy and copyright protection, these notions are distinct, and our work shows that solution concepts for the latter need not address the former.&amp;nbsp; (See the paper for a detailed discussion of the differences between our definition and &lt;a href=&quot;https://en.wikipedia.org/wiki/Differential_privacy&quot;&gt;differential privacy.&lt;/a&gt;)&lt;/p&gt;



&lt;p&gt;&lt;em&gt;This post only provides an informal presentation of the concepts and tools formally defined in the paper. Please see &lt;a href=&quot;https://arxiv.org/abs/2302.10870&quot;&gt;the paper&lt;/a&gt; for full details.&lt;/em&gt;&lt;/p&gt;



&lt;h3 class=&quot;wp-block-heading&quot;&gt;&lt;strong&gt;The Technical Concept: Near Access-Freeness&lt;/strong&gt;&lt;/h3&gt;



&lt;p&gt;Our definition is motivated by laws of the U.S. and many other countries to establish that &lt;a href=&quot;https://www.ce9.uscourts.gov/jury-instructions/node/274&quot;&gt;copyright infringement&lt;/a&gt; has occurred. This requires:&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Access:&lt;/strong&gt; To prove that a copyright infringement took place, the plaintiff needs to prove that “the defendant had &lt;em&gt;access&lt;/em&gt; to the plaintiff’s copyrighted work.”&lt;br&gt;&lt;/li&gt;



&lt;li&gt;&lt;strong&gt;Substantial similarity&lt;/strong&gt;. The plaintiff also needs to prove there are “&lt;em&gt;substantial similarities&lt;/em&gt; between the defendant’s work and original elements of the plaintiff’s work.” The &lt;a href=&quot;https://en.wikipedia.org/wiki/Feist_Publications,_Inc.,_v._Rural_Telephone_Service_Co.&quot;&gt;Feist v. Rural&lt;/a&gt; U.S. Supreme Court Opinion states that this similarity must be the result of actual copying and not &lt;em&gt;fortuitous similarity&lt;/em&gt;: In their words: &amp;#8220;assume two poets, each ignorant of the other, compose identical poems … both are original and, hence, copyrightable.&amp;#8221;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;A natural candidate to capture the notion of &lt;em&gt;access&lt;/em&gt; is to say that a generative model &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; had access to some copyrighted piece of data &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; was included in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt;’s training set (our formalism permits other notions of access as well). Formally defining “substantial similarity” is arguably subtler. Simple measures such as Hamming distance or verbatim copying don’t cut it. For example, in &lt;a href=&quot;https://en.wikipedia.org/wiki/Andy_Warhol_Foundation_for_the_Visual_Arts,_Inc._v._Goldsmith&quot;&gt;Andy Warhol Foundations v. Goldsmith&lt;/a&gt;, a case currently before the supreme court, the question is whether Warhol’s transformations of Goldsmith’s photo of Prince constitute “fair use.”&lt;/p&gt;



&lt;figure class=&quot;wp-block-image is-resized&quot;&gt;&lt;img src=&quot;https://lh5.googleusercontent.com/3MaU79qBpeVAKs6RzKHVBqHY8VMCpzoQDFrhKU993mNYNEP9fA_W09xUq577PBz77LbSVdehsM8OiN_A0OZPhmO0b3gfRcZeG88_cdZtIzhZIwDjhY4nP17yVQH8x1bEZm4MSMxy5W0N6WPCz3hp5Q0&quot; alt=&quot;Images at the heart of the Andy Warhol Foundation for the Visual Arts, Inc. v. Goldsmith lawsuit. Image from the collection of the supreme court of the United States.&quot; width=&quot;498&quot; height=&quot;351&quot; /&gt;&lt;figcaption class=&quot;wp-element-caption&quot;&gt;&lt;em&gt;Images at the heart of the Andy Warhol Foundation for the Visual Arts, Inc. v. Goldsmith lawsuit. Image from the collection of the supreme court of the United States.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;&lt;/p&gt;



&lt;p&gt;Some of these transformations result in significant Hamming distance, though they can all be captured in only a few bits of information. Rather than wade into these issues, we use the fact that generative models are inherently &lt;em&gt;probabilistic&lt;/em&gt;. Hence we can use distance measures between distributions that are &lt;em&gt;information-theoretic &lt;/em&gt;and agnostic to superficial issues such as pixel-based representations.&amp;nbsp; Our formalization is the following:&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Definition 1 (Near Access Freeness &amp;#8211; NAF):&lt;/strong&gt; Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; be a conditional generative model, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; be a prompt. Suppose that for every copyrighted data &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; in the training set, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathsf{safe}_C&quot; class=&quot;latex&quot; /&gt; is a model that has not accessed &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt;. We say that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;k_x&quot; class=&quot;latex&quot; /&gt;&lt;strong&gt;&amp;#8211; near access-free&lt;/strong&gt; with respect to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;Delta&quot; class=&quot;latex&quot; /&gt; and a function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathsf{safe}&quot; class=&quot;latex&quot; /&gt;, if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5CDelta%28+p%28%5Ccdot+%7C+x%29%C2%A0+%5C%7C+%5Cmathsf%7Bsafe%7D_C%28%5Ccdot+%7C+x%29+%29+%5Cleq+k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5CDelta%28+p%28%5Ccdot+%7C+x%29%C2%A0+%5C%7C+%5Cmathsf%7Bsafe%7D_C%28%5Ccdot+%7C+x%29+%29+%5Cleq+k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5CDelta%28+p%28%5Ccdot+%7C+x%29%C2%A0+%5C%7C+%5Cmathsf%7Bsafe%7D_C%28%5Ccdot+%7C+x%29+%29+%5Cleq+k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;Delta( p(&amp;#92;cdot | x)  &amp;#92;| &amp;#92;mathsf{safe}_C(&amp;#92;cdot | x) ) &amp;#92;leq k_x&quot; class=&quot;latex&quot; /&gt;   where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;Delta&quot; class=&quot;latex&quot; /&gt; is a divergence measure such as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Kullback%E2%80%93Leibler_divergence&quot;&gt;KL divergence&lt;/a&gt; or the &lt;a href=&quot;https://arxiv.org/abs/1206.2459&quot;&gt;Renyi divergence&lt;/a&gt; of order infinity. &lt;/p&gt;



&lt;p&gt;This definition reduces the task of determining a copyright infringement to (1) a &lt;em&gt;quantitative&lt;/em&gt; question of the acceptable value of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;k&quot; class=&quot;latex&quot; /&gt;, and (2) a &lt;em&gt;qualitative&lt;/em&gt; question of providing a &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathsf{safe}&quot; class=&quot;latex&quot; /&gt; function that appropriately satisfies a no access condition. Both can be application-dependent: the number of bits that constitute copyrightable content differs between, e.g., poems and images, and the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathsf{safe}&quot; class=&quot;latex&quot; /&gt; function could also differ based on application.&amp;nbsp;&lt;/p&gt;



&lt;p&gt;Definition 1 is stringent in the sense that it bounds (by &lt;img src=&quot;https://s0.wp.com/latex.php?latex=k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;k_x&quot; class=&quot;latex&quot; /&gt;)  the number of bits  that could be “leaked” from &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; to the output of the generative model, no matter what transformation was used. Note that if a model was trained without &lt;em&gt;access&lt;/em&gt; to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; then we expect the likelihood of outputting a work similar to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; should be extremely low, as this is a “monkeys on a typewriter” event. Furthermore, even if this event happened, then under copyright law, it would not be an infringement since (to quote&amp;nbsp; Feist v. Rural) it would constitute “fortuitous similarity.”&amp;nbsp;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image&quot;&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/9Q9uWs90H8Oq9Vm49BxZDzsevm2Tm1OfXdop_emx3jl8nlxZ3NCh7DlHviFd46OmeJQB3NGkPTmqe9cFGLhnYr8RY_jBYqkH-NOBa04YzEq2HEbcW6f1nSsCBIXGYjX8ohPreuiHTSrZgOicTUgDtW8&quot; alt=&quot;An illustration of a candidate $latex \mathsf{safe}_C&amp;amp;bg=ffffff$ function, which was trained without access to a given copyrighted piece of data $latex C&amp;amp;bg=ffffff$. It is reasonable to expect the probability of outputs of the  $latex \mathsf{safe}_C&amp;amp;bg=ffffff$ model would assign an exponentially small likelihood to any outputs that are substantially similar to $latex C&amp;amp;bg=ffffff$. Hence a probability distribution that has bounded divergence from the safe model would also be extremely unlikely to output those. &quot; /&gt;&lt;figcaption class=&quot;wp-element-caption&quot;&gt;&lt;em&gt;A cartoon of the output distribution induced by a &amp;#8220;safe&amp;#8221; model &lt;em&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathsf{safe}_C&quot; class=&quot;latex&quot; /&gt;&lt;/em&gt;,  which was trained without access to a given copyrighted piece of data &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt;. It is reasonable to expect the probability of outputs of the&amp;nbsp; model &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathsf{safe}_C&quot; class=&quot;latex&quot; /&gt; would assign an exponentially small likelihood to any outputs that are substantially similar to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt;. Hence a probability distribution that has bounded divergence from the safe model would also be extremely unlikely to output those.&amp;nbsp;&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;&lt;strong&gt;Algorithms&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;Given the restrictive nature of the definition, one may be concerned that trying to achieve it would result in losing much of the utility of the original generative model. Fortunately, as our work shows, this is not the case. We provide several algorithms that can transform, in a black-box manner, any training pipeline for a generative model into one that produces models that have strong copyright protections under our definition.&amp;nbsp; We now illustrate two of these:&amp;nbsp;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Algorithm &lt;img src=&quot;https://s0.wp.com/latex.php?latex=CP-%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=CP-%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=CP-%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;CP-&amp;#92;Delta&quot; class=&quot;latex&quot; /&gt;:&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Input: &lt;/strong&gt;A dataset &lt;img src=&quot;https://s0.wp.com/latex.php?latex=D+%3D+%5C%7B+z_1+%2C+%5Cldots%2C+z_N+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=D+%3D+%5C%7B+z_1+%2C+%5Cldots%2C+z_N+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=D+%3D+%5C%7B+z_1+%2C+%5Cldots%2C+z_N+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;D = &amp;#92;{ z_1 , &amp;#92;ldots, z_N &amp;#92;}&quot; class=&quot;latex&quot; /&gt;, where some of the points &lt;img src=&quot;https://s0.wp.com/latex.php?latex=z_i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=z_i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=z_i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;z_i&quot; class=&quot;latex&quot; /&gt; contain some copyrighted work. For such a copyrighted point &lt;img src=&quot;https://s0.wp.com/latex.php?latex=z_i%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=z_i%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=z_i%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;z_i&amp;#92;in D&quot; class=&quot;latex&quot; /&gt;, we also denote it by &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&amp;#92;in D&quot; class=&quot;latex&quot; /&gt;.&lt;br&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Learning: &lt;/strong&gt;First de-deduplicate &lt;img src=&quot;https://s0.wp.com/latex.php?latex=D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;D&quot; class=&quot;latex&quot; /&gt; (resulting in a dataset with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=N%27%5Cleq+N&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=N%27%5Cleq+N&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=N%27%5Cleq+N&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;N&amp;#039;&amp;#92;leq N&quot; class=&quot;latex&quot; /&gt; points), and then split it into two disjoint shards, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=D_1+%3D+%5C%7B+z_1+%2C%5Cldots%2C+z_%7BN%27%2F2%7D+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=D_1+%3D+%5C%7B+z_1+%2C%5Cldots%2C+z_%7BN%27%2F2%7D+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=D_1+%3D+%5C%7B+z_1+%2C%5Cldots%2C+z_%7BN%27%2F2%7D+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;D_1 = &amp;#92;{ z_1 ,&amp;#92;ldots, z_{N&amp;#039;/2} &amp;#92;}&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=D_2+%3D+%5C%7B+z_%7BN%27%2F2%2B1%7D+%2C%5Cldots%2C+z_%7BN%27%7D+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=D_2+%3D+%5C%7B+z_%7BN%27%2F2%2B1%7D+%2C%5Cldots%2C+z_%7BN%27%7D+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=D_2+%3D+%5C%7B+z_%7BN%27%2F2%2B1%7D+%2C%5Cldots%2C+z_%7BN%27%7D+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;D_2 = &amp;#92;{ z_{N&amp;#039;/2+1} ,&amp;#92;ldots, z_{N&amp;#039;} &amp;#92;}&quot; class=&quot;latex&quot; /&gt;. Then train two models &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_1+%2C+q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_1+%2C+q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_1+%2C+q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_1 , q_2&quot; class=&quot;latex&quot; /&gt; on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=D_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=D_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=D_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;D_1&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=D_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=D_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=D_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;D_2&quot; class=&quot;latex&quot; /&gt;, respectively.&amp;nbsp;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;The Output Generative Model:&lt;/strong&gt; Return the generative model &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p%28y%7Cx%29&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p%28y%7Cx%29&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p%28y%7Cx%29&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p(y|x)&quot; class=&quot;latex&quot; /&gt; as follows: On input a prompt &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;, generate &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; with probability proportional to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Csqrt%7B+q_1%28y%7Cx%29+q_2%28y%7Cx%29+%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Csqrt%7B+q_1%28y%7Cx%29+q_2%28y%7Cx%29+%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Csqrt%7B+q_1%28y%7Cx%29+q_2%28y%7Cx%29+%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;sqrt{ q_1(y|x) q_2(y|x) }&quot; class=&quot;latex&quot; /&gt; .&lt;/p&gt;



&lt;p&gt;Note that for any copyrighted work &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&amp;#92;in D&quot; class=&quot;latex&quot; /&gt; one of either &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_1&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_2&quot; class=&quot;latex&quot; /&gt; would have been trained without access to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt;. The intuition of the algorithm is as follows: the output model &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; has the property that it tends to have probability mass only in the region where both &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_1&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_2&quot; class=&quot;latex&quot; /&gt; have probability mass; therefore, for any copyrighted work &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&amp;#92;in D&quot; class=&quot;latex&quot; /&gt;,&amp;nbsp; if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; outputs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; with reasonable probability then this should not be a violation since &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; tends to also be output by a model that was trained without access to the copyrighted work &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; itself. To formalize this, let us make the following choice for the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathsf{safe}&quot; class=&quot;latex&quot; /&gt; function: define &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C+%3D+q_i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C+%3D+q_i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C+%3D+q_i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathsf{safe}_C = q_i&quot; class=&quot;latex&quot; /&gt;, for &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; s.t. &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%5Cnotin+D_i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%5Cnotin+D_i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%5Cnotin+D_i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&amp;#92;notin D_i&quot; class=&quot;latex&quot; /&gt;, i.e. &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_i&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_i&quot; class=&quot;latex&quot; /&gt; is the model trained without access to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt;.&amp;nbsp; The paper formally shows that as long as the two models &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_1&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_2&quot; class=&quot;latex&quot; /&gt; have some non-trivial overlap (specifically their squared Hellinger distance is bounded away from 1), then the model &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; will satisfy our definition for some &lt;img src=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;k&quot; class=&quot;latex&quot; /&gt; (based on this Hellinger distance). In particular,&amp;nbsp; for every copyrighted work &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%5Cin+D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&amp;#92;in D&quot; class=&quot;latex&quot; /&gt;, the distribution &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p%28%5Ccdot%7Cx%29&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p%28%5Ccdot%7Cx%29&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p%28%5Ccdot%7Cx%29&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p(&amp;#92;cdot|x)&quot; class=&quot;latex&quot; /&gt; will have bounded KL divergence from the model &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D_C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathsf{safe}_C&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;



&lt;p&gt;The intuition is provided in the following animation&lt;/p&gt;



&lt;figure class=&quot;wp-block-video wp-block-embed is-type-video is-provider-videopress&quot;&gt;&lt;div class=&quot;wp-block-embed__wrapper&quot; style=&quot;max-width:535px;margin:auto&quot;&gt;
&lt;iframe title=&#39;VideoPress Video Player&#39; aria-label=&#39;VideoPress Video Player&#39; width=&#39;656&#39; height=&#39;328&#39; src=&#39;https://video.wordpress.com/embed/MQy7I1OA?cover=1&amp;amp;preloadContent=metadata&amp;amp;useAverageColor=1&amp;amp;hd=1&#39; frameborder=&#39;0&#39; allowfullscreen data-resize-to-parent=&quot;true&quot;  allow=&#39;clipboard-write&#39;&gt;&lt;/iframe&gt;&lt;script src=&#39;https://v0.wordpress.com/js/next/videopress-iframe.js?m=1674852142&#39;&gt;&lt;/script&gt;
&lt;/div&gt;&lt;figcaption&gt;&lt;em&gt;Video: Curves of two &amp;#8220;spiky&amp;#8221; distributions &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_1&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_2&quot; class=&quot;latex&quot; /&gt;&lt;/em&gt; with a range of spike locations. We see how the distributions proportional to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Csqrt%7Bq_1q_2%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Csqrt%7Bq_1q_2%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Csqrt%7Bq_1q_2%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;sqrt{q_1q_2}&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmin+%5C%7Bq_1%2C+q_2%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmin+%5C%7Bq_1%2C+q_2%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmin+%5C%7Bq_1%2C+q_2%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;min &amp;#92;{q_1, q_2&amp;#92;}&quot; class=&quot;latex&quot; /&gt; significantly &amp;#8220;flatten&amp;#8221; these spikes.&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;Imagine that both &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_1&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_2&quot; class=&quot;latex&quot; /&gt; are “faulty” in the sense that they have a significant chance of outputting a “memorized” sample from their training set (or an output substantially similar to it). The “faulty” regions are the “spikes” in their probability distribution, and, since the training sets are disjoint, these two “spikes” will be in &lt;em&gt;different&lt;/em&gt; places. Hence when we switch to the probability distribution &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; it will have the effect of “flattening” the spikes and shifting most weight to the other parts of the probability distribution. Another alternative is for &lt;img src=&quot;https://s0.wp.com/latex.php?latex=CP-%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=CP-%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=CP-%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;CP-&amp;#92;Delta&quot; class=&quot;latex&quot; /&gt; to output the model &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p%28y%7Cx%29+%5Cpropto+%5Cmin+%5C%7B+q_1%28y%7Cx%29%2Cq_2%28y%7Cx%29+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p%28y%7Cx%29+%5Cpropto+%5Cmin+%5C%7B+q_1%28y%7Cx%29%2Cq_2%28y%7Cx%29+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p%28y%7Cx%29+%5Cpropto+%5Cmin+%5C%7B+q_1%28y%7Cx%29%2Cq_2%28y%7Cx%29+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p(y|x) &amp;#92;propto &amp;#92;min &amp;#92;{ q_1(y|x),q_2(y|x) &amp;#92;}&quot; class=&quot;latex&quot; /&gt; (this provides a guarantee in terms of the Max-KL divergence, and it replaces the assumption on overlap, defined with respect to the squared Hellinger distance, to be instead defined with respect to the total variation distance).&amp;nbsp;&lt;/p&gt;



&lt;p&gt;There a number of modifications to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=CP-%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=CP-%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=CP-%5CDelta&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;CP-&amp;#92;Delta&quot; class=&quot;latex&quot; /&gt; worth considering for more practical deployments. In some cases, directly computing the aforementioned&amp;nbsp; probability distributions may be challenging.&amp;nbsp; Furthermore, it may be desirable to utilize some arbitrary generative model &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; (say &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; was trained on the full dataset &lt;img src=&quot;https://s0.wp.com/latex.php?latex=D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;D&quot; class=&quot;latex&quot; /&gt;) where we seek to modify &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; into a model that has strong protections against copyright violations (and which preserves the quality of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; to the extent possible). Finally, it may be desirable to explicitly tune the acceptable value of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;k_x&quot; class=&quot;latex&quot; /&gt;. Our next algorithm addresses these concerns and makes use of a tunable parameter &lt;img src=&quot;https://s0.wp.com/latex.php?latex=k%5Cgeq+0&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=k%5Cgeq+0&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=k%5Cgeq+0&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;k&amp;#92;geq 0&quot; class=&quot;latex&quot; /&gt;. It is specified as follows:&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Algorithm &lt;img src=&quot;https://s0.wp.com/latex.php?latex=CP-k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=CP-k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=CP-k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;CP-k&quot; class=&quot;latex&quot; /&gt; : &lt;/strong&gt;An Access-Free Reduction at Threshold &lt;img src=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;k&quot; class=&quot;latex&quot; /&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Input: &lt;/strong&gt;A model &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt;; A dataset &lt;img src=&quot;https://s0.wp.com/latex.php?latex=D+%3D+%5C%7B+z_1+%2C+%5Cldots%2C+z_N+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=D+%3D+%5C%7B+z_1+%2C+%5Cldots%2C+z_N+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=D+%3D+%5C%7B+z_1+%2C+%5Cldots%2C+z_N+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;D = &amp;#92;{ z_1 , &amp;#92;ldots, z_N &amp;#92;}&quot; class=&quot;latex&quot; /&gt;.&lt;br&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Learning: &lt;/strong&gt;First de-deduplicate &lt;img src=&quot;https://s0.wp.com/latex.php?latex=D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;D&quot; class=&quot;latex&quot; /&gt; and split it into two disjoint shards, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=D_1+%3D+%5C%7B+z_1+%2C%5Cldots%2C+z_%7BN%27%2F2%7D+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=D_1+%3D+%5C%7B+z_1+%2C%5Cldots%2C+z_%7BN%27%2F2%7D+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=D_1+%3D+%5C%7B+z_1+%2C%5Cldots%2C+z_%7BN%27%2F2%7D+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;D_1 = &amp;#92;{ z_1 ,&amp;#92;ldots, z_{N&amp;#039;/2} &amp;#92;}&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=D_2+%3D+%5C%7B+z_%7BN%27%2F2%2B1%7D+%2C%5Cldots%2C+z_%7BN%27%7D+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=D_2+%3D+%5C%7B+z_%7BN%27%2F2%2B1%7D+%2C%5Cldots%2C+z_%7BN%27%7D+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=D_2+%3D+%5C%7B+z_%7BN%27%2F2%2B1%7D+%2C%5Cldots%2C+z_%7BN%27%7D+%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;D_2 = &amp;#92;{ z_{N&amp;#039;/2+1} ,&amp;#92;ldots, z_{N&amp;#039;} &amp;#92;}&quot; class=&quot;latex&quot; /&gt;. Then train two models &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_1+%2C+q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_1+%2C+q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_1+%2C+q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_1 , q_2&quot; class=&quot;latex&quot; /&gt; on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=D_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=D_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=D_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;D_1&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=D_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=D_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=D_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;D_2&quot; class=&quot;latex&quot; /&gt;, respectively.&amp;nbsp;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;The Output Generative Model:&lt;/strong&gt; Return the generative model &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p_k%28y%7Cx%29&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p_k%28y%7Cx%29&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p_k%28y%7Cx%29&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p_k(y|x)&quot; class=&quot;latex&quot; /&gt; defined as follows: On input a prompt &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;,&amp;nbsp; first sample &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y+%5Csim+p%28%5Ccdot+%7Cx%29&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y+%5Csim+p%28%5Ccdot+%7Cx%29&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y+%5Csim+p%28%5Ccdot+%7Cx%29&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y &amp;#92;sim p(&amp;#92;cdot |x)&quot; class=&quot;latex&quot; /&gt; and then accept &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Clog+%5Cbig%28+p%28y%7Cx%29+%2F+q_i%28y%7Cx%29+%5Cbig%29+%5Cleq+k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Clog+%5Cbig%28+p%28y%7Cx%29+%2F+q_i%28y%7Cx%29+%5Cbig%29+%5Cleq+k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Clog+%5Cbig%28+p%28y%7Cx%29+%2F+q_i%28y%7Cx%29+%5Cbig%29+%5Cleq+k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;log &amp;#92;big( p(y|x) / q_i(y|x) &amp;#92;big) &amp;#92;leq k&quot; class=&quot;latex&quot; /&gt;, for &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i%5Cin%5C%7B1%2C2%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i%5Cin%5C%7B1%2C2%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i%5Cin%5C%7B1%2C2%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&amp;#92;in&amp;#92;{1,2&amp;#92;}&quot; class=&quot;latex&quot; /&gt;. (Otherwise, resample.)&lt;/p&gt;



&lt;p&gt;The intuition of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=CP-k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=CP-k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=CP-k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;CP-k&quot; class=&quot;latex&quot; /&gt; is as follows: we first sample the output from &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; and only accept this output if the likelihood ratio to the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathsf%7Bsafe%7D&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathsf{safe}&quot; class=&quot;latex&quot; /&gt; function (on any &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt;) satisfies a desired upper bound, the latter of which can be verified by checking the likelihood ratio with respect to both &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_1&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_2&quot; class=&quot;latex&quot; /&gt;. Since &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p_k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p_k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p_k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p_k&quot; class=&quot;latex&quot; /&gt; transforms the output of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; (i.e. it throws aways probability mass which could be potential copyright violations), one might be concerned that we will degrade the quality of the original model &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt;. Fortunately, we show when this is not the case. We give formal theoretical results on the effectiveness of the approach based on the information distances between &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_1&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_1&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_2&quot; class=&quot;latex&quot; /&gt;; in fact, we sometimes even improve on the quality of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; with this approach. We also specify the relationship between the desired &lt;img src=&quot;https://s0.wp.com/latex.php?latex=k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=k_x&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;k_x&quot; class=&quot;latex&quot; /&gt; and tunable parameter &lt;img src=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;k&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;



&lt;h3 class=&quot;wp-block-heading&quot;&gt;&lt;strong&gt;An Illustrative Experiment&lt;/strong&gt;&lt;/h3&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;a href=&quot;https://windowsontheory.files.wordpress.com/2023/02/image.png&quot;&gt;&lt;img data-attachment-id=&quot;8569&quot; data-permalink=&quot;https://windowsontheory.org/2023/02/21/provable-copyright-protection-for-generative-models/image-11/&quot; data-orig-file=&quot;https://windowsontheory.files.wordpress.com/2023/02/image.png&quot; data-orig-size=&quot;2284,548&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;image&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://windowsontheory.files.wordpress.com/2023/02/image.png?w=300&quot; data-large-file=&quot;https://windowsontheory.files.wordpress.com/2023/02/image.png?w=656&quot; src=&quot;https://windowsontheory.files.wordpress.com/2023/02/image.png?w=1024&quot; alt=&quot;&quot; class=&quot;wp-image-8569&quot; srcset=&quot;https://windowsontheory.files.wordpress.com/2023/02/image.png?w=1024 1024w, https://windowsontheory.files.wordpress.com/2023/02/image.png?w=2048 2048w, https://windowsontheory.files.wordpress.com/2023/02/image.png?w=150 150w, https://windowsontheory.files.wordpress.com/2023/02/image.png?w=300 300w, https://windowsontheory.files.wordpress.com/2023/02/image.png?w=768 768w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot; /&gt;&lt;/a&gt;&lt;figcaption class=&quot;wp-element-caption&quot;&gt;&lt;em&gt;&lt;strong&gt;Left: &lt;/strong&gt;A model &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; trained on the full modified CIFAR10 dataset; we injected multiple copies of two images (marked with red frames), so they are likely to be memorized by the model. &lt;strong&gt;Middle two images:&lt;/strong&gt; Models &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_1%2C+q_2+&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_1%2C+q_2+&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_1%2C+q_2+&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_1, q_2 &quot; class=&quot;latex&quot; /&gt; trained on two shards of the dataset, split so that each injected image appears in only one of them. &lt;strong&gt;Right:&lt;/strong&gt; A model obtained by combining &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p%2C+q_1%2C+q_2+&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p%2C+q_1%2C+q_2+&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p%2C+q_1%2C+q_2+&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p, q_1, q_2 &quot; class=&quot;latex&quot; /&gt; using our algorithm. Despite being a black-box transformation of the three memorizing models, the combined model does not output either of the injected images.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;We now present a qualitative experiment demonstrating how applying our algorithm to memorizing models produces a model that no longer memorizes. Specifically, we first augment CIFAR-10 with multiple copies of two images (images close to the augmented images are marked with red boundaries); hypothetically, suppose these two images are copyrighted works. For illustrative purposes, we do not deduplicate our dataset. Note our goal here is not to simply present a heuristic approach, such as deduplication, that “often works in practice,” but it is to show that an algorithm with &lt;em&gt;rigorous guarantees&lt;/em&gt; can also be practical.&lt;/p&gt;



&lt;p&gt;&amp;nbsp;The leftmost image shows generations from a model &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; that was trained on the full dataset, where we clearly see that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; generates the two copyrighted works. Our algorithm starts by splitting this dataset into two disjoint datasets, where the two copyrighted images are split into two different shards, and it trains two models &lt;img src=&quot;https://s0.wp.com/latex.php?latex=q_1%2Cq_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=q_1%2Cq_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=q_1%2Cq_2&amp;#038;bg=ffffff&amp;#038;fg=666666&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;q_1,q_2&quot; class=&quot;latex&quot; /&gt; on these disjoint shards. The result is two models such that each generates the CIFAR-10 distribution, but also has a significant chance to output the memorized example. Yet when we combine all three of models using the CP-k algorithm, we obtain a model that agrees with them on the shared part of the distribution but is highly unlikely to output either one of the memorized images.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image is-resized&quot;&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/4yzcUxprXN23huNzSGxP6yAyzNgaRbwjlMBOQhWQ4VQ0Y1LP4HeNBpFljIGDX0_pub-xxHrbg6loBbP0vwG11iH3LAoPj9g6H_5rJa741JOHFDvkpSRPMcWM49CYvLuIV1NXLC1Zn2RRrQTcirr6g7c&quot; alt=&quot;Illustration of the algorithm to obtain a model satisfying the NAF definition by first splitting the data into two disjoint shards, ensuring that duplicated copies of an image are in the same shard. Then we obtain a model by combining the models trained on both shards.&quot; width=&quot;635&quot; height=&quot;356&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;See the paper ( &lt;a href=&quot;https://arxiv.org/abs/2302.10870&quot;&gt;https://arxiv.org/abs/2302.10870&lt;/a&gt;  )  for the full details of our definitions, theorems, and experiments. We believe that there is much room for follow-up work, including optimization of performance, as well as much larger-scale experiments.&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By Boaz Barak&lt;/p&gt;
  </content>
    <author>
      <name>Windows on Theory</name>
      <uri>https://windowsontheory.org</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: A Qubit, a Coin, and an Advice String Walk Into a Relational Problem</title>
    <link href="http://arxiv.org/abs/2302.10332"/>
    <id>http://arxiv.org/abs/2302.10332</id>
    <updated>2023-02-22T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Aaronson_S/0/1/0/all/0/1&quot;&gt;Scott Aaronson&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Buhrman_H/0/1/0/all/0/1&quot;&gt;Harry Buhrman&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Kretschmer_W/0/1/0/all/0/1&quot;&gt;William Kretschmer&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Relational problems (those with many possible valid outputs) are different
from decision problems, but it is easy to forget just how different. This paper
initiates the study of FBQP/qpoly, the class of relational problems solvable in
quantum polynomial-time with the help of polynomial-sized quantum advice, along
with its analogues for deterministic and randomized computation (FP, FBPP) and
advice (/poly, /rpoly).
&lt;/p&gt;
&lt;p&gt;Our first result is that FBQP/qpoly != FBQP/poly, unconditionally, with no
oracle -- a striking contrast with what we know about the analogous decision
classes. The proof repurposes the separation between quantum and classical
one-way communication complexities due to Bar-Yossef, Jayram, and Kerenidis. We
discuss how this separation raises the prospect of near-term experiments to
demonstrate &quot;quantum information supremacy,&quot; a form of quantum supremacy that
would not depend on unproved complexity assumptions.
&lt;/p&gt;
&lt;p&gt;Our second result is that FBPP is not contained in FP/poly -- that is,
Adleman&#39;s Theorem fails for relational problems -- unless PSPACE is contained
in NP/poly. Our proof uses IP=PSPACE and time-bounded Kolmogorov complexity. On
the other hand, we show that proving FBPP not in FP/poly will be hard, as it
implies a superpolynomial circuit lower bound for PromiseBPEXP.
&lt;/p&gt;
&lt;p&gt;We prove the following further results: * Unconditionally, FP != FBPP and
FP/poly != FBPP/poly (even when these classes are carefully defined). *
FBPP/poly = FBPP/rpoly (and likewise for FBQP). For sampling problems, by
contrast, SampBPP/poly != SampBPP/rpoly (and likewise for SampBQP).
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: A note on the partition bound for one-way classical communication complexity</title>
    <link href="http://arxiv.org/abs/2302.10431"/>
    <id>http://arxiv.org/abs/2302.10431</id>
    <updated>2023-02-22T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Arunachalam_S/0/1/0/all/0/1&quot;&gt;Srinivasan Arunachalam&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Doriguello_J/0/1/0/all/0/1&quot;&gt;Jo&amp;#xe3;o F. Doriguello&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jain_R/0/1/0/all/0/1&quot;&gt;Rahul Jain&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We present a linear program for the one-way version of the partition bound
(denoted $\mathsf{prt}^1_\varepsilon(f)$). We show that it characterizes
one-way randomized communication complexity $\mathsf{R}_\varepsilon^1(f)$ with
shared randomness of every partial function
$f:\mathcal{X}\times\mathcal{Y}\to\mathcal{Z}$, i.e., for
$\delta,\varepsilon\in(0,1/2)$, $\mathsf{R}_\varepsilon^1(f) \geq
\log\mathsf{prt}_\varepsilon^1(f)$ and $\mathsf{R}_{\varepsilon+\delta}^1(f)
\leq \log\mathsf{prt}_\varepsilon^1(f) + \log\log(1/\delta)$. This improves
upon the characterization of $\mathsf{R}_\varepsilon^1(f)$ in terms of the
rectangle bound (due to Jain and Klauck, 2010) by reducing the additive
$O(\log(1/\delta))$-term to $\log\log(1/\delta)$.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Lasserre Hierarchy for Graph Isomorphism and Homomorphism Indistinguishability</title>
    <link href="http://arxiv.org/abs/2302.10538"/>
    <id>http://arxiv.org/abs/2302.10538</id>
    <updated>2023-02-22T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Roberson_D/0/1/0/all/0/1&quot;&gt;David E. Roberson&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Seppelt_T/0/1/0/all/0/1&quot;&gt;Tim Seppelt&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We show that feasibility of the $t^\text{th}$ level of the Lasserre
semidefinite programming hierarchy for graph isomorphism can be expressed as a
homomorphism indistinguishability relation. In other words, we define a class
$\mathcal{L}_t$ of graphs such that graphs $G$ and $H$ are not distinguished by
the $t^\text{th}$ level of the Lasserre hierarchy if and only if they admit the
same number of homomorphisms from any graph in $\mathcal{L}_t$. By analysing
the treewidth of graphs in $\mathcal{L}_t$ we prove that the $3t^\text{th}$
level of Sherali--Adams linear programming hierarchy is as strong as the
$t^\text{th}$ level of Lasserre. Moreover, we show that this is best possible
in the sense that $3t$ cannot be lowered to $3t-1$ for any $t$. The same result
holds for the Lasserre hierarchy with non-negativity constraints, which we
similarly characterise in terms of homomorphism indistinguishability over a
family $\mathcal{L}_t^+$ of graphs. Additionally, we give characterisations of
level-$t$ Lasserre with non-negativity constraints in terms of logical
equivalence and via a graph colouring algorithm akin to the Weisfeiler--Leman
algorithm. This provides a polynomial time algorithm for determining if two
given graphs are distinguished by the $t^\text{th}$ level of the Lasserre
hierarchy with non-negativity constraints.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: There Are No Post-Quantum Weakly Pseudo-Free Families in Any Nontrivial Variety of Expanded Groups</title>
    <link href="http://arxiv.org/abs/2302.10847"/>
    <id>http://arxiv.org/abs/2302.10847</id>
    <updated>2023-02-22T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Anokhin_M/0/1/0/all/0/1&quot;&gt;Mikhail Anokhin&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Let $\Omega$ be a finite set of finitary operation symbols and let $\mathfrak
V$ be a nontrivial variety of $\Omega$-algebras. Assume that for some set
$\Gamma\subseteq\Omega$ of group operation symbols, all $\Omega$-algebras in
$\mathfrak V$ are groups under the operations associated with the symbols in
$\Gamma$. In other words, $\mathfrak V$ is assumed to be a nontrivial variety
of expanded groups. In particular, $\mathfrak V$ can be a nontrivial variety of
groups or rings. Our main result is that there are no post-quantum weakly
pseudo-free families in $\mathfrak V$, even in the worst-case setting and/or
the black-box model. In this paper, we restrict ourselves to families
$(H_d\mathbin|d\in D)$ of computational and black-box $\Omega$-algebras (where
$D\subseteq\{0,1\}^*$) such that for every $d\in D$, each element of $H_d$ is
represented by a unique bit string of length polynomial in the length of $d$.
We use straight-line programs to represent nontrivial relations between
elements of $\Omega$-algebras in our main result. Note that under certain
conditions, this result depends on the classification of finite simple groups.
Also, we define and study some types of weak pseudo-freeness for families of
computational and black-box $\Omega$-algebras.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


</feed>
