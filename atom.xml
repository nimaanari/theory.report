<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Theory of Computing Report</title>
  <link rel="self" href=""/>
  <link href=""/>
  <id></id>
  <updated></updated>
  <generator uri="http://feedreader.github.io/">Pluto 1.6.2 on Ruby 3.0.4 (2022-04-12) [x86_64-linux]</generator>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">CCI: jobs: Faculty at University of Iowa (apply by January 1, 2023)</title>
    <link href="https://cstheory-jobs.org/2022/10/04/faculty-at-university-of-iowa-apply-by-january-1-2023/"/>
    <id>http://cstheory-jobs.org/2022/10/04/faculty-at-university-of-iowa-apply-by-january-1-2023/</id>
    <updated>2022-10-04T02:37:31+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;The University of Iowa Computer Science Department invites applications for multiple tenure- and instructional-track positions effective August 2023. Algorithmic foundations is one of the priority areas in this search.&lt;/p&gt;
&lt;p&gt;Website: &lt;a href=&quot;https://cs.uiowa.edu/jobs&quot;&gt;https://cs.uiowa.edu/jobs&lt;/a&gt;&lt;br /&gt;
Email: sriram-pemmaraju@uiowa.edu&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By shacharlovett&lt;/p&gt;
  </content>
    <author>
      <name>CCI: jobs</name>
      <uri>https://cstheory-jobs.org</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Multi-Robot Motion Planning for Unit Discs with Revolving Areas</title>
    <link href="http://arxiv.org/abs/2210.00123"/>
    <id>http://arxiv.org/abs/2210.00123</id>
    <updated>2022-10-04T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Agarwal_P/0/1/0/all/0/1&quot;&gt;Pankaj K. Agarwal&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Geft_T/0/1/0/all/0/1&quot;&gt;Tzvika Geft&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Halperin_D/0/1/0/all/0/1&quot;&gt;Dan Halperin&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Taylor_E/0/1/0/all/0/1&quot;&gt;Erin Taylor&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the problem of motion planning for a collection of $n$ labeled unit
disc robots in a polygonal environment. We assume that the robots have
\emph{revolving areas} around their start and final positions: that each start
and each final is contained in a radius $2$ disc lying in the free space, not
necessarily concentric with the start or final position, which is free from
other start or final positions. This assumption allows a \emph{weakly-monotone}
motion plan, in which robots move according to an ordering as follows: during
the turn of a robot $R$ in the ordering, it moves fully from its start to final
position, while other robots do not leave their revolving areas. As $R$ passes
through a revolving area, a robot $R&#39;$ that is inside this area may move within
the revolving area to avoid a collision. Notwithstanding the existence of a
motion plan, we show that minimizing the total traveled distance in this
setting, specifically even when the motion plan is restricted to be
weakly-monotone, is APX-hard, ruling out any polynomial-time
$(1+\epsilon)$-approximation algorithm.
&lt;/p&gt;
&lt;p&gt;On the positive side, we present the first constant-factor approximation
algorithm for computing a feasible weakly-monotone motion plan. The total
distance traveled by the robots is within an $O(1)$ factor of that of the
optimal motion plan, which need not be weakly monotone. Our algorithm extends
to an online setting in which the polygonal environment is fixed but the
initial and final positions of robots are specified in an online manner.
Finally, we observe that the overhead in the overall cost that we add while
editing the paths to avoid robot-robot collision can vary significantly
depending on the ordering we chose. Finding the best ordering in this respect
is known to be NP-hard, and we provide a polynomial time $O(\log n \log \log
n)$-approximation algorithm for this problem.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Closed cap condition under the cap construction algorithm</title>
    <link href="http://arxiv.org/abs/2210.00198"/>
    <id>http://arxiv.org/abs/2210.00198</id>
    <updated>2022-10-04T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sandu_M/0/1/0/all/0/1&quot;&gt;Mercedes Sandu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Weng_S/0/1/0/all/0/1&quot;&gt;Shuyi Weng&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhang_J/0/1/0/all/0/1&quot;&gt;Jade Zhang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Every polygon $P$ can be companioned by a cap polygon $\hat P$ such that $P$
and $\hat P$ serve as two parts of the boundary surface of a polyhedron $V$.
Pairs of vertices on $P$ and $\hat P$ are identified successively to become
vertices of $V$. In this paper, we study the cap construction that asserts
equal angular defects at these pairings. We exhibit a linear relation that
arises from the cap construction algorithm, which in turn demonstrates an
abundance of polygons that satisfy the closed cap condition, that is, those
that can successfully undergo the cap construction process.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Local and global expansion in random geometric graphs</title>
    <link href="http://arxiv.org/abs/2210.00158"/>
    <id>http://arxiv.org/abs/2210.00158</id>
    <updated>2022-10-04T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Liu_S/0/1/0/all/0/1&quot;&gt;Siqi Liu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Mohanty_S/0/1/0/all/0/1&quot;&gt;Sidhanth Mohanty&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Schramm_T/0/1/0/all/0/1&quot;&gt;Tselil Schramm&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Yang_E/0/1/0/all/0/1&quot;&gt;Elizabeth Yang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Consider a random geometric 2-dimensional simplicial complex $X$ sampled as
follows: first, sample $n$ vectors $\boldsymbol{u_1},\ldots,\boldsymbol{u_n}$
uniformly at random on $\mathbb{S}^{d-1}$; then, for each triple $i,j,k \in
[n]$, add $\{i,j,k\}$ and all of its subsets to $X$ if and only if
$\langle{\boldsymbol{u_i},\boldsymbol{u_j}}\rangle \ge \tau,
\langle{\boldsymbol{u_i},\boldsymbol{u_k}}\rangle \ge \tau$, and $\langle
\boldsymbol{u_j}, \boldsymbol{u_k}\rangle \ge \tau$. We prove that for every
$\varepsilon &amp;gt; 0$, there exists a choice of $d = \Theta(\log n)$ and $\tau =
\tau(\varepsilon,d)$ so that with high probability, $X$ is a high-dimensional
expander of average degree $n^\varepsilon$ in which each $1$-link has spectral
gap bounded away from $\frac{1}{2}$.
&lt;/p&gt;
&lt;p&gt;To our knowledge, this is the first demonstration of a natural distribution
over $2$-dimensional expanders of arbitrarily small polynomial average degree
and spectral link expansion better than $\frac{1}{2}$. All previously known
constructions are algebraic. This distribution also furnishes an example of
simplicial complexes for which the trickle-down theorem is nearly tight.
&lt;/p&gt;
&lt;p&gt;En route, we prove general bounds on the spectral expansion of random induced
subgraphs of arbitrary vertex transitive graphs, which may be of independent
interest. For example, one consequence is an almost-sharp bound on the second
eigenvalue of random $n$-vertex geometric graphs on $\mathbb{S}^{d-1}$, which
was previously unknown for most $n,d$ pairs.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: An experimental study of algorithms for obtaining a singly connected subgraph</title>
    <link href="http://arxiv.org/abs/2210.00243"/>
    <id>http://arxiv.org/abs/2210.00243</id>
    <updated>2022-10-04T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zahloote_A/0/1/0/all/0/1&quot;&gt;Ahmed Zahloote&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Saleh_A/0/1/0/all/0/1&quot;&gt;Al-hasan Saleh&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ghanem_A/0/1/0/all/0/1&quot;&gt;Ayman Ghanem&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hasan_H/0/1/0/all/0/1&quot;&gt;Hiba Hasan&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Dreibaty_A/0/1/0/all/0/1&quot;&gt;Asem Dreibaty&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Abodaraa_A/0/1/0/all/0/1&quot;&gt;Ali Abodaraa&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Suleiman_N/0/1/0/all/0/1&quot;&gt;Nermeen Suleiman&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Naameh_N/0/1/0/all/0/1&quot;&gt;Nour Naameh&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ibrahim_A/0/1/0/all/0/1&quot;&gt;Ali Ibrahim&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+mahfoud_Z/0/1/0/all/0/1&quot;&gt;Zeinab mahfoud&lt;/a&gt;&lt;/p&gt;&lt;p&gt;\begin{abstract}
&lt;/p&gt;
&lt;p&gt;\normalsize{\noindent A directed graph $G = (V,E)$ is singly connected if for
any two vertices $v,u \in V$, the directed graph $G$ contains at most one
simple path from $v$ to $u$. In this paper, we study different algorithms to
find a feasible but necessarily optimal solution to the following problem.
Given a directed acyclic graph $G=(V,E)$, find a subset $H \subseteq E$ of
minimum size such that the subgraph $(V,E \setminus H)$ is singly connected.
Moreover, we prove that this problem can be solved in polynomial time for a
special kind of directed graphs.}
&lt;/p&gt;
&lt;p&gt;\end{abstract}
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: On The Relative Error of Random Fourier Features for Preserving Kernel Distance</title>
    <link href="http://arxiv.org/abs/2210.00244"/>
    <id>http://arxiv.org/abs/2210.00244</id>
    <updated>2022-10-04T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Cheng_K/0/1/0/all/0/1&quot;&gt;Kuan Cheng&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jiang_S/0/1/0/all/0/1&quot;&gt;Shaofeng H.-C. Jiang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wei_L/0/1/0/all/0/1&quot;&gt;Luojian Wei&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wei_Z/0/1/0/all/0/1&quot;&gt;Zhide Wei&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The method of random Fourier features (RFF), proposed in a seminal paper by
Rahimi and Recht (NIPS&#39;07), is a powerful technique to find approximate
low-dimensional representations of points in (high-dimensional) kernel space,
for shift-invariant kernels. While RFF has been analyzed under various notions
of error guarantee, the ability to preserve the kernel distance with
\emph{relative} error is less understood. We show that for a significant range
of kernels, including the well-known Laplacian kernels, RFF cannot approximate
the kernel distance with small relative error using low dimensions. We
complement this by showing as long as the shift-invariant kernel is analytic,
RFF with $\mathrm{poly}(\epsilon^{-1} \log n)$ dimensions achieves
$\epsilon$-relative error for pairwise kernel distance of $n$ points, and the
dimension bound is improved to $\mathrm{poly}(\epsilon^{-1}\log k)$ for the
specific application of kernel $k$-means. Finally, going beyond RFF, we make
the first step towards data-oblivious dimension-reduction for general
shift-invariant kernels, and we obtain a similar $\mathrm{poly}(\epsilon^{-1}
\log n)$ dimension bound for Laplacian kernels. We also validate the
dimension-error tradeoff of our methods on simulated datasets, and they
demonstrate superior performance compared with other popular methods including
random-projection and Nystr\&quot;{o}m methods.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: A Novel Parallel Triangle Counting Algorithm with Reduced Communication</title>
    <link href="http://arxiv.org/abs/2210.00389"/>
    <id>http://arxiv.org/abs/2210.00389</id>
    <updated>2022-10-04T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Bader_D/0/1/0/all/0/1&quot;&gt;David A. Bader&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Li_F/0/1/0/all/0/1&quot;&gt;Fuhuan Li&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ganeshan_A/0/1/0/all/0/1&quot;&gt;Anya Ganeshan&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gundogdu_A/0/1/0/all/0/1&quot;&gt;Ahmet Gundogdu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lew_J/0/1/0/all/0/1&quot;&gt;Jason Lew&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Rodriguez_O/0/1/0/all/0/1&quot;&gt;Oliver Alvarado Rodriguez&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Du_Z/0/1/0/all/0/1&quot;&gt;Zhihui Du&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Counting and finding triangles in graphs is often used in real-world
analytics for characterizing the cohesiveness and identifying communities in
graphs. In this paper, we present novel sequential and parallel triangle
counting algorithms based on identifying horizontal-edges in a breadth-first
search (BFS) traversal of the graph. The BFS allows our algorithm to
drastically reduce the number of edges examined for set intersections. Our new
approach is the first communication-optimal parallel algorithm that
asymptotically reduces the communication on massive graphs such as from real
social networks and synthetic graphs from the Graph500 Benchmark. In our
estimate from massive-scale Graph500 graphs, our new algorithms reduces the
communication by 21x on a scale 36 and by 176x on a scale 42. Because
communication is known to be the dominant cost of parallel triangle counting,
our new parallel algorithm, to our knowledge, is now the fastest method for
counting triangles in large graphs.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Aaron Roth: Batch Multivalid Conformal Prediction</title>
    <link href="http://aaronsadventures.blogspot.com/2022/10/batch-multivalid-conformal-prediction.html"/>
    <id>tag:blogger.com,1999:blog-25562705.post-6329066924272920511</id>
    <updated>2022-10-03T19:07:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;div class=&quot;WordSection1&quot;&gt; &lt;p class=&quot;MsoTitle&quot;&gt;Our new paper gives very simple algorithms that promise &quot;multivalid&quot; conformal prediction sets for exchangable data. This means they are valid not just marginally, but also conditionally on (intersecting!) group membership, and in a threshold calibrated manner. I&#39;ll explain!&lt;/p&gt; &lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh3EKtKXuV99Nmc6HVriSK04I5m8lBmdIyLnkEFE_SsoT4jqQk0I3S8iLrYI-Lw29dbw22OU17Nr2oB0tF-wCTIPHWRZjU1JtGm_qTsOtxqVAGXTQVrsJne1U_LlC493uq-KZHmvIrTfuLKMufwqFhiEHLhMXD8lwLrs1epcqKOb2tHmnRv4Q/s1537/multivalidabstract.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;1317&quot; data-original-width=&quot;1537&quot; height=&quot;274&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh3EKtKXuV99Nmc6HVriSK04I5m8lBmdIyLnkEFE_SsoT4jqQk0I3S8iLrYI-Lw29dbw22OU17Nr2oB0tF-wCTIPHWRZjU1JtGm_qTsOtxqVAGXTQVrsJne1U_LlC493uq-KZHmvIrTfuLKMufwqFhiEHLhMXD8lwLrs1epcqKOb2tHmnRv4Q/s320/multivalidabstract.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 143%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 35.55pt; margin-top: 5.3pt; margin: 5.3pt 35.55pt 0in 29.35pt;&quot;&gt;Instead of making point predictions, we can quantify uncertainty by producing &quot;prediction sets&quot; --- sets of labels that contain the true label with (say) 90% probability. The problem is, in a k label prediction problem, there are $2^k$ prediction sets. The curse of dimensionality!&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhXZ28g9ua1ZIrtpLdSVI31ywp6_zVubYv6xiqFGBvbfqG87j35gd7fDg9BdQH9XWsfAVOctL7Fvd8uu33NQLVZF0KckbYym_L9PnCDWN9KChVCrXG0fQmbgcgyItO15Sw_Ad2GSrzLg17JAwPE53edn8gidmX73z4nzsKg5SewR4k6jROwAA/s1770/predictionsets.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;684&quot; data-original-width=&quot;1770&quot; height=&quot;124&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhXZ28g9ua1ZIrtpLdSVI31ywp6_zVubYv6xiqFGBvbfqG87j35gd7fDg9BdQH9XWsfAVOctL7Fvd8uu33NQLVZF0KckbYym_L9PnCDWN9KChVCrXG0fQmbgcgyItO15Sw_Ad2GSrzLg17JAwPE53edn8gidmX73z4nzsKg5SewR4k6jROwAA/s320/predictionsets.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;span style=&quot;font-family: &amp;quot;Georgia&amp;quot;,serif; font-size: 11pt; line-height: 143%; mso-ansi-language: EN-US; mso-bidi-font-family: Georgia; mso-bidi-language: AR-SA; mso-fareast-font-family: Georgia; mso-fareast-language: EN-US;&quot;&gt;&lt;br clear=&quot;all&quot; style=&quot;break-before: page; mso-break-type: section-break; page-break-before: always;&quot; /&gt;&lt;/span&gt; &lt;div class=&quot;WordSection2&quot;&gt; &lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 143%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 35.55pt; margin-top: 4.2pt; margin: 4.2pt 35.55pt 0in 29.35pt;&quot;&gt;One of the great ideas of conformal prediction is that if we can find a good &quot;non-conformity score&quot; s(x,y) telling us how unusual a label y seems for features x, we can focus on a 1-parameter family of prediction sets $P(x, t) = \{y : s(x,y) &amp;lt; t\}$. Now the problem is just to find $t$.&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt; &lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 143%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 33.35pt; margin-top: .05pt; margin: 0.05pt 33.35pt 0in 29.35pt;&quot;&gt;The usual recipe in split conformal prediction is to use a holdout set of points (x,y) to find a $t$ such that $\Pr[s(x,y) \leq t] = 0.9$. Then over the randomness of new examples (x,y), we have that $\Pr[y \in P(x,t)] = 0.9$. This is a -marginal- guarantee: the randomness is over x and y.&lt;/p&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 143%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 33.35pt; margin-top: .05pt; margin: 0.05pt 33.35pt 0in 29.35pt;&quot;&gt;&lt;span style=&quot;font-size: 8.5pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; &lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 143%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 33.35pt; margin-top: 0in; margin: 0in 33.35pt 0in 29.35pt;&quot;&gt;Suppose we have a bunch of groups (subsets of the feature space) g that we think are prediction-relevant? g could record e.g. demographic or other attributes of people. We might want to promise $\Pr[y \in P(x,t) | x \in g] = 0.9$. Vanilla split conformal doesn&#39;t promise this.&amp;nbsp;&lt;/p&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 143%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 33.35pt; margin-top: 0in; margin: 0in 33.35pt 0in 29.35pt;&quot;&gt;&lt;span style=&quot;font-size: 8.5pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; &lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEisVkQNmcRBIeSOA-116B_i4Oc3mjytbm_1LNtF4E-Q9rDTPV6yXDPK-UVXnfQxqH0bnDm09TEwnLrshka-uu5ubYsWtlxqM5s_0m8AqDhQ3XJlKhCUyJLkdnOgs2sYMrl55hUApFttjdPwWLl5oC80vl1pbFcCb8hBZvk6qsMtxx_hSJg3HQ/s794/groups.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;605&quot; data-original-width=&quot;794&quot; height=&quot;244&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEisVkQNmcRBIeSOA-116B_i4Oc3mjytbm_1LNtF4E-Q9rDTPV6yXDPK-UVXnfQxqH0bnDm09TEwnLrshka-uu5ubYsWtlxqM5s_0m8AqDhQ3XJlKhCUyJLkdnOgs2sYMrl55hUApFttjdPwWLl5oC80vl1pbFcCb8hBZvk6qsMtxx_hSJg3HQ/s320/groups.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 142%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 35.55pt; margin-top: 0in; margin: 0in 35.55pt 0in 29.35pt;&quot;&gt;&lt;br /&gt;&lt;br clear=&quot;ALL&quot; style=&quot;mso-ignore: vglayout;&quot; /&gt;&lt;/p&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 142%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 35.55pt; margin-top: 0in; margin: 0in 35.55pt 0in 29.35pt;&quot;&gt;If the groups g are disjoint, you could use a different threshold $t_g$ for each group --- but what if a single example can be a member of multiple groups? You can be conservative and use the largest threshold $t_g$ among all groups g that x is a member of, but this will over-cover.&lt;/p&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-top: 0.55pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; mso-bidi-font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 141%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 35.55pt; margin-top: 5.25pt; margin: 5.25pt 35.55pt 0in 29.35pt;&quot;&gt;The first insight here is that it no longer suffices to find a single threshold $t$ --- we need to find a function f mapping examples to thresholds, and to consider prediction sets $P(x,f(x)) =\{y : s(x,y) &amp;lt; f(x)\}$. The problem is to use a calibration set to train the function f.&amp;nbsp;&lt;/p&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 141%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 35.55pt; margin-top: 5.25pt; margin: 5.25pt 35.55pt 0in 29.35pt;&quot;&gt;&lt;span style=&quot;font-size: 7.5pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 143%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 32.05pt; margin-top: 5.3pt; margin: 5.3pt 32.05pt 0in 29.35pt;&quot;&gt;Our first algorithm is super simple and given any set of (intersecting!) groups G, trains f such that for every $g \in G$, we have that for new examples, $\Pr[y \in P(x,f(x))|g\in G] = 0.9$. How? f just minimizes pinball loss over linear combinations of group indicator functions $g \in G$.&amp;nbsp;&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi8JzcMlNLjaC3LAiu5YCW4uHHy8cvOh4Ue4T1V1pCslq3QNVH_IdAB61cAK64lvSQ_Gd03lMQF3lQLodUD0EypN4H1CEPe1gHfN0Q7KEmRtqCIsR1Si56jHRRDaqcg4r5QSlyB4TdR3z3mmXShBCN4wo4z8aHcepGwFII8ALsZ3gQlnY-4cA/s2394/alg1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;554&quot; data-original-width=&quot;2394&quot; height=&quot;74&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi8JzcMlNLjaC3LAiu5YCW4uHHy8cvOh4Ue4T1V1pCslq3QNVH_IdAB61cAK64lvSQ_Gd03lMQF3lQLodUD0EypN4H1CEPe1gHfN0Q7KEmRtqCIsR1Si56jHRRDaqcg4r5QSlyB4TdR3z3mmXShBCN4wo4z8aHcepGwFII8ALsZ3gQlnY-4cA/s320/alg1.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 143%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 32.05pt; margin-top: 5.3pt; margin: 5.3pt 32.05pt 0in 29.35pt;&quot;&gt;&lt;br /&gt;&lt;/p&gt; &lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 143%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 35.55pt; margin-top: 5.25pt; margin: 5.25pt 35.55pt 0in 29.35pt;&quot;&gt;Now that we are using different thresholds f(x) for different x, you might worry that the threshold f(x) itself is correlated with coverage. To make sure its not, we can also ask for threshold calibration: $\Pr[y \in P(x,f(x)) | x \in g, f(x) = t] = 0.9$ for all $g \in G$ and all t.&amp;nbsp;&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;WordSection3&quot;&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 143%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 35.55pt; margin-top: 4.2pt; margin: 4.2pt 35.55pt 0in 29.35pt;&quot;&gt;&lt;span style=&quot;letter-spacing: -0.133333px;&quot;&gt;Our second algorithm trains f so that it has both group conditional and threshold calibrated coverage - what we call &quot;full multivalid&quot; coverage. It is also simple: It iteratively finds pairs $(g,t)$ on which multivalid coverage is violated empirically, and corrects the violations.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 143%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 35.55pt; margin-top: 4.2pt; margin: 4.2pt 35.55pt 0in 29.35pt;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgHYwLrvyFFbgNPysBs_dWndxmHnu-6_RmtqALakp9Z5QcynlqWlJofTmlj_jxZGB0Y2Jcb8NOyppsr-j_qOlTCHZ06770aics97nYxTsjjOH-kZBS80hcO9gdLU9lV-UMHCQijjiGM5CQttlmFy8Gay-gZv9v9iaCIOF5ASRvCdZgKgOLWNA/s2401/alg2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;960&quot; data-original-width=&quot;2401&quot; height=&quot;128&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgHYwLrvyFFbgNPysBs_dWndxmHnu-6_RmtqALakp9Z5QcynlqWlJofTmlj_jxZGB0Y2Jcb8NOyppsr-j_qOlTCHZ06770aics97nYxTsjjOH-kZBS80hcO9gdLU9lV-UMHCQijjiGM5CQttlmFy8Gay-gZv9v9iaCIOF5ASRvCdZgKgOLWNA/s320/alg2.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;span style=&quot;mso-font-width: 105%;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;p&gt;&lt;/p&gt; &lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-top: 0.55pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; mso-bidi-font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 141%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 35.55pt; margin-top: 5.25pt; margin: 5.25pt 35.55pt 0in 29.35pt;&quot;&gt;This&lt;span style=&quot;letter-spacing: -0.6pt;&quot;&gt; &lt;/span&gt;is&lt;span style=&quot;letter-spacing: -0.55pt;&quot;&gt; &lt;/span&gt;the&lt;span style=&quot;letter-spacing: -0.6pt;&quot;&gt; &lt;/span&gt;batch&lt;span style=&quot;letter-spacing: -0.55pt;&quot;&gt; &lt;/span&gt;analogue&lt;span style=&quot;letter-spacing: -0.55pt;&quot;&gt;&lt;/span&gt;of&lt;span style=&quot;letter-spacing: -0.6pt;&quot;&gt; &lt;/span&gt;what&lt;span style=&quot;letter-spacing: -0.55pt;&quot;&gt; &lt;/span&gt;we&lt;span style=&quot;letter-spacing: -0.6pt;&quot;&gt; &lt;/span&gt;did&lt;span style=&quot;letter-spacing: -0.55pt;&quot;&gt; &lt;/span&gt;in&lt;span style=&quot;letter-spacing: -0.55pt;&quot;&gt; &lt;/span&gt;our&lt;span style=&quot;letter-spacing: -0.6pt;&quot;&gt; &lt;/span&gt;NeurIPS&lt;span style=&quot;letter-spacing: -0.55pt;&quot;&gt;&lt;/span&gt;2022&lt;span style=&quot;letter-spacing: -0.6pt;&quot;&gt; &lt;/span&gt;paper&lt;span style=&quot;letter-spacing: -0.55pt;&quot;&gt; &lt;/span&gt;in&lt;span style=&quot;letter-spacing: -0.55pt;&quot;&gt; &lt;/span&gt;the&lt;span style=&quot;letter-spacing: -0.6pt;&quot;&gt; &lt;/span&gt;sequential &lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;setting, which I wrote about here:&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.133333px;&quot;&gt;&lt;a href=&quot;https://aaronsadventures.blogspot.com/2022/06/practical-robust-and-equitable.html&quot;&gt;https://aaronsadventures.blogspot.com/2022/06/practical-robust-and-equitable.html&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;The&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;sequential&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;setting&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;is&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;more&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;difficult&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;many&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;respects&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;(no&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;need&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;assume&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;exchangable &lt;/span&gt;data!) but it requires labels at test time. Our new algorithms don&#39;t.&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;WordSection4&quot;&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 143%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 35.55pt; margin-top: 4.2pt; margin: 4.2pt 35.55pt 0in 29.35pt;&quot;&gt;&lt;br clear=&quot;ALL&quot; style=&quot;mso-ignore: vglayout;&quot; /&gt;&lt;span style=&quot;mso-font-width: 105%;&quot;&gt;Both&lt;span style=&quot;letter-spacing: -0.35pt;&quot;&gt; &lt;/span&gt;algorithms&lt;span style=&quot;letter-spacing: -0.35pt;&quot;&gt; &lt;/span&gt;are&lt;span style=&quot;letter-spacing: -0.35pt;&quot;&gt; &lt;/span&gt;very&lt;span style=&quot;letter-spacing: -0.35pt;&quot;&gt; &lt;/span&gt;performant,&lt;span style=&quot;letter-spacing: -0.35pt;&quot;&gt; &lt;/span&gt;taking&lt;span style=&quot;letter-spacing: -0.35pt;&quot;&gt; &lt;/span&gt;a&lt;span style=&quot;letter-spacing: -0.35pt;&quot;&gt; &lt;/span&gt;couple&lt;span style=&quot;letter-spacing: -0.35pt;&quot;&gt;&lt;/span&gt;of&lt;span style=&quot;letter-spacing: -0.35pt;&quot;&gt; &lt;/span&gt;seconds&lt;span style=&quot;letter-spacing: -0.35pt;&quot;&gt; &lt;/span&gt;to&lt;span style=&quot;letter-spacing: -0.35pt;&quot;&gt; &lt;/span&gt;train&lt;span style=&quot;letter-spacing: -0.35pt;&quot;&gt; &lt;/span&gt;on&lt;span style=&quot;letter-spacing: -0.35pt;&quot;&gt; &lt;/span&gt;thousands&lt;span style=&quot;letter-spacing: -0.35pt;&quot;&gt; &lt;/span&gt;of &lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;points.&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;Our&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;first&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;algorithm&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;gets&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;nearly&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;perfect&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;group&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;conditional&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;coverage&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;on&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;real&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;datasets, &lt;/span&gt;and&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt; &lt;/span&gt;our&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt; &lt;/span&gt;second&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt; &lt;/span&gt;is&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt; &lt;/span&gt;never&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt; &lt;/span&gt;off&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt; &lt;/span&gt;by&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt; &lt;/span&gt;more&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt; &lt;/span&gt;than&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt; &lt;/span&gt;1%,&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt; &lt;/span&gt;both&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt; &lt;/span&gt;improving&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt; &lt;/span&gt;significantly&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt; &lt;/span&gt;on&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt; &lt;/span&gt;baselines.&lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt; &lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-top: 0.55pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; mso-bidi-font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt; &lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiIMmyM-Xs7OehV0bZrwvyCHZNuKGpau7oSpB-HgOZSTSJzxO867axlRNWNyw1-ljD9TAc7t8RcYfA6CVTvEQ3O18j4MXx9tMqa52rqIm00sWxMvi6zpgENv6BNwAP2RobfGd0t1qc5YLGg9ZkjObHzByiWPmMA_975aa9Y_4Ci5gwWYeIo8A/s2134/coverage.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;691&quot; data-original-width=&quot;2134&quot; height=&quot;104&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiIMmyM-Xs7OehV0bZrwvyCHZNuKGpau7oSpB-HgOZSTSJzxO867axlRNWNyw1-ljD9TAc7t8RcYfA6CVTvEQ3O18j4MXx9tMqa52rqIm00sWxMvi6zpgENv6BNwAP2RobfGd0t1qc5YLGg9ZkjObHzByiWPmMA_975aa9Y_4Ci5gwWYeIo8A/s320/coverage.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 142%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 35.55pt; margin-top: 5.25pt; margin: 5.25pt 35.55pt 0in 29.35pt;&quot;&gt;&lt;br /&gt;&lt;br clear=&quot;ALL&quot; style=&quot;mso-ignore: vglayout;&quot; /&gt;&lt;span style=&quot;mso-font-width: 105%;&quot;&gt;Our&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;second&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;algorithm&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;gets&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;better&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;threshold&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;calibration&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;than&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;our&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;first&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;(and&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;compared&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;to &lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;baselines),&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;as&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;expected.&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;But&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;perhaps&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;surprisingly,&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;our&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;first&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;algorithm&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;performs&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;quite&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;well&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.2pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;on &lt;/span&gt;calibration&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;tests&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt;&lt;/span&gt;---&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;significantly&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;beating&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt;&lt;/span&gt;baselines&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;---&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;despite&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt;&lt;/span&gt;no&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;formal&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;calibration &lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;guarantees.&lt;/span&gt;&lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt; &lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-top: 0.55pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; mso-bidi-font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhs4s-a1gUCk87Lv9LdRRAsj4x-7rGlttiAAtV1D8cFpBsQYjZMabwEQu7TXKQ3vfHNFWkJp0Ijajd-C_Wg6qjxEFoY43_Nu-U-PtPofaiXDR-s11bgMT27EzdBz4MR2nYrfnzQy3A2qCgoE-HUYINyJBEUiwHvNIJs11_S9812aA3-kih09w/s1037/quantilecalibration.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;707&quot; data-original-width=&quot;1037&quot; height=&quot;218&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhs4s-a1gUCk87Lv9LdRRAsj4x-7rGlttiAAtV1D8cFpBsQYjZMabwEQu7TXKQ3vfHNFWkJp0Ijajd-C_Wg6qjxEFoY43_Nu-U-PtPofaiXDR-s11bgMT27EzdBz4MR2nYrfnzQy3A2qCgoE-HUYINyJBEUiwHvNIJs11_S9812aA3-kih09w/s320/quantilecalibration.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;p&gt;&lt;/p&gt; &lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 143%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 0in; margin-top: 5.25pt; margin: 5.25pt 0in 0in 29.35pt;&quot;&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;&lt;br /&gt;Our&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.15pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;techniques&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.15pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;come&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.15pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.15pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;the&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.15pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;algorithmic&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.15pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;fairness&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.15pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;literature&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.15pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;---&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.15pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;we&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.15pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;train&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.15pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;f&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.15pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.15pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;satisfy&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.15pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;quantile &lt;/span&gt;analogues&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;of&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;multicalibration&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;and&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;multi-accuracy.&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;If&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;you&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;haven&#39;t&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt;&lt;/span&gt;been&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;paying&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;attention&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;to algorithmic&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;fairness,&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;maybe&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt;&lt;/span&gt;you&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;should&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;start&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt;&lt;/span&gt;---&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;there&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;is&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;interesting&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;stuff&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt;&lt;/span&gt;going&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;on&lt;span style=&quot;letter-spacing: -0.15pt;&quot;&gt; &lt;/span&gt;there! Check out e.g. the &lt;a href=&quot;https://toc4fairness.org/&quot;&gt;Simons Collaboration on Algorithmic Fairness&lt;/a&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt; &lt;/div&gt; &lt;span style=&quot;font-family: &amp;quot;Georgia&amp;quot;,serif; font-size: 11pt; line-height: 143%; mso-ansi-language: EN-US; mso-bidi-font-family: Georgia; mso-bidi-language: AR-SA; mso-fareast-font-family: Georgia; mso-fareast-language: EN-US;&quot;&gt;&lt;br clear=&quot;all&quot; style=&quot;break-before: page; mso-break-type: section-break; page-break-before: always;&quot; /&gt;&lt;/span&gt; &lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 141%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 32.05pt; margin-top: 4.2pt; margin: 4.2pt 32.05pt 0in 29.35pt;&quot;&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;This&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.25pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;is&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.25pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;joint&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.25pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;work&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.25pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;with&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.25pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;the&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.25pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;excellent&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.333333px;&quot;&gt;&amp;nbsp;Chris Jung&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.25pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;Georgy&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.25pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;Noarov,&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.25pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;and&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.25pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;Ramya&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.25pt; mso-font-width: 105%;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;Ramalingam.&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg8-_Ambo1aG8-QpLWxzz-znP2pja9XCi2p9bnOtORWj6VtuZKaDEPbuKBem0BV6My-f1fG2hroXMIK4aR9gs4bRwcTOprGcX6r2sy01kkuaSQ7EFaGQTJPOARTz1gZTU2I8SbSrOaP5Yby1Z-wYiGAmoWHlddFvUAiAwBDsFV_5C0zsI2hDA/s1043/coauthors.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;366&quot; data-original-width=&quot;1043&quot; height=&quot;112&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg8-_Ambo1aG8-QpLWxzz-znP2pja9XCi2p9bnOtORWj6VtuZKaDEPbuKBem0BV6My-f1fG2hroXMIK4aR9gs4bRwcTOprGcX6r2sy01kkuaSQ7EFaGQTJPOARTz1gZTU2I8SbSrOaP5Yby1Z-wYiGAmoWHlddFvUAiAwBDsFV_5C0zsI2hDA/s320/coauthors.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 141%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 32.05pt; margin-top: 4.2pt; margin: 4.2pt 32.05pt 0in 29.35pt;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;line-height: 141%; margin-bottom: 0in; margin-left: 29.35pt; margin-right: 32.05pt; margin-top: 4.2pt; margin: 4.2pt 32.05pt 0in 29.35pt;&quot;&gt;&lt;span style=&quot;letter-spacing: -0.1pt; mso-font-width: 105%;&quot;&gt;&lt;/span&gt;Our paper is here: &lt;a href=&quot;https://arxiv.org/abs/2209.15145&quot;&gt;https://arxiv.org/abs/2209.15145&lt;/a&gt;&amp;nbsp;and&lt;span style=&quot;letter-spacing: -0.5pt;&quot;&gt; &lt;/span&gt;our&lt;span style=&quot;letter-spacing: -0.5pt;&quot;&gt; &lt;/span&gt;code&lt;span style=&quot;letter-spacing: -0.45pt;&quot;&gt; &lt;/span&gt;is&lt;span style=&quot;letter-spacing: -0.5pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.1pt;&quot;&gt;here:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;letter-spacing: -0.133333px;&quot;&gt;&lt;a href=&quot;https://github.com/ProgBelarus/BatchMultivalidConformal&quot;&gt;https://github.com/ProgBelarus/BatchMultivalidConformal&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-left: 29.35pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt; &lt;br /&gt; &lt;p class=&quot;MsoBodyText&quot;&gt;&lt;span style=&quot;font-size: 10pt; mso-bidi-font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By Aaron&lt;/p&gt;
  </content>
    <author>
      <name>Aaron Roth</name>
      <uri>http://aaronsadventures.blogspot.com/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Pure-Circuit: Strong Inapproximability for PPAD</title>
    <link href="http://arxiv.org/abs/2209.15149"/>
    <id>http://arxiv.org/abs/2209.15149</id>
    <updated>2022-10-03T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Deligkas_A/0/1/0/all/0/1&quot;&gt;Argyrios Deligkas&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fearnley_J/0/1/0/all/0/1&quot;&gt;John Fearnley&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hollender_A/0/1/0/all/0/1&quot;&gt;Alexandros Hollender&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Melissourgos_T/0/1/0/all/0/1&quot;&gt;Themistoklis Melissourgos&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The current state-of-the-art methods for showing inapproximability in PPAD
arise from the $\varepsilon$-Generalized-Circuit ($\varepsilon$-GCircuit)
problem. Rubinstein (2018) showed that there exists a small unknown constant
$\varepsilon$ for which $\varepsilon$-GCircuit is PPAD-hard, and subsequent
work has shown hardness results for other problems in PPAD by using
$\varepsilon$-GCircuit as an intermediate problem.
&lt;/p&gt;
&lt;p&gt;We introduce Pure-Circuit, a new intermediate problem for PPAD, which can be
thought of as $\varepsilon$-GCircuit pushed to the limit as $\varepsilon
\rightarrow 1$, and we show that the problem is PPAD-complete. We then prove
that $\varepsilon$-GCircuit is PPAD-hard for all $\varepsilon &amp;lt; 0.1$ by a
reduction from Pure-Circuit, and thus strengthen all prior work that has used
GCircuit as an intermediate problem from the existential-constant regime to the
large-constant regime.
&lt;/p&gt;
&lt;p&gt;We show that stronger inapproximability results can be derived by reducing
directly from Pure-Circuit. In particular, we prove tight inapproximability
results for computing $\varepsilon$-well-supported Nash equilibria in
two-action polymatrix games, as well as for finding approximate equilibria in
threshold games.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Tight Inapproximability for Graphical Games</title>
    <link href="http://arxiv.org/abs/2209.15151"/>
    <id>http://arxiv.org/abs/2209.15151</id>
    <updated>2022-10-03T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Deligkas_A/0/1/0/all/0/1&quot;&gt;Argyrios Deligkas&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fearnley_J/0/1/0/all/0/1&quot;&gt;John Fearnley&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hollender_A/0/1/0/all/0/1&quot;&gt;Alexandros Hollender&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Melissourgos_T/0/1/0/all/0/1&quot;&gt;Themistoklis Melissourgos&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We provide a complete characterization for the computational complexity of
finding approximate equilibria in two-action graphical games. We consider the
two most well-studied approximation notions: $\varepsilon$-Nash equilibria
($\varepsilon$-NE) and $\varepsilon$-well-supported Nash equilibria
($\varepsilon$-WSNE), where $\varepsilon \in [0,1]$. We prove that computing an
$\varepsilon$-NE is PPAD-complete for any constant $\varepsilon &amp;lt; 1/2$, while a
very simple algorithm (namely, letting all players mix uniformly between their
two actions) yields a $1/2$-NE. On the other hand, we show that computing an
$\varepsilon$-WSNE is PPAD-complete for any constant $\varepsilon &amp;lt; 1$, while a
$1$-WSNE is trivial to achieve, because any strategy profile is a $1$-WSNE. All
of our lower bounds immediately also apply to graphical games with more than
two actions per player.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: A Multivariate Complexity Analysis of Qualitative Reasoning Problems</title>
    <link href="http://arxiv.org/abs/2209.15275"/>
    <id>http://arxiv.org/abs/2209.15275</id>
    <updated>2022-10-03T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Eriksson_L/0/1/0/all/0/1&quot;&gt;Leif Eriksson&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lagerkvist_V/0/1/0/all/0/1&quot;&gt;Victor Lagerkvist&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Qualitative reasoning is an important subfield of artificial intelligence
where one describes relationships with qualitative, rather than numerical,
relations. Many such reasoning tasks, e.g., Allen&#39;s interval algebra, can be
solved in $2^{O(n \cdot \log n)}$ time, but single-exponential running times
$2^{O(n)}$ are currently far out of reach. In this paper we consider
single-exponential algorithms via a multivariate analysis consisting of a
fine-grained parameter $n$ (e.g., the number of variables) and a coarse-grained
parameter $k$ expected to be relatively small. We introduce the classes FPE and
XE of problems solvable in $f(k) \cdot 2^{O(n)}$, respectively $f(k)^n$, time,
and prove several fundamental properties of these classes. We proceed by
studying temporal reasoning problems and (1) show that the Partially Ordered
Time problem of effective width $k$ is solvable in $16^{kn}$ time and is thus
included in XE, and (2) that the network consistency problem for Allen&#39;s
interval algebra with no interval overlapping with more than $k$ others is
solvable in $(2nk)^{2k} \cdot 2^{n}$ time and is included in FPE. Our
multivariate approach is in no way limited to these to specific problems and
may be a generally useful approach for obtaining single-exponential algorithms.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Broadening the Complexity-theoretic Analysis of Manipulative Attacks in Group Identification</title>
    <link href="http://arxiv.org/abs/2209.15396"/>
    <id>http://arxiv.org/abs/2209.15396</id>
    <updated>2022-10-03T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Junker_E/0/1/0/all/0/1&quot;&gt;Emil Junker&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In the Group Identification problem, we are given a set of individuals and
are asked to identify a socially qualified subset among them. Each individual
in the set has an opinion about who should be considered socially qualified.
There are several different rules that can be used to determine the socially
qualified subset based on these mutual opinions. In a manipulative attack, an
outsider attempts to exploit the way the used rule works, with the goal of
changing the outcome of the selection process to their liking.
&lt;/p&gt;
&lt;p&gt;In recent years, the complexity of group control and bribery based
manipulative attacks in Group Identification has been the subject of intense
research. However, the picture is far from complete, and there remain many open
questions related to what exactly makes certain problems hard, or certain rules
immune to some attacks.
&lt;/p&gt;
&lt;p&gt;Supplementing previous results, we examine the complexity of group
microbribery on so-called protective problem instances; that is, instances
where all individuals from the constructive target set are already socially
qualified initially. In addition, we study a relaxed variant of group control
by deleting individuals for the consent rules, the consensus-start-respecting
rule, and the liberal-start-respecting rule. Based on existing literature, we
also formalize three new social rules of the iterative consensus type, and we
provide a comprehensive complexity-theoretic analysis of group control and
bribery problems for these rules.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: P vs NP</title>
    <link href="http://arxiv.org/abs/2209.15410"/>
    <id>http://arxiv.org/abs/2209.15410</id>
    <updated>2022-10-03T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Tang_J/0/1/0/all/0/1&quot;&gt;Jian-Gang Tang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this paper, we discuss the $\mathcal{NP}$ problem using the Henkin&#39;s
Theory and the Herbrand Theory in the first-order logic, and prove that
$\mathcal{P}$ is a proper subset of $\mathcal{NP}$.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: An improved algorithm for Generalized \v{C}ech complex construction</title>
    <link href="http://arxiv.org/abs/2209.15574"/>
    <id>http://arxiv.org/abs/2209.15574</id>
    <updated>2022-10-03T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chu_J/0/1/0/all/0/1&quot;&gt;Jie Chu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Vejdemo_Johansson_M/0/1/0/all/0/1&quot;&gt;Mikael Vejdemo-Johansson&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ji_P/0/1/0/all/0/1&quot;&gt;Ping Ji&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this paper, we present an algorithm that computes the generalized \v{C}ech
complex for a finite set of disks where each may have a different radius in 2D
space. An extension of this algorithm is also proposed for a set of balls in 3D
space with different radius.
&lt;/p&gt;
&lt;p&gt;To compute a $k$-simplex, we leverage the computation performed in the round
of $(k-1)$-simplices such that we can reduce the number of potential candidates
to verify to improve the efficiency. An efficient verification method is
proposed to confirm if a $k$-simplex can be constructed on the basis of the
$(k-1)$-simplices. We demonstrate the performance with a comparison to some
closely related algorithms.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Optimal Query Complexities for Dynamic Trace Estimation</title>
    <link href="http://arxiv.org/abs/2209.15219"/>
    <id>http://arxiv.org/abs/2209.15219</id>
    <updated>2022-10-03T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Woodruff_D/0/1/0/all/0/1&quot;&gt;David P. Woodruff&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhang_F/0/1/0/all/0/1&quot;&gt;Fred Zhang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhang_Q/0/1/0/all/0/1&quot;&gt;Qiuyi Zhang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We consider the problem of minimizing the number of matrix-vector queries
needed for accurate trace estimation in the dynamic setting where our
underlying matrix is changing slowly, such as during an optimization process.
Specifically, for any $m$ matrices $A_1,...,A_m$ with consecutive differences
bounded in Schatten-$1$ norm by $\alpha$, we provide a novel binary tree
summation procedure that simultaneously estimates all $m$ traces up to
$\epsilon$ error with $\delta$ failure probability with an optimal query
complexity of $\widetilde{O}\left(m \alpha\sqrt{\log(1/\delta)}/\epsilon +
m\log(1/\delta)\right)$, improving the dependence on both $\alpha$ and $\delta$
from Dharangutte and Musco (NeurIPS, 2021). Our procedure works without
additional norm bounds on $A_i$ and can be generalized to a bound for the
$p$-th Schatten norm for $p \in [1,2]$, giving a complexity of
$\widetilde{O}\left(m \alpha\left(\sqrt{\log(1/\delta)}/\epsilon\right)^p +m
\log(1/\delta)\right)$.
&lt;/p&gt;
&lt;p&gt;By using novel reductions to communication complexity and
information-theoretic analyses of Gaussian matrices, we provide matching lower
bounds for static and dynamic trace estimation in all relevant parameters,
including the failure probability. Our lower bounds (1) give the first tight
bounds for Hutchinson&#39;s estimator in the matrix-vector product model with
Frobenius norm error even in the static setting, and (2) are the first
unconditional lower bounds for dynamic trace estimation, resolving open
questions of prior work.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Assortment Optimization Under the Multivariate MNL Model</title>
    <link href="http://arxiv.org/abs/2209.15220"/>
    <id>http://arxiv.org/abs/2209.15220</id>
    <updated>2022-10-03T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chen_X/0/1/0/all/0/1&quot;&gt;Xin Chen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Li_J/0/1/0/all/0/1&quot;&gt;Jiachun Li&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Li_M/0/1/0/all/0/1&quot;&gt;Menglong Li&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhao_T/0/1/0/all/0/1&quot;&gt;Tiancheng Zhao&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhou_Y/0/1/0/all/0/1&quot;&gt;Yuan Zhou&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study an assortment optimization problem under a multi-purchase choice
model in which customers choose a bundle of up to one product from each of two
product categories. Different bundles have different utilities and the bundle
price is the summation of the prices of products in it. For the uncapacitated
setting where any set of products can be offered, we prove that this problem is
strongly NP-hard. We show that an adjusted-revenue-ordered assortment provides
a 1/2-approximation. Furthermore, we develop an approximation framework based
on a linear programming relaxation of the problem and obtain a
0.74-approximation algorithm. This approximation ratio almost matches the
integrality gap of the linear program, which is proven to be at most 0.75. For
the capacitated setting, we prove that there does not exist a constant-factor
approximation algorithm assuming the Exponential Time Hypothesis. The same
hardness result holds for settings with general bundle prices or more than two
categories. Finally, we conduct numerical experiments on randomly generated
problem instances. The average approximation ratios of our algorithms are over
99%.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Deterministic Performance Guarantees for Bidirectional BFS on Real-World Networks</title>
    <link href="http://arxiv.org/abs/2209.15300"/>
    <id>http://arxiv.org/abs/2209.15300</id>
    <updated>2022-10-03T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Blasius_T/0/1/0/all/0/1&quot;&gt;Thomas Bl&amp;#xe4;sius&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wilhelm_M/0/1/0/all/0/1&quot;&gt;Marcus Wilhelm&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A common technique to speed up shortest path queries in graphs is to use a
bidirectional search, i.e., performing a forward search from the start and a
backward search from the destination until a common vertex on a shortest path
is found. In practice, this has a tremendous impact on the performance on some
real-world networks, while it only seems to save a constant factor on other
types of networks. Even though finding shortest paths is a ubiquitous problem,
there are only few studies attempting to understand the apparently asymptotic
speedups on some networks, using average case analysis on certain models for
real-world networks.
&lt;/p&gt;
&lt;p&gt;In this paper we give a new perspective on this, by analyzing deterministic
properties that permit theoretical analysis and that can easily be checked on
any particular instance. We prove that these parameters imply sublinear running
time for the bidirectional breadth-first search in several regimes, some of
which are tight. Moreover, we perform experiments on a large set of real-world
networks showing that our parameters capture the concept of practical running
time well.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Proportionally Fair Online Allocation of Public Goods with Predictions</title>
    <link href="http://arxiv.org/abs/2209.15305"/>
    <id>http://arxiv.org/abs/2209.15305</id>
    <updated>2022-10-03T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Banerjee_S/0/1/0/all/0/1&quot;&gt;Siddhartha Banerjee&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gkatzelis_V/0/1/0/all/0/1&quot;&gt;Vasilis Gkatzelis&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hossain_S/0/1/0/all/0/1&quot;&gt;Safwan Hossain&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jin_B/0/1/0/all/0/1&quot;&gt;Billy Jin&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Micha_E/0/1/0/all/0/1&quot;&gt;Evi Micha&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Shah_N/0/1/0/all/0/1&quot;&gt;Nisarg Shah&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We design online algorithms for the fair allocation of public goods to a set
of $N$ agents over a sequence of $T$ rounds and focus on improving their
performance using predictions. In the basic model, a public good arrives in
each round, the algorithm learns every agent&#39;s value for the good, and must
irrevocably decide the amount of investment in the good without exceeding a
total budget of $B$ across all rounds. The algorithm can utilize (potentially
inaccurate) predictions of each agent&#39;s total value for all the goods to
arrive. We measure the performance of the algorithm using a proportional
fairness objective, which informally demands that every group of agents be
rewarded in proportion to its size and the cohesiveness of its preferences.
&lt;/p&gt;
&lt;p&gt;In the special case of binary agent preferences and a unit budget, we show
that $O(\log N)$ proportional fairness can be achieved without using any
predictions, and that this is optimal even if perfectly accurate predictions
were available. However, for general preferences and budget no algorithm can
achieve better than $\Theta(T/B)$ proportional fairness without predictions. We
show that algorithms with (reasonably accurate) predictions can do much better,
achieving $\Theta(\log (T/B))$ proportional fairness. We also extend this
result to a general model in which a batch of $L$ public goods arrive in each
round and achieve $O(\log (\min(N,L) \cdot T/B))$ proportional fairness. Our
exact bounds are parametrized as a function of the error in the predictions and
the performance degrades gracefully with increasing errors.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Optimal Efficiency-Envy Trade-Off via Optimal Transport</title>
    <link href="http://arxiv.org/abs/2209.15416"/>
    <id>http://arxiv.org/abs/2209.15416</id>
    <updated>2022-10-03T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Yin_S/0/1/0/all/0/1&quot;&gt;Steven Yin&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kroer_C/0/1/0/all/0/1&quot;&gt;Christian Kroer&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We consider the problem of allocating a distribution of items to $n$
recipients where each recipient has to be allocated a fixed, prespecified
fraction of all items, while ensuring that each recipient does not experience
too much envy. We show that this problem can be formulated as a variant of the
semi-discrete optimal transport (OT) problem, whose solution structure in this
case has a concise representation and a simple geometric interpretation. Unlike
existing literature that treats envy-freeness as a hard constraint, our
formulation allows us to \emph{optimally} trade off efficiency and envy
continuously. Additionally, we study the statistical properties of the space of
our OT based allocation policies by showing a polynomial bound on the number of
samples needed to approximate the optimal solution from samples. Our approach
is suitable for large-scale fair allocation problems such as the blood donation
matching problem, and we show numerically that it performs well on a prior
realistic data simulator.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Local dominance unveils clusters in networks</title>
    <link href="http://arxiv.org/abs/2209.15497"/>
    <id>http://arxiv.org/abs/2209.15497</id>
    <updated>2022-10-03T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/physics/1/au:+Shang_F/0/1/0/all/0/1&quot;&gt;Fan Shang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/physics/1/au:+Chen_B/0/1/0/all/0/1&quot;&gt;Bingsheng Chen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/physics/1/au:+Expert_P/0/1/0/all/0/1&quot;&gt;Paul Expert&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/physics/1/au:+Lu_L/0/1/0/all/0/1&quot;&gt;Linyuan L&amp;#xfc;&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/physics/1/au:+Yang_A/0/1/0/all/0/1&quot;&gt;Ao Yang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/physics/1/au:+Stanley_H/0/1/0/all/0/1&quot;&gt;H.Eugene Stanley&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/physics/1/au:+Lambiotte_R/0/1/0/all/0/1&quot;&gt;Renaud Lambiotte&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/physics/1/au:+Evans_T/0/1/0/all/0/1&quot;&gt;Tim S.Evans&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/physics/1/au:+Li_R/0/1/0/all/0/1&quot;&gt;Ruiqi Li&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Clusters or communities can provide a coarse-grained description of complex
systems at multiple scales, but their detection remains challenging in
practice. Community detection methods often define communities as dense
subgraphs, or subgraphs with few connections in-between, via concepts such as
the cut, conductance, or modularity. Here we consider another perspective built
on the notion of local dominance, where low-degree nodes are assigned to the
basin of influence of high-degree nodes, and design an efficient algorithm
based on local information. Local dominance gives rises to community centers,
and uncovers local hierarchies in the network. Community centers have a larger
degree than their neighbors and are sufficiently distant from other centers.
The strength of our framework is demonstrated on synthesized and empirical
networks with ground-truth community labels. The notion of local dominance and
the associated asymmetric relations between nodes are not restricted to
community detection, and can be utilised in clustering problems, as we
illustrate on networks derived from vector data.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Foundation of Data Science - Virtual Talk Series: Wednesday Oct 5th 2022 — David Woodruff from CMU</title>
    <link href="https://dstheory.wordpress.com/2022/10/02/wednesday-oct-5th-2022-david-woodruff-from-cmu/"/>
    <id>http://dstheory.wordpress.com/?p=133</id>
    <updated>2022-10-02T10:01:30+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;The first &lt;a rel=&quot;noreferrer noopener&quot; href=&quot;https://sites.google.com/view/dstheory/home&quot; target=&quot;_blank&quot;&gt;Foundations of Data Science&lt;/a&gt; virtual talk of the season, and first of a series on recent advances in adversarially robust streaming, will take place on &lt;strong&gt;Wednesday, October 5th&lt;/strong&gt; at &lt;strong&gt;1:00 PM Pacific Time&lt;/strong&gt; (16:00 Eastern Time, 22:00 Central European Time, 20:00 UTC). &lt;a href=&quot;http://www.cs.cmu.edu/~dwoodruf/&quot;&gt;David Woodruff&lt;/a&gt; from&lt;strong&gt; CMU&lt;/strong&gt; will give us a survey about “Adversarially Robust Streaming Algorithms.&lt;em&gt;”&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;https://sites.google.com/view/dstheory&quot;&gt;Details of the talk (Zoom link) available here.&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;:  A streaming algorithm is given a sequence of items and seeks to compute or approximate some function of this sequence using a small amount of memory. A body of work has been developed over the last two decades, resulting in optimal streaming algorithms for a number of problems. I will start by surveying some of these problems. I will then investigate the adversarial robustness of streaming algorithms. An algorithm is considered robust if its performance guarantees hold even if the stream is chosen adaptively by an adversary that observes the outputs of the algorithm along the stream and can react in an online manner. While deterministic streaming algorithms are inherently robust, many central problems do not admit sublinear-space deterministic algorithms; on the other hand, space-efficient randomized algorithms for these problems are generally not adversarially robust. This raises the question of whether there exist efficient adversarially robust (randomized) streaming algorithms for these problems. I will survey work showing for a number of streaming problems, one can obtain algorithms that are adversarially robust with a small overhead in their memory requirements.&lt;/p&gt;



&lt;p&gt;&amp;nbsp;The series is supported by the &lt;a href=&quot;https://www.nsf.gov/awardsearch/showAward?AWD_ID=1934846&amp;amp;HistoricalAwards=false&quot;&gt;NSF HDR TRIPODS Grant 1934846&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By dstheory&lt;/p&gt;
  </content>
    <author>
      <name>Foundation of Data Science - Virtual Talk Series</name>
      <uri>https://dstheory.wordpress.com</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Scott Aaronson: Shorties!</title>
    <link href="https://scottaaronson.blog/?p=6736"/>
    <id>https://scottaaronson.blog/?p=6736</id>
    <updated>2022-09-30T18:32:09+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;(1) Since I didn&amp;#8217;t blog about this before: huge congratulations to David Deutsch, Charles Bennett, Gilles Brassard, and my former MIT colleague Peter Shor, and separately to Dan Spielman, for their well-deserved &lt;a href=&quot;https://breakthroughprize.org/News/73&quot;&gt;Breakthrough Prizes&lt;/a&gt;! Their contributions are all so epochal, so universally known to all of us in quantum information and theoretical computer science, that there&amp;#8217;s little I can write to gild the lily, except to say how much I&amp;#8217;ve learned by interacting with all five of them personally. I did enjoy &lt;a href=&quot;https://mobile.twitter.com/plinytheelder_t/status/1573080349512732672&quot;&gt;this comment&lt;/a&gt; on the Breakthrough Prizes by someone on Twitter: “As long as that loudmouth Scott Aaronson keeps getting ignored, I&amp;#8217;ll be happy.”&lt;/p&gt;



&lt;p&gt;(2) My former UT colleague Ila Fiete brought to my attention an &lt;a href=&quot;https://ostp-letter.github.io/&quot;&gt;important scientists&amp;#8217; petition to the White House&lt;/a&gt;.  The context is that the Biden administration has announced &lt;a href=&quot;https://www.whitehouse.gov/ostp/news-updates/2022/08/25/ostp-issues-guidance-to-make-federally-funded-research-freely-available-without-delay/&quot;&gt;new rules&lt;/a&gt; requiring federally-funded research papers to be freely available to the public without delay.  This is &lt;em&gt;extremely&lt;/em&gt; welcome&amp;#8212;in fact, I&amp;#8217;ve &lt;a href=&quot;https://www.scottaaronson.com/writings/journal.html&quot;&gt;advocated&lt;/a&gt; such a step since I first became aware of the scourge of predatory journals around 2004.  But the looming danger is that publishers will just respond by leaning more heavily on the &amp;#8220;author pays&amp;#8221; model&amp;#8212;i.e., hitting up authors or their institutions for thousands of dollars in page fees&amp;#8212;and we&amp;#8217;ll go from only the credentialed few being able to read papers that aren&amp;#8217;t on preprint archives or the like, to only the credentialed few being able to publish them.  The petition urges the White House to build, or fund the research community to build, an infrastructure that will make scientific publishing truly open to everyone.  I&amp;#8217;ve signed it, and I hope you&amp;#8217;ll consider signing too.&lt;/p&gt;



&lt;p&gt;(3) Bill Gasarch asked me to announce that he, my former MIT colleague Erik Demaine, and Mohammad Hajiaghayi have written a brand-new book entitled &lt;em&gt;Computational Intractability: A Guide to Algorithmic Lower Bounds&lt;/em&gt;, and a &lt;a href=&quot;https://hardness.mit.edu/&quot;&gt;free draft is available online&lt;/a&gt;.  It looks excellent, like a &lt;a href=&quot;https://en.wikipedia.org/wiki/Computers_and_Intractability&quot;&gt;Garey &amp;amp; Johnson&lt;/a&gt; for the 21st century.  Bill and his coauthors are looking for feedback.  I was happy to help them by advertising this&amp;#8212;after all, it&amp;#8217;s not as if Bill&amp;#8217;s got his own complexity blog for such things!&lt;/p&gt;



&lt;p&gt;(4) Back when Google was still a novelty—maybe 2000 or so—I had my best friend, the now-famous computer security researcher Alex Halderman, over for Rosh Hashanah dinner with my family. Alex and I were talking about how Google evaded the limitations of all the previous decades’ worth of information retrieval systems. One of my relatives, however, misheard “Google” as &lt;a href=&quot;https://www.foodnetwork.com/recipes/dave-lieberman/noodle-kugel-recipe-1946564&quot;&gt;“kugel”&lt;/a&gt; (basically a dense block of noodles held together with egg), and so ended up passing the latter to Alex. “What is this?” Alex asked. Whereupon my uncle deadpanned, “it’s a noodle retrieval system.” Since then, every single Rosh Hashanah dinner, I think about querying the kugel to retrieve the noodles within, and how the desired search result is just the trivial “all of them.”&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By Scott&lt;/p&gt;
  </content>
    <author>
      <name>Scott Aaronson</name>
      <uri>https://scottaaronson.blog</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">David Eppstein: Linkage</title>
    <link href="https://11011110.github.io/blog/2022/09/30/linkage.html"/>
    <id>https://11011110.github.io/blog/2022/09/30/linkage</id>
    <updated>2022-09-30T18:28:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://cohost.org/0xabad1dea/post/112175-the-exciting-new-wor&quot;&gt;The exciting new world of AI prompt injection&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109010772219100161&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;,&lt;/span&gt; &lt;a href=&quot;https://lobste.rs/s/v9skyo/exciting_new_world_ai_prompt_injection&quot;&gt;via&lt;/a&gt;). Promote your business by running a bot that uses other people’s social media post text to prompt a text-writing AI that generates customized responses to those posts. What could go wrong?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://community.wolfram.com/groups/-/m/t/2617634&quot;&gt;Ed Pegg constructs and visualizes Engel’s 38-sided space-filling polyhedron&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109018050225431095&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;),&lt;/span&gt; the most possible for a Voronoi cell of an isohedral Voronoi tessellation, surrounded by 38 copies of itself.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://mastodon.social/@curved_ruler/109015404349191976&quot;&gt;Cyclography&lt;/a&gt;, an old form of data visualization in which 3d points are visualized as 2d circles, with the third coordinate used as their radius. Sort of an inverse to the lifting transformation in computational geometry, which turns 2d circles into 3d points in order to use point-based algorithms on them.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://terrytao.wordpress.com/2022/09/19/a-counterexample-to-the-periodic-tiling-conjecture/&quot;&gt;Terry Tao on his new preprint with Rachel Greenfeld&lt;/a&gt;, “&lt;a href=&quot;https://arxiv.org/abs/2209.08451&quot;&gt;A counterexample to the periodic tiling conjecture&lt;/a&gt;” &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109029559029937263&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; The &lt;a href=&quot;https://en.wikipedia.org/wiki/Gyrobifastigium&quot;&gt;Schmitt-Conway-Danzer biprism&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Socolar%E2%80%93Taylor_tile&quot;&gt;Socolar–Taylor tile&lt;/a&gt; tile \(\mathbb{R}^3\) and \(\mathbb{R}^2\times{}\)finite only aperiodically. The &lt;a href=&quot;https://en.wikipedia.org/wiki/Einstein_problem&quot;&gt;einstein problem&lt;/a&gt; asks if \(\mathbb{R}^2\) has an aperiodic tile. This work looks at analogous questions for tiling by translation of \(\mathbb{Z}^2\).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://doi.org/10.1090/noti2539&quot;&gt;Descriptive combinatorics and distributed algorithms&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109037227806099068&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; Nice survey article by Anton Bernshteyn in &lt;em&gt;Notices of the AMS&lt;/em&gt; about implications and in some cases equivalences between topological statements about whether certain infinite sets are Borel or measurable, and whether certain corresponding finite computational problems have distributed algorithms with sub-logarithmic round complexity.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.libraryassociation.ie/irish-librarians-condemn-publisher-wileys-removal-of-hundreds-of-titles-from-ebook-collections/&quot;&gt;Irish librarians protest&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109037822255336737&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;,&lt;/span&gt; &lt;a href=&quot;https://news.ycombinator.com/item?id=32926378&quot;&gt;via&lt;/a&gt;) as Wiley suddenly removes over 1300 ebooks from the existing subscription packages of academic libraries, in order to convert them to a fee-per-student individual-textbook subscription model. &lt;a href=&quot;https://www.insidehighered.com/news/2022/09/28/publisher-blocks-access-ebooks-students-faculty-scramble&quot;&gt;Now also affecting US universities&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do you need another demonstration that the physics of liquids is strange and counterintuitive &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109054291006791921&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;)?&lt;/span&gt; I learned from &lt;a href=&quot;https://www.youtube.com/watch?v=Vrl23FOgUck]&quot;&gt;this “What’s eating Dan?” video&lt;/a&gt; that, if you have the kind of peanut butter that needs mixing, but is too liquid (swimming in extra peanut oil), you can make it thicker by mixing in a little bit of water. The water droplets in the oil make an emulsion that is thicker than either the water or oil would be by themselves. I had occasion to try it recently and it worked! Science strikes again.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://mathstodon.xyz/@ngons/109037311387589665&quot;&gt;Two swirly rhombus tilings of 4-subdivided 20-gons&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.quantamagazine.org/the-new-math-of-wrinkling-patterns-20220922/&quot;&gt;The new math of wrinkling&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109063241525281205&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; &lt;em&gt;Quanta&lt;/em&gt; on the research of Ian Tobasco on the way that crumpling thin surfaces (like paper) can sometimes lead to disordered folds and sometimes lead to regular patterns, like &lt;a href=&quot;https://en.wikipedia.org/wiki/Yoshimura_buckling&quot;&gt;Yoshimura buckling&lt;/a&gt;, depending in part on local curvature. Based on two papers by Tobasco, “&lt;a href=&quot;https://doi.org/10.1007/s00205-020-01566-8&quot;&gt;Curvature-driven wrinkling of thin elastic shells&lt;/a&gt;” (2021, &lt;a href=&quot;https://arxiv.org/abs/1906.02153&quot;&gt;arXiv:1906.02153&lt;/a&gt;) and “&lt;a href=&quot;https://doi.org/10.1038/s41567-022-01672-2&quot;&gt;Exact solutions for the wrinkle patterns of confined elastic shells&lt;/a&gt;” (2022, &lt;a href=&quot;https://arxiv.org/abs/2004.02839&quot;&gt;arXiv:2004.02839&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.wonkette.com/girls-who-code-books-banned&quot;&gt;&lt;em&gt;Girls Who Code&lt;/em&gt; appears on this year’s list of books banned by US schools&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109067124900840971&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; Apparently this happened not directly because the kind of people who ban books want women to be ignorant, but rather because these books appeared on a diversity resource list and the kind of people who ban books oppose diversity (meaning anything that would challenge the white cis male evangelical-Christian point of view) in all forms. Fortunately local protests got the ban rescinded. More &lt;a href=&quot;https://boingboing.net/2022/09/26/girls-who-code-book-series-banned-by-a-pennsylvania-school-district.html&quot;&gt;on BoingBoing&lt;/a&gt; and &lt;a href=&quot;https://www.theguardian.com/us-news/2022/sep/26/pennsylvania-book-ban-girls-who-code&quot;&gt;in &lt;em&gt;The Guardian&lt;/em&gt;&lt;/a&gt;. The statement in &lt;em&gt;The Guardian&lt;/em&gt; from a book-banning spokesperson “This book series has not been banned, and they remain available in our libraries” appears to actually mean that the ban blocked students from reading the books but failed to remove them permanently from the libraries, and that they became available because the ban was rescinded.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mutilated_chessboard_problem&quot;&gt;Mutilated chessboard problem&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109074266481611822&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;):&lt;/span&gt; remove opposite corners from a chessboard and try to cover the rest with dominos. It’s just planar bipartite perfect matching, easy for algorithms. There’s a cute trick for human problem solving that I won’t spoil. And yet, a logical formulation has been a test case for automated reasoning for nearly 60 years, and is provably hard for some systems (especially resolution). How can it be so easy and so hard? New Wikipedia Good Article.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://jamesheathers.medium.com/publication-laundering-95c4888afd21&quot;&gt;Publication laundering&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109080279085285756&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;,&lt;/span&gt; &lt;a href=&quot;https://retractionwatch.com/2022/09/28/can-you-explain-what-these-1500-papers-are-doing-in-this-journal/&quot;&gt;via&lt;/a&gt;): James Heathers on how “proceedings journals” that accept whole special-issues without any internal oversight over relevance or quality ease the collaboration among academics desperate for publications, middlemen who sell authorship slots on mass-produced junk, and big publishers hungry for that publication-fee and subscription-fee cash as long as they can point the blame elsewhere.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://mathstodon.xyz/@jsiehler/109082598903294416&quot;&gt;Foxagon: A hexagon with exactly one line of reflective symmetry and one reflex angle&lt;/a&gt;. Or maybe more specifically it’s what you get when you glue equilateral triangles onto two adjacent sides of a square. The more specific version tiles the plane; the tiling below hides a &lt;a href=&quot;https://en.wikipedia.org/wiki/Snub_square_tiling&quot;&gt;snub square tiling&lt;/a&gt; but other tilings are possible.&lt;/p&gt;

    &lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/blog/assets/2022/foxagons.svg&quot; alt=&quot;Tiling by foxagons&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/robinhouston/status/1556407331344244743&quot;&gt;The strange Wiki-history of Sethahedra and Chestahedra&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109090046984135256&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;,&lt;/span&gt; &lt;a href=&quot;https://aperiodical.com/2022/09/carnival-of-maths-208/&quot;&gt;via&lt;/a&gt;, &lt;a href=&quot;https://alephjamesa.co.uk/posts.php?data=FoMSept22&quot;&gt;via2&lt;/a&gt;). The Chestahedron is a polyhedron whose faces are four equilateral triangles and three kites of the same area as the triangles. &lt;a href=&quot;http://frankchester.com/project/chestahedron/&quot;&gt;Frank Chester makes bronze sculptures of it&lt;/a&gt;. The Sethahedron is a nonexistent variation with golden-ratio dimensions. If made of paper it will fold along kite diagonals to form ten faces. The promoter of the Sethahedron has been edit-warring to keep their erroneous version in Wikipedia.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;authors&quot;&gt;By David Eppstein&lt;/p&gt;
  </content>
    <author>
      <name>David Eppstein</name>
      <uri>https://11011110.github.io/blog/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Low-Stabilizer-Complexity Quantum States Are Not Pseudorandom</title>
    <link href="http://arxiv.org/abs/2209.14530"/>
    <id>http://arxiv.org/abs/2209.14530</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Grewal_S/0/1/0/all/0/1&quot;&gt;Sabee Grewal&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Iyer_V/0/1/0/all/0/1&quot;&gt;Vishnu Iyer&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Kretschmer_W/0/1/0/all/0/1&quot;&gt;William Kretschmer&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Liang_D/0/1/0/all/0/1&quot;&gt;Daniel Liang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We show that quantum states with &quot;low stabilizer complexity&quot; can be
efficiently distinguished from Haar-random. Specifically, given an $n$-qubit
pure state $|\psi\rangle$, we give an efficient algorithm that distinguishes
whether $|\psi\rangle$ is (i) Haar-random or (ii) a state with stabilizer
fidelity at least $\frac{1}{k}$ (i.e., has fidelity at least $\frac{1}{k}$ with
some stabilizer state), promised that one of these is the case. With black-box
access to $|\psi\rangle$, our algorithm uses $O\!\left( k^{12}
\log(1/\delta)\right)$ copies of $|\psi\rangle$ and $O\!\left(n k^{12}
\log(1/\delta)\right)$ time to succeed with probability at least $1-\delta$,
and, with access to a state preparation unitary for $|\psi\rangle$ (and its
inverse), $O\!\left( k^{3} \log(1/\delta)\right)$ queries and $O\!\left(n k^{3}
\log(1/\delta)\right)$ time suffice.
&lt;/p&gt;
&lt;p&gt;As a corollary, we prove that $\omega(\log(n))$ $T$-gates are necessary for
any Clifford+$T$ circuit to prepare computationally pseudorandom quantum
states, a first-of-its-kind lower bound.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Quantum invariants for the graph isomorphism problem</title>
    <link href="http://arxiv.org/abs/2209.14914"/>
    <id>http://arxiv.org/abs/2209.14914</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Cruz_H/0/1/0/all/0/1&quot;&gt;Hern&amp;#xe1;n I. de la Cruz&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Pelayo_F/0/1/0/all/0/1&quot;&gt;Fernando L. Pelayo&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Pascual_V/0/1/0/all/0/1&quot;&gt;Vicente Pascual&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Paulet_J/0/1/0/all/0/1&quot;&gt;Jose J. Paulet&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Cuartero_F/0/1/0/all/0/1&quot;&gt;Fernando Cuartero&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Llana_L/0/1/0/all/0/1&quot;&gt;Luis Llana&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mezzini_M/0/1/0/all/0/1&quot;&gt;Mauro Mezzini&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Graph Isomorphism is such an important problem in computer science, that it
has been widely studied over the last decades. It is well known that it belongs
to NP class, but is not NP-complete. It is thought to be of comparable
difficulty to integer factorisation. The best known proved algorithm to solve
this problem in general, was proposed by L\&#39;aszl\&#39;o Babai and Eugene Luks in
1983.
&lt;/p&gt;
&lt;p&gt;Recently, there has been some research in the topic by using quantum
computing, that also leads the present piece of research. In fact, we present a
quantum computing algorithm that defines an invariant over Graph Isomorphism
characterisation. This quantum algorithm is able to distinguish more
non-isomorphic graphs than most of the known invariants so far. The proof of
correctness and some hints illustrating the extent and reason of the
improvement are also included in this paper.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Batch Normalization Explained</title>
    <link href="http://arxiv.org/abs/2209.14778"/>
    <id>http://arxiv.org/abs/2209.14778</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Balestriero_R/0/1/0/all/0/1&quot;&gt;Randall Balestriero&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Baraniuk_R/0/1/0/all/0/1&quot;&gt;Richard G. Baraniuk&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A critically important, ubiquitous, and yet poorly understood ingredient in
modern deep networks (DNs) is batch normalization (BN), which centers and
normalizes the feature maps. To date, only limited progress has been made
understanding why BN boosts DN learning and inference performance; work has
focused exclusively on showing that BN smooths a DN&#39;s loss landscape. In this
paper, we study BN theoretically from the perspective of function
approximation; we exploit the fact that most of today&#39;s state-of-the-art DNs
are continuous piecewise affine (CPA) splines that fit a predictor to the
training data via affine mappings defined over a partition of the input space
(the so-called &quot;linear regions&quot;). {\em We demonstrate that BN is an
unsupervised learning technique that -- independent of the DN&#39;s weights or
gradient-based learning -- adapts the geometry of a DN&#39;s spline partition to
match the data.} BN provides a &quot;smart initialization&quot; that boosts the
performance of DN learning, because it adapts even a DN initialized with random
weights to align its spline partition with the data. We also show that the
variation of BN statistics between mini-batches introduces a dropout-like
random perturbation to the partition boundaries and hence the decision boundary
for classification problems. This per mini-batch perturbation reduces
overfitting and improves generalization by increasing the margin between the
training samples and the decision boundary.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Minimum Link Fencing</title>
    <link href="http://arxiv.org/abs/2209.14804"/>
    <id>http://arxiv.org/abs/2209.14804</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Bhore_S/0/1/0/all/0/1&quot;&gt;Sujoy Bhore&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Klute_F/0/1/0/all/0/1&quot;&gt;Fabian Klute&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Loffler_M/0/1/0/all/0/1&quot;&gt;Maarten L&amp;#xf6;ffler&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nollenburg_M/0/1/0/all/0/1&quot;&gt;Martin N&amp;#xf6;llenburg&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Terziadis_S/0/1/0/all/0/1&quot;&gt;Soeren Terziadis&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Villedieu_A/0/1/0/all/0/1&quot;&gt;Ana&amp;#xef;s Villedieu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study a variant of the geometric multicut problem, where we are given a
set $\mathcal{P}$ of colored and pairwise interior-disjoint polygons in the
plane. The objective is to compute a set of simple closed polygon boundaries
(fences) that separate the polygons in such a way that any two polygons that
are enclosed by the same fence have the same color, and the total number of
links of all fences is minimized. We call this the minimum link fencing (MLF)
problem and consider the natural case of bounded minimum link fencing (BMLF),
where $\mathcal{P}$ contains a polygon $Q$ that is unbounded in all directions
and can be seen as an outer polygon. We show that BMLF is NP-hard in general
and that it is XP-time solvable when each fence contains at most two polygons
and the number of segments per fence is the parameter. Finally, we present an
$O(n \log n)$-time algorithm for the case that the convex hull of $\mathcal{P}
\setminus \{Q\}$ does not intersect $Q$.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Discrete Microlocal Morse Theory</title>
    <link href="http://arxiv.org/abs/2209.14993"/>
    <id>http://arxiv.org/abs/2209.14993</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Brown_A/0/1/0/all/0/1&quot;&gt;Adam Brown&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Draganov_O/0/1/0/all/0/1&quot;&gt;Ondrej Draganov&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We establish several results combining discrete Morse theory and microlocal
sheaf theory in the setting of finite posets and simplicial complexes. Our
primary tool is a computationally tractable description of the bounded derived
category of sheaves on a poset with the Alexandrov topology. We prove that each
bounded complex of sheaves on a finite poset admits a unique (up to isomorphism
of complexes) minimal injective resolution, and we provide algorithms for
computing minimal injective resolutions, as well as several useful functors
between derived categories of sheaves. For the constant sheaf on a simplicial
complex, we give asymptotically tight bounds on the complexity of computing the
minimal injective resolution with this algorithm. Our main result is a novel
definition of the discrete microsupport of a bounded complex of sheaves on a
finite poset. We detail several foundational properties of the discrete
microsupport, as well as a microlocal generalization of the discrete
homological Morse theorem and Morse inequalities.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: The minimal canonical form of a tensor network</title>
    <link href="http://arxiv.org/abs/2209.14358"/>
    <id>http://arxiv.org/abs/2209.14358</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Acuaviva_A/0/1/0/all/0/1&quot;&gt;Arturo Acuaviva&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Makam_V/0/1/0/all/0/1&quot;&gt;Visu Makam&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Nieuwboer_H/0/1/0/all/0/1&quot;&gt;Harold Nieuwboer&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Perez_Garcia_D/0/1/0/all/0/1&quot;&gt;David P&amp;#xe9;rez-Garc&amp;#xed;a&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Sittner_F/0/1/0/all/0/1&quot;&gt;Friedrich Sittner&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Walter_M/0/1/0/all/0/1&quot;&gt;Michael Walter&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Witteveen_F/0/1/0/all/0/1&quot;&gt;Freek Witteveen&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Tensor networks have a gauge degree of freedom on the virtual degrees of
freedom that are contracted. A canonical form is a choice of fixing this degree
of freedom. For matrix product states, choosing a canonical form is a powerful
tool, both for theoretical and numerical purposes. On the other hand, for
tensor networks in dimension two or greater there is only limited understanding
of the gauge symmetry. Here we introduce a new canonical form, the minimal
canonical form, which applies to projected entangled pair states (PEPS) in any
dimension, and prove a corresponding fundamental theorem. Already for matrix
product states this gives a new canonical form, while in higher dimensions it
is the first rigorous definition of a canonical form valid for any choice of
tensor. We show that two tensors have the same minimal canonical forms if and
only if they are gauge equivalent up to taking limits; moreover, this is the
case if and only if they give the same quantum state for any geometry. In
particular, this implies that the latter problem is decidable - in contrast to
the well-known undecidability for PEPS on grids. We also provide rigorous
algorithms for computing minimal canonical forms. To achieve this we draw on
geometric invariant theory and recent progress in theoretical computer science
in non-commutative group optimization.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Repeated Prophet Inequality with Near-optimal Bounds</title>
    <link href="http://arxiv.org/abs/2209.14368"/>
    <id>http://arxiv.org/abs/2209.14368</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Chatterjee_K/0/1/0/all/0/1&quot;&gt;Krishnendu Chatterjee&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Mohammadi_M/0/1/0/all/0/1&quot;&gt;Mona Mohammadi&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Saona_R/0/1/0/all/0/1&quot;&gt;Raimundo Saona&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In modern sample-driven Prophet Inequality, an adversary chooses a sequence
of $n$ items with values $v_1, v_2, \ldots, v_n$ to be presented to a decision
maker (DM). The process follows in two phases. In the first phase (sampling
phase), some items, possibly selected at random, are revealed to the DM, but
she can never accept them. In the second phase, the DM is presented with the
other items in a random order and online fashion. For each item, she must make
an irrevocable decision to either accept the item and stop the process or
reject the item forever and proceed to the next item. The goal of the DM is to
maximize the expected value as compared to a Prophet (or offline algorithm)
that has access to all information. In this setting, the sampling phase has no
cost and is not part of the optimization process. However, in many scenarios,
the samples are obtained as part of the decision-making process.
&lt;/p&gt;
&lt;p&gt;We model this aspect as a two-phase Prophet Inequality where an adversary
chooses a sequence of $2n$ items with values $v_1, v_2, \ldots, v_{2n}$ and the
items are randomly ordered. Finally, there are two phases of the Prophet
Inequality problem with the first $n$-items and the rest of the items,
respectively. We show that some basic algorithms achieve a ratio of at most
$0.450$. We present an algorithm that achieves a ratio of at least $0.495$.
Finally, we show that for every algorithm the ratio it can achieve is at most
$0.502$. Hence our algorithm is near-optimal.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Shortest Beer Path Queries in Interval Graphs</title>
    <link href="http://arxiv.org/abs/2209.14401"/>
    <id>http://arxiv.org/abs/2209.14401</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Das_R/0/1/0/all/0/1&quot;&gt;Rathish Das&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+He_M/0/1/0/all/0/1&quot;&gt;Meng He&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kondratovsky_E/0/1/0/all/0/1&quot;&gt;Eitan Kondratovsky&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Munro_J/0/1/0/all/0/1&quot;&gt;J. Ian Munro&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Naredla_A/0/1/0/all/0/1&quot;&gt;Anurag Murty Naredla&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wu_K/0/1/0/all/0/1&quot;&gt;Kaiyu Wu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Our interest is in paths between pairs of vertices that go through at least
one of a subset of the vertices known as beer vertices. Such a path is called a
beer path, and the beer distance between two vertices is the length of the
shortest beer path.
&lt;/p&gt;
&lt;p&gt;We show that we can represent unweighted interval graphs using $2n \log n +
O(n) + O(|B|\log n)$ bits where $|B|$ is the number of beer vertices. This data
structure answers beer distance queries in $O(\log^\varepsilon n)$ time for any
constant $\varepsilon &amp;gt; 0$ and shortest beer path queries in
$O(\log^\varepsilon n + d)$ time, where $d$ is the beer distance between the
two nodes. We also show that proper interval graphs may be represented using
$3n + o(n)$ bits to support beer distance queries in $O(f(n)\log n)$ time for
any $f(n) \in \omega(1)$ and shortest beer path queries in $O(d)$ time. All of
these results also have time-space trade-offs.
&lt;/p&gt;
&lt;p&gt;Lastly we show that the information theoretic lower bound for beer proper
interval graphs is very close to the space of our structure, namely
$\log(4+2\sqrt{3})n - o(n)$ (or about $ 2.9 n$) bits.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Efficient parameterized algorithms on graphs with heterogeneous structure: Combining tree-depth and modular-width</title>
    <link href="http://arxiv.org/abs/2209.14429"/>
    <id>http://arxiv.org/abs/2209.14429</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kratsch_S/0/1/0/all/0/1&quot;&gt;Stefan Kratsch&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nelles_F/0/1/0/all/0/1&quot;&gt;Florian Nelles&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Many computational problems admit fast algorithms on special inputs, however,
the required properties might be quite restrictive. E.g., many graph problems
can be solved much faster on interval or cographs, or on graphs of small
modular-width or small tree-width, than on general graphs. One challenge is to
attain the greatest generality of such results, i.e., being applicable to less
restrictive input classes, without losing much in terms of running time.
&lt;/p&gt;
&lt;p&gt;Building on the use of algebraic expressions we present a clean and robust
way of combining such homogeneous structure into more complex heterogeneous
structure, and we show-case this for the combination of modular-width,
tree-depth, and a natural notion of modular tree-depth. We give a generic
framework for designing efficient parameterized algorithms on the created graph
classes, aimed at getting competitive running times that match the homogeneous
cases. To show the applicability we give efficient parameterized algorithms for
Negative Cycle Detection, Vertex-Weighted All-Pairs Shortest Paths, and
Triangle Counting.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: On Quantum Speedups for Nonconvex Optimization via Quantum Tunneling Walks</title>
    <link href="http://arxiv.org/abs/2209.14501"/>
    <id>http://arxiv.org/abs/2209.14501</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Liu_Y/0/1/0/all/0/1&quot;&gt;Yizhou Liu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Su_W/0/1/0/all/0/1&quot;&gt;Weijie J. Su&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Li_T/0/1/0/all/0/1&quot;&gt;Tongyang Li&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Classical algorithms are often not effective for solving nonconvex
optimization problems where local minima are separated by high barriers. In
this paper, we explore possible quantum speedups for nonconvex optimization by
leveraging the global effect of quantum tunneling. Specifically, we introduce a
quantum algorithm termed the quantum tunneling walk (QTW) and apply it to
nonconvex problems where local minima are approximately global minima. We show
that QTW achieves quantum speedup over classical stochastic gradient descents
(SGD) when the barriers between different local minima are high but thin and
the minima are flat. Based on this observation, we construct a specific
double-well landscape, where classical algorithms cannot efficiently hit one
target well knowing the other well but QTW can when given proper initial states
near the known well. Finally, we corroborate our findings with numerical
experiments.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Matroid Intersection under Restricted Oracles</title>
    <link href="http://arxiv.org/abs/2209.14516"/>
    <id>http://arxiv.org/abs/2209.14516</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Berczi_K/0/1/0/all/0/1&quot;&gt;Krist&amp;#xf3;f B&amp;#xe9;rczi&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kiraly_T/0/1/0/all/0/1&quot;&gt;Tam&amp;#xe1;s Kir&amp;#xe1;ly&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Yamaguchi_Y/0/1/0/all/0/1&quot;&gt;Yutaro Yamaguchi&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Yokoi_Y/0/1/0/all/0/1&quot;&gt;Yu Yokoi&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Matroid intersection is one of the most powerful frameworks of matroid theory
that generalizes various problems in combinatorial optimization. Edmonds&#39;
fundamental theorem provides a min-max characterization for the unweighted
setting, while Frank&#39;s weight-splitting theorem provides one for the weighted
case. Several efficient algorithms were developed for these problems, all
relying on the usage of one of the conventional oracles for both matroids.
&lt;/p&gt;
&lt;p&gt;In the present paper, we consider the tractability of the matroid
intersection problem under restricted oracles. In particular, we focus on the
rank sum, common independence, and maximum rank oracles. We give a strongly
polynomial-time algorithm for weighted matroid intersection under the rank sum
oracle. In the common independence oracle model, we prove that the unweighted
matroid intersection problem is tractable when one of the matroids is a
partition matroid, and that even the weighted case is solvable when one of the
matroids is an elementary split matroid. Finally, we show that the common
independence and maximum rank oracles together are strong enough to realize the
steps of our algorithm under the rank sum oracle.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Tensor-Based Sketching Method for the Low-Rank Approximation of Data Streams</title>
    <link href="http://arxiv.org/abs/2209.14637"/>
    <id>http://arxiv.org/abs/2209.14637</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Liu_C/0/1/0/all/0/1&quot;&gt;Cuiyu Liu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Xiao_C/0/1/0/all/0/1&quot;&gt;Chuanfu Xiao&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ding_M/0/1/0/all/0/1&quot;&gt;Mingshuo Ding&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Yang_C/0/1/0/all/0/1&quot;&gt;Chao Yang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Low-rank approximation in data streams is a fundamental and significant task
in computing science, machine learning and statistics. Multiple streaming
algorithms have emerged over years and most of them are inspired by randomized
algorithms, more specifically, sketching methods. However, many algorithms are
not able to leverage information of data streams and consequently suffer from
low accuracy. Existing data-driven methods improve accuracy but the training
cost is expensive in practice. In this paper, from a subspace perspective, we
propose a tensor-based sketching method for low-rank approximation of data
streams. The proposed algorithm fully exploits the structure of data streams
and obtains quasi-optimal sketching matrices by performing tensor decomposition
on training data. A series of experiments are carried out and show that the
proposed tensor-based method can be more accurate and much faster than the
previous work.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: A dichotomy for succinct representations of homomorphisms</title>
    <link href="http://arxiv.org/abs/2209.14662"/>
    <id>http://arxiv.org/abs/2209.14662</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Berkholz_C/0/1/0/all/0/1&quot;&gt;Christoph Berkholz&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Vinall_Smeeth_H/0/1/0/all/0/1&quot;&gt;Harry Vinall-Smeeth&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The task of computing homomorphisms between two finite relational structures
$\mathcal{A}$ and $\mathcal{B}$ is a well-studied question with numerous
applications. Since the set $\operatorname{Hom}(\mathcal{A},\mathcal{B})$ of
all homomorphisms may be very large having a method of representing it in a
succinct way, especially one which enables us to perform efficient enumeration
and counting, could be extremely useful.
&lt;/p&gt;
&lt;p&gt;One simple yet powerful way of doing so is to decompose
$\operatorname{Hom}(\mathcal{A},\mathcal{B})$ using union and Cartesian
product. Such data structures, called d-representations, have been introduced
by Olteanu and Zavodny in the context of database theory. Their results also
imply that if the treewidth of the left-hand side structure $\mathcal{A}$ is
bounded, then a d-representation of polynomial size can be found in polynomial
time. We show that for structures of bounded arity this is optimal: if the
treewidth is unbounded then there are instances where the size of any
d-representation is superpolynomial. Along the way we develop tools for proving
lower bounds on the size of d-representations, in particular we define a notion
of reduction suitable for this context and prove an almost tight lower bound on
the size of d-representations of all $k$-cliques in a graph.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Lattice Linear Algorithms</title>
    <link href="http://arxiv.org/abs/2209.14703"/>
    <id>http://arxiv.org/abs/2209.14703</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gupta_A/0/1/0/all/0/1&quot;&gt;Arya Tanmay Gupta&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kulkarni_S/0/1/0/all/0/1&quot;&gt;Sandeep S Kulkarni&lt;/a&gt;&lt;/p&gt;&lt;p&gt;This paper focuses on analyzing and differentiating between lattice linear
problems and algorithms. It introduces a new class of algorithms called
\textit{(fully) lattice linear algorithms}. A property of these algorithms is
that they induce a partial order among all states and form \textit{multiple
lattices}. An initial state locks in one of these lattices. We present a
lattice linear self-stabilizing algorithm for minimal dominating set.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: On Constructing Spanners from Random Gaussian Projections</title>
    <link href="http://arxiv.org/abs/2209.14775"/>
    <id>http://arxiv.org/abs/2209.14775</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Assadi_S/0/1/0/all/0/1&quot;&gt;Sepehr Assadi&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kapralov_M/0/1/0/all/0/1&quot;&gt;Michael Kapralov&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Yu_H/0/1/0/all/0/1&quot;&gt;Huacheng Yu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Graph sketching is a powerful paradigm for analyzing graph structure via
linear measurements introduced by Ahn, Guha, and McGregor (SODA&#39;12) that has
since found numerous applications in streaming, distributed computing, and
massively parallel algorithms, among others. Graph sketching has proven to be
quite successful for various problems such as connectivity, minimum spanning
trees, edge or vertex connectivity, and cut or spectral sparsifiers. Yet, the
problem of approximating shortest path metric of a graph, and specifically
computing a spanner, is notably missing from the list of successes. This has
turned the status of this fundamental problem into one of the most longstanding
open questions in this area.
&lt;/p&gt;
&lt;p&gt;We present a partial explanation of this lack of success by proving a strong
lower bound for a large family of graph sketching algorithms that encompasses
prior work on spanners and many (but importantly not also all) related
cut-based problems mentioned above. Our lower bound matches the algorithmic
bounds of the recent result of Filtser, Kapralov, and Nouri (SODA&#39;21), up to
lower order terms, for constructing spanners via the same graph sketching
family. This establishes near-optimality of these bounds, at least restricted
to this family of graph sketching techniques, and makes progress on a
conjecture posed in this latter work.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: On the Convergence of AdaGrad on $\R^{d}$: Beyond Convexity, Non-Asymptotic Rate and Acceleration</title>
    <link href="http://arxiv.org/abs/2209.14827"/>
    <id>http://arxiv.org/abs/2209.14827</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Liu_Z/0/1/0/all/0/1&quot;&gt;Zijian Liu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nguyen_T/0/1/0/all/0/1&quot;&gt;Ta Duy Nguyen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ene_A/0/1/0/all/0/1&quot;&gt;Alina Ene&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nguyen_H/0/1/0/all/0/1&quot;&gt;Huy L. Nguyen&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Existing analysis of AdaGrad and other adaptive methods for smooth convex
optimization is typically for functions with bounded domain diameter. In
unconstrained problems, previous works guarantee an asymptotic convergence rate
without an explicit constant factor that holds true for the entire function
class. Furthermore, in the stochastic setting, only a modified version of
AdaGrad, different from the one commonly used in practice, in which the latest
gradient is not used to update the stepsize, has been analyzed. Our paper aims
at bridging these gaps and developing a deeper understanding of AdaGrad and its
variants in the standard setting of smooth convex functions as well as the more
general setting of quasar convex functions. First, we demonstrate new
techniques to explicitly bound the convergence rate of the vanilla AdaGrad for
unconstrained problems in both deterministic and stochastic settings. Second,
we propose a variant of AdaGrad for which we can show the convergence of the
last iterate, instead of the average iterate. Finally, we give new accelerated
adaptive algorithms and their convergence guarantee in the deterministic
setting with explicit dependency on the problem parameters, improving upon the
asymptotic rate shown in previous works.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: META-STORM: Generalized Fully-Adaptive Variance Reduced SGD for Unbounded Functions</title>
    <link href="http://arxiv.org/abs/2209.14853"/>
    <id>http://arxiv.org/abs/2209.14853</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Liu_Z/0/1/0/all/0/1&quot;&gt;Zijian Liu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nguyen_T/0/1/0/all/0/1&quot;&gt;Ta Duy Nguyen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nguyen_T/0/1/0/all/0/1&quot;&gt;Thien Hang Nguyen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ene_A/0/1/0/all/0/1&quot;&gt;Alina Ene&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nguyen_H/0/1/0/all/0/1&quot;&gt;Huy L. Nguyen&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the application of variance reduction (VR) techniques to general
non-convex stochastic optimization problems. In this setting, the recent work
STORM [Cutkosky-Orabona &#39;19] overcomes the drawback of having to compute
gradients of &quot;mega-batches&quot; that earlier VR methods rely on. There, STORM
utilizes recursive momentum to achieve the VR effect and is then later made
fully adaptive in STORM+ [Levy et al., &#39;21], where full-adaptivity removes the
requirement for obtaining certain problem-specific parameters such as the
smoothness of the objective and bounds on the variance and norm of the
stochastic gradients in order to set the step size. However, STORM+ crucially
relies on the assumption that the function values are bounded, excluding a
large class of useful functions. In this work, we propose META-STORM, a
generalized framework of STORM+ that removes this bounded function values
assumption while still attaining the optimal convergence rate for non-convex
optimization. META-STORM not only maintains full-adaptivity, removing the need
to obtain problem specific parameters, but also improves the convergence rate&#39;s
dependency on the problem parameters. Furthermore, META-STORM can utilize a
large range of parameter settings that subsumes previous methods allowing for
more flexibility in a wider range of settings. Finally, we demonstrate the
effectiveness of META-STORM through experiments across common deep learning
tasks. Our algorithm improves upon the previous work STORM+ and is competitive
with widely used algorithms after the addition of per-coordinate update and
exponential moving average heuristics.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Enumerating Regular Languages in Constant Delay</title>
    <link href="http://arxiv.org/abs/2209.14878"/>
    <id>http://arxiv.org/abs/2209.14878</id>
    <updated>2022-09-30T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Amarilli_A/0/1/0/all/0/1&quot;&gt;Antoine Amarilli&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Monet_M/0/1/0/all/0/1&quot;&gt;Mika&amp;#xeb;l Monet&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the task, for a given language $L$, of enumerating the (generally
infinite) sequence of its words, without repetitions, while bounding the delay
between two consecutive words. To allow for constant delay bounds, we assume a
model where we produce each word by editing the preceding word with a small
edit script, rather than writing out the word from scratch. In particular, this
witnesses that the language is orderable, i.e., we can write its words as an
infinite sequence such that the Levenshtein edit distance between any two
consecutive words is bounded by a constant. For instance, $(a+b)^*$ is
orderable (with a variant of the Gray code), but $a^* + b^*$ is not.
&lt;/p&gt;
&lt;p&gt;We characterize which regular languages are enumerable in this sense, and
show that this can be decided in PTIME in an input deterministic finite
automaton (DFA) for the language. In fact, we show that, given a DFA $A$
recognizing a language $L$, we can compute in PTIME automata $A_1, \ldots, A_t$
such that $L$ is partitioned as $L(A_1) \sqcup \ldots \sqcup L(A_t)$ and every
$L(A_i)$ is orderable in this sense. Further, we show that this is optimal,
i.e., we cannot partition $L$ into less than $t$ orderable languages.
&lt;/p&gt;
&lt;p&gt;In the case where $L$ is orderable, we show that the ordering can be computed
as a constant-delay algorithm: specifically, the algorithm runs in a suitable
pointer machine model, and produces a sequence of constant-length edit scripts
to visit the words of $L$ without repetitions, with constant delay between each
script. In fact, we show that we can achieve this while only allowing the edit
operations push and pop at the beginning and end of the word, which implies
that the word can in fact be maintained in a double-ended queue.
&lt;/p&gt;
&lt;p&gt;We also show results on the complexity of a related problem, and study the
model where push-pop edits are only allowed at the end of the word.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Computational Complexity: Machine Learning and Complexity</title>
    <link href="http://blog.computationalcomplexity.org/2022/09/machine-learning-and-complexity.html"/>
    <id>tag:blogger.com,1999:blog-3722233.post-140442697667456694</id>
    <updated>2022-09-29T14:35:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjB-e4HIPenlJclDSenALB6otAw1Nga8deJ3zx3JoMuf41bWFlfy6u4fi-agHPIClWKvkOGcuQRyXbfXXI__l8YpgFjXBY17Y05mdXCMT6bZUbgoILvkQ7D2t4JRNvqFuG-LNaQMRC0HphwBVu3DoVnnHj1ojqbfCXov8yZaRNlj9hoGpqBAQ/s1024/DALL%C2%B7E%202022-09-17%2014.00.36%20-%20Schloss%20Dagstuhl%20in%20the%20style%20of%20monet.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;1024&quot; data-original-width=&quot;1024&quot; height=&quot;400&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjB-e4HIPenlJclDSenALB6otAw1Nga8deJ3zx3JoMuf41bWFlfy6u4fi-agHPIClWKvkOGcuQRyXbfXXI__l8YpgFjXBY17Y05mdXCMT6bZUbgoILvkQ7D2t4JRNvqFuG-LNaQMRC0HphwBVu3DoVnnHj1ojqbfCXov8yZaRNlj9hoGpqBAQ/w400-h400/DALL%C2%B7E%202022-09-17%2014.00.36%20-%20Schloss%20Dagstuhl%20in%20the%20style%20of%20monet.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Schloss Dagstuhl by Monet by Dall-E&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;At Dagstuhl &lt;a href=&quot;https://blog.computationalcomplexity.org/2022/09/thirty-years-of-dagstuhl.html&quot;&gt;earlier this month&lt;/a&gt;, I hung out for a little bit&amp;nbsp;with the participants of the other seminar,&amp;nbsp;&lt;a href=&quot;https://www.dagstuhl.de/en/program/calendar/semhp/?semnr=22372&quot;&gt;Knowledge Graphs and their Role in the Knowledge Engineering of the 21st Century&lt;/a&gt;. Knowledge graphs are what you would expect them to be, nodes are objects like &quot;Berlin&quot; and &quot;Germany&quot; with directed edges with labels like &quot;capital&quot;. Think of having knowledge graphs of hundreds of millions of nodes and how that could help answer queries about the world. These secondary workshops are shorter and focus on creating a new vision, in this case how to maximize the importance of knowledge graphs in an increasing ML-focused world.&lt;/p&gt;&lt;p&gt;Perhaps we need such a visioning seminar for complexity. While we often get lost in the mathematical questions and techniques in our field, computational complexity is designed to understand the difficulty of solving various problems. Machine learning and advances in optimization should be changing that conversation. If you imagine a world where P = NP (and I did exactly that in chapter 2 of &lt;a href=&quot;https://goldenticket.fortnow.com/&quot;&gt;my 2013 book&lt;/a&gt;) much of what you consider is &lt;a href=&quot;https://blog.computationalcomplexity.org/2020/12/optiland.html&quot;&gt;starting to happen anyway&lt;/a&gt;.&amp;nbsp;ML does fail to break cryptography but then again, isn&#39;t this the best of all possible worlds?&amp;nbsp;&lt;/p&gt;&lt;p&gt;Look at what Scott Aaronson &lt;a href=&quot;https://scottaaronson.blog/?p=122#:~:text=If%20P%3DNP%2C%20then%20the,strategy%20would%20be%20Warren%20Buffett.&quot;&gt;said back in 2006&lt;/a&gt;.&lt;/p&gt;&lt;blockquote&gt;If P=NP, then the world would be a profoundly different place than we usually assume it to be. There would be no special value in “creative leaps,” no fundamental gap between solving a problem and recognizing the solution once it’s found. Everyone who could appreciate a symphony would be Mozart; everyone who could follow a step-by-step argument would be Gauss; everyone who could recognize a good investment strategy would be Warren Buffett.&amp;nbsp;&lt;/blockquote&gt;&lt;p&gt;If I can be a Monet, can Mozart be far behind? ML trading by some hedge funds are beating Warren Buffett but remember if everyone trades perfectly, no one beats the average. Gauss is going to be trickier but &lt;a href=&quot;https://www.quantamagazine.org/in-new-math-proofs-artificial-intelligence-plays-to-win-20220307/&quot;&gt;it&#39;s coming&lt;/a&gt;. There&#39;s a reason Scott is&amp;nbsp;&lt;a href=&quot;https://scottaaronson.blog/?p=6484&quot;&gt;spending a year at OpenAI&lt;/a&gt;&amp;nbsp;to understand &quot;what, if anything, can computational complexity contribute to a principled understanding of how to get an AI to do what we want and not do what we don’t want&quot;.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By Lance Fortnow&lt;/p&gt;
  </content>
    <author>
      <name>Computational Complexity</name>
      <uri>http://blog.computationalcomplexity.org/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: A characterization of polynomial time computable functions from the integers to the reals using discrete ordinary differential equations</title>
    <link href="http://arxiv.org/abs/2209.13599"/>
    <id>http://arxiv.org/abs/2209.13599</id>
    <updated>2022-09-29T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Blanc_M/0/1/0/all/0/1&quot;&gt;Manon Blanc&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Bournez_O/0/1/0/all/0/1&quot;&gt;Olivier Bournez&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In a recent article, the class of functions from the integers to the integers
computable in polynomial time has been characterized using discrete ordinary
differential equations (ODE), also known as finite differences. Doing so, we
pointed out the fundamental role of linear (discrete) ODEs and classical ODE
tools such as changes of variables to capture computability and complexity
measures, or as a tool for programming. In this article, we extend the approach
to a characterization of functions from the integers to the reals computable in
polynomial time in the sense of computable analysis. In particular, we provide
a characterization of such functions in terms of the smallest class of
functions that contains some basic functions, and that is closed by
composition, linear length ODEs, and a natural effective limit schema.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: On the Descriptive Complexity of Groups without Abelian Normal Subgroups</title>
    <link href="http://arxiv.org/abs/2209.13725"/>
    <id>http://arxiv.org/abs/2209.13725</id>
    <updated>2022-09-29T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Grochow_J/0/1/0/all/0/1&quot;&gt;Joshua A. Grochow&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Levet_M/0/1/0/all/0/1&quot;&gt;Michael Levet&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this paper, we explore the descriptive complexity theory of finite groups
by examining the power of the second Ehrenfeucht-Fra\&quot;iss\&#39;e bijective pebble
game in Hella&#39;s (Ann. Pure Appl. Log., 1989) heirarchy. This is a
Spoiler-Duplicator game in which Spoiler can place up to two pebbles each
round. While it trivially solves graph isomorphism, it may be nontrivial for
finite groups, and other ternary relational structures. We first provide a
novel generalization of Weisfeiler-Leman (WL) coloring, which we call 2-ary WL.
We then show that the 2-ary WL is equivalent to the second
Ehrenfeucht-Fra\&quot;iss\&#39;e bijective pebble game in Hella&#39;s heirarchy.
&lt;/p&gt;
&lt;p&gt;Our main result is that, in the pebble game characterization, only $O(1)$
pebbles and $O(1)$ rounds are sufficient to identify all groups without Abelian
normal subgroups (a class of groups for which isomorphism testing is known to
be in $\mathsf{P}$; Babai, Codenotti, &amp;amp; Qiao, ICALP 2012). In particular, we
show that within the first few rounds, Spoiler can force Duplicator to select
an isomorphism between two such groups at each subsequent round. By Hella&#39;s
results (\emph{ibid.}), this is equivalent to saying that these groups are
identified by formulas in first-order logic with generalized 2-ary quantifiers,
using only $O(1)$ variables and $O(1)$ quantifier depth.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Dynamic Embeddings of Dynamic Single-Source Upward Planar Graphs</title>
    <link href="http://arxiv.org/abs/2209.14094"/>
    <id>http://arxiv.org/abs/2209.14094</id>
    <updated>2022-09-29T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hoog_I/0/1/0/all/0/1&quot;&gt;Ivor van der Hoog&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Parada_I/0/1/0/all/0/1&quot;&gt;Irene Parada&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Rotenberg_E/0/1/0/all/0/1&quot;&gt;Eva Rotenberg&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A directed graph $G$ is upward planar if it admits a planar embedding such
that each edge is $y$-monotone. Unlike planarity testing, upward planarity
testing is NP-hard except in restricted cases, such as when the graph has the
single-source property (i.e. each connected component only has one source).
&lt;/p&gt;
&lt;p&gt;In this paper, we present a dynamic algorithm for maintaining a combinatorial
embedding $\mathcal{E}(G)$ of a single-source upward planar graph subject to
edge deletions, edge contractions, edge insertions upwards across a face, and
single-source-preserving vertex splits through specified corners. We
furthermore support changes to the embedding $\mathcal{E}(G)$ on the form of
subgraph flips that mirror or slide the placement of a subgraph that is
connected to the rest of the graph via at most two vertices.
&lt;/p&gt;
&lt;p&gt;All update operations are supported as long as the graph remains upward
planar, and all queries are supported as long as the graph remains
single-source. Updates that violate upward planarity are identified as such and
rejected by our update algorithm. We dynamically maintain a linear-size data
structure on $G$ which supports incidence queries between a vertex and a face,
and upward-linkability of vertex pairs. If a pair of vertices are not
upwards-linkable, we facilitate one-flip-linkable queries that point to a
subgraph flip that makes them linkable, if any such flip exists.
&lt;/p&gt;
&lt;p&gt;We support all updates and queries in $O(\log^2 n)$ time.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: A Quantum Optimization Algorithm for Single Machine Total Weighted Tardiness Minimization</title>
    <link href="http://arxiv.org/abs/2209.13712"/>
    <id>http://arxiv.org/abs/2209.13712</id>
    <updated>2022-09-29T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wang_Y/0/1/0/all/0/1&quot;&gt;Youhao Steve Wang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Cheng_J/0/1/0/all/0/1&quot;&gt;Julian Cheng&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A single machine total weighted tardiness minimization (TWTM) problem in
operational planning is considered. The problem is formulated as an NP-hard
constrained combinatorial problem, which has no known deterministic polynomial
complexity solution using classical computing. Based on efficient Grover&#39;s
quantum search and Trugenberger&#39;s quantum optimization algorithms, a novel
efficient quantum optimization algorithm is proposed to solve the NP-hard
single machine TWTM problem, which makes the desired solution satisfying the
searching constraints and showing the minimal TWT value be measured with the
highest probability.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Near-Optimal Adaptive Policies for Serving Stochastically Departing Customers</title>
    <link href="http://arxiv.org/abs/2209.13878"/>
    <id>http://arxiv.org/abs/2209.13878</id>
    <updated>2022-09-29T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Segev_D/0/1/0/all/0/1&quot;&gt;Danny Segev&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We consider a multi-stage stochastic optimization problem originally
introduced by Cygan et al. (2013), studying how a single server should
prioritize stochastically departing customers. In this setting, our objective
is to determine an adaptive service policy that maximizes the expected total
reward collected along a discrete planning horizon, in the presence of
customers who are independently departing between one stage and the next with
known stationary probabilities. In spite of its deceiving structural
simplicity, we are unaware of non-trivial results regarding the rigorous design
of optimal or truly near-optimal policies at present time.
&lt;/p&gt;
&lt;p&gt;Our main contribution resides in proposing a quasi-polynomial-time
approximation scheme for adaptively serving impatient customers. Specifically,
letting $n$ be the number of underlying customers, our algorithm identifies in
$O( n^{ O_{ \epsilon }( \log^2 n ) } )$ time an adaptive service policy whose
expected reward is within factor $1 - \epsilon$ of the optimal adaptive reward.
Our method for deriving this approximation scheme synthesizes various
stochastic analyses in order to investigate how the adaptive optimum is
affected by alteration to several instance parameters, including the reward
values, the departure probabilities, and the collection of customers itself.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Worst-case Deterministic Fully-Dynamic Planar 2-vertex Connectivity</title>
    <link href="http://arxiv.org/abs/2209.14079"/>
    <id>http://arxiv.org/abs/2209.14079</id>
    <updated>2022-09-29T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Holm_J/0/1/0/all/0/1&quot;&gt;Jacob Holm&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hoog_I/0/1/0/all/0/1&quot;&gt;Ivor van der Hoog&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Rotenberg_E/0/1/0/all/0/1&quot;&gt;Eva Rotenberg&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study dynamic planar graphs with $n$ vertices, subject to edge deletion,
edge contraction, edge insertion across a face, and the splitting of a vertex
in specified corners. We dynamically maintain a combinatorial embedding of such
a planar graph, subject to connectivity and $2$-vertex-connectivity
(biconnectivity) queries between pairs of vertices. Whenever a query pair is
connected and not biconnected, we find the first and last cutvertex separating
them.
&lt;/p&gt;
&lt;p&gt;Additionally, we allow local changes to the embedding by flipping the
embedding of a subgraph that is connected by at most two vertices to the rest
of the graph.
&lt;/p&gt;
&lt;p&gt;We support all queries and updates in deterministic, worst-case, $O(\log^2
n)$ time, using an $O(n)$-sized data structure.
&lt;/p&gt;
&lt;p&gt;Previously, the best bound for fully-dynamic planar biconnectivity (subject
to our set of operations) was an amortised $\tilde{O}(\log^3 n)$ for general
graphs, and algorithms with worst-case polylogarithmic update times were known
only in the partially dynamic (insertion-only or deletion-only) setting.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Adaptive Out-Orientations with Applications</title>
    <link href="http://arxiv.org/abs/2209.14087"/>
    <id>http://arxiv.org/abs/2209.14087</id>
    <updated>2022-09-29T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Christiansen_A/0/1/0/all/0/1&quot;&gt;Aleksander B. G. Christiansen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Holm_J/0/1/0/all/0/1&quot;&gt;Jacob Holm&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hoog_I/0/1/0/all/0/1&quot;&gt;Ivor van der Hoog&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Rotenberg_E/0/1/0/all/0/1&quot;&gt;Eva Rotenberg&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Schwiegelshohn_C/0/1/0/all/0/1&quot;&gt;Chris Schwiegelshohn&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We give simple algorithms for maintaining edge-orientations of a
fully-dynamic graph, such that the out-degree of each vertex is bounded. On one
hand, we show how to orient the edges such that the out-degree of each vertex
is proportional to the arboricity $\alpha$ of the graph, in a worst-case update
time of $O(\log^2 n \log \alpha)$. On the other hand, motivated by applications
in dynamic maximal matching, we obtain a different trade-off, namely the
improved worst case update time of $O(\log n \log \alpha)$ for the problem of
maintaining an edge-orientation with at most $O(\alpha + \log n)$ out-edges per
vertex. Since our algorithms have update times with worst-case guarantees, the
number of changes to the solution (i.e. the recourse) is naturally limited.
&lt;/p&gt;
&lt;p&gt;Our algorithms make choices based entirely on local information, which makes
them automatically adaptive to the current arboricity of the graph. In other
words, they are arboricity-oblivious, while they are arboricity-sensitive. This
both simplifies and improves upon previous work, by having fewer assumptions or
better asymptotic guarantees.
&lt;/p&gt;
&lt;p&gt;As a consequence, one obtains an algorithm with improved efficiency for
maintaining a $(1+\varepsilon)$ approximation of the maximum subgraph density,
and an algorithm for dynamic maximal matching whose worst-case update time is
guaranteed to be upper bounded by $O(\alpha + \log n\log \alpha)$, where
$\alpha$ is the arboricity at the time of the update.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Time and Energy Efficient Contention Resolution in Asynchronous Shared Channels</title>
    <link href="http://arxiv.org/abs/2209.14140"/>
    <id>http://arxiv.org/abs/2209.14140</id>
    <updated>2022-09-29T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Marco_G/0/1/0/all/0/1&quot;&gt;Gianluca De Marco&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kowalski_D/0/1/0/all/0/1&quot;&gt;Dariusz R. Kowalski&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Stachowiak_G/0/1/0/all/0/1&quot;&gt;Grzegorz Stachowiak&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A number of stations, independently activated over time, is able to
communicate by transmitting and listening to a shared channel in discrete time
slots, and a message is successfully delivered to all stations if and only if
its source station is the only transmitter at a time. Despite a vast amount of
work in the last decades, many fundamental questions remain open in the
realistic situation where stations do not start synchronously but are awaken in
arbitrary times. In this work we present a broad picture of results for the
fundamental problem of Contention resolution, in which each of the contending
stations needs to broadcast successfully its message.
&lt;/p&gt;
&lt;p&gt;We show that adaptive algorithms or algorithms with the knowledge of the
contention size $k$ achieve a linear $O(k)$ message latency even if the channel
feedback is restricted to simple acknowledgements in case of successful
transmissions and in the absence of synchronization. This asymptotically
optimal performance cannot be extended to other settings: we prove that there
is no non-adaptive algorithm without the knowledge of contention size $k$
admitting latency $o(k\log k/(\log\log k)^2)$. This means, in particular, that
coding (even random) with acknowledgements is not very efficient on a shared
channel without synchronization or an estimate of the contention size. We also
present a non-adaptive algorithm with no knowledge of contention size that
almost matches the lower bound on latency.
&lt;/p&gt;
&lt;p&gt;Finally, despite the absence of a collision detection mechanism, we show that
our algorithms are also efficient in terms of energy, understood as the total
number of transmissions performed by the stations during the execution.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


</feed>
