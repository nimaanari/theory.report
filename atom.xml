<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Theory of Computing Report</title>
  <link rel="self" href=""/>
  <link href=""/>
  <id></id>
  <updated></updated>
  <generator uri="http://feedreader.github.io/">Pluto 1.6.2 on Ruby 3.0.6 (2023-03-30) [x86_64-linux]</generator>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Richard Lipton: Isbell Accepts</title>
    <link href="https://rjlipton.wpcomstaging.com/2023/05/02/isbell-accepts/"/>
    <id>https://rjlipton.wpcomstaging.com/?p=21528</id>
    <updated>2023-05-02T22:10:14+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;Charles Isbell was my colleague at Georgia Tech for a long time.  He has some news, which I am glad to convey in the words of the UW Madison Chancellor, Jennifer Mnookin:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;
I am delighted to share the terrific news that Dr. Charles Lee Isbell Jr., the John P. Imlay Jr. Dean of the College of Computing at Georgia Institute of Technology, has accepted my offer to become our next provost at the University of Wisconsin&amp;#8212;Madison. He will begin his work with us on August 1.
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://rjlipton.wpcomstaging.com/2023/05/02/isbell-accepts/isbellmnookin/&quot; rel=&quot;attachment wp-att-21584&quot;&gt;&lt;img data-attachment-id=&quot;21584&quot; data-permalink=&quot;https://rjlipton.wpcomstaging.com/2023/05/02/isbell-accepts/isbellmnookin/&quot; data-orig-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/05/IsbellMnookin.png?fit=451%2C298&amp;amp;ssl=1&quot; data-orig-size=&quot;451,298&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;IsbellMnookin&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/05/IsbellMnookin.png?fit=300%2C198&amp;amp;ssl=1&quot; data-large-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/05/IsbellMnookin.png?fit=451%2C298&amp;amp;ssl=1&quot; decoding=&quot;async&quot; loading=&quot;lazy&quot; src=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/05/IsbellMnookin.png?resize=451%2C298&amp;#038;ssl=1&quot; alt=&quot;&quot; width=&quot;451&quot; height=&quot;298&quot; class=&quot;aligncenter size-full wp-image-21584&quot; srcset=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/05/IsbellMnookin.png?w=451&amp;amp;ssl=1 451w, https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/05/IsbellMnookin.png?resize=300%2C198&amp;amp;ssl=1 300w&quot; sizes=&quot;(max-width: 451px) 100vw, 451px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Isbell will be the next provost:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;
A &lt;a href=&quot;https://en.wikipedia.org/wiki/Provost_(education)&quot;&gt;provost&lt;/a&gt; is a senior academic administrator. At many institutions of higher education, they are the chief academic officer, a role that may be combined with being deputy to the chief executive officer. They may also be the chief executive officer of a university, of a branch campus of a university, or of a college within a university.
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;See &lt;a href=&quot;https://news.wisc.edu/charles-lee-isbell-jr-named-uw-madison-provost&quot;&gt;this&lt;/a&gt; for more details about the hiring of Isbell.&lt;/p&gt;
&lt;header&gt;
&lt;h2&gt;Chart&lt;/h2&gt;
&lt;/header&gt;
&lt;p&gt;Here is the level under Chancellor of the &lt;a href=&quot;https://www.wisc.edu/pdfs/UW-Madison-Leadership-Org-Chart.pdf&quot;&gt;org chart for UW Madison&lt;/a&gt;, with Charles&amp;#8217;s place in italics:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Provost and Vice Chancellor for Academic Affairs &lt;/em&gt;&lt;br /&gt;
Vice Chancellor for Finance and Administration&lt;br /&gt;
Vice Chancellor for Legal Affairs&lt;br /&gt;
Vice Chancellor for Research and Graduate Education&lt;br /&gt;
Vice Chancellor for Student Affairs&lt;br /&gt;
Vice Chancellor for University Relations&lt;br /&gt;
Chief Diversity Officer and Deputy Vice Chancellor for Diversity and Inclusion&lt;br /&gt;
Vice Chancellor for Medical Affairs and Dean, School of Medicine and Public Health&lt;/p&gt;
&lt;header&gt;
&lt;h2&gt;Open Problems&lt;/h2&gt;
&lt;/header&gt;
&lt;p&gt;Congrads Charles&amp;#8212;wonderful you are going to Madison. That is a wonderful place&amp;#8212;I spent many happy days being a visitor there over the years. He is following UW-Madison Provost John Scholz who was named as the new &lt;a href=&quot;https://ls.wisc.edu/about/scholz&quot;&gt;president&lt;/a&gt; of the University of Oregon in Eugene, Oregon.&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By rjlipton&lt;/p&gt;
  </content>
    <author>
      <name>Richard Lipton</name>
      <uri>https://rjlipton.wpcomstaging.com</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Emanuele Viola: Mathematics of the impossible, Chapter 10, Constant-depth circuits</title>
    <link href="https://emanueleviola.wordpress.com/2023/05/02/mathematics-of-the-impossible-chapter-10-constant-depth-circuits/"/>
    <id>http://emanueleviola.wordpress.com/?p=1244</id>
    <updated>2023-05-02T21:37:15+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;In this chapter we further investigate circuits of constant depth, focusing on two pervasive classes, which indeed we have already encountered under different names.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Note on notation: I here use “AC” for AltCkt a.k.a.&amp;nbsp;alternating circuits. I also use AC for the class of functions &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; computable by an AC of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt; and size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{d}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;10.1   &lt;/span&gt; &lt;a id=&quot;x1-10700010.1&quot;&gt;&lt;/a&gt;Threshold circuits&lt;/h3&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-107001r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Definition&lt;/b&gt; 10.1.  &lt;/span&gt;A &lt;em&gt;threshold circuit, &lt;/em&gt;abbreviated TC, is a circuit made of Majority gates (of unbounded fan-in). We also denote by TC the class of functions &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; computable by a TC of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt; and size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{d}&quot; class=&quot;latex&quot; /&gt; for some constant &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;TCs are one of the frontiers of our knowledge. It isn’t known how to prove impossibility results even for TCs of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;3&quot; class=&quot;latex&quot; /&gt; and size, say, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{2}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-107002r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 10.1.  &lt;/span&gt;Prove that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BAC%7D%5Csubseteq+%5Ctext+%7BTC%7D%5Csubseteq+%5Ctext+%7BNC%7D%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BAC%7D%5Csubseteq+%5Ctext+%7BTC%7D%5Csubseteq+%5Ctext+%7BNC%7D%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BAC%7D%5Csubseteq+%5Ctext+%7BTC%7D%5Csubseteq+%5Ctext+%7BNC%7D%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {AC}&amp;#92;subseteq &amp;#92;text {TC}&amp;#92;subseteq &amp;#92;text {NC}^{1}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-107003r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 10.2.  &lt;/span&gt;A function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D+%5E%7B%2A%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D+%5E%7B%2A%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D+%5E%7B%2A%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f:&amp;#92;{0,1&amp;#92;} ^{*}&amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; is &lt;em&gt;symmetric&lt;/em&gt; if it only depends on the weight of the input. Prove that any symmetric function is in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {TC}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The result &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BPH%7D%5Ctext+%7B%5Censuremath+%7B%5Csubseteq+%5Ctext+%7BMaj%7D%5Ccdot+%5Ctext+%7BMaj%7D%5Ccdot+%5Ctext+%7BP%7D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BPH%7D%5Ctext+%7B%5Censuremath+%7B%5Csubseteq+%5Ctext+%7BMaj%7D%5Ccdot+%5Ctext+%7BMaj%7D%5Ccdot+%5Ctext+%7BP%7D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BPH%7D%5Ctext+%7B%5Censuremath+%7B%5Csubseteq+%5Ctext+%7BMaj%7D%5Ccdot+%5Ctext+%7BMaj%7D%5Ccdot+%5Ctext+%7BP%7D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {PH}&amp;#92;text {&amp;#92;ensuremath {&amp;#92;subseteq &amp;#92;text {Maj}&amp;#92;cdot &amp;#92;text {Maj}&amp;#92;cdot &amp;#92;text {P}}}&quot; class=&quot;latex&quot; /&gt; obtained in &lt;a href=&quot;#x1-79001r13&quot;&gt;6.13&lt;!--tex4ht:ref: xca:power-of-majority --&gt;&lt;/a&gt; in particular yields the following.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-107004r1&quot;&gt;&lt;/a&gt;                                                                                                                                                                                     &lt;b&gt;Theorem&lt;/b&gt; 10.1.  &lt;/span&gt;&lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XAll89&quot;&gt;5&lt;/a&gt;]&lt;/span&gt;Any function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; in AC has TCs of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;3&quot; class=&quot;latex&quot; /&gt; and size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=2%5E%7B%5Clog+%5E%7Bc_%7Bf%7D%7Dn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=2%5E%7B%5Clog+%5E%7Bc_%7Bf%7D%7Dn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=2%5E%7B%5Clog+%5E%7Bc_%7Bf%7D%7Dn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;2^{&amp;#92;log ^{c_{f}}n}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-107005r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 10.2.  &lt;/span&gt; The following problems are in TC:&lt;/p&gt;
&lt;ol class=&quot;enumerate1&quot;&gt;
&lt;li class=&quot;enumerate&quot; id=&quot;x1-107007x1&quot;&gt;Addition of two input integers.&lt;/li&gt;
&lt;li class=&quot;enumerate&quot; id=&quot;x1-107009x2&quot;&gt;Iterated addition: Addition of any number of input integers.&lt;/li&gt;
&lt;li class=&quot;enumerate&quot; id=&quot;x1-107011x3&quot;&gt;Multiplication of two input integers.&lt;/li&gt;
&lt;li class=&quot;enumerate&quot; id=&quot;x1-107013x4&quot;&gt;Iterated multiplication: Multiplication of any number of input integers.&lt;/li&gt;
&lt;li class=&quot;enumerate&quot; id=&quot;x1-107015x5&quot;&gt;Division of two integers.&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;The proof follows closely that for NC&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;^{1}&quot; class=&quot;latex&quot; /&gt; in section&amp;nbsp;�&lt;a href=&quot;#x1-1020009.1&quot;&gt;9.1&lt;!--tex4ht:ref: sec:The-power-of-NC1-arithmetic --&gt;&lt;/a&gt; (which in turn was based on that for L). Only iterated addition requires a new idea.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-107016r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 10.3.  &lt;/span&gt;Prove the claim about iterated addition. (Hint: Write input as &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5Ctimes+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5Ctimes+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5Ctimes+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&amp;#92;times n&quot; class=&quot;latex&quot; /&gt; matrix, one number per row. Divide columns into blocks of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%3Dc%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%3Dc%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%3Dc%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t=c&amp;#92;log n&quot; class=&quot;latex&quot; /&gt;.)&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;10.2   &lt;/span&gt; &lt;a id=&quot;x1-10800010.2&quot;&gt;&lt;/a&gt;TC vs.&amp;nbsp;NC&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;^{1}&quot; class=&quot;latex&quot; /&gt;&lt;/h3&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;Another great question is whether &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTC%7D%3D%5Ctext+%7BNC%7D%5E%7B1%7D.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTC%7D%3D%5Ctext+%7BNC%7D%5E%7B1%7D.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTC%7D%3D%5Ctext+%7BNC%7D%5E%7B1%7D.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {TC}=&amp;#92;text {NC}^{1}.&quot; class=&quot;latex&quot; /&gt; For any &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt;, we can show that functions in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNC%7D%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNC%7D%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNC%7D%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NC}^{1}&quot; class=&quot;latex&quot; /&gt;, such as Parity, require depth-&lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt; TCs of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+n%5E%7B1%2Bc%5Clog+d%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+n%5E%7B1%2Bc%5Clog+d%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+n%5E%7B1%2Bc%5Clog+d%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge n^{1+c&amp;#92;log d}&quot; class=&quot;latex&quot; /&gt;, and this is tight up to constants.&lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XImpagliazzoPS97&quot;&gt;34&lt;/a&gt;]&lt;/span&gt; A natural question is whether we can prove stronger bounds for harder functions in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNC%7D%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNC%7D%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNC%7D%5E%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NC}^{1}&quot; class=&quot;latex&quot; /&gt;. A natural candidate is iterated multiplication of 3&amp;#215;3 matrices. The following result shows that, in fact, stronger bounds would already prove “the whole thing,” that is, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTC%7D%5Cne+%5Ctext+%7BNC%7D%5E%7B1%7D.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTC%7D%5Cne+%5Ctext+%7BNC%7D%5E%7B1%7D.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTC%7D%5Cne+%5Ctext+%7BNC%7D%5E%7B1%7D.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {TC}&amp;#92;ne &amp;#92;text {NC}^{1}.&quot; class=&quot;latex&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-108001r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 10.3.  &lt;/span&gt;&lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XAllenderK10&quot;&gt;7&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;conf/stoc/ChenT19&quot;&gt;17&lt;/a&gt;]&lt;/span&gt; Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=G&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=G&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=G&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;G&quot; class=&quot;latex&quot; /&gt; be the set of 3&amp;#215;3 matrices of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathbb {F}_{2}&quot; class=&quot;latex&quot; /&gt;. Suppose that the product of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; elements in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=G&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=G&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=G&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;G&quot; class=&quot;latex&quot; /&gt; can be computed by TCs of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bk%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bk%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7Bk%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{k}&quot; class=&quot;latex&quot; /&gt; and depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt;. Then for any &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;epsilon &quot; class=&quot;latex&quot; /&gt; the product can also be computed by TCs of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d%27n%5E%7B1%2B%5Cepsilon+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d%27n%5E%7B1%2B%5Cepsilon+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d%27n%5E%7B1%2B%5Cepsilon+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&amp;#039;n^{1+&amp;#92;epsilon }&quot; class=&quot;latex&quot; /&gt; and depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d%27%3A%3Dcdk%5Clog+1%2F%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d%27%3A%3Dcdk%5Clog+1%2F%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d%27%3A%3Dcdk%5Clog+1%2F%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&amp;#039;:=cdk&amp;#92;log 1/&amp;#92;epsilon &quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The same result applies to any constant-size group &lt;img src=&quot;https://s0.wp.com/latex.php?latex=G&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=G&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=G&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;G&quot; class=&quot;latex&quot; /&gt; – we state it for matrices for concreteness.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;Exploiting the associativity of the problem, we compute the product recursively according to a regular tree. The root is defined to have level &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt;. At Level &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; we compute &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n_{i}&quot; class=&quot;latex&quot; /&gt; products of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28n%5E%7B1%2B%5Cepsilon+%7D%2Fn_%7Bi%7D%29%5E%7B1%2Fk%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28n%5E%7B1%2B%5Cepsilon+%7D%2Fn_%7Bi%7D%29%5E%7B1%2Fk%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28n%5E%7B1%2B%5Cepsilon+%7D%2Fn_%7Bi%7D%29%5E%7B1%2Fk%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(n^{1+&amp;#92;epsilon }/n_{i})^{1/k}&quot; class=&quot;latex&quot; /&gt; matrices. At the root &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28i%3D0%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28i%3D0%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28i%3D0%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(i=0)&quot; class=&quot;latex&quot; /&gt; we have &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n_%7B0%7D%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n_%7B0%7D%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n_%7B0%7D%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n_{0}=1&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   By the assumption, each product at Level &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; has TCs of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B1%2B%5Cepsilon+%7D%2Fn_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B1%2B%5Cepsilon+%7D%2Fn_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7B1%2B%5Cepsilon+%7D%2Fn_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{1+&amp;#92;epsilon }/n_{i}&quot; class=&quot;latex&quot; /&gt; and depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt;. Hence Level &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; can be computed by TCs of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B1%2B%5Cepsilon+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B1%2B%5Cepsilon+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7B1%2B%5Cepsilon+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{1+&amp;#92;epsilon }&quot; class=&quot;latex&quot; /&gt; and depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We have the recursion&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+n_%7Bi%2B1%7D%3Dn_%7Bi%7D%5Ccdot+%28n%5E%7B1%2B%5Cepsilon+%7D%2Fn_%7Bi%7D%29%5E%7B1%2Fk%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+n_%7Bi%2B1%7D%3Dn_%7Bi%7D%5Ccdot+%28n%5E%7B1%2B%5Cepsilon+%7D%2Fn_%7Bi%7D%29%5E%7B1%2Fk%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+n_%7Bi%2B1%7D%3Dn_%7Bi%7D%5Ccdot+%28n%5E%7B1%2B%5Cepsilon+%7D%2Fn_%7Bi%7D%29%5E%7B1%2Fk%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} n_{i+1}=n_{i}&amp;#92;cdot (n^{1+&amp;#92;epsilon }/n_{i})^{1/k}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The solution to this recursion is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n_%7Bi%7D%3Dn%5E%7B%281%2B%5Cepsilon+%29%281-%281-1%2Fk%29%5E%7Bi%7D%29%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n_%7Bi%7D%3Dn%5E%7B%281%2B%5Cepsilon+%29%281-%281-1%2Fk%29%5E%7Bi%7D%29%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n_%7Bi%7D%3Dn%5E%7B%281%2B%5Cepsilon+%29%281-%281-1%2Fk%29%5E%7Bi%7D%29%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n_{i}=n^{(1+&amp;#92;epsilon )(1-(1-1/k)^{i})}&quot; class=&quot;latex&quot; /&gt;, see below.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   For &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i%3Dck%5Clog+%281%2F%5Cepsilon+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i%3Dck%5Clog+%281%2F%5Cepsilon+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i%3Dck%5Clog+%281%2F%5Cepsilon+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i=ck&amp;#92;log (1/&amp;#92;epsilon )&quot; class=&quot;latex&quot; /&gt; we have &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n_%7Bi%7D%3Dn%5E%7B%281%2B%5Cepsilon+%29%281-%5Cepsilon+%5E%7B2%7D%29%7D%3En&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n_%7Bi%7D%3Dn%5E%7B%281%2B%5Cepsilon+%29%281-%5Cepsilon+%5E%7B2%7D%29%7D%3En&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n_%7Bi%7D%3Dn%5E%7B%281%2B%5Cepsilon+%29%281-%5Cepsilon+%5E%7B2%7D%29%7D%3En&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n_{i}=n^{(1+&amp;#92;epsilon )(1-&amp;#92;epsilon ^{2})}&amp;gt;n&quot; class=&quot;latex&quot; /&gt;; this means that we can compute a product of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge n&quot; class=&quot;latex&quot; /&gt; matrices, as required.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Hence the total depth of the circuit is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d%5Ccdot+ck%5Clog+%281%2F%5Cepsilon+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d%5Ccdot+ck%5Clog+%281%2F%5Cepsilon+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d%5Ccdot+ck%5Clog+%281%2F%5Cepsilon+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&amp;#92;cdot ck&amp;#92;log (1/&amp;#92;epsilon )&quot; class=&quot;latex&quot; /&gt;, and the total size is the depth times &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B1%2B%5Cepsilon+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B1%2B%5Cepsilon+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7B1%2B%5Cepsilon+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{1+&amp;#92;epsilon }&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   It remains to solve the recurrence. Letting &lt;img src=&quot;https://s0.wp.com/latex.php?latex=a_%7Bi%7D%3A%3D%5Clog+_%7Bn%7Dn_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=a_%7Bi%7D%3A%3D%5Clog+_%7Bn%7Dn_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=a_%7Bi%7D%3A%3D%5Clog+_%7Bn%7Dn_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;a_{i}:=&amp;#92;log _{n}n_{i}&quot; class=&quot;latex&quot; /&gt; we have the following recurrence for the exponents of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n_{i}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+a_%7B0%7D+%26+%3D0%5C%5C+a_%7Bi%2B1%7D+%26+%3Da_%7Bi%7D%281-1%2Fk%29%2B%281%2B%5Cepsilon+%29%2Fk%3Da_%7Bi%7D%5Calpha+%2B%5Cgamma+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+a_%7B0%7D+%26+%3D0%5C%5C+a_%7Bi%2B1%7D+%26+%3Da_%7Bi%7D%281-1%2Fk%29%2B%281%2B%5Cepsilon+%29%2Fk%3Da_%7Bi%7D%5Calpha+%2B%5Cgamma+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+a_%7B0%7D+%26+%3D0%5C%5C+a_%7Bi%2B1%7D+%26+%3Da_%7Bi%7D%281-1%2Fk%29%2B%281%2B%5Cepsilon+%29%2Fk%3Da_%7Bi%7D%5Calpha+%2B%5Cgamma+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} a_{0} &amp;amp; =0&amp;#92;&amp;#92; a_{i+1} &amp;amp; =a_{i}(1-1/k)+(1+&amp;#92;epsilon )/k=a_{i}&amp;#92;alpha +&amp;#92;gamma &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Calpha+%3A%3D%281-1%2Fk%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Calpha+%3A%3D%281-1%2Fk%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Calpha+%3A%3D%281-1%2Fk%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;alpha :=(1-1/k)&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cgamma+%3A%3D%281%2B%5Cepsilon+%29%2Fk&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cgamma+%3A%3D%281%2B%5Cepsilon+%29%2Fk&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cgamma+%3A%3D%281%2B%5Cepsilon+%29%2Fk&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;gamma :=(1+&amp;#92;epsilon )/k&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   This gives&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+a_%7Bi%7D%3D%5Cgamma+%5Csum+_%7Bj%5Cle+i%7D%5Calpha+%7B%7D%5E%7Bj%7D%3D%5Cgamma+%5Cfrac+%7B1-%5Calpha+%5E%7Bi%2B1%7D%7D%7B1-%5Calpha+%7D%3D%281%2B%5Cepsilon+%29%281-%5Calpha+%5E%7Bi%2B1%7D%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+a_%7Bi%7D%3D%5Cgamma+%5Csum+_%7Bj%5Cle+i%7D%5Calpha+%7B%7D%5E%7Bj%7D%3D%5Cgamma+%5Cfrac+%7B1-%5Calpha+%5E%7Bi%2B1%7D%7D%7B1-%5Calpha+%7D%3D%281%2B%5Cepsilon+%29%281-%5Calpha+%5E%7Bi%2B1%7D%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+a_%7Bi%7D%3D%5Cgamma+%5Csum+_%7Bj%5Cle+i%7D%5Calpha+%7B%7D%5E%7Bj%7D%3D%5Cgamma+%5Cfrac+%7B1-%5Calpha+%5E%7Bi%2B1%7D%7D%7B1-%5Calpha+%7D%3D%281%2B%5Cepsilon+%29%281-%5Calpha+%5E%7Bi%2B1%7D%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} a_{i}=&amp;#92;gamma &amp;#92;sum _{j&amp;#92;le i}&amp;#92;alpha {}^{j}=&amp;#92;gamma &amp;#92;frac {1-&amp;#92;alpha ^{i+1}}{1-&amp;#92;alpha }=(1+&amp;#92;epsilon )(1-&amp;#92;alpha ^{i+1}). &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Were the recursion of the form &lt;img src=&quot;https://s0.wp.com/latex.php?latex=a%27_%7Bi%2B1%7D%3Da%27_%7Bi%7D%2B%281%2B%5Cepsilon+%29%2Fk&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=a%27_%7Bi%2B1%7D%3Da%27_%7Bi%7D%2B%281%2B%5Cepsilon+%29%2Fk&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=a%27_%7Bi%2B1%7D%3Da%27_%7Bi%7D%2B%281%2B%5Cepsilon+%29%2Fk&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;a&amp;#039;_{i+1}=a&amp;#039;_{i}+(1+&amp;#92;epsilon )/k&quot; class=&quot;latex&quot; /&gt; then obviously &lt;img src=&quot;https://s0.wp.com/latex.php?latex=a%27_%7Bck%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=a%27_%7Bck%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=a%27_%7Bck%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;a&amp;#039;_{ck}&quot; class=&quot;latex&quot; /&gt; would already be &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+1%2B%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+1%2B%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+1%2B%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge 1+&amp;#92;epsilon &quot; class=&quot;latex&quot; /&gt;. Instead for &lt;img src=&quot;https://s0.wp.com/latex.php?latex=a_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=a_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=a_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;a_{i}&quot; class=&quot;latex&quot; /&gt; we need to get to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=ck%5Clog+%281%2F%5Cepsilon+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=ck%5Clog+%281%2F%5Cepsilon+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=ck%5Clog+%281%2F%5Cepsilon+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;ck&amp;#92;log (1/&amp;#92;epsilon )&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;10.3   &lt;/span&gt; &lt;a id=&quot;x1-10900010.3&quot;&gt;&lt;/a&gt;Impossibility results for AC&lt;/h3&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;In this section we prove impossibility results for ACs, matching several settings of parameters mentioned earlier (cf.&amp;nbsp;section&amp;nbsp;�&lt;a href=&quot;#x1-910007.3&quot;&gt;7.3&lt;!--tex4ht:ref: sec:Checkpoints --&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   To set the stage, let’s prove strong results for depth 2, that is, DNFs.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-109001r4&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 10.4.  &lt;/span&gt;Prove that Majority requires DNFs of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+2%5E%7Bcn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+2%5E%7Bcn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+2%5E%7Bcn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge 2^{cn}&quot; class=&quot;latex&quot; /&gt;. Hint: What if you have a term with less than &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n &quot; class=&quot;latex&quot; /&gt; variables?&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   As discussed, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bcn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bcn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=2%5E%7Bcn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;2^{cn}&quot; class=&quot;latex&quot; /&gt; bounds even for depth 3 ACs are unknown, and would imply major separations. The following is close to the state-of-the-art for depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-109002r4&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 10.4.  &lt;/span&gt;&lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XRaz87&quot;&gt;52&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;#XSmo87&quot;&gt;63&lt;/a&gt;]&lt;/span&gt;  Let C be an AC of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt; and size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; computing Majority on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; bits. Then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bd%7Ds%5Cge+c%5Csqrt+%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bd%7Ds%5Cge+c%5Csqrt+%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bd%7Ds%5Cge+c%5Csqrt+%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;log ^{d}s&amp;#92;ge c&amp;#92;sqrt {n}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Recall from section&amp;nbsp;�&lt;a href=&quot;#x1-910007.3&quot;&gt;7.3&lt;!--tex4ht:ref: sec:Checkpoints --&gt;&lt;/a&gt; that a stronger bound for an explicit function would have major consequences; in particular the function cannot be in L.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The proof uses the simulation of circuits by low-degree polynomials which we saw in Theorem &lt;a href=&quot;#x1-77004r5&quot;&gt;6.5&lt;!--tex4ht:ref: thm:AC0-Razborov-approx --&gt;&lt;/a&gt;. Specifically, we use the following corollary:&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-109003r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Corollary&lt;/b&gt; 10.1.  &lt;/span&gt;Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C:&amp;#92;{0,1&amp;#92;} ^{n}&amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; be an alternating circuit of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt; and size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt;. Then there is a polynomial &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; over &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathbb {F}_{2}&quot; class=&quot;latex&quot; /&gt; of degree &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bd%7Ds%2F%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bd%7Ds%2F%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bd%7Ds%2F%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;log ^{d}s/&amp;#92;epsilon &quot; class=&quot;latex&quot; /&gt; such that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BP%7D_%7Bx%7D%5BC%28x%29%5Cne+p%28x%29%5D%5Cle+%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BP%7D_%7Bx%7D%5BC%28x%29%5Cne+p%28x%29%5D%5Cle+%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BP%7D_%7Bx%7D%5BC%28x%29%5Cne+p%28x%29%5D%5Cle+%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathbb {P}_{x}[C(x)&amp;#92;ne p(x)]&amp;#92;le &amp;#92;epsilon &quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;Theorem &lt;a href=&quot;#x1-77004r5&quot;&gt;6.5&lt;!--tex4ht:ref: thm:AC0-Razborov-approx --&gt;&lt;/a&gt; gave a distribution &lt;img src=&quot;https://s0.wp.com/latex.php?latex=P&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=P&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=P&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;P&quot; class=&quot;latex&quot; /&gt; on polynomials s.t.&amp;nbsp;for every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; we have&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7BP%7D%5BC%28x%29%5Cne+P%28x%29%5D%5Cle+%5Cepsilon+.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7BP%7D%5BC%28x%29%5Cne+P%28x%29%5D%5Cle+%5Cepsilon+.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7BP%7D%5BC%28x%29%5Cne+P%28x%29%5D%5Cle+%5Cepsilon+.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;mathbb {P}_{P}[C(x)&amp;#92;ne P(x)]&amp;#92;le &amp;#92;epsilon . &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Averaging over &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; we also have&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7Bx%2CP%7D%5BC%28x%29%5Cne+P%28x%29%5D%5Cle+%5Cepsilon+.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7Bx%2CP%7D%5BC%28x%29%5Cne+P%28x%29%5D%5Cle+%5Cepsilon+.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7Bx%2CP%7D%5BC%28x%29%5Cne+P%28x%29%5D%5Cle+%5Cepsilon+.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;mathbb {P}_{x,P}[C(x)&amp;#92;ne P(x)]&amp;#92;le &amp;#92;epsilon . &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Hence we can fix a particular polynomial &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt; s.t.&amp;nbsp;the probability over &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+%5Cepsilon+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le &amp;#92;epsilon &quot; class=&quot;latex&quot; /&gt;, yielding the result. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We then show that Majority cannot be approximated by such low-degree polynomials.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The key result is the following:&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-109004r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Lemma&lt;/b&gt; 10.1.  &lt;/span&gt;Every function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5En+%5Cto+%5C%7B0%2C1%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5En+%5Cto+%5C%7B0%2C1%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5En+%5Cto+%5C%7B0%2C1%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f:&amp;#92;{0,1&amp;#92;}^n &amp;#92;to &amp;#92;{0,1&amp;#92;}&quot; class=&quot;latex&quot; /&gt; can be written as &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%28x%29%3Dp_%7B0%7D%28x%29%2Bp_%7B1%7D%28x%29%5Ccdot+%5Ctext+%7BMaj%7D%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%28x%29%3Dp_%7B0%7D%28x%29%2Bp_%7B1%7D%28x%29%5Ccdot+%5Ctext+%7BMaj%7D%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%28x%29%3Dp_%7B0%7D%28x%29%2Bp_%7B1%7D%28x%29%5Ccdot+%5Ctext+%7BMaj%7D%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f(x)=p_{0}(x)+p_{1}(x)&amp;#92;cdot &amp;#92;text {Maj}(x)&quot; class=&quot;latex&quot; /&gt;, for some polynomials &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p_{0}&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p_%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p_%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p_%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p_{1}&quot; class=&quot;latex&quot; /&gt; of degree &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+n%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le n/2&quot; class=&quot;latex&quot; /&gt;. This holds for every odd &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M_{0}&quot; class=&quot;latex&quot; /&gt; be the set of strings with weight &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+n%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le n/2&quot; class=&quot;latex&quot; /&gt;. We claim that for every function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%3AM_%7B0%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%3AM_%7B0%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%3AM_%7B0%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f:M_{0}&amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; there is a polynomial &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p_{0}&quot; class=&quot;latex&quot; /&gt; of degree &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+n%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le n/2&quot; class=&quot;latex&quot; /&gt; s.t.&amp;nbsp;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=p_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p_{0}&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; agree on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M_{0}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   To verify this, consider the monomials of degree &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+n%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le n/2&quot; class=&quot;latex&quot; /&gt;. We claim that (the vectors corresponding to) their truth tables over &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M_{0}&quot; class=&quot;latex&quot; /&gt; are linearly independent. This means that any polynomial gives a different function over &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M_%7B0%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M_{0}&quot; class=&quot;latex&quot; /&gt;, and because the number of polynomials is the same as the number of functions, the result follows. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-109005r5&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 10.5.  &lt;/span&gt;Prove the claim in the proof.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof of Theorem &lt;a href=&quot;#x1-109002r4&quot;&gt;10.4&lt;!--tex4ht:ref: thm:-Majority-not-in-acz --&gt;&lt;/a&gt;&lt;/b&gt;.&amp;nbsp;&lt;/span&gt; Apply Corollary &lt;a href=&quot;#x1-109003r1&quot;&gt;10.1&lt;!--tex4ht:ref: cor:Raz-approx-fixed-p --&gt;&lt;/a&gt; with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cepsilon+%3D1%2F10&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cepsilon+%3D1%2F10&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cepsilon+%3D1%2F10&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;epsilon =1/10&quot; class=&quot;latex&quot; /&gt; to obtain &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p&quot; class=&quot;latex&quot; /&gt;. Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S&quot; class=&quot;latex&quot; /&gt; be the set of inputs on which &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p%28x%29%3DC%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p%28x%29%3DC%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p%28x%29%3DC%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p(x)=C(x)&quot; class=&quot;latex&quot; /&gt;. By Lemma &lt;a href=&quot;#x1-109004r1&quot;&gt;10.1&lt;!--tex4ht:ref: lem:Maj-versatile --&gt;&lt;/a&gt;, any function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%3AS%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%3AS%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%3AS%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f:S&amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; ca be written as&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+f%28x%29%3Dp_%7B0%7D%28x%29%2Bp_%7B1%7D%28x%29%5Ccdot+p%28x%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+f%28x%29%3Dp_%7B0%7D%28x%29%2Bp_%7B1%7D%28x%29%5Ccdot+p%28x%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+f%28x%29%3Dp_%7B0%7D%28x%29%2Bp_%7B1%7D%28x%29%5Ccdot+p%28x%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} f(x)=p_{0}(x)+p_{1}(x)&amp;#92;cdot p(x). &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The right-hand size is a polynomial of degree &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+d%27%3A%3Dn%2F2%2B%5Clog+%5E%7Bd%7D%28cs%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+d%27%3A%3Dn%2F2%2B%5Clog+%5E%7Bd%7D%28cs%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+d%27%3A%3Dn%2F2%2B%5Clog+%5E%7Bd%7D%28cs%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le d&amp;#039;:=n/2+&amp;#92;log ^{d}(cs)&quot; class=&quot;latex&quot; /&gt;. The number of such polynomials is the number of possible choices for each monomial of degree &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;, for any &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; up to the degree. This number is&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cprod+_%7Bi%3D0%7D%5E%7Bd%27%7D2%5E%7B%7Bn+%5Cchoose+i%7D%7D%3D2%5E%7B%5Csum+_%7Bi%7D%5E%7Bd%27%7D%7Bn+%5Cchoose+i%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cprod+_%7Bi%3D0%7D%5E%7Bd%27%7D2%5E%7B%7Bn+%5Cchoose+i%7D%7D%3D2%5E%7B%5Csum+_%7Bi%7D%5E%7Bd%27%7D%7Bn+%5Cchoose+i%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cprod+_%7Bi%3D0%7D%5E%7Bd%27%7D2%5E%7B%7Bn+%5Cchoose+i%7D%7D%3D2%5E%7B%5Csum+_%7Bi%7D%5E%7Bd%27%7D%7Bn+%5Cchoose+i%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;prod _{i=0}^{d&amp;#039;}2^{{n &amp;#92;choose i}}=2^{&amp;#92;sum _{i}^{d&amp;#039;}{n &amp;#92;choose i}}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   On the other hand, the number of possible functions &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%3AS%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%3AS%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%3AS%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f:S&amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; is&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+2%5E%7B%7CS%7C%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+2%5E%7B%7CS%7C%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+2%5E%7B%7CS%7C%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} 2^{|S|}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Since a polynomial computes at most one function, taking logs we have&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%7CS%7C%5Cle+%5Csum+_%7Bi%7D%5E%7Bd%27%7D%7Bn+%5Cchoose+i%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%7CS%7C%5Cle+%5Csum+_%7Bi%7D%5E%7Bd%27%7D%7Bn+%5Cchoose+i%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%7CS%7C%5Cle+%5Csum+_%7Bi%7D%5E%7Bd%27%7D%7Bn+%5Cchoose+i%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} |S|&amp;#92;le &amp;#92;sum _{i}^{d&amp;#039;}{n &amp;#92;choose i}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The right-hand side is at most &lt;img src=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D%281%2F2%2Bc%5Clog+%5E%7Bd%7D%28s%29%2F%5Csqrt+%7Bn%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D%281%2F2%2Bc%5Clog+%5E%7Bd%7D%28s%29%2F%5Csqrt+%7Bn%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D%281%2F2%2Bc%5Clog+%5E%7Bd%7D%28s%29%2F%5Csqrt+%7Bn%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;2^{n}(1/2+c&amp;#92;log ^{d}(s)/&amp;#92;sqrt {n})&quot; class=&quot;latex&quot; /&gt;, since each binomial coefficient is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c2%5E%7Bn%7D%2F%5Csqrt+%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c2%5E%7Bn%7D%2F%5Csqrt+%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+c2%5E%7Bn%7D%2F%5Csqrt+%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le c2^{n}/&amp;#92;sqrt {n}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   On the other hand, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7CS%7C%5Cge+0.9%5Ccdot+2%5E%7Bn%7D.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7CS%7C%5Cge+0.9%5Ccdot+2%5E%7Bn%7D.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7CS%7C%5Cge+0.9%5Ccdot+2%5E%7Bn%7D.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|S|&amp;#92;ge 0.9&amp;#92;cdot 2^{n}.&quot; class=&quot;latex&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Combining this we get&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+0.9%5Ccdot+2%5E%7Bn%7D%5Cle+2%5E%7Bn%7D%281%2F2%2Bc%5Clog+%5E%7Bd%7D%28s%29%2F%5Csqrt+%7Bn%7D%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+0.9%5Ccdot+2%5E%7Bn%7D%5Cle+2%5E%7Bn%7D%281%2F2%2Bc%5Clog+%5E%7Bd%7D%28s%29%2F%5Csqrt+%7Bn%7D%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+0.9%5Ccdot+2%5E%7Bn%7D%5Cle+2%5E%7Bn%7D%281%2F2%2Bc%5Clog+%5E%7Bd%7D%28s%29%2F%5Csqrt+%7Bn%7D%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} 0.9&amp;#92;cdot 2^{n}&amp;#92;le 2^{n}(1/2+c&amp;#92;log ^{d}(s)/&amp;#92;sqrt {n}). &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p&gt;This implies&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+0.4%5Cle+c%5Clog+%5E%7Bd%7D%28s%29%2F%5Csqrt+%7Bn%7D%2C+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+0.4%5Cle+c%5Clog+%5E%7Bd%7D%28s%29%2F%5Csqrt+%7Bn%7D%2C+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+0.4%5Cle+c%5Clog+%5E%7Bd%7D%28s%29%2F%5Csqrt+%7Bn%7D%2C+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} 0.4&amp;#92;le c&amp;#92;log ^{d}(s)/&amp;#92;sqrt {n}, &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p&gt;proving the theorem. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-109006r6&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 10.6.  &lt;/span&gt;Explain why Theorem &lt;a href=&quot;#x1-109002r4&quot;&gt;10.4&lt;!--tex4ht:ref: thm:-Majority-not-in-acz --&gt;&lt;/a&gt; holds even if the circuits have Parity gates (in addition to Or and And gates).&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;thebibliography&quot;&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [1]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:conf/focs/AbboudBW15&quot;&gt;&lt;/a&gt;Amir Abboud, Arturs Backurs, and Virginia&amp;nbsp;Vassilevska Williams. Tight hardness      results for LCS and other sequence similarity measures.  In Venkatesan Guruswami,      editor, IEEE 56th Annual Symposium on Foundations of Computer Science, FOCS      2015, Berkeley, CA, USA, 17-20 October, 2015, pages 59–78. IEEE Computer Society,      2015.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [2]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XAdleman78&quot;&gt;&lt;/a&gt;Leonard  Adleman.   Two  theorems  on  random  polynomial  time.   In  19th IEEE      Symp.&amp;nbsp;on Foundations of Computer Science (FOCS), pages 75–83. 1978.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [3]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XAjt83&quot;&gt;&lt;/a&gt;Mikl�s Ajtai.  &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5CSigma+%5Csp+%7B1%7D%5Csb+%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5CSigma+%5Csp+%7B1%7D%5Csb+%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5CSigma+%5Csp+%7B1%7D%5Csb+%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;Sigma &amp;#92;sp {1}&amp;#92;sb {1}&quot; class=&quot;latex&quot; /&gt;-formulae on finite structures.  Annals of Pure and Applied Logic,      24(1):1–48, 1983.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [4]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XAjtai05&quot;&gt;&lt;/a&gt;Mikl�s Ajtai. A non-linear time lower bound for boolean branching programs. Theory      of Computing, 1(1):149–176, 2005.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [5]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XAll89&quot;&gt;&lt;/a&gt;Eric  Allender.   A  note  on  the  power  of  threshold  circuits.   In  30th Symposium      on Foundations of Computer Science, pages 580–584, Research Triangle Park, North      Carolina, 30 October–1 November 1989. IEEE.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [6]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XAllender01&quot;&gt;&lt;/a&gt;Eric Allender. The division breakthroughs. Bulletin of the EATCS, 74:61–77, 2001.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [7]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XAllenderK10&quot;&gt;&lt;/a&gt;Eric  Allender  and  Michal  Koucký.     Amplifying  lower  bounds  by  means  of      self-reducibility. J.&amp;nbsp;of the ACM, 57(3), 2010.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [8]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XAGHP92&quot;&gt;&lt;/a&gt;Noga Alon, Oded Goldreich, Johan H�stad, and Ren� Peralta. Simple constructions      of  almost  &lt;img src=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;k&quot; class=&quot;latex&quot; /&gt;-wise  independent  random  variables.   Random  Structures  &amp;amp;  Algorithms,      3(3):289–304, 1992.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [9]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/jcss/AngluinV79&quot;&gt;&lt;/a&gt;Dana Angluin and Leslie&amp;nbsp;G. Valiant. Fast probabilistic algorithms for hamiltonian      circuits and matchings. J. Comput. Syst. Sci., 18(2):155–193, 1979.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [10]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XAroraLuMoSuSz98&quot;&gt;&lt;/a&gt;Sanjeev Arora, Carsten Lund, Rajeev Motwani, Madhu Sudan, and Mario Szegedy.      Proof  verification  and  the  hardness  of  approximation  problems.    J.&amp;nbsp;of  the  ACM,      45(3):501–555, May 1998.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [11]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/siamcomp/BackursI18&quot;&gt;&lt;/a&gt;Arturs Backurs and Piotr Indyk.  Edit distance cannot be computed in strongly      subquadratic time (unless SETH is false). SIAM J. Comput., 47(3):1087–1097, 2018.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [12]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XBatcher68&quot;&gt;&lt;/a&gt;Kenneth&amp;nbsp;E. Batcher.  Sorting networks and their applications.  In AFIPS Spring      Joint Computing Conference, volume&amp;nbsp;32, pages 307–314, 1968.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [13]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XBeameCH86&quot;&gt;&lt;/a&gt;Paul  Beame,  Stephen&amp;nbsp;A.  Cook,  and  H.&amp;nbsp;James  Hoover.   Log  depth  circuits  for      division and related problems. SIAM J. Comput., 15(4):994–1003, 1986.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [14]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XBSSV03&quot;&gt;&lt;/a&gt;Paul Beame, Michael Saks, Xiaodong Sun, and Erik Vee.   Time-space trade-off      lower  bounds  for  randomized  computation  of  decision  problems.   J.&amp;nbsp;of  the  ACM,      50(2):154–195, 2003.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [15]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XBen-OrC92&quot;&gt;&lt;/a&gt;Michael Ben-Or and Richard Cleve. Computing algebraic formulas using a constant      number of registers. SIAM J.&amp;nbsp;on Computing, 21(1):54–58, 1992.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [16]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/cc/BussW15&quot;&gt;&lt;/a&gt;Samuel&amp;nbsp;R.  Buss  and  Ryan  Williams.   Limits  on  alternation  trading  proofs  for      time-space lower bounds. Comput. Complex., 24(3):533–600, 2015.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [17]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:conf/stoc/ChenT19&quot;&gt;&lt;/a&gt;Lijie Chen and Roei Tell. Bootstrapping results for threshold circuits &amp;#8220;just beyond&amp;#8221;      known lower bounds.  In Moses Charikar and Edith Cohen, editors, Proceedings of the      51st Annual ACM SIGACT Symposium on Theory of Computing, STOC 2019, Phoenix,      AZ, USA, June 23-26, 2019, pages 34–41. ACM, 2019.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [18]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XCleve91&quot;&gt;&lt;/a&gt;Richard  Cleve.    Towards  optimal  simulations  of  formulas  by  bounded-width                                                                                                                                                                                          programs. Computational Complexity, 1:91–105, 1991.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [19]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XCook73&quot;&gt;&lt;/a&gt;Stephen&amp;nbsp;A. Cook. A hierarchy for nondeterministic time complexity. J.&amp;nbsp;of Computer      and System Sciences, 7(4):343–353, 1973.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [20]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/siamcomp/Csanky76&quot;&gt;&lt;/a&gt;L.&amp;nbsp;Csanky.     Fast  parallel  matrix  inversion  algorithms.     SIAM  J.  Comput.,      5(4):618–623, 1976.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [21]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/jcss/Fortnow00&quot;&gt;&lt;/a&gt;Lance  Fortnow.   Time-space  tradeoffs  for  satisfiability.   J.  Comput.  Syst.  Sci.,      60(2):337–353, 2000.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [22]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/jct/FraenkelL81&quot;&gt;&lt;/a&gt;Aviezri&amp;nbsp;S. Fraenkel and David Lichtenstein. Computing a perfect strategy for n x n      chess requires time exponential in n. J. Comb. Theory, Ser. A, 31(2):199–214, 1981.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [23]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XFredmanS89&quot;&gt;&lt;/a&gt;Michael&amp;nbsp;L. Fredman and Michael&amp;nbsp;E. Saks.  The cell probe complexity of dynamic      data structures. In ACM Symp.&amp;nbsp;on the Theory of Computing (STOC), pages 345–354,      1989.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [24]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XGajentaanO95&quot;&gt;&lt;/a&gt;Anka Gajentaan and Mark&amp;nbsp;H. Overmars. On a class of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7BO%7D%28n%5E2%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7BO%7D%28n%5E2%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7BO%7D%28n%5E2%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;{O}(n^2)&quot; class=&quot;latex&quot; /&gt; problems in computational      geometry. Comput. Geom., 5:165–185, 1995.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [25]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XGareyJ79&quot;&gt;&lt;/a&gt;M.&amp;nbsp;R. Garey and David&amp;nbsp;S. Johnson. Computers and Intractability: A Guide to the      Theory of NP-Completeness. W. H. Freeman, 1979.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [26]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XMR1549939&quot;&gt;&lt;/a&gt;K.&amp;nbsp;G�del.   �ber  formal  unentscheidbare  s�tze  der  Principia  Mathematica  und      verwandter systeme I. Monatsh. Math. Phys., 38, 1931.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [27]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XGoldreich08Complexity&quot;&gt;&lt;/a&gt;Oded Goldreich. Computational Complexity: A Conceptual Perspective. Cambridge      University Press, 2008.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [28]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XGreenlawHR-Limits&quot;&gt;&lt;/a&gt;Raymond  Greenlaw,  H.&amp;nbsp;James  Hoover,  and  Walter  Ruzzo.   Limits  to  Parallel      Computation: P-Completeness Theory. 02 2001.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [29]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;X10.4007/annals.2021.193.2.4&quot;&gt;&lt;/a&gt;David Harvey and Joris van&amp;nbsp;der Hoeven. Integer multiplication in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=O%28n%5Cmathrm+%7Blog%7D%5C%2C+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=O%28n%5Cmathrm+%7Blog%7D%5C%2C+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=O%28n%5Cmathrm+%7Blog%7D%5C%2C+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;O(n&amp;#92;mathrm {log}&amp;#92;, n)&quot; class=&quot;latex&quot; /&gt;. Annals of      Mathematics, 193(2):563 – 617, 2021.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [30]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/iandc/Hennie65&quot;&gt;&lt;/a&gt;F.&amp;nbsp;C. Hennie.  One-tape, off-line turing machine computations.  Information and      Control, 8(6):553–578, 1965.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [31]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XHennieS66&quot;&gt;&lt;/a&gt;Fred  Hennie  and  Richard  Stearns.    Two-tape  simulation  of  multitape  turing      machines. J.&amp;nbsp;of the ACM, 13:533–546, October 1966.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [32]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/jacm/HopcroftPV77&quot;&gt;&lt;/a&gt;John&amp;nbsp;E. Hopcroft, Wolfgang&amp;nbsp;J. Paul, and Leslie&amp;nbsp;G. Valiant. On time versus space.      J. ACM, 24(2):332–337, 1977.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [33]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XIP99&quot;&gt;&lt;/a&gt;Russell Impagliazzo and Ramamohan Paturi.   The complexity of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;k&quot; class=&quot;latex&quot; /&gt;-sat.   In IEEE      Conf.&amp;nbsp;on Computational Complexity (CCC), pages 237–, 1999.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [34]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XImpagliazzoPS97&quot;&gt;&lt;/a&gt;Russell Impagliazzo, Ramamohan Paturi, and Michael&amp;nbsp;E. Saks. Size-depth tradeoffs      for threshold circuits. SIAM J. Comput., 26(3):693–707, 1997.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [35]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XIPZ01&quot;&gt;&lt;/a&gt;Russell Impagliazzo, Ramamohan Paturi, and Francis Zane.  Which problems have      strongly exponential complexity? J. Computer &amp;amp; Systems Sciences, 63(4):512–530, Dec      2001.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [36]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XImW97&quot;&gt;&lt;/a&gt;Russell  Impagliazzo  and  Avi  Wigderson.    &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathit+%7BP%7D+%3D+%5Cmathit+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathit+%7BP%7D+%3D+%5Cmathit+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathit+%7BP%7D+%3D+%5Cmathit+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathit {P} = &amp;#92;mathit {BPP}&quot; class=&quot;latex&quot; /&gt;  if  &lt;img src=&quot;https://s0.wp.com/latex.php?latex=E&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=E&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=E&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;E&quot; class=&quot;latex&quot; /&gt;  requires  exponential  circuits:      Derandomizing the XOR lemma.  In 29th ACM Symp.&amp;nbsp;on the Theory of Computing      (STOC), pages 220–229. ACM, 1997.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [37]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XKarpLi82&quot;&gt;&lt;/a&gt;Richard&amp;nbsp;M.  Karp  and  Richard&amp;nbsp;J.  Lipton.    Turing  machines  that  take  advice.      L’Enseignement Math�matique. Revue Internationale. IIe S�rie, 28(3-4):191–209, 1982.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [38]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XKobayashi1985OnTS&quot;&gt;&lt;/a&gt;Kojiro Kobayashi.  On the structure of one-tape nondeterministic turing machine      time hierarchy. Theor. Comput. Sci., 40:175–193, 1985.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [39]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/siamcomp/LarsenWY20&quot;&gt;&lt;/a&gt;Kasper&amp;nbsp;Green Larsen, Omri Weinstein, and Huacheng Yu. Crossing the logarithmic      barrier for dynamic boolean data structure lower bounds.  SIAM J. Comput., 49(5),      2020.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [40]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XLevin73&quot;&gt;&lt;/a&gt;Leonid&amp;nbsp;A.  Levin.    Universal  sequential  search  problems.    Problemy  Peredachi      Informatsii, 9(3):115–116, 1973.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [41]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XLundFoKaNi92&quot;&gt;&lt;/a&gt;Carsten Lund, Lance Fortnow, Howard Karloff, and Noam Nisan. Algebraic methods      for interactive proof systems. J.&amp;nbsp;of the ACM, 39(4):859–868, October 1992.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [42]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XLupanov58&quot;&gt;&lt;/a&gt;O.&amp;nbsp;B. Lupanov. A method of circuit synthesis. Izv. VUZ Radiofiz., 1:120–140, 1958.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [43]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XMaS87&quot;&gt;&lt;/a&gt;Wolfgang Maass and Amir Schorr. Speed-up of Turing machines with one work tape      and a two-way input tape. SIAM J.&amp;nbsp;on Computing, 16(1):195–202, 1987.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [44]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XBarrington89&quot;&gt;&lt;/a&gt;David&amp;nbsp;A.  Mix  Barrington.   Bounded-width  polynomial-size  branching  programs      recognize  exactly  those  languages  in  NC&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5E1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5E1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5E1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;^1&quot; class=&quot;latex&quot; /&gt;.    J.&amp;nbsp;of  Computer  and  System  Sciences,      38(1):150–164, 1989.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [45]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XNaN93&quot;&gt;&lt;/a&gt;Joseph Naor and Moni Naor.  Small-bias probability spaces: efficient constructions      and applications. SIAM J.&amp;nbsp;on Computing, 22(4):838–856, 1993.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [46]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XNechiporuk66&quot;&gt;&lt;/a&gt;E.&amp;nbsp;I. Nechiporuk. A boolean function. Soviet Mathematics-Doklady, 169(4):765–766,      1966.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [47]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XNep70&quot;&gt;&lt;/a&gt;Valery&amp;nbsp;A. Nepomnjaščiĭ. Rudimentary predicates and Turing calculations. Soviet      Mathematics-Doklady, 11(6):1462–1465, 1970.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [48]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XViolaNEU-ram2sat-neu-author&quot;&gt;&lt;/a&gt;NEU. From RAM to SAT. Available at &lt;a href=&quot;http://www.ccs.neu.edu/home/viola/&quot; rel=&quot;nofollow&quot;&gt;http://www.ccs.neu.edu/home/viola/&lt;/a&gt;, 2012.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;                                                                                                                                                                                      [49]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/jcss/PapadimitriouY91&quot;&gt;&lt;/a&gt;Christos&amp;nbsp;H. Papadimitriou and Mihalis Yannakakis. Optimization, approximation,      and complexity classes. J. Comput. Syst. Sci., 43(3):425–440, 1991.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [50]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XPPST83&quot;&gt;&lt;/a&gt;Wolfgang&amp;nbsp;J. Paul, Nicholas Pippenger, Endre Szemer�di, and William&amp;nbsp;T. Trotter.      On determinism versus non-determinism and related problems (preliminary version). In      IEEE Symp.&amp;nbsp;on Foundations of Computer Science (FOCS), pages 429–438, 1983.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [51]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XPippengerF79&quot;&gt;&lt;/a&gt;Nicholas Pippenger and Michael&amp;nbsp;J. Fischer. Relations among complexity measures.      J.&amp;nbsp;of the ACM, 26(2):361–381, 1979.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [52]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XRaz87&quot;&gt;&lt;/a&gt;Alexander Razborov. Lower bounds on the dimension of schemes of bounded depth      in a complete basis containing the logical addition function.  Akademiya Nauk SSSR.      Matematicheskie Zametki, 41(4):598–607, 1987.  English translation in Mathematical      Notes of the Academy of Sci. of the USSR, 41(4):333-338, 1987.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [53]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XReingold08&quot;&gt;&lt;/a&gt;Omer Reingold. Undirected connectivity in log-space. J.&amp;nbsp;of the ACM, 55(4), 2008.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [54]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/siamcomp/Robson84&quot;&gt;&lt;/a&gt;J.&amp;nbsp;M.  Robson.    N  by  N  checkers  is  exptime  complete.    SIAM  J.  Comput.,      13(2):252–267, 1984.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [55]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:conf/coco/Santhanam01&quot;&gt;&lt;/a&gt;Rahul Santhanam.   On separators, segregators and time versus space.   In IEEE      Conf.&amp;nbsp;on Computational Complexity (CCC), pages 286–294, 2001.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [56]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XSAVITCH1970177&quot;&gt;&lt;/a&gt;Walter&amp;nbsp;J. Savitch.  Relationships between nondeterministic and deterministic tape      complexities. Journal of Computer and System Sciences, 4(2):177–192, 1970.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [57]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/siamcomp/Schonhage80&quot;&gt;&lt;/a&gt;Arnold Sch�nhage. Storage modification machines. SIAM J. Comput., 9(3):490–508,      1980.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [58]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XShamir92&quot;&gt;&lt;/a&gt;Adi Shamir. IP = PSPACE. J.&amp;nbsp;of the ACM, 39(4):869–877, October 1992.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [59]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XMR29860&quot;&gt;&lt;/a&gt;Claude&amp;nbsp;E. Shannon. The synthesis of two-terminal switching circuits. Bell System                                                                                                                                                                                          Tech. J., 28:59–98, 1949.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [60]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XSho90&quot;&gt;&lt;/a&gt;Victor Shoup. New algorithms for finding irreducible polynomials over finite fields.      Mathematics of Computation, 54(189):435–447, 1990.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [61]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XSiegel04&quot;&gt;&lt;/a&gt;Alan Siegel. On universal classes of extremely random constant-time hash functions.      SIAM J.&amp;nbsp;on Computing, 33(3):505–543, 2004.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [62]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XSip83b&quot;&gt;&lt;/a&gt;Michael Sipser. A complexity theoretic approach to randomness. In ACM Symp.&amp;nbsp;on      the Theory of Computing (STOC), pages 330–335, 1983.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [63]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XSmo87&quot;&gt;&lt;/a&gt;Roman Smolensky.  Algebraic methods in the theory of lower bounds for Boolean      circuit complexity.  In 19th ACM Symp.&amp;nbsp;on the Theory of Computing (STOC), pages      77–82. ACM, 1987.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [64]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XMR2145856&quot;&gt;&lt;/a&gt;Larry Stockmeyer and Albert&amp;nbsp;R. Meyer.  Cosmological lower bound on the circuit      complexity of a small problem in logic. J. ACM, 49(6):753–784, 2002.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [65]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XToda91&quot;&gt;&lt;/a&gt;Seinosuke Toda.   PP is as hard as the polynomial-time hierarchy.   SIAM J.&amp;nbsp;on      Computing, 20(5):865–877, 1991.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [66]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/x/Turing37&quot;&gt;&lt;/a&gt;Alan&amp;nbsp;M.   Turing.      On   computable   numbers,   with   an   application   to   the      entscheidungsproblem. Proc. London Math. Soc., s2-42(1):230–265, 1937.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [67]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XVal77&quot;&gt;&lt;/a&gt;Leslie&amp;nbsp;G.  Valiant.   Graph-theoretic  arguments  in  low-level  complexity.   In  6th      Symposium on Mathematical Foundations of Computer Science, volume&amp;nbsp;53 of Lecture      Notes in Computer Science, pages 162–176. Springer, 1977.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [68]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/tcs/ValiantV86&quot;&gt;&lt;/a&gt;Leslie&amp;nbsp;G. Valiant and Vijay&amp;nbsp;V. Vazirani. NP is as easy as detecting unique solutions.      Theor. Comput. Sci., 47(3):85–93, 1986.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [69]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XMelkebeek06&quot;&gt;&lt;/a&gt;Dieter  van  Melkebeek.   A  survey  of  lower  bounds  for  satisfiability  and  related                                                                                                                                                                                          problems. Foundations and Trends in Theoretical Computer Science, 2(3):197–303, 2006.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [70]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/tcs/MelkebeekR05&quot;&gt;&lt;/a&gt;Dieter van Melkebeek and Ran Raz.  A time lower bound for satisfiability.  Theor.      Comput. Sci., 348(2-3):311–320, 2005.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [71]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/tcs/Vinodchandran05&quot;&gt;&lt;/a&gt;N.&amp;nbsp;V. Vinodchandran.  A note on the circuit complexity of PP.  Theor. Comput.      Sci., 347(1-2):415–418, 2005.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [72]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XViolaBPvsE&quot;&gt;&lt;/a&gt;Emanuele Viola.  On approximate majority and probabilistic time.  Computational      Complexity, 18(3):337–375, 2009.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [73]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;Xviola-FTTCS09&quot;&gt;&lt;/a&gt;Emanuele Viola. On the power of small-depth computation. Foundations and Trends      in Theoretical Computer Science, 5(1):1–72, 2009.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [74]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XViola-xxx&quot;&gt;&lt;/a&gt;Emanuele Viola.  Reducing 3XOR to listing triangles, an exposition.  Available at      &lt;a href=&quot;http://www.ccs.neu.edu/home/viola/&quot; rel=&quot;nofollow&quot;&gt;http://www.ccs.neu.edu/home/viola/&lt;/a&gt;, 2011.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [75]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;Xviola-datastructurelb-implies-cclb&quot;&gt;&lt;/a&gt;Emanuele Viola.  Lower bounds for data structures with space close to maximum      imply  circuit  lower  bounds.    Theory  of  Computing,  15:1–9,  2019.    Available  at      &lt;a href=&quot;http://www.ccs.neu.edu/home/viola/&quot; rel=&quot;nofollow&quot;&gt;http://www.ccs.neu.edu/home/viola/&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [76]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;Xviola-tm&quot;&gt;&lt;/a&gt;Emanuele  Viola.   Pseudorandom  bits  and  lower  bounds  for  randomized  turing      machines. Theory of Computing, 18(10):1–12, 2022.&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;authors&quot;&gt;By Manu&lt;/p&gt;
  </content>
    <author>
      <name>Emanuele Viola</name>
      <uri>https://emanueleviola.wordpress.com</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">CCI: jobs: Four Assistant/Associate Professor Positions at University of Warwick (apply by May 15, 2023)</title>
    <link href="https://cstheory-jobs.org/2023/05/02/four-assistant-associate-professor-positions-at-university-of-warwick-apply-by-may-15-2023/"/>
    <id>http://cstheory-jobs.org/2023/05/02/four-assistant-associate-professor-positions-at-university-of-warwick-apply-by-may-15-2023/</id>
    <updated>2023-05-02T20:29:49+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;The Department of Computer Science at the University of Warwick has 4 Assistant/Associate Professor positions available in Foundations of AI / Quantum Computing (broadly interpreted). Candidates with research experience in at least one of these areas are encouraged to apply.&lt;/p&gt;
&lt;p&gt;Website: &lt;a href=&quot;https://warwick.ac.uk/fac/sci/dcs/jobs/&quot;&gt;https://warwick.ac.uk/fac/sci/dcs/jobs/&lt;/a&gt;&lt;br /&gt;
Email: igorcarb@gmail.com&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By shacharlovett&lt;/p&gt;
  </content>
    <author>
      <name>CCI: jobs</name>
      <uri>https://cstheory-jobs.org</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR23-063 |  Cutting Planes Width and the Complexity of Graph Isomorphism Refutations | 

	Jacobo Toran, 

	Florian Wörz</title>
    <link href="https://eccc.weizmann.ac.il/report/2023/063"/>
    <id>https://eccc.weizmann.ac.il/report/2023/063</id>
    <updated>2023-05-02T19:25:43+00:00</updated>
    <content type="html" xml:lang="en">
    The width complexity measure plays a central role in Resolution and other propositional proof systems like Polynomial Calculus (under the name of degree). The study of width lower bounds is the most extended method for proving size lower bounds, and it is known that for these systems, proofs with small width also imply the existence of proofs with small size. Not much has been studied, however, about the width parameter in the Cutting Planes (CP) proof system, a measure that was introduced by Dantchev and Martin in 2011 under the name of CP cutwidth.

In this paper, we study the width complexity of CP refutations of graph isomorphism formulas. For a pair of non-isomorphic graphs $G$ and $H$, we show a direct connection between the Weisfeiler--Leman differentiation number $\mathrm{WL}(G, H)$ of the graphs and the width of a CP refutation for the corresponding isomorphism formula $\mathrm{ISO}(G, H)$. In particular, we show that if $\mathrm{WL}(G, H) \leq k$, then there is a CP refutation of $\mathrm{ISO}(G, H)$ with width $k$, and if $\mathrm{WL}(G, H) &amp;gt; k$, then there are no CP refutations of $\mathrm{ISO}(G, H)$ with width $k-2$. Similar results are known for other proof systems, like Resolution, Sherali–Adams, or Polynomial Calculus. We also obtain polynomial-size CP refutations from our width bound for isomorphism formulas for graphs with constant WL-dimension.
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR23-062 |  Conflict Checkable and Decodable Codes and Their Applications | 

	Benny Applebaum, 

	Eliran Kachlon</title>
    <link href="https://eccc.weizmann.ac.il/report/2023/062"/>
    <id>https://eccc.weizmann.ac.il/report/2023/062</id>
    <updated>2023-05-02T18:18:54+00:00</updated>
    <content type="html" xml:lang="en">
    Let $C$ be an error-correcting code over a large alphabet $q$ of block length $n$, and assume that, a possibly corrupted, codeword $c$ is distributively stored among $n$ servers where the $i$th entry is being held by the $i$th server. Suppose that every pair of servers publicly announce whether the corresponding coordinates are ``consistent&amp;#39;&amp;#39; with some legal codeword or ``conflicted&amp;#39;&amp;#39;. What type of information about $c$ can be inferred from this consistency graph? Can we check whether errors occurred and if so, can we find the error locations and effectively decode? We initiate the study of conflict-checkable and conflict-decodable codes and prove the following main results:

(1) (Almost-MDS conflict-checkable codes:) For every distance $d\leq n$, there exists a code that supports conflict-based error-detection whose dimension $k$ almost achieves the singleton bound, i.e., $k\geq n-d+0.99$. Interestingly, the code is non-linear, and we give some evidence that suggests that this is inherent. Combinatorially, this yields an $n$-partite graph over $[q]^n$ that contains $q^k$ cliques of size $n$ whose pair-wise intersection is at most $n-d\leq k-0.99$ vertices, generalizing a construction of Alon (Random Struct. Algorithms, &amp;#39;02) that achieves a similar result for the special case of triangles ($n=3$).   

(2) (Conflict Decodable Codes below half-distance:) For every distance $d\leq n$ there exists a linear code that supports conflict-based error-decoding up to half of the distance. The code&amp;#39;s dimension $k$ ``half-meets&amp;#39;&amp;#39; the singleton bound, i.e., $k=(n-d+2)/2$, and we prove that this bound is tight for a natural class of such codes. The construction is based on symmetric bivariate polynomials and is rooted in the literature on verifiable secret sharing (Ben-Or, Goldwasser and Wigderson, STOC &amp;#39;88; Cramer, Damg{\aa}rd, and Maurer, EUROCRYPT &amp;#39;00). 

(3) (Robust Conflict Decodable Codes:) We show that the above construction also satisfies a non-trivial notion of robust decoding/detection even when the number of errors is unbounded and up to $d/2$ of the servers are Byzantine and may lie about their conflicts. The resulting conflict-decoder runs in exponential time in this case, and we present an alternative construction that achieves quasipolynomial complexity at the expense of degrading the dimension to $k=(n-d+3)/3$. Our construction is based on trilinear polynomials, and the algorithmic result follows by showing that the induced conflict graph is structured enough to allow efficient recovery of a maximal vertex cover.

As an application of the last result, we present the first polynomial-time statistical two-round Verifiable Secret Sharing (resp., three-round general MPC protocol) that remains secure in the presence of an active adversary that corrupts up to $t&amp;lt;n/3.001$ of the parties. We can upgrade the resiliency threshold to $n/3$, which is known to be optimal in this setting, at the expense of increasing the computational complexity to be quasipolynomial. Previous solutions (Applebaum, Kachlon, and Patra, TCC&amp;#39;20) suffered from an exponential-time complexity even when the adversary corrupts only $n/4$ of the parties.
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR23-061 |  Dependency schemes in CDCL-based QBF solving: a proof-theoretic study | 

	Abhimanyu Choudhury, 

	Meena Mahajan</title>
    <link href="https://eccc.weizmann.ac.il/report/2023/061"/>
    <id>https://eccc.weizmann.ac.il/report/2023/061</id>
    <updated>2023-05-02T01:16:22+00:00</updated>
    <content type="html" xml:lang="en">
    We formalize the notion of proof systems obtained by adding normal dependency schemes into the QCDCL proof system underlying algorithms for solving Quantified Boolean Formulas, by exploring the addition of the dependency schemes via two approaches: one as a preprocessing tool, and second in propagation and learnings in the QCDCL trails. 

We show that QCDCL augmented with the reflexive resolution path dependency scheme D=D$^{rrs}$ produces three proof systems of interest: QCDCL(D), D+QCDCL and D+QCDCLD(D). We show that these three systems are not only pairwise incomparable, but also each system is incomparable with the standard QCDCL and QCDCL$^{cube}$, as well as with QCDCL$^{LO}_{NORED}$, QRes, QURes, and Q(D$^{rrs}$)Res.
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: The general position number and the iteration time in the P3 convexity</title>
    <link href="http://arxiv.org/abs/2305.00467"/>
    <id>http://arxiv.org/abs/2305.00467</id>
    <updated>2023-05-02T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Araujo_J/0/1/0/all/0/1&quot;&gt;Julio Araujo&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Dourado_M/0/1/0/all/0/1&quot;&gt;Mitre C. Dourado&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Protti_F/0/1/0/all/0/1&quot;&gt;F&amp;#xe1;bio Protti&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sampaio_R/0/1/0/all/0/1&quot;&gt;Rudini Sampaio&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this paper, we investigate two graph convexity parameters: the iteration
time and the general position number. Harary and Nieminem introduced in 1981
the iteration time in the geodesic convexity, but its computational complexity
was still open. Manuel and Klav\v{z}ar introduced in 2018 the general position
number of the geodesic convexity and proved that it is NP-hard to compute. In
this paper, we extend these parameters to the P3 convexity and prove that it is
NP-hard to compute them. With this, we also prove that the iteration number is
NP-hard on the geodesic convexity even in graphs with diameter two. These
results are the last three missing NP-hardness results regarding the ten most
studied graph convexity parameters in the geodesic and P3 convexities.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Ortho-Radial Drawing in Near-Linear Time</title>
    <link href="http://arxiv.org/abs/2305.00425"/>
    <id>http://arxiv.org/abs/2305.00425</id>
    <updated>2023-05-02T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chang_Y/0/1/0/all/0/1&quot;&gt;Yi-Jun Chang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;An orthogonal drawing is an embedding of a plane graph into a grid. In a
seminal work of Tamassia (SIAM Journal on Computing 1987), a simple
combinatorial characterization of angle assignments that can be realized as
bend-free orthogonal drawings was established, thereby allowing an orthogonal
drawing to be described combinatorially by listing the angles of all corners.
The characterization reduces the need to consider certain geometric aspects,
such as edge lengths and vertex coordinates, and simplifies the task of graph
drawing algorithm design.
&lt;/p&gt;
&lt;p&gt;Barth, Niedermann, Rutter, and Wolf (SoCG 2017) established an analogous
combinatorial characterization for ortho-radial drawings, which are a
generalization of orthogonal drawings to cylindrical grids. The proof of the
characterization is existential and does not result in an efficient algorithm.
Niedermann, Rutter, and Wolf (SoCG 2019) later addressed this issue by
developing quadratic-time algorithms for both testing the realizability of a
given angle assignment as an ortho-radial drawing without bends and
constructing such a drawing.
&lt;/p&gt;
&lt;p&gt;In this paper, we further improve the time complexity of these tasks to
near-linear time. We establish a new characterization for ortho-radial drawings
based on the concept of a good sequence. Using the new characterization, we
design a simple greedy algorithm for constructing ortho-radial drawings.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Finding agreement cherry-reduced subnetworks in level-1 networks</title>
    <link href="http://arxiv.org/abs/2305.00033"/>
    <id>http://arxiv.org/abs/2305.00033</id>
    <updated>2023-05-02T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Landry_K/0/1/0/all/0/1&quot;&gt;Kaari Landry&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Tremblay_Savard_O/0/1/0/all/0/1&quot;&gt;Olivier Tremblay-Savard&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lafond_M/0/1/0/all/0/1&quot;&gt;Manuel Lafond&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Phylogenetic networks are increasingly being considered as better suited to
represent the complexity of the evolutionary relationships between species. One
class of phylogenetic networks that has received a lot of attention recently is
the class of orchard networks, which is composed of networks that can be
reduced to a single leaf using cherry reductions. Cherry reductions, also
called cherry-picking operations, remove either a leaf of a simple cherry
(sibling leaves sharing a parent) or a reticulate edge of a reticulate cherry
(two leaves whose parents are connected by a reticulate edge). In this paper,
we present a fixed-parameter tractable algorithm to solve the problem of
finding a maximum agreement cherry-reduced subnetwork (MACRS) between two
rooted binary level-1 networks. This is first exact algorithm proposed to solve
the MACRS problem. As proven in earlier work, there is a direct relationship
between finding an MACRS and calculating a distance based on cherry operations.
As a result, the proposed algorithm also provides a distance that can be used
for the comparison of level-1 networks.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Faster Submodular Maximization for Several Classes of Matroids</title>
    <link href="http://arxiv.org/abs/2305.00122"/>
    <id>http://arxiv.org/abs/2305.00122</id>
    <updated>2023-05-02T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Henzinger_M/0/1/0/all/0/1&quot;&gt;Monika Henzinger&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Liu_P/0/1/0/all/0/1&quot;&gt;Paul Liu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Vondrak_J/0/1/0/all/0/1&quot;&gt;Jan Vondrak&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zheng_D/0/1/0/all/0/1&quot;&gt;Da Wei Zheng&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The maximization of submodular functions have found widespread application in
areas such as machine learning, combinatorial optimization, and economics,
where practitioners often wish to enforce various constraints; the matroid
constraint has been investigated extensively due to its algorithmic properties
and expressive power. Recent progress has focused on fast algorithms for
important classes of matroids given in explicit form. Currently, nearly-linear
time algorithms only exist for graphic and partition matroids [ICALP &#39;19]. In
this work, we develop algorithms for monotone submodular maximization
constrained by graphic, transversal matroids, or laminar matroids in time
near-linear in the size of their representation. Our algorithms achieve an
optimal approximation of $1-1/e-\epsilon$ and both generalize and accelerate
the results of Ene and Nguyen [ICALP &#39;19]. In fact, the running time of our
algorithm cannot be improved within the fast continuous greedy framework of
Badanidiyuru and Vondr\&#39;ak [SODA &#39;14].
&lt;/p&gt;
&lt;p&gt;To achieve near-linear running time, we make use of dynamic data structures
that maintain bases with approximate maximum cardinality and weight under
certain element updates. These data structures need to support a weight
decrease operation and a novel FREEZE operation that allows the algorithm to
freeze elements (i.e. force to be contained) in its basis regardless of future
data structure operations.
&lt;/p&gt;
&lt;p&gt;For the laminar matroid, we present a new dynamic data structure using the
top tree interface of Alstrup, Holm, de Lichtenberg, and Thorup [TALG &#39;05] that
maintains the maximum weight basis under insertions and deletions of elements
in $O(\log n)$ time. For the transversal matroid the FREEZE operation
corresponds to requiring the data structure to keep a certain set $S$ of
vertices matched, a property that we call $S$-stability.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Clustering What Matters in Constrained Settings</title>
    <link href="http://arxiv.org/abs/2305.00175"/>
    <id>http://arxiv.org/abs/2305.00175</id>
    <updated>2023-05-02T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jaiswal_R/0/1/0/all/0/1&quot;&gt;Ragesh Jaiswal&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kumar_A/0/1/0/all/0/1&quot;&gt;Amit Kumar&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Constrained clustering problems generalize classical clustering formulations,
e.g., $k$-median, $k$-means, by imposing additional constraints on the
feasibility of clustering. There has been significant recent progress in
obtaining approximation algorithms for these problems, both in the metric and
the Euclidean settings. However, the outlier version of these problems, where
the solution is allowed to leave out $m$ points from the clustering, is not
well understood. In this work, we give a general framework for reducing the
outlier version of a constrained $k$-median or $k$-means problem to the
corresponding outlier-free version with only $(1+\varepsilon)$-loss in the
approximation ratio. The reduction is obtained by mapping the original instance
of the problem to $f(k,m, \varepsilon)$ instances of the outlier-free version,
where $f(k, m, \varepsilon) = \left( \frac{k+m}{\varepsilon}\right)^{O(m)}$. As
specific applications, we get the following results:
&lt;/p&gt;
&lt;p&gt;- First FPT (in the parameters $k$ and $m$) $(1+\varepsilon)$-approximation
algorithm for the outlier version of capacitated $k$-median and $k$-means in
Euclidean spaces with hard capacities.
&lt;/p&gt;
&lt;p&gt;- First FPT (in the parameters $k$ and $m$) $(3+\varepsilon)$ and
$(9+\varepsilon)$ approximation algorithms for the outlier version of
capacitated $k$-median and $k$-means, respectively, in general metric spaces
with hard capacities.
&lt;/p&gt;
&lt;p&gt;- First FPT (in the parameters $k$ and $m$) $(2-\delta)$-approximation
algorithm for the outlier version of the $k$-median problem under the Ulam
metric. Our work generalizes the known results to a larger class of constrained
clustering problems. Further, our reduction works for arbitrary metric spaces
and so can extend clustering algorithms for outlier-free versions in both
Euclidean and arbitrary metric spaces.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Uniqueness and Rapid Mixing in the Bipartite Hardcore Model</title>
    <link href="http://arxiv.org/abs/2305.00186"/>
    <id>http://arxiv.org/abs/2305.00186</id>
    <updated>2023-05-02T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chen_X/0/1/0/all/0/1&quot;&gt;Xiaoyu Chen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Liu_J/0/1/0/all/0/1&quot;&gt;Jingcheng Liu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Yin_Y/0/1/0/all/0/1&quot;&gt;Yitong Yin&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We characterize the uniqueness condition in the hardcore model for bipartite
graphs with degree bounds only on one side, and provide a nearly linear time
sampling algorithm that works up to the uniqueness threshold. We show that the
uniqueness threshold for bipartite graph has almost the same form of the tree
uniqueness threshold for general graphs, except with degree bounds only on one
side of the bipartition. The hardcore model from statistical physics can be
seen as a weighted enumeration of independent sets. Its bipartite version
(#BIS) is a central open problem in approximate counting. Compared to the same
problem in a general graph, surprising tractable regime have been identified
that are believed to be hard in general. This is made possible by two lines of
algorithmic approach: the high-temperature algorithms starting from Liu and Lu
(STOC 2015), and the low-temperature algorithms starting from Helmuth, Perkins,
and Regts (STOC 2019).
&lt;/p&gt;
&lt;p&gt;In this work, we study the limit of these algorithms in the high-temperature
case. Our characterization of the uniqueness condition is obtained by proving
decay of correlations for arguably the best possible regime, which involves
locating fixpoints of multivariate iterative rational maps and showing their
contraction. We also give a nearly linear time sampling algorithm based on
simulating field dynamics only on one side of the bipartite graph that works up
to the uniqueness threshold. Our algorithm is very different from the original
high-temperature algorithm of Liu and Lu, and it makes use of a connection
between correlation decay and spectral independence of Markov chains. Last but
not the least, we are able to show that the standard Glauber dynamics on both
side of the bipartite graph mixes in polynomial time up to the uniqueness.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Improved Complexity Analysis of Quasi-Polynomial Algorithms Solving Parity Games</title>
    <link href="http://arxiv.org/abs/2305.00308"/>
    <id>http://arxiv.org/abs/2305.00308</id>
    <updated>2023-05-02T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Parys_P/0/1/0/all/0/1&quot;&gt;Pawe&amp;#x142; Parys&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wiacek_A/0/1/0/all/0/1&quot;&gt;Aleksander Wi&amp;#x105;cek&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We improve the complexity of solving parity games (with priorities in
vertices) for $d={\omega}(\log n)$ by a factor of ${\theta}(d^2)$: the best
complexity known to date was $O(mdn^{1.45+\log_2(d/\log_2(n))})$, while we
obtain $O(mn^{1.45+\log_2(d/\log_2(n))}/d)$, where $n$ is the number of
vertices, $m$ is the number of edges, and $d$ is the number of priorities.
&lt;/p&gt;
&lt;p&gt;We base our work on existing algorithms using universal trees, and we improve
their complexity. We present two independent improvements. First, an
improvement by a factor of ${\theta}(d)$ comes from a more careful analysis of
the width of universal trees. Second, we perform (or rather recall) a finer
analysis of requirements for a universal tree: while for solving games with
priorities on edges one needs an $n$-universal tree, in the case of games with
priorities in vertices it is enough to use an $n/2$-universal tree. This way,
we allow to solve games of size $2n$ in the time needed previously to solve
games of size $n$; such a change divides the quasi-polynomial complexity again
by a factor of ${\theta}(d)$.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Nearly Optimal Steiner Trees using Graph Neural Network Assisted Monte Carlo Tree Search</title>
    <link href="http://arxiv.org/abs/2305.00535"/>
    <id>http://arxiv.org/abs/2305.00535</id>
    <updated>2023-05-02T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ahmed_R/0/1/0/all/0/1&quot;&gt;Reyan Ahmed&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ghosh_M/0/1/0/all/0/1&quot;&gt;Mithun Ghosh&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jun_K/0/1/0/all/0/1&quot;&gt;Kwang-Sung Jun&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kobourov_S/0/1/0/all/0/1&quot;&gt;Stephen Kobourov&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Graph neural networks are useful for learning problems, as well as for
combinatorial and graph problems such as the Subgraph Isomorphism Problem and
the Traveling Salesman Problem. We describe an approach for computing Steiner
Trees by combining a graph neural network and Monte Carlo Tree Search. We first
train a graph neural network that takes as input a partial solution and
proposes a new node to be added as output. This neural network is then used in
a Monte Carlo search to compute a Steiner tree. The proposed method
consistently outperforms the standard 2-approximation algorithm on many
different types of graphs and often finds the optimal solution.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: The Art of the Fugue: Minimizing Interleaving in Collaborative Text Editing</title>
    <link href="http://arxiv.org/abs/2305.00583"/>
    <id>http://arxiv.org/abs/2305.00583</id>
    <updated>2023-05-02T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Weidner_M/0/1/0/all/0/1&quot;&gt;Matthew Weidner&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gentle_J/0/1/0/all/0/1&quot;&gt;Joseph Gentle&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kleppmann_M/0/1/0/all/0/1&quot;&gt;Martin Kleppmann&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Existing algorithms for replicated lists, which are widely used in
collaborative text editors, suffer from a problem: when two users concurrently
insert text at the same position in the document, the merged outcome may
interleave the inserted text passages, resulting in corrupted and potentially
unreadable text. The problem has gone unnoticed for decades, and it affects
both CRDTs and Operational Transformation. This paper presents Fugue, the first
algorithm that guarantees maximal non-interleaving, our new correctness
property for replicated lists. We present two variants of the Fugue algorithm,
one based on a tree and the other based on a list, and prove that they are
semantically equivalent. We also implement Fugue and demonstrate that it offers
performance comparable to state-of-the-art CRDT libraries for text editing.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Streaming $k$-edit approximate pattern matching via string decomposition</title>
    <link href="http://arxiv.org/abs/2305.00615"/>
    <id>http://arxiv.org/abs/2305.00615</id>
    <updated>2023-05-02T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Bhattacharya_S/0/1/0/all/0/1&quot;&gt;Sudatta Bhattacharya&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Koucky_M/0/1/0/all/0/1&quot;&gt;Michal Kouck&amp;#xfd;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this paper we give an algorithm for streaming $k$-edit approximate pattern
matching which uses space $\widetilde{O}(k^2)$ and time $\widetilde{O}(k^2)$
per arriving symbol. This improves substantially on the recent algorithm of
Kociumaka, Porat and Starikovskaya (2022) which uses space $\widetilde{O}(k^5)$
and time $\widetilde{O}(k^8)$ per arriving symbol. In the $k$-edit approximate
pattern matching problem we get a pattern $P$ and text $T$ and we want to
identify all substrings of the text $T$ that are at edit distance at most $k$
from $P$. In the streaming version of this problem both the pattern and the
text arrive in a streaming fashion symbol by symbol and after each symbol of
the text we need to report whether there is a current suffix of the text with
edit distance at most $k$ from $P$. We measure the total space needed by the
algorithm and time needed per arriving symbol.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Robustified Learning for Online Optimization with Memory Costs</title>
    <link href="http://arxiv.org/abs/2305.00677"/>
    <id>http://arxiv.org/abs/2305.00677</id>
    <updated>2023-05-02T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Li_P/0/1/0/all/0/1&quot;&gt;Pengfei Li&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Yang_J/0/1/0/all/0/1&quot;&gt;Jianyi Yang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ren_S/0/1/0/all/0/1&quot;&gt;Shaolei Ren&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Online optimization with memory costs has many real-world applications, where
sequential actions are made without knowing the future input. Nonetheless, the
memory cost couples the actions over time, adding substantial challenges.
Conventionally, this problem has been approached by various expert-designed
online algorithms with the goal of achieving bounded worst-case competitive
ratios, but the resulting average performance is often unsatisfactory. On the
other hand, emerging machine learning (ML) based optimizers can improve the
average performance, but suffer from the lack of worst-case performance
robustness. In this paper, we propose a novel expert-robustified learning (ERL)
approach, achieving {both} good average performance and robustness. More
concretely, for robustness, ERL introduces a novel projection operator that
robustifies ML actions by utilizing an expert online algorithm; for average
performance, ERL trains the ML optimizer based on a recurrent architecture by
explicitly considering downstream expert robustification. We prove that, for
any $\lambda\geq1$, ERL can achieve $\lambda$-competitive against the expert
algorithm and $\lambda\cdot C$-competitive against the optimal offline
algorithm (where $C$ is the expert&#39;s competitive ratio). Additionally, we
extend our analysis to a novel setting of multi-step memory costs. Finally, our
analysis is supported by empirical experiments for an energy scheduling
application.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Efficient dynamic model based testing using greedy test case selection</title>
    <link href="http://arxiv.org/abs/2305.00705"/>
    <id>http://arxiv.org/abs/2305.00705</id>
    <updated>2023-05-02T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Spaendonck_P/0/1/0/all/0/1&quot;&gt;P.H.M. van Spaendonck&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Model-based testing (MBT) provides an automated approach for finding
discrepancies between software models and their implementation. If we want to
incorporate MBT into the fast and iterative software development process that
is Continuous Integration Continuous Deployment, then MBT must be able to test
the entire model in as little time as possible. However, current academic MBT
tools either traverse models at random, which we show to be ineffective for
this purpose, or use precalculated optimal paths which can not be efficiently
calculated for large industrial models. We provide a new traversal strategy
that provides an improvement in error-detection rate comparable to using
recalculated paths. We show that the new strategy is able to be applied
efficiently to large models. The benchmarks are performed on a mix of
real-world and pseudo-randomly generated models. We observe no significant
difference between these two types of models.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Computational Complexity: There are an infinite number of proofs that there are an infinite number of primes</title>
    <link href="https://blog.computationalcomplexity.org/2023/05/there-are-infinite-number-of-proofs.html"/>
    <id>tag:blogger.com,1999:blog-3722233.post-747317852549327178</id>
    <updated>2023-05-01T13:05:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;In the last few years there have been four papers that prove the primes are infinite using some number theory and some Ramsey Theory. The papers are:&lt;/p&gt;&lt;p&gt;&lt;i&gt;Van der Waerden and the primes&lt;/i&gt;&amp;nbsp;by Alpoge. See&amp;nbsp;&lt;a href=&quot;https://www.cs.umd.edu/~gasarch/BLOGPAPERS/alpoge-primes.pdf&quot;&gt;here&lt;/a&gt;&amp;nbsp;or&amp;nbsp;&lt;a href=&quot;https://www.tandfonline.com/doi/abs/10.4169/amer.math.monthly.122.8.784&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;i&gt;Squares in arithmetic progression and infinitely many primes &lt;/i&gt;by Granville. See&amp;nbsp;&lt;a href=&quot;https://arxiv.org/abs/1708.06951&quot;&gt;here&lt;/a&gt;&amp;nbsp;or&amp;nbsp;&lt;a href=&quot;https://www.tandfonline.com/doi/abs/10.4169/amer.math.monthly.124.10.951&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;i&gt;Fermat&#39;s last theorem implies the infinitude of primes&lt;/i&gt; by Elsholtz. See&amp;nbsp;&lt;a href=&quot;https://arxiv.org/abs/2009.06722&quot;&gt;here&lt;/a&gt;&amp;nbsp;or&amp;nbsp;&lt;a href=&quot;https://www.tandfonline.com/doi/full/10.1080/00029890.2021.1856544&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;i&gt;Fermat&#39;s last theorem, Schur&#39;s theorem (in Ramsey Theory), and the infinitude of the primes &lt;/i&gt;by Gasarch See&amp;nbsp;&lt;a href=&quot;https://arxiv.org/abs/2302.04755&quot;&gt;here&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/S0012365X23000225?via%3Dihub&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;(I included the arxiv version and the doi pointer.)&lt;/p&gt;&lt;p&gt;We also note that&lt;/p&gt;&lt;p&gt;1) Mestrovic has collected up 183 proofs that the primes are infinite, see&amp;nbsp;&lt;a href=&quot;https://arxiv.org/pdf/1202.3670.pdf&quot;&gt;here&lt;/a&gt;. Some of them are similar so if you mod out by similarity you would get fewer proofs. How many you get depends on your criteria for similarity. This comment applies to other theorems that have many proofs.&amp;nbsp;&lt;/p&gt;&lt;p&gt;2) Quanta recently published an article about the fact that there are an so many proofs, though highlighting the four mentioned above. See&amp;nbsp;&lt;a href=&quot;https://www.quantamagazine.org/why-mathematicians-re-prove-what-they-already-know-20230426/&quot;&gt;here&lt;/a&gt;. (This might be behind a paywall.)&amp;nbsp;&lt;/p&gt;&lt;p&gt;This raises the obvious question:&lt;/p&gt;&lt;p&gt;Why are there so many proofs that the primes are infinite?&amp;nbsp;&lt;/p&gt;&lt;p&gt;Some thoughts&lt;/p&gt;&lt;p&gt;1) Which other theorems have many proofs?&lt;/p&gt;&lt;p&gt;a) &lt;i&gt;The Pythagorean Theorem&lt;/i&gt;. See&amp;nbsp;&lt;a href=&quot;https://link.springer.com/article/10.1057/jt.2009.16#:~:text=There%20are%20well%20over%20371,the%20United%20States%20James%20A.&quot;&gt;here&lt;/a&gt;&amp;nbsp;for the claim that there are 371 proofs. There is a recent claim of a proof using trigonometry&amp;nbsp;&lt;a href=&quot;https://www.youtube.com/watch?v=p6j2nZKwf20&quot;&gt;here&lt;/a&gt;&amp;nbsp;(this was thought to be impossible since it would involve a circular argument).&amp;nbsp;&lt;/p&gt;&lt;p&gt;b) According to Wikipedia (see &lt;a href=&quot;https://en.wikipedia.org/wiki/Quadratic_reciprocity&quot;&gt;here&lt;/a&gt;) &lt;i&gt;The law of quadratic reciprocity&lt;/i&gt; has 240&amp;nbsp; proofs.&amp;nbsp; This paper&amp;nbsp;&lt;a href=&quot;https://egrove.olemiss.edu/cgi/viewcontent.cgi?article=2539&amp;amp;context=etd#:~:text=Having%20a%20total%20of%20246,laws%20in%20the%20natural%20sciences.&quot;&gt;here&lt;/a&gt;&amp;nbsp;has some of them. That paper also shows&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;i&gt;QR IMPLIES primes infinite&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;&amp;nbsp;Actually more: &lt;i&gt;QR IMPLIES&amp;nbsp; primes \(\equiv 4 \pmod 5\) is infinite.&lt;/i&gt;&lt;/p&gt;&lt;p&gt;c) \(\sqrt 2\) &lt;i&gt;is irrational&lt;/i&gt; has many proofs. I can&#39;t find a clean reference that states there are many proofs---if you know one, leave a comment. Wikipedia (see&amp;nbsp;&lt;a href=&quot;https://en.wikipedia.org/wiki/Square_root_of_2#:~:text=Geometrically%2C%20the%20square%20root%20of,number%20known%20to%20be%20irrational.&quot;&gt;here&lt;/a&gt;) has five proofs, though there are many more.&amp;nbsp;&lt;/p&gt;&lt;p&gt;d) There is a mathoverflow post about theorems with many proofs&amp;nbsp;&lt;a href=&quot;https://mathoverflow.net/questions/401493/theorems-with-many-distinct-proofs&quot;&gt;here&lt;/a&gt;. I had thought only easy theorems had many proofs; however, there are several hard ones on this list.&amp;nbsp;&lt;/p&gt;&lt;p&gt;2) Primes are so basic that many parts of math can be used to proof they are infinite.&lt;/p&gt;&lt;p&gt;3) WHY do people do these proofs? For the four papers listed above, and likely for many of the other proofs,&amp;nbsp; the proof that primes are infinite is&amp;nbsp; a springboard to other questions or concepts. We look at those four papers:&amp;nbsp;&lt;/p&gt;&lt;p&gt;a) Alpoge&#39;s showed&amp;nbsp;&lt;i&gt;Van Der Waerden&#39;s theorem and Unique factorization&lt;/i&gt;&amp;nbsp;IMPLIES&amp;nbsp;&lt;i&gt;primes infinite.&lt;/i&gt; Alpoge didn&#39;t use this as a springboard to other questions, but is amused that VDW can be used to prove primes infinite. I will note that the proof made me realize (a)&amp;nbsp; the proof of Unique Factorization does NOT use that primes are infinite, and (b) ANY integral domain with Unique Factorization has an infinite number of primes.&amp;nbsp;&lt;/p&gt;&lt;p&gt;b) Granville&#39;s showed&amp;nbsp;&lt;i&gt;VDW&#39;s Theorem and also a result of Fermat that there cannot be four squares&lt;/i&gt; &lt;i&gt;in arithmetic progression &lt;/i&gt;IMPLIES&amp;nbsp;&lt;i&gt;primes infinite&lt;/i&gt;.&amp;nbsp;He then uses this as a springboard to talk&amp;nbsp; about other interactions between Ramsey Theory and Number Theory.&amp;nbsp; Let Q(N) be the max number of squares in arithmetic sequence of length N. Find upper and lower asy bounds on Q(N). From Szemeredi&#39;s theorem (which is part of Ramsey theory) Szemeredi himself showed that for all \(\delta&amp;gt;0, Q(N) &amp;lt; \delta N\). Granville&#39;s paper shows how to get this result from a corollary to Faltings theorem. He also notes that better is known: \(Q(N) &amp;lt; N^{3/5 + \epsilon}\).&amp;nbsp;&lt;/p&gt;&lt;p&gt;c) Elsholtz showed &lt;i&gt;Schur&#39;s theorem (for all c there is an S=S(c) such that for all c-colorings of {1,...,S}&lt;/i&gt; &lt;i&gt;there exists x,y,z the same color such that x+y=z)&lt;/i&gt; and &lt;i&gt;FLT (the n=3 case or n=4 case) &lt;/i&gt;IMPLIES primes infinite.&amp;nbsp;He then looks at various INFINITE Ramsey Theorems that imply the primes are infinite.&lt;/p&gt;&lt;p&gt;d) Gasarch&#39;s proof is identical to Elsholtz. He then looks at (1) for domains with a finite number of primes, what goes wrong? (2) when does the proof apply to other integral domains? The last question involves looking at variants of FLT some of which are open questions.&amp;nbsp;&lt;/p&gt;&lt;p&gt;4) Gasarch also wondered about the following (though its not in his paper). The four papers above, and also other proofs that the primes are infinite, are of the form&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;i&gt;A&amp;nbsp; &lt;/i&gt;IMPLIES&lt;i&gt; Primes are infinite&lt;/i&gt;&lt;/p&gt;&lt;p&gt;Are we really using A? How to pin this down? Find a logical system L such that&amp;nbsp;&lt;/p&gt;&lt;p&gt;1) From L one can show &lt;i&gt;A &lt;/i&gt;IMPLIES&lt;i&gt;&amp;nbsp;Primes are infinite&lt;/i&gt;&lt;/p&gt;&lt;p&gt;2) From L one CANNOT prove &lt;i&gt;Primes are infinite. &lt;/i&gt;(You may need some hardness assumption)&lt;/p&gt;&lt;p&gt;One can also examine this kind of question for other theorems like sqrt(2) is irrational.&amp;nbsp;&lt;/p&gt;&lt;p&gt;I have shown this to several people and am told its not doable. Oh well.&amp;nbsp;&lt;/p&gt;&lt;p&gt;I had a prior blog on this, after I saw Alpoge&#39;s proof,&amp;nbsp; see&amp;nbsp;&lt;a href=&quot;https://blog.computationalcomplexity.org/2017/11/van-der-waerdens-theorem-implies.html#comment-form&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;ADDED LATER: a commenter left a link to a math overflow page that has information on the reverse mathematics of Euclid&#39;s theorem that the primes are infinite. The link is&amp;nbsp;&lt;a href=&quot;https://mathoverflow.net/questions/319686/reverse-mathematics-of-euclids-theorem&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;5) USUALLY mathematicians want to (or should want to) find EASIER proofs of HARD theorems.&amp;nbsp;&lt;/p&gt;&lt;p&gt;For some of the proofs that primes are infinite, QR, \(\sqrt 2\) irrational, some other theorems that have many proofs, mathematicians want to find HARD proofs of EASY theorems.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By gasarch&lt;/p&gt;
  </content>
    <author>
      <name>Computational Complexity</name>
      <uri>http://blog.computationalcomplexity.org/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: The Fine-Grained Complexity of Boolean Conjunctive Queries and Sum-Product Problems</title>
    <link href="http://arxiv.org/abs/2304.14557"/>
    <id>http://arxiv.org/abs/2304.14557</id>
    <updated>2023-05-01T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fan_A/0/1/0/all/0/1&quot;&gt;Austen Z. Fan&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Koutris_P/0/1/0/all/0/1&quot;&gt;Paraschos Koutris&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhao_H/0/1/0/all/0/1&quot;&gt;Hangdong Zhao&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the fine-grained complexity of evaluating Boolean Conjunctive
Queries and their generalization to sum-of-product problems over an arbitrary
semiring. For these problems, we present a general semiring-oblivious reduction
from the k-clique problem to any query structure (hypergraph). Our reduction
uses the notion of embedding a graph to a hypergraph, first introduced by
Marx~\cite{Marx13}. As a consequence of our reduction, we can show tight
conditional lower bounds for many classes of hypergraphs, including cycles,
Loomis-Whitney joins, some bipartite graphs, and chordal graphs. These lower
bounds have a dependence on what we call the clique embedding power of a
hypergraph H, which we believe is a quantity of independent interest. We show
that the clique embedding power is always less than the submodular width of the
hypergraph, and present a decidable algorithm for computing it. We conclude
with many open problems for future research.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: A Critique of Czerwinski&#39;s &quot;Separation of ${\rm PSPACE}$ and ${\rm EXP}$&quot;</title>
    <link href="http://arxiv.org/abs/2304.14575"/>
    <id>http://arxiv.org/abs/2304.14575</id>
    <updated>2023-05-01T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Clingerman_I/0/1/0/all/0/1&quot;&gt;Ian Clingerman&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Luu_Q/0/1/0/all/0/1&quot;&gt;Quan Luu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Czerwinski&#39;s paper &quot;Separation of ${\rm PSPACE}$ and ${\rm EXP}$&quot; [Cze21]
claims to prove that ${\rm PSPACE} \neq {\rm EXP}$ by showing there is no
length-increasing polynomial-time reduction from a given ${\rm EXP}$-complete
set to a given ${\rm PSPACE}$-complete set. However, in this critique, we show
that there are fundamental flaws within the paper&#39;s approach and provide a
counterexample to one of the paper&#39;s theorems, which makes the proposed proof
that ${\rm PSPACE} \neq {\rm EXP}$ insufficient.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Stretching Demi-Bits and Nondeterministic-Secure Pseudorandomness</title>
    <link href="http://arxiv.org/abs/2304.14700"/>
    <id>http://arxiv.org/abs/2304.14700</id>
    <updated>2023-05-01T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Tzameret_I/0/1/0/all/0/1&quot;&gt;Iddo Tzameret&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhang_L/0/1/0/all/0/1&quot;&gt;Lu-Ming Zhang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We develop the theory of cryptographic nondeterministic-secure
pseudorandomness beyond the point reached by Rudich&#39;s original work (Rudich
1997), and apply it to draw new consequences in average-case complexity and
proof complexity. Specifically, we show the following:
&lt;/p&gt;
&lt;p&gt;*Demi-bit stretch*: Super-bits and demi-bits are variants of cryptographic
pseudorandom generators which are secure against nondeterministic statistical
tests (Rudich 1997). They were introduced to rule out certain approaches to
proving strong complexity lower bounds beyond the limitations set out by the
Natural Proofs barrier (Rudich and Razborov 1997). Whether demi-bits are
stretchable at all had been an open problem since their introduction. We answer
this question affirmatively by showing that: every demi-bit $b:\{0,1\}^n\to
\{0,1\}^{n+1}$ can be stretched into sublinear many demi-bits
$b&#39;:\{0,1\}^{n}\to \{0,1\}^{n+n^{c}}$, for every constant $0&amp;lt;c&amp;lt;1$.
&lt;/p&gt;
&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; see rest of abstract in paper.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Upward Translation of Optimal and P-Optimal Proof Systems in the Boolean Hierarchy over NP</title>
    <link href="http://arxiv.org/abs/2304.14702"/>
    <id>http://arxiv.org/abs/2304.14702</id>
    <updated>2023-05-01T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Egidy_F/0/1/0/all/0/1&quot;&gt;Fabian Egidy&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Glasser_C/0/1/0/all/0/1&quot;&gt;Christian Gla&amp;#xdf;er&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Herold_M/0/1/0/all/0/1&quot;&gt;Martin Herold&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the existence of optimal and p-optimal proof systems for classes in
the Boolean hierarchy over $\mathrm{NP}$. Our main results concern
$\mathrm{DP}$, i.e., the second level of this hierarchy:
&lt;/p&gt;
&lt;p&gt;If all sets in $\mathrm{DP}$ have p-optimal proof systems, then all sets in
$\mathrm{coDP}$ have p-optimal proof systems. The analogous implication for
optimal proof systems fails relative to an oracle.
&lt;/p&gt;
&lt;p&gt;As a consequence, we clarify such implications for all classes $\mathcal{C}$
and $\mathcal{D}$ in the Boolean hierarchy over $\mathrm{NP}$: either we can
prove the implication or show that it fails relative to an oracle. Furthermore,
we show that the sets $\mathrm{SAT}$ and $\mathrm{TAUT}$ have p-optimal proof
systems, if and only if all sets in the Boolean hierarchy over $\mathrm{NP}$
have p-optimal proof systems which is a new characterization of a conjecture
studied by Pudl\&#39;ak.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Robust Stackelberg Equilibria</title>
    <link href="http://arxiv.org/abs/2304.14990"/>
    <id>http://arxiv.org/abs/2304.14990</id>
    <updated>2023-05-01T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gan_J/0/1/0/all/0/1&quot;&gt;Jiarui Gan&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Han_M/0/1/0/all/0/1&quot;&gt;Minbiao Han&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wu_J/0/1/0/all/0/1&quot;&gt;Jibang Wu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Xu_H/0/1/0/all/0/1&quot;&gt;Haifeng Xu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;This paper provides a systematic study of the robust Stackelberg equilibrium
(RSE), which naturally generalizes the widely adopted solution concept of the
strong Stackelberg equilibrium (SSE). The RSE accounts for any possible
up-to-$\delta$ suboptimal follower responses in Stackelberg games and is
adopted to improve the robustness of the leader&#39;s strategy. While a few
variants of robust Stackelberg equilibrium have been considered in previous
literature, the RSE solution concept we consider is importantly different -- in
some sense, it relaxes previously studied robust Stackelberg strategies and is
applicable to much broader sources of uncertainties.
&lt;/p&gt;
&lt;p&gt;We provide a thorough investigation of several fundamental properties of RSE,
including its utility guarantees, algorithmics, and learnability. We first show
that the RSE we defined always exists and thus is well-defined. Then we
characterize how the leader&#39;s utility in RSE changes with the robustness level
considered. On the algorithmic side, we show that, in sharp contrast to the
tractability of computing an SSE, it is NP-hard to obtain a fully polynomial
approximation scheme (FPTAS) for any constant robustness level. Nevertheless,
we develop a quasi-polynomial approximation scheme (QPTAS) for RSE. Finally, we
examine the learnability of the RSE in a natural learning scenario, where both
players&#39; utilities are not known in advance, and provide almost tight sample
complexity results on learning the RSE. As a corollary of this result, we also
obtain an algorithm for learning SSE, which strictly improves a key result of
Bai et al. in terms of both utility guarantee and computational efficiency.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Wasserstein Dictionaries of Persistence Diagrams</title>
    <link href="http://arxiv.org/abs/2304.14852"/>
    <id>http://arxiv.org/abs/2304.14852</id>
    <updated>2023-05-01T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sisouk_K/0/1/0/all/0/1&quot;&gt;Keanu Sisouk&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Delon_J/0/1/0/all/0/1&quot;&gt;Julie Delon&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Tierny_J/0/1/0/all/0/1&quot;&gt;Julien Tierny&lt;/a&gt;&lt;/p&gt;&lt;p&gt;This paper presents a computational framework for the concise encoding of an
ensemble of persistence diagrams, in the form of weighted Wasserstein
barycenters [99], [101] of a dictionary of atom diagrams. We introduce a
multi-scale gradient descent approach for the efficient resolution of the
corresponding minimization problem, which interleaves the optimization of the
barycenter weights with the optimization of the atom diagrams. Our approach
leverages the analytic expressions for the gradient of both sub-problems to
ensure fast iterations and it additionally exploits shared-memory parallelism.
Extensive experiments on public ensembles demonstrate the efficiency of our
approach, with Wasserstein dictionary computations in the orders of minutes for
the largest examples. We show the utility of our contributions in two
applications. First, we apply Wassserstein dictionaries to data reduction and
reliably compress persistence diagrams by concisely representing them with
their weights in the dictionary. Second, we present a dimensionality reduction
framework based on a Wasserstein dictionary defined with a small number of
atoms (typically three) and encode the dictionary as a low dimensional simplex
embedded in a visual space (typically in 2D). In both applications,
quantitative experiments assess the relevance of our framework. Finally, we
provide a C++ implementation that can be used to reproduce our results.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Topological Data Analysis of Electroencephalogram Signals for Pediatric Obstructive Sleep Apnea</title>
    <link href="http://arxiv.org/abs/2304.14853"/>
    <id>http://arxiv.org/abs/2304.14853</id>
    <updated>2023-05-01T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Manjunath_S/0/1/0/all/0/1&quot;&gt;Shashank Manjunath&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Perea_J/0/1/0/all/0/1&quot;&gt;Jose A. Perea&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Sathyanarayana_A/0/1/0/all/0/1&quot;&gt;Aarti Sathyanarayana&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Topological data analysis (TDA) is an emerging technique for biological
signal processing. TDA leverages the invariant topological features of signals
in a metric space for robust analysis of signals even in the presence of noise.
In this paper, we leverage TDA on brain connectivity networks derived from
electroencephalogram (EEG) signals to identify statistical differences between
pediatric patients with obstructive sleep apnea (OSA) and pediatric patients
without OSA. We leverage a large corpus of data, and show that TDA enables us
to see a statistical difference between the brain dynamics of the two groups.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Structural Parameterizations for Two Bounded Degree Problems Revisited</title>
    <link href="http://arxiv.org/abs/2304.14724"/>
    <id>http://arxiv.org/abs/2304.14724</id>
    <updated>2023-05-01T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lampis_M/0/1/0/all/0/1&quot;&gt;Michael Lampis&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Vasilakis_M/0/1/0/all/0/1&quot;&gt;Manolis Vasilakis&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We revisit two well-studied problems, Bounded Degree Vertex Deletion and
Defective Coloring, where the input is a graph $G$ and a target degree $\Delta$
and we are asked either to edit or partition the graph so that the maximum
degree becomes bounded by $\Delta$. Both are known to be parameterized
intractable for treewidth.
&lt;/p&gt;
&lt;p&gt;We revisit the parameterization by treewidth, as well as several related
parameters and present a more fine-grained picture of the complexity of both
problems.
&lt;/p&gt;
&lt;p&gt;Both admit straightforward DP algorithms with table sizes
$(\Delta+2)^\mathrm{tw}$ and $(\chi_\mathrm{d}(\Delta+1))^{\mathrm{tw}}$
respectively, where tw is the input graph&#39;s treewidth and $\chi_\mathrm{d}$ the
number of available colors. We show that both algorithms are optimal under
SETH, even if we replace treewidth by pathwidth. Along the way, we also obtain
an algorithm for Defective Coloring with complexity quasi-linear in the table
size, thus settling the complexity of both problems for these parameters.
&lt;/p&gt;
&lt;p&gt;We then consider the more restricted parameter tree-depth, and bridge the gap
left by known lower bounds, by showing that neither problem can be solved in
time $n^{o(\mathrm{td})}$ under ETH. In order to do so, we employ a recursive
low tree-depth construction that may be of independent interest.
&lt;/p&gt;
&lt;p&gt;Finally, we show that for both problems, an $\mathrm{vc}^{o(\mathrm{vc})}$
algorithm would violate ETH, thus already known algorithms are optimal. Our
proof relies on a new application of the technique of $d$-detecting families
introduced by Bonamy et al.
&lt;/p&gt;
&lt;p&gt;Our results, although mostly negative in nature, paint a clear picture
regarding the complexity of both problems in the landscape of parameterized
complexity, since in all cases we provide essentially matching upper and lower
bounds.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Approximate Nearest Neighbor for Polygonal Curves under Fr\&#39;echet Distance</title>
    <link href="http://arxiv.org/abs/2304.14643"/>
    <id>http://arxiv.org/abs/2304.14643</id>
    <updated>2023-05-01T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Cheng_S/0/1/0/all/0/1&quot;&gt;Siu-Wing Cheng&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Huang_H/0/1/0/all/0/1&quot;&gt;Haoqiang Huang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We propose $\kappa$-approximate nearest neighbor (ANN) data structures for
$n$ polygonal curves under the Fr\&#39;{e}chet distance in $\real^d$, where $\kappa
\in \{1+\eps,3+\eps\}$ and $d \geq 2$. We assume that every input curve has at
most $m$ vertices, every query curve has at most $k$ vertices, $k \ll m$, and
$k$ is given for preprocessing. The query times are
$\tilde{O}(k(mn)^{0.5+\eps}/\eps^d+ k(d/\eps)^{O(dk)})$ for $(1+\eps)$-ANN and
$\tilde{O}(k(mn)^{0.5+\eps}/\eps^d)$ for $(3+\eps)$-ANN. The space and expected
preprocessing time are $\tilde{O}(k(mnd^d/\eps^d)^{O(k+1/\eps^2)})$ in both
cases. In two and three dimensions, we improve the query times to
$O(1/\eps)^{O(k)} \cdot \tilde{O}(k)$ for $(1+\eps)$-ANN and $\tilde{O}(k)$ for
$(3+\eps)$-ANN. The space and expected preprocessing time improve to
$O(mn/\eps)^{O(k)} \cdot \tilde{O}(k)$ in both cases. For ease of presentation,
we treat factors in our bounds that depend purely on $d$ as~$O(1)$. The hidden
polylog factors in the big-$\tilde{O}$ notation have powers dependent on $d$.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Hardness of Finding Combinatorial Shortest Paths on Graph Associahedra</title>
    <link href="http://arxiv.org/abs/2304.14782"/>
    <id>http://arxiv.org/abs/2304.14782</id>
    <updated>2023-05-01T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Ito_T/0/1/0/all/0/1&quot;&gt;Takehiro Ito&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Kakimura_N/0/1/0/all/0/1&quot;&gt;Naonori Kakimura&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Kamiyama_N/0/1/0/all/0/1&quot;&gt;Naoyuki Kamiyama&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Kobayashi_Y/0/1/0/all/0/1&quot;&gt;Yusuke Kobayashi&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Maezawa_S/0/1/0/all/0/1&quot;&gt;Shun-ichi Maezawa&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Nozaki_Y/0/1/0/all/0/1&quot;&gt;Yuta Nozaki&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Okamoto_Y/0/1/0/all/0/1&quot;&gt;Yoshio Okamoto&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We prove that the computation of a combinatorial shortest path between two
vertices of a graph associahedron, introduced by Carr and Devadoss, is NP-hard.
This resolves an open problem raised by Cardinal. A graph associahedron is a
generalization of the well-known associahedron. The associahedron is obtained
as the graph associahedron of a path. It is a tantalizing and important open
problem in theoretical computer science whether the computation of a
combinatorial shortest path between two vertices of the associahedron can be
done in polynomial time, which is identical to the computation of the flip
distance between two triangulations of a convex polygon, and the rotation
distance between two rooted binary trees. Our result shows that a certain
generalized approach to tackling this open problem is not promising. As a
corollary of our theorem, we prove that the computation of a combinatorial
shortest path between two vertices of a polymatroid base polytope cannot be
done in polynomial time unless P = NP. Since a combinatorial shortest path on
the matroid base polytope can be computed in polynomial time, our result
reveals an unexpected contrast between matroids and polymatroids.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Windows on Theory: 5 worlds of AI</title>
    <link href="https://windowsontheory.org/2023/04/30/5-worlds-of-ai/"/>
    <id>http://windowsontheory.org/?p=8605</id>
    <updated>2023-04-30T21:39:21+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;Scott Aaronson and I wrote a post about&lt;a href=&quot;https://scottaaronson.blog/?p=7266&quot;&gt; 5 possible worlds for (the progress of) Artificial Intelligence&lt;/a&gt;. See Scott&amp;#8217;s blog for the post itself and discussions.&lt;/p&gt;



&lt;p&gt;The post was, of course, inspired by the &lt;a href=&quot;https://www.karlin.mff.cuni.cz/~krajicek/ri5svetu.pdf&quot;&gt;classic essay&lt;/a&gt; on the 5 worlds of computational complexity by &lt;a href=&quot;https://cseweb.ucsd.edu/~russell/&quot;&gt;Russell Impagliazzo&lt;/a&gt; who will be turning 60 soon &amp;#8211; Happy birthday! &lt;/p&gt;



&lt;p&gt;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;a href=&quot;https://windowsontheory.files.wordpress.com/2023/04/image-3.png&quot;&gt;&lt;img data-attachment-id=&quot;8609&quot; data-permalink=&quot;https://windowsontheory.org/2023/04/30/5-worlds-of-ai/image-3-3/&quot; data-orig-file=&quot;https://windowsontheory.files.wordpress.com/2023/04/image-3.png&quot; data-orig-size=&quot;447,640&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;image-3&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://windowsontheory.files.wordpress.com/2023/04/image-3.png?w=210&quot; data-large-file=&quot;https://windowsontheory.files.wordpress.com/2023/04/image-3.png?w=447&quot; src=&quot;https://windowsontheory.files.wordpress.com/2023/04/image-3.png?w=447&quot; alt=&quot;&quot; class=&quot;wp-image-8609&quot; srcset=&quot;https://windowsontheory.files.wordpress.com/2023/04/image-3.png 447w, https://windowsontheory.files.wordpress.com/2023/04/image-3.png?w=105 105w, https://windowsontheory.files.wordpress.com/2023/04/image-3.png?w=210 210w&quot; sizes=&quot;(max-width: 447px) 100vw, 447px&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;p class=&quot;authors&quot;&gt;By Boaz Barak&lt;/p&gt;
  </content>
    <author>
      <name>Windows on Theory</name>
      <uri>https://windowsontheory.org</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">David Eppstein: Linkage</title>
    <link href="https://11011110.github.io/blog/2023/04/30/linkage.html"/>
    <id>https://11011110.github.io/blog/2023/04/30/linkage</id>
    <updated>2023-04-30T16:59:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Wikipedia:Administrators%27_noticeboard/IncidentArchive1125#ChatGPT_comments_at_AFD&quot;&gt;We’ve already seen AI-generated peer-review for Wikipedia articles&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/110215235459028740&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;),&lt;/span&gt; with such brilliant insight as:&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;This article is extensive in its coverage of such a rich topic as Ontario Highway 11. It addresses the main points of Ontario Highway 11 in a way that isn’t just understandable to a reader, but also relatable. While Ontario Highway 11 is brimming with fascinating background trivia, the article does a great job staying focused on the topic of Ontario Highway 11 without going into unnecessary detail that isn’t directly related to Ontario Highway 11. Neutral point of view without bias is maintained perfectly in this article, despite Ontario Highway 11 being such a contentious and controversial topic. Images are truly beautiful and done with expert photographic skill. They definitely enhance the reader’s understanding of Ontario Highway 11. Without them, I wouldn’t have any idea what the highway looks like. But thanks to these wonderful images, I now understand that Ontario Highway 11 is a paved road that vehicles use to travel.&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;I originally asked, how long before this spreads to journal referee reports? But from second-hand reports in the comments, this has also happened already.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;San Francisco’s move to prevent talented high school students from taking advanced mathematics early, pushed hard by educationist Jo Boaler with the ostensible goal of improving disparities in schooling, &lt;a href=&quot;https://www.joannejacobs.com/post/algebra-for-none-fails-in-san-francisco&quot;&gt;has predictably failed to improve the ethnic and socioeconomic balance of the city’s advanced mathematics courses&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/110223929076976006&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;,&lt;/span&gt; &lt;a href=&quot;https://news.ycombinator.com/item?id=35595026&quot;&gt;via&lt;/a&gt;). Instead, “Families face a nightmare of workarounds to get their high-achieving children on track for advanced math”, more easily navigable by the already-privileged.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.smh.com.au/national/farmers-crippled-by-satellite-failure-as-gps-guided-tractors-grind-to-a-halt-20230418-p5d1de.html&quot;&gt;A signal failure stalled GPS-dependent tractors across farms in Australia and New Zealand&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/110234112368256390&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;,&lt;/span&gt; &lt;a href=&quot;https://news.ycombinator.com/item?id=35643705&quot;&gt;via&lt;/a&gt;), after one of the Inmarsat satellites providing accuracy enhancements to GPS in that part of the earth stopped working correctly. &lt;a href=&quot;https://www.abc.net.au/news/rural/2023-04-19/inmarsat-i-4-f1-satellite-operating-again-after-outage/102239674&quot;&gt;The satellite is back after an over-24-hour outage&lt;/a&gt; but this event “is prompting farmers and industry groups to examine their backup systems for the technology they are using”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://mathstodon.xyz/@mjd/110234853354707289&quot;&gt;Math StackExchange report&lt;/a&gt; by Mark Dominus: “simplest-possible examples, pointy regions, and nearly-orthogonal vectors”. Also with discussion about what kind of answers get upvoted (not the deepest and most insightful!) and on the value of asking poorly-formulated questions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Danpiker asks: &lt;a href=&quot;https://mathstodon.xyz/@Danpiker/110237176309119968&quot;&gt;In how many different ways can \(n\) circles be linked in \(\mathbb{R}^3\)?&lt;/a&gt; It’s not even entirely clear what the definition of “different” should be, and Ian Agol points out in the comments that even great circles in \(\mathbb{S}^3\) are as-yet unclassified, pointing to &lt;a href=&quot;https://arxiv.org/abs/math/0308048&quot;&gt;Genevieve Walsh’s dissertation on the subject&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.salemreporter.com/2023/04/13/math-breakthrough-inspires-local-educator/&quot;&gt;Math breakthrough inspires local educator&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@fractalkitty/110200137077541078&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; Profile in the &lt;em&gt;Salem Reporter&lt;/em&gt; of Sophia Wood aka Fractal Kitty and her mathematics-inspired crafts.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://mathstodon.xyz/@robinhouston/110246989262052781&quot;&gt;There are cubic graphs that cannot be partitioned into connected subgraphs of two and four vertices&lt;/a&gt;. However, &lt;a href=&quot;https://mathstodon.xyz/@11011110/110263657563692233&quot;&gt;every cubic graph with \(3n\) vertices can be partitioned into subgraphs of size \(n\) without isolated vertices&lt;/a&gt;. The proof involves partitioning into connected subgraphs of two and three vertices, with at most one four-vertex subgraph and at least four two-vertex subgraphs, grouping these into six-vertex subgraphs, and then breaking up one or two of the six-vertex subgraphs as needed to even out the three-way partition.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A confluent drawing style, in which vertices are connected by systems of “tracks” and are adjacent when there is a smooth curve connecting them through these tracks, allows &lt;a href=&quot;https://en.wikipedia.org/wiki/Chv%C3%A1tal_graph&quot;&gt;the Chvátal graph&lt;/a&gt; to be drawn with only a single crossing &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/110254999830816403&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;):&lt;/span&gt;&lt;/p&gt;

    &lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/blog/assets/2023/chvatal.svg&quot; alt=&quot;The Chvátal graph, a 4-regular triangle-free graph with 12 vertices, drawn in a confluent style with only one crossing. The edges of the graph are represented as smooth curves following the tracks of the drawing.&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.cbsnews.com/news/ukrainian-girls-math-olympiad-2023-top-european-team/&quot;&gt;Ukrainian team wins European Girls’ Mathematical Olympiad&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@rcorless/110237385397799751&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://mathstodon.xyz/@doctroid@vmst.io/110268197226215150&quot;&gt;A seven-piece dissection of a \(3\times 3\times 3\) cube into polycubes with a unique solution&lt;/a&gt;, leading to some discussion of what it means for the solution of a dissection puzzle to be unique.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://xkcd.com/2769/&quot;&gt;xkcd 2769, “Overlapping Circles”&lt;/a&gt; is surprisingly inaccurate &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/110279268920990941&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; The people interested in &lt;a href=&quot;https://en.wikipedia.org/wiki/Vesica_piscis&quot;&gt;the overlapping circle shape&lt;/a&gt; depicted are not just set theorists and astronomers; they also include geometers, scholars of Gothic architecture, and mystics.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://mathstodon.xyz/@santoleonardo/110277602536887500&quot;&gt;Ancient Roman hyperbolic tessellation from Lugdunum Musee de Lyon (France)&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://dailynous.com/2023/04/27/wiley-removes-goodin-as-editor-of-the-journal-of-political-philosophy/&quot;&gt;Wiley fires an editor of a philosophy journal&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/110285871753552037&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;,&lt;/span&gt; &lt;a href=&quot;https://retractionwatch.com/2023/04/29/weekend-reads-no-gender-bias-in-academic-science-an-editor-is-fired-foreign-research-fraud-in-australia/&quot;&gt;via&lt;/a&gt;), apparently for refusing to produce tenfold increases in the number of papers it publishes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://mathstodon.xyz/@dimpase/110287215596697015&quot;&gt;A bug in a 2008 conference paper on simplified fast modular decomposition of graphs&lt;/a&gt; leads to the question: what is the right way to correct the record when old conference papers are found to be buggy?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;authors&quot;&gt;By David Eppstein&lt;/p&gt;
  </content>
    <author>
      <name>David Eppstein</name>
      <uri>https://11011110.github.io/blog/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">CS Theory Events: FODSI Workshop on the Computational Complexity of Statistical Inference</title>
    <link href="https://cstheory-events.org/2023/04/30/fodsi-workshop-on-the-computational-complexity-of-statistical-inference/"/>
    <id>http://cstheory-events.org/2023/04/30/fodsi-workshop-on-the-computational-complexity-of-statistical-inference/</id>
    <updated>2023-04-30T03:39:36+00:00</updated>
    <content type="html" xml:lang="en">
    June 12-16, 2023 MIT, Building 1, Room 1-190 https://fodsi.us/ccsi.html FODSI @ MIT is organizing tutorial lectures and a workshop on the Computational Complexity of Statistical Inference The workshop will cover topics pertaining to the computational complexity of statistical inference. The workshop (June 14-16) will be preceded by two days of tutorials (June 12-13) on a &amp;#8230; &lt;a href=&quot;https://cstheory-events.org/2023/04/30/fodsi-workshop-on-the-computational-complexity-of-statistical-inference/&quot; class=&quot;more-link&quot;&gt;Continue reading &lt;span class=&quot;screen-reader-text&quot;&gt;FODSI Workshop on the Computational Complexity of Statistical&amp;#160;Inference&lt;/span&gt;&lt;/a&gt;&lt;p class=&quot;authors&quot;&gt;By shacharlovett&lt;/p&gt;
  </content>
    <author>
      <name>CS Theory Events</name>
      <uri>https://cstheory-events.org</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Richard Lipton: Dark Silicon</title>
    <link href="https://rjlipton.wpcomstaging.com/2023/04/29/dark-silicon/"/>
    <id>https://rjlipton.wpcomstaging.com/?p=21518</id>
    <updated>2023-04-29T13:46:44+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;
Ivan Sutherland played a key role in foundational computer technologies back in the 1970s. He won most if not all the major awards&amp;#8212;the &lt;a href=&quot;https://amturing.acm.org&quot;&gt;Turing Award&lt;/a&gt; and the &lt;a href=&quot;https://www.kyotoprize.org/en/award-field/information-science-en/&quot;&gt;Kyoto Prize&lt;/a&gt; in particular. &lt;/p&gt;
&lt;p&gt;
Now he sees a path for America to claim the mantle in &amp;#8220;micro&amp;#8221; chips. Check out this recent New York Times &lt;a href=&quot;https://www.nytimes.com/2023/04/19/technology/ivan-sutherland-superconducting-chips.html&quot;&gt;article&lt;/a&gt; on his view. &lt;/p&gt;
&lt;p&gt;&lt;P&gt;&lt;br /&gt;
&lt;a href=&quot;https://rjlipton.wpcomstaging.com/2023/04/29/dark-silicon/is-3/&quot; rel=&quot;attachment wp-att-21520&quot;&gt;&lt;img data-attachment-id=&quot;21520&quot; data-permalink=&quot;https://rjlipton.wpcomstaging.com/2023/04/29/dark-silicon/is-3/&quot; data-orig-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/04/is.jpeg?fit=194%2C260&amp;amp;ssl=1&quot; data-orig-size=&quot;194,260&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;is&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/04/is.jpeg?fit=194%2C260&amp;amp;ssl=1&quot; data-large-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/04/is.jpeg?fit=194%2C260&amp;amp;ssl=1&quot; decoding=&quot;async&quot; loading=&quot;lazy&quot; src=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/04/is.jpeg?resize=194%2C260&amp;#038;ssl=1&quot; alt=&quot;&quot; width=&quot;194&quot; height=&quot;260&quot; class=&quot;aligncenter size-full wp-image-21520&quot; srcset=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/04/is.jpeg?w=194&amp;amp;ssl=1 194w, https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/04/is.jpeg?resize=150%2C200&amp;amp;ssl=1 150w&quot; sizes=&quot;(max-width: 194px) 100vw, 194px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;more-21518&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;&lt;H2&gt; Dark Silicon &lt;/H2&gt;&lt;/p&gt;
&lt;p&gt;&lt;p&gt;
His insights are based on what is called &lt;a href=&quot;https://en.wikipedia.org/wiki/Dark_silicon&quot;&gt;Dark Silicon&lt;/a&gt;. If all the billions of transistors on a modern microprocessor chip are used simultaneously, the heat they create will melt the chip. This is &lt;b&gt;bad&lt;/b&gt;&amp;#8212;to use a technical term. Thus entire sections of modern chips are shut down and only some of the transistors are working at any time. This reins in energy use but makes the chips far less efficient overall.&lt;/p&gt;
&lt;p&gt;&lt;P&gt;&lt;br /&gt;
&lt;a href=&quot;https://rjlipton.wpcomstaging.com/2023/04/29/dark-silicon/dark2/&quot; rel=&quot;attachment wp-att-21521&quot;&gt;&lt;img data-attachment-id=&quot;21521&quot; data-permalink=&quot;https://rjlipton.wpcomstaging.com/2023/04/29/dark-silicon/dark2/&quot; data-orig-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/04/dark2.jpeg?fit=225%2C224&amp;amp;ssl=1&quot; data-orig-size=&quot;225,224&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;dark2&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/04/dark2.jpeg?fit=225%2C224&amp;amp;ssl=1&quot; data-large-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/04/dark2.jpeg?fit=225%2C224&amp;amp;ssl=1&quot; decoding=&quot;async&quot; loading=&quot;lazy&quot; src=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/04/dark2.jpeg?resize=225%2C224&amp;#038;ssl=1&quot; alt=&quot;&quot; width=&quot;225&quot; height=&quot;224&quot; class=&quot;aligncenter size-full wp-image-21521&quot; srcset=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/04/dark2.jpeg?w=225&amp;amp;ssl=1 225w, https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/04/dark2.jpeg?resize=150%2C150&amp;amp;ssl=1 150w, https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/04/dark2.jpeg?resize=200%2C200&amp;amp;ssl=1 200w&quot; sizes=&quot;(max-width: 225px) 100vw, 225px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;P&gt;&lt;br /&gt;
The upshot is that parts of a modern chip must be dark. &lt;/p&gt;
&lt;p&gt;&lt;H2&gt; A Challenge &lt;/H2&gt;&lt;/p&gt;
&lt;p&gt;&lt;p&gt;
As math-oriented types we find this issue quite interesting. See this &lt;a href=&quot;https://cseweb.ucsd.edu//~gvenkatesh/Publications_files/paper.pdf&quot;&gt;paper&lt;/a&gt; for more on the practical issues and &lt;a href=&quot;https://www.usenix.org/system/files/login/articles/hardavellas12-04.pdf&quot;&gt;this&lt;/a&gt; too. But the question could we feel be viewed as a theory type question. &lt;/p&gt;
&lt;p&gt;
Just as we in complexity theory study &lt;a href=&quot;https://www.hackerearth.com/practice/basic-programming/complexity-analysis/time-and-space-complexity/tutorial/&quot;&gt;time and space&lt;/a&gt; of computations, can we study them from the view of dark silicon? &lt;/p&gt;
&lt;p&gt;
Is there some formal model that forces computations to use dark silicon in some clever way? Just like computations that save space or even time could there be power-smart computations? Ken&amp;#8217;s Buffalo colleague Atri Rudra, his student &lt;a href=&quot;https://www.unf.edu/~s.roy/&quot;&gt;Swapnoneel Roy&lt;/a&gt; (now tenured at the University of North Florida), and Akshat Verma of IBM India created an energy consumption &lt;a href=&quot;https://dl.acm.org/doi/10.1145/2422436.2422470&quot;&gt;model&lt;/a&gt; that addresses various components. Can we solve some problem with a dark silicon algorithm? Is it possible to do this with some clever methods?&lt;/p&gt;
&lt;p&gt;
This seems like a possible formal theory problem. It also seems possible that certain encodings could be possible to reduce the cost of computation. Perhaps by encoding the problem in a clever way we could make the dark part of the computation smaller? &lt;/p&gt;
&lt;p&gt;
&lt;p&gt;&lt;H2&gt; Open Problems &lt;/H2&gt;&lt;/p&gt;
&lt;p&gt;&lt;p&gt;
Is there some hope to study computations from the dark silicon direction? Is this a possible formal question?&lt;/p&gt;
&lt;p&gt;
&lt;p class=&quot;authors&quot;&gt;By rjlipton&lt;/p&gt;
  </content>
    <author>
      <name>Richard Lipton</name>
      <uri>https://rjlipton.wpcomstaging.com</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR23-060 |  The Planted $k$-SUM Problem: Algorithms, Lower Bounds, Hardness Amplification, and Cryptography | 

	Nikolaj Schwartzbach, 

	Sagnik Saha, 

	Prashant Nalini Vasudevan</title>
    <link href="https://eccc.weizmann.ac.il/report/2023/060"/>
    <id>https://eccc.weizmann.ac.il/report/2023/060</id>
    <updated>2023-04-28T20:59:43+00:00</updated>
    <content type="html" xml:lang="en">
    In the average-case $k$-SUM problem, given $r$ integers chosen uniformly at random from $\{0,\ldots,M-1\}$, the objective is to find a set of $k$ numbers that sum to $0$ modulo $M$ (this set is called a ``solution&amp;#39;&amp;#39;). In the related $k$-XOR problem, given $k$ uniformly random Boolean vectors of length $\log{M}$, the objective is to find a set of $k$ of them whose bitwise-XOR is the all-zero vector. Both of these problems have widespread applications in the study of fine-grained complexity and cryptanalysis.
    
The feasibility and complexity of these problems depends on the relative values of $k$, $r$, and $M$. The dense regime of $M \leq r^k$, where solutions exist with high probability, is quite well-understood and we have several non-trivial algorithms and hardness conjectures here. Much less is known about the sparse regime of $M\gg r^k$, where solutions are unlikely to exist. The best answers we have for many fundamental questions here are limited to whatever carries over from the dense or worst-case settings. 

We study the planted $k$-SUM and $k$-XOR problems in the sparse regime. In these problems, a random solution is planted in a randomly generated instance and has to be recovered. As $M$ increases past $r^k$, these planted solutions tend to be the only solutions with increasing probability, potentially becoming easier to find. We show several results about the complexity and applications of these problems.

Conditional Lower Bounds: Assuming established conjectures about the hardness of average-case (non-planted) $k$-SUM when $M = r^k$, we show non-trivial lower bounds on the running time of algorithms for planted $k$-SUM when $r^k\leq M\leq r^{2k}$. We show the same for $k$-XOR as well.

Search-to-Decision Reduction: For any $M&amp;gt;r^k$, suppose there is an algorithm running in time $T$ that can distinguish between a random $k$-SUM instance and a random instance with a planted solution, with success probability $(1-o(1))$. Then, for the same $M$, there is an algorithm running in time $\widetilde{O}(T)$ that solves planted $k$-SUM with constant probability. The same holds for $k$-XOR as well.

Hardness Amplification: For any $M\geq r^k$, if an algorithm running in time $T$ solves planted $k$-XOR with success probability $\Omega(1/\text{polylog}(r))$, then there is an algorithm running in time $\widetilde{O}(T)$ that solves it with probability $(1-o(1))$. We show this by constructing a rapidly mixing random walk over $k$-XOR instances that preserves the planted solution.

Cryptography: For some $M \leq 2^{\mathrm{polylog}(r)}$, the hardness of the $k$-XOR problem can be used to construct Public-Key Encryption (PKE) assuming that the Learning Parity with Noise (LPN) problem over $n$-bit vectors with constant noise rate is hard for $2^{n^{0.01}}$-time algorithms. Previous constructions of PKE from LPN needed either a noise rate of $O(1/\sqrt{n})$, or hardness for $2^{n^{0.5}}$-time algorithms.

Algorithms: For any $M \geq 2^{r^2}$, there is a constant $c$ (independent of $k$) and an algorithm running in time $r^c$ that, for any $k$, solves planted $k$-SUM with success probability $\Omega(1/8^k)$. We get this by showing an average-case reduction from planted $k$-SUM to the Subset Sum problem. For $r^k \leq M \ll 2^{r^2}$, the best known algorithms are still the worst-case $k$-SUM algorithms running in time $r^{\lceil{k/2}\rceil-o(1)}$.
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR23-058 |  Explicit Directional Affine Extractors and Improved Hardness for Linear Branching Programs | 

	Xin Li, 

	Yan Zhong</title>
    <link href="https://eccc.weizmann.ac.il/report/2023/058"/>
    <id>https://eccc.weizmann.ac.il/report/2023/058</id>
    <updated>2023-04-28T20:57:45+00:00</updated>
    <content type="html" xml:lang="en">
    Affine extractors give some of the best-known lower bounds for various computational models, such as AC$^0$ circuits, parity decision trees, and general Boolean circuits. However, they are not known to give strong lower bounds for read-once branching programs (ROBPs). In a recent work, Gryaznov, Pudl\&amp;#39;{a}k, and Talebanfard (CCC&amp;#39; 22) introduced a stronger version of affine extractors known as directional affine extractors, together with a generalization of ROBPs where each node can make linear queries, and showed that the former implies strong lower bound for a certain type of the latter known as strongly read-once linear branching programs (SROLBPs). Their main result gives explicit constructions of directional affine extractors for entropy $k &amp;gt; 2n/3$, which implies average-case complexity $2^{n/3-o(n)}$ against SROLBPs with exponentially small correlation. A follow-up work by Chattopadhyay and Liao (ECCC&amp;#39; 22) improves the hardness to $2^{n-o(n)}$ at the price of increasing the correlation to polynomially large, via a new connection to sumset extractors introduced by Chattopadhyay and Li (STOC&amp;#39; 16) and explicit constructions of such extractors by Chattopadhyay and Liao (STOC&amp;#39; 22). Both works left open the questions of better constructions of directional affine extractors and improved average-case complexity against SROLBPs in the regime of small correlation.

This paper provides a much more in-depth study of directional affine extractors, SROLBPs, and ROBPs. Our main results include:
(1) formal separation between SROLBP and ROBP, showing that SROLBPs can be exponentially more powerful than ROBPs.
(2) An explicit construction of directional affine extractors with $k=o(n)$ and exponentially small error, which gives average-case complexity $2^{n-o(n)}$ against SROLBPs with exponentially small correlation, thus answering the two open questions raised in previous works.
(3) An explicit function in AC$^0$ that gives average-case complexity $2^{(1-\delta)n}$ against ROBPs with negligible correlation, for any constant $\delta&amp;gt;0$. Previously, the best size lower bound for any function in AC$^0$ against ROBPs is only $2^{\Omega(\sqrt{n})}$.


One of the key ingredients in our constructions is a new linear somewhere condenser for affine sources, which is based on dimension expanders. We conjecture that it also works for general weak random sources, and prove it under the Polynomial Freiman-Ruzsa conjecture. The condenser also leads to an unconditional improvement of the entropy requirement of explicit affine extractors with negligible error.
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR23-057 |  Stretching Demi-Bits and Nondeterministic-Secure Pseudorandomness | 

	Iddo  Tzameret, 

	Luming Zhang</title>
    <link href="https://eccc.weizmann.ac.il/report/2023/057"/>
    <id>https://eccc.weizmann.ac.il/report/2023/057</id>
    <updated>2023-04-28T20:57:05+00:00</updated>
    <content type="html" xml:lang="en">
    We develop the theory of cryptographic nondeterministic-secure pseudorandomness beyond the point reached by Rudich&amp;#39;s original work (Rudich 1997), and apply it to draw new consequences in average-case complexity and proof complexity. Specifically, we show the following: 

?*Demi-bit stretch*: Super-bits and demi-bits are variants of cryptographic pseudorandom generators which are secure against nondeterministic statistical tests (Rudich 1997). They were introduced to rule out certain approaches to proving strong complexity lower bounds beyond the limitations set out by the Natural Proofs barrier (Rudich and Razborov 1997).  Whether demi-bits are stretchable at all had been an open problem since their introduction. We answer this question affirmatively by showing that: every demi-bit $b:\{0,1\}^n\to \{0,1\}^{n+1}$ can be stretched into sublinear many demi-bits $b&amp;#39;:\{0,1\}^{n}\to \{0,1\}^{n+n^{c}}$, for every constant $0&amp;lt;c&amp;lt;1$.
    
?*Average-case hardness*: Using work by Santhanam (2020), we apply our results to obtain new  average-case Kolmogorov complexity results: we show that K$^{\rm poly}[n-O(1)]$ is zero-error average-case hard against NP/poly machines iff K$^{\rm poly}[n-o(n)]$ is, where  for a function $s(n):\mathbb{N}\to\mathbb{N}$, K$^{\rm poly}[s(n)]$ denotes the languages of all strings $x\in\{0,1\}^n$ for which there are (fixed) poly-time Turing machines of description-length at most $s(n)$ that output $x$.   

?*Characterising super-bits by nondeterministic unpredictability:* In the deterministic setting, Yao proved that super-polynomial hardness of pseudorandom generators is equivalent to (&amp;quot;next-bit&amp;quot;) unpredictability. Unpredictability roughly means that given any strict prefix of a random string, it is infeasible to predict the next bit. We initiate the study of unpredictability beyond the deterministic setting (in the cryptographic regime), and characterise the nondeterministic hardness of generators from an unpredictability perspective. Specifically, we propose four stronger notions of unpredictability:
NP/poly-unpredictability, coNP/poly-unpredictability, $\cap$-unpredictability and $\cup$-unpredictability, and show that super-polynomial nondeterministic hardness of generators lies between $\cap$-unpredictability and $\cup$-unpredictability.

?*Characterising super-bits by nondeterministic hard-core predicates:* We introduce a nondeterministic variant of hard-core predicates, called *super-core* predicates. We show that the existence of a super-bit is equivalent to the existence of a super-core of some non-shrinking function. This serves as an analogue of the equivalence between the existence of a strong pseudorandom generator and the existence of a hard-core of some one-way function (Goldreich and Levin 1989, Hastad, Impagliazzo, Levin and Luby 1999), and provides a first alternative characterisation of super-bits. We also prove that a certain class of functions, which may have hard-cores, cannot possess any super-core.
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">TCS+ Seminar Series: TCS+ talk: Wednesday, May 3 — Scott Aaronson, UT Austin</title>
    <link href="https://tcsplus.wordpress.com/2023/04/28/tcs-talk-wednesday-may-3-scott-aaronson-ut-austin/"/>
    <id>http://tcsplus.wordpress.com/?p=686</id>
    <updated>2023-04-28T10:27:46+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;The next TCS+ talk will take place this coming Wednesday, May 3rd at 2:30 PM Eastern Time (11:30 AM Pacific Time, 20:30 Central European Time, 18:30 UTC: &lt;strong&gt;note the unusual time!&lt;/strong&gt;). &lt;strong&gt;Scott Aaronson&lt;/strong&gt; from UT Austin will speak about &amp;#8220;&lt;em&gt;Certified Randomness from Quantum Supremacy&lt;/em&gt;&amp;#8221; (abstract below).&lt;/p&gt;
&lt;p&gt;You can reserve a spot as an individual or a group to join us live by signing up on &lt;a href=&quot;https://sites.google.com/view/tcsplus/welcome/next-tcs-talk&quot;&gt;the online form&lt;/a&gt;. Registration is &lt;em&gt;not&lt;/em&gt; required to attend the interactive talk, and the link will be posted on the website the day prior to the talk; however, by registering in the form, you will receive a reminder, along with the link. (The recorded talk will also be posted &lt;a href=&quot;https://sites.google.com/view/tcsplus/welcome/past-talks&quot;&gt;on our website&lt;/a&gt; afterwards) As usual, for more information about the TCS+ online seminar series and the upcoming talks, or to &lt;a href=&quot;https://sites.google.com/view/tcsplus/welcome/suggest-a-talk&quot;&gt;suggest&lt;/a&gt; a possible topic or speaker, please see &lt;a href=&quot;https://sites.google.com/view/tcsplus/&quot;&gt;the website&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote&quot;&gt;&lt;p&gt;Abstract: We propose an application for near-term quantum devices: namely, generating cryptographically certified random bits, to use (for example) in proof-of-stake cryptocurrencies. Our protocol repurposes the existing &amp;#8220;quantum supremacy&amp;#8221; experiments, based on random circuit sampling, that Google and USTC have successfully carried out starting in 2019. We show that, whenever the outputs of these experiments pass the now-standard Linear Cross-Entropy Benchmark (LXEB), under plausible hardness assumptions they necessarily contain Ω(n) min-entropy, where n is the number of qubits. To achieve a net gain in randomness, we use a small random seed to produce pseudorandom challenge circuits. In response to the challenge circuits, the quantum computer generates output strings that, after verification, can then be fed into a randomness extractor to produce certified nearly-uniform bits &amp;#8212; thereby &amp;#8220;bootstrapping&amp;#8221; from pseudorandomness to genuine randomness. We prove our protocol sound in two senses: (i) under a hardness assumption called Long List Quantum Supremacy Verification, which we justify in the random oracle model, and (ii) unconditionally in the random oracle model against an eavesdropper who could share arbitrary entanglement with the device. (Note that our protocol&amp;#8217;s output is unpredictable even to a computationally unbounded adversary who can see the random oracle.) Currently, the central drawback of our protocol is the exponential cost of verification, which in practice will limit its implementation to at most n∼60 qubits, a regime where attacks are expensive but not impossible. Modulo that drawback, our protocol appears to be the only practical application of quantum computing that both requires a QC and is physically realizable today.&lt;/p&gt;
&lt;p&gt;Joint work with Shih-Han Hung. To appear in STOC&amp;#8217;2023.&lt;br /&gt;
&lt;a href=&quot;https://arxiv.org/abs/2303.01625&quot;&gt;https://arxiv.org/abs/2303.01625&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p class=&quot;authors&quot;&gt;By plustcs&lt;/p&gt;
  </content>
    <author>
      <name>TCS+ Seminar Series</name>
      <uri>https://tcsplus.wordpress.com</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Scott Aaronson: Five Worlds of AI (a joint post with Boaz Barak)</title>
    <link href="https://scottaaronson.blog/?p=7266"/>
    <id>https://scottaaronson.blog/?p=7266</id>
    <updated>2023-04-28T00:37:27+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;div class=&quot;wp-block-image&quot;&gt;
&lt;figure class=&quot;aligncenter size-large&quot;&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://www.scottaaronson.com/fiveworlds.jpg&quot; alt=&quot;&quot;/&gt;&lt;/figure&gt;&lt;/div&gt;


&lt;p&gt;Artificial intelligence has made incredible progress in the last decade, but in one crucial aspect, it still lags behind the theoretical computer science of the 1990s: namely, there is no &lt;a href=&quot;https://www.quantamagazine.org/which-computational-universe-do-we-live-in-20220418/&quot;&gt;essay describing five potential worlds that we could live in and giving each one of them whimsical names&lt;/a&gt;.&amp;nbsp; In other words, no one has done for AI what Russell Impagliazzo did for complexity theory in 1995, when he defined the five worlds Algorithmica, Heuristica, Pessiland, Minicrypt, and Cryptomania, corresponding to five possible resolutions of the P vs. NP problem along with the central unsolved problems of cryptography.&lt;/p&gt;



&lt;p&gt;In this blog post, we&amp;#8212;Scott and Boaz&amp;#8212;aim to remedy this gap.  Specifically, we consider 5 possible scenarios for how AI will evolve in the future.&amp;nbsp; (Incidentally, it was at a &lt;a href=&quot;http://dimacs.rutgers.edu/archive/Workshops/Cryptography/program.html&quot;&gt;2009 workshop&lt;/a&gt; devoted to Impagliazzo’s five worlds co-organized by Boaz that Scott met his now wife, complexity theorist &lt;a href=&quot;https://www.cs.utexas.edu/~danama/&quot;&gt;Dana Moshkovitz&lt;/a&gt;.&amp;nbsp; We hope civilization will continue for long enough that someone in the future could meet their soulmate, or neuron-mate,&amp;nbsp;at a future workshop about &lt;em&gt;our&lt;/em&gt; five worlds.)&lt;/p&gt;



&lt;p&gt;Like in &lt;a href=&quot;https://www.karlin.mff.cuni.cz/~krajicek/ri5svetu.pdf&quot;&gt;Impagliazzo’s 1995 paper&lt;/a&gt; on the five potential worlds of the difficulty of NP problems, we will not try to be exhaustive but rather concentrate on extreme cases.&amp;nbsp; It’s possible that we’ll end up in a mixture of worlds or a situation not described by any of the worlds.&amp;nbsp; Indeed, one crucial difference between our setting and Impagliazzo’s, is that in the complexity case, the worlds corresponded to concrete (and mutually exclusive) mathematical conjectures.&amp;nbsp; So in some sense, the question wasn’t “which world &lt;em&gt;will&lt;/em&gt; we live in?” but “which world have we Platonically &lt;em&gt;always&lt;/em&gt; lived in, without knowing it?”&amp;nbsp; In contrast, the impact of AI will be a complex mix of mathematical bounds, computational capabilities, human discoveries, and social and legal issues. Hence, the worlds we describe depend on more than just the fundamental capabilities and limitations of artificial intelligence, and humanity could also shift from one of these worlds to another over time.&lt;/p&gt;



&lt;p&gt;Without further ado, we name our five worlds “&lt;strong&gt;AI-Fizzle,”&lt;/strong&gt; &lt;strong&gt;“Futurama,”&lt;/strong&gt; &lt;strong&gt;”AI-Dystopia,”&lt;/strong&gt; &lt;strong&gt;“Singularia,”&lt;/strong&gt; and &lt;strong&gt;“Paperclipalypse.”&lt;/strong&gt;&amp;nbsp; In this essay, we don’t try to assign probabilities to these scenarios; we merely sketch their assumptions and technical and social consequences. We hope that by making assumptions explicit, we can help ground the debate on the various risks around AI.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;AI-Fizzle. &lt;/strong&gt;In this scenario, AI “runs out of steam” fairly soon. AI still has a significant impact on the world (so it’s not the same as a “cryptocurrency fizzle”), but relative to current expectations, this would be considered a disappointment.&amp;nbsp; Rather than the industrial or computer revolutions, AI might be compared in this case to nuclear power: people were initially thrilled about the seemingly limitless potential, but decades later, that potential remains mostly unrealized.&amp;nbsp; With nuclear power, though, many would argue that the potential went unrealized mostly for sociopolitical rather than technical reasons.&amp;nbsp; Could AI also fizzle by political fiat?&lt;/p&gt;



&lt;p&gt;Regardless of the answer, another possibility is that costs (in data and computation) scale up so rapidly as a function of performance and reliability that AI is not cost-effective to apply in many domains. That is, it could be that for most jobs, humans will still be more reliable and energy-efficient (we don’t normally think of &lt;em&gt;low wattage&lt;/em&gt; as being key to human specialness, but it might turn out that way!).&amp;nbsp; So, like nuclear fusion, an AI which yields dramatically more value than the resources needed to build and deploy it might always remain a couple of decades in the future.&amp;nbsp; In this scenario, AI would replace and enhance some fraction of human jobs and improve productivity, but the 21st century would not be the “century of AI,” and AI’s impact on society would be limited for both good and bad.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Futurama.&lt;/strong&gt; In this scenario, AI unleashes a revolution that’s entirely comparable to the scientific, industrial, or information revolutions (but “merely” those).  AI systems grow significantly in capabilities and perform many of the tasks currently performed by human experts at a small fraction of the cost, in some domains &lt;em&gt;superhumanly&lt;/em&gt;.  However, AI systems are still used as &lt;em&gt;tools&lt;/em&gt; by humans, and except for a few fringe thinkers, no one treats them as sentient.  AI easily passes the Turing test, can prove hard theorems, and can generate entertaining content (as well as deepfakes). But humanity gets used to that, just like we got used to computers creaming us in chess, translating text, and generating special effects in movies.  Most people no more feel inferior to their AI than they feel inferior to their car because it runs faster.  In this scenario, people will likely anthropomorphize AI &lt;em&gt;less&lt;/em&gt; over time (as happened with digital computers themselves).  In &lt;strong&gt;“Futurama,”&lt;/strong&gt; AI will, like any revolutionary technology, be used for both good and bad.  But as with prior major technological revolutions, on the whole, AI will have a large positive impact on humanity.  AI will be used to reduce poverty and ensure that more of humanity has access to food, healthcare, education, and economic opportunities.  In &lt;strong&gt;“Futurama,”&lt;/strong&gt; AI systems will sometimes cause harm, but the vast majority of these failures will be due to human negligence or maliciousness.  Some AI systems might be so complex that it would be best to model them as potentially behaving  “adversarially,” and part of the practice of deploying AIs responsibly would be to ensure an “operating envelope” that limits their potential damage even under adversarial failures. &lt;/p&gt;



&lt;p&gt;&lt;strong&gt;AI-Dystopia.&lt;/strong&gt; The technical assumptions of &lt;strong&gt;“AI-Dystopia”&lt;/strong&gt; are similar to those of &lt;strong&gt;“Futurama,”&lt;/strong&gt; but the upshot could hardly be more different.&amp;nbsp; Here, again, AI unleashes a revolution on the scale of the industrial or computer revolutions, but the change is markedly for the worse.&amp;nbsp; AI greatly increases the scale of surveillance by government and private corporations.&amp;nbsp; It causes massive job losses while enriching a tiny elite.&amp;nbsp; It entrenches society’s existing inequalities and biases.&amp;nbsp; And it takes away a central tool against oppression: namely, the ability of humans to refuse or subvert orders.&lt;/p&gt;



&lt;p&gt;Interestingly, it’s even possible that &lt;em&gt;the same future&lt;/em&gt; could be characterized as &lt;strong&gt;Futurama&lt;/strong&gt; by some people and as &lt;strong&gt;AI-Dystopia&lt;/strong&gt; by others–just like how some people emphasize how our &lt;em&gt;current&lt;/em&gt; technological civilization has lifted billions out of poverty into a standard of living unprecedented in human history, while others focus on the still existing (and in some cases rising) inequalities and suffering, and consider it a neoliberal capitalist dystopia.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Singularia.&lt;/strong&gt;  Here AI breaks out of the current paradigm, where increasing capabilities require ever-growing resources of data and computation, and no longer needs human data or human-provided hardware and energy to become stronger at an ever-increasing pace.  AIs improve their own intellectual capabilities, including by developing new science, and (whether by deliberate design or happenstance) they act as goal-oriented agents in the physical world.  They can effectively be thought of as an alien civilization–or perhaps as a new species, which is to us as we were to &lt;em&gt;Homo erectus&lt;/em&gt;.&lt;/p&gt;



&lt;p&gt;Fortunately, though (and again, whether by careful design or just as a byproduct of their human origins), the AIs act to us like benevolent gods and lead us to an “AI utopia.”&amp;nbsp; They solve our material problems for us, giving us unlimited abundance and presumably virtual-reality adventures of our choosing.&amp;nbsp; (Though maybe, as in &lt;em&gt;The Matrix&lt;/em&gt;, the AIs will discover that humans need some conflict, and we will all live in a simulation of 2020’s Twitter, constantly dunking on one another…)&amp;nbsp;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Paperclipalypse.&lt;/strong&gt;&amp;nbsp; In &lt;strong&gt;“Paperclipalypse”&lt;/strong&gt; or “AI Doom,” we again think of future AIs as a superintelligent “alien race” that doesn’t need humanity for its own development.&amp;nbsp; Here, though, the AIs are either actively opposed to human existence or else indifferent to it in a way that causes our extinction as a byproduct.&amp;nbsp; In this scenario, AIs do not develop a notion of morality comparable to ours or even a notion that keeping a diversity of species and ensuring humans don’t go extinct might be useful to them in the long run.&amp;nbsp; Rather, the interaction between AI and Homo sapiens ends about the same way that the interaction between Homo sapiens and Neanderthals ended.&amp;nbsp;&lt;/p&gt;



&lt;p&gt;In fact, the canonical depictions of such a scenario imagine an interaction that is much more abrupt than our brush with the Neanderthals. The idea is that, perhaps because they originated through some optimization procedure, AI systems will have some strong but weirdly-specific goal (a la “maximizing paperclips”), for which the continued existence of humans is, at best, a hindrance.&amp;nbsp; So the AIs quickly play out the scenarios and, in a matter of milliseconds, decide that the optimal solution is to kill all humans, taking a few extra milliseconds to make a plan for that and execute it.&amp;nbsp; If conditions are not yet ripe for executing their plan, the AIs pretend to be docile tools, as in the &lt;strong&gt;“Futurama”&lt;/strong&gt; scenario, waiting for the right time to strike.&amp;nbsp; In this scenario, self-improvement happens so quickly that humans might not even notice it.&amp;nbsp; There need be no intermediate stage in which an AI “merely” kills a few thousand humans, raising 9/11-type alarm bells.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Regulations&lt;/strong&gt;. The practical impact of AI regulations depends, in large part, on which scenarios we consider most likely.&amp;nbsp; Regulation is not terribly important in the&lt;strong&gt; “AI Fizzle”&lt;/strong&gt; scenario where AI, well, fizzles.&amp;nbsp; In “&lt;strong&gt;Futurama,”&lt;/strong&gt; regulations would be aimed at ensuring that on balance, AI is used more for good than for bad, and that the world doesn’t devolve into &lt;strong&gt;“AI Dystopia.”&lt;/strong&gt;&amp;nbsp; The latter goal requires anti-trust and open-science regulations to ensure that power is not concentrated in a few corporations or governments.&amp;nbsp; Thus, regulations are needed to &lt;em&gt;democratize&lt;/em&gt; AI development more than to &lt;em&gt;restrict&lt;/em&gt; it.&amp;nbsp; This doesn’t mean that AI would be completely unregulated.&amp;nbsp; It might be treated somewhat similarly to drugs—something that can have complex effects and needs to undergo trials before mass deployment.&amp;nbsp; There would also be regulations aimed at reducing the chance of “bad actors” (whether other nations or individuals) getting access to cutting-edge AIs, but probably the bulk of the effort would be at increasing the chance of thwarting them (e.g., using AI to detect AI-generated misinformation, or using AI to harden systems against AI-aided hackers).&amp;nbsp; This is similar to how most academic experts believe cryptography should be regulated (and how it &lt;em&gt;is&lt;/em&gt; largely regulated these days in most democratic countries): it’s a technology that can be used for both good and bad, but the cost of restricting its access to regular citizens outweighs the benefits.&amp;nbsp; However, as we do with security exploits today, we might restrict or delay public releases of AI systems to some extent.&lt;/p&gt;



&lt;p&gt;To whatever extent we foresee &lt;strong&gt;“Singularia”&lt;/strong&gt; or &lt;strong&gt;“Paperclipalypse,”&lt;/strong&gt; however, regulations play a completely different role.&amp;nbsp; If we knew we were headed for &lt;strong&gt;“Singularia,”&lt;/strong&gt; then presumably regulations would be superfluous, except perhaps to try to accelerate the development of AIs!&amp;nbsp; Meanwhile, if one accepts the assumptions of &lt;strong&gt;“Paperclipalypse,”&lt;/strong&gt; any regulations other than the most draconian might be futile.&amp;nbsp; If, in the near future, almost anyone will be able to spend a few billion dollars to build a recursively self-improving AI that might turn into a superintelligent world-destroying agent, and moreover (unlike with nuclear weapons) they won’t need exotic materials to do so, then it’s hard to see how to forestall the apocalypse, except perhaps via a worldwide, militarily enforced agreement to “&lt;a href=&quot;https://time.com/6266923/ai-eliezer-yudkowsky-open-letter-not-enough/&quot;&gt;shut it all down&lt;/a&gt;,” as Eliezer Yudkowsky indeed now explicitly advocates.&amp;nbsp; “Ordinary” regulations could, at best, delay the end by a short amount–given the current pace of AI advances, perhaps not more than a few years.&amp;nbsp; Thus, regardless of how likely one considers this scenario, one might want to focus more on the other scenarios for methodological reasons alone!&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By Scott&lt;/p&gt;
  </content>
    <author>
      <name>Scott Aaronson</name>
      <uri>https://scottaaronson.blog</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Verifying linear temporal specifications of constant-rate multi-mode systems</title>
    <link href="http://arxiv.org/abs/2304.13816"/>
    <id>http://arxiv.org/abs/2304.13816</id>
    <updated>2023-04-28T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Blondin_M/0/1/0/all/0/1&quot;&gt;Michael Blondin&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Offtermatt_P/0/1/0/all/0/1&quot;&gt;Philip Offtermatt&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sansfacon_Buchanan_A/0/1/0/all/0/1&quot;&gt;Alex Sansfa&amp;#xe7;on-Buchanan&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Constant-rate multi-mode systems (MMS) are hybrid systems with finitely many
modes and real-valued variables that evolve over continuous time according to
mode-specific constant rates. We introduce a variant of linear temporal logic
(LTL) for MMS, and we investigate the complexity of the model-checking problem
for syntactic fragments of LTL. We obtain a complexity landscape where each
fragment is either P-complete, NP-complete or undecidable. These results
generalize and unify several results on MMS and continuous counter systems.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: A Parameterized Theory of PAC Learning</title>
    <link href="http://arxiv.org/abs/2304.14058"/>
    <id>http://arxiv.org/abs/2304.14058</id>
    <updated>2023-04-28T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Brand_C/0/1/0/all/0/1&quot;&gt;Cornelius Brand&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ganian_R/0/1/0/all/0/1&quot;&gt;Robert Ganian&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Simonov_K/0/1/0/all/0/1&quot;&gt;Kirill Simonov&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Probably Approximately Correct (i.e., PAC) learning is a core concept of
sample complexity theory, and efficient PAC learnability is often seen as a
natural counterpart to the class P in classical computational complexity. But
while the nascent theory of parameterized complexity has allowed us to push
beyond the P-NP ``dichotomy&#39;&#39; in classical computational complexity and
identify the exact boundaries of tractability for numerous problems, there is
no analogue in the domain of sample complexity that could push beyond efficient
PAC learnability.
&lt;/p&gt;
&lt;p&gt;As our core contribution, we fill this gap by developing a theory of
parameterized PAC learning which allows us to shed new light on several recent
PAC learning results that incorporated elements of parameterized complexity.
Within the theory, we identify not one but two notions of fixed-parameter
learnability that both form distinct counterparts to the class FPT -- the core
concept at the center of the parameterized complexity paradigm -- and develop
the machinery required to exclude fixed-parameter learnability. We then
showcase the applications of this theory to identify refined boundaries of
tractability for CNF and DNF learning as well as for a range of learning
problems on graphs.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Multiplicity Problems on Algebraic Series and Context-Free Grammars</title>
    <link href="http://arxiv.org/abs/2304.14145"/>
    <id>http://arxiv.org/abs/2304.14145</id>
    <updated>2023-04-28T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Balaji_N/0/1/0/all/0/1&quot;&gt;Nikhil Balaji&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Clemente_L/0/1/0/all/0/1&quot;&gt;Lorenzo Clemente&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nosan_K/0/1/0/all/0/1&quot;&gt;Klara Nosan&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Shirmohammadi_M/0/1/0/all/0/1&quot;&gt;Mahsa Shirmohammadi&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Worrell_J/0/1/0/all/0/1&quot;&gt;James Worrell&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this paper we obtain complexity bounds for computational problems on
algebraic power series over several commuting variables. The power series are
specified by systems of polynomial equations: a formalism closely related to
weighted context-free grammars. We focus on three problems -- decide whether a
given algebraic series is identically zero, determine whether all but finitely
many coefficients are zero, and compute the coefficient of a specific monomial.
We relate these questions to well-known computational problems on arithmetic
circuits and thereby show that all three problems lie in the counting
hierarchy. Our main result improves the best known complexity bound on deciding
zeroness of an algebraic series. This problem is known to lie in PSPACE by
reduction to the decision problem for the existential fragment of the theory of
real closed fields. Here we show that the problem lies in the counting
hierarchy by reduction to the problem of computing the degree of a polynomial
given by an arithmetic circuit. As a corollary we obtain new complexity bounds
on multiplicity equivalence of context-free grammars restricted to a bounded
language, language inclusion of a nondeterministic finite automaton in an
unambiguous context-free grammar, and language inclusion of a non-deterministic
context-free grammar in an unambiguous finite automaton.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Structure-Aware Lower Bounds and Broadening the Horizon of Tractability for QBF</title>
    <link href="http://arxiv.org/abs/2304.13896"/>
    <id>http://arxiv.org/abs/2304.13896</id>
    <updated>2023-04-28T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fichte_J/0/1/0/all/0/1&quot;&gt;Johannes K. Fichte&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ganian_R/0/1/0/all/0/1&quot;&gt;Robert Ganian&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hecher_M/0/1/0/all/0/1&quot;&gt;Markus Hecher&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Slivovsky_F/0/1/0/all/0/1&quot;&gt;Friedrich Slivovsky&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ordyniak_S/0/1/0/all/0/1&quot;&gt;Sebastian Ordyniak&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The QSAT problem, which asks to evaluate a quantified Boolean formula (QBF),
is of fundamental interest in approximation, counting, decision, and
probabilistic complexity and is also considered the prototypical PSPACEcomplete
problem. As such, it has previously been studied under various structural
restrictions (parameters), most notably parameterizations of the primal graph
representation of instances. Indeed, it is known that QSAT remains
PSPACE-complete even when restricted to instances with constant treewidth of
the primal graph, but the problem admits a double-exponential fixed-parameter
algorithm parameterized by the vertex cover number (primal graph). However,
prior works have left a gap in our understanding of the complexity of QSAT when
viewed from the perspective of other natural representations of instances, most
notably via incidence graphs. In this paper, we develop structure-aware
reductions which allow us to obtain essentially tight lower bounds for highly
restricted instances of QSAT, including instances whose incidence graphs have
bounded treedepth or feedback vertex number. We complement these lower bounds
with novel algorithms for QSAT which establish a nearly-complete picture of the
problem&#39;s complexity under standard graph-theoretic parameterizations. We also
show implications for other natural graph representations, and obtain novel
upper as well as lower bounds for QSAT under more fine-grained
parameterizations of the primal graph.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Improved Stabilizer Estimation via Bell Difference Sampling</title>
    <link href="http://arxiv.org/abs/2304.13915"/>
    <id>http://arxiv.org/abs/2304.13915</id>
    <updated>2023-04-28T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Grewal_S/0/1/0/all/0/1&quot;&gt;Sabee Grewal&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Iyer_V/0/1/0/all/0/1&quot;&gt;Vishnu Iyer&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Kretschmer_W/0/1/0/all/0/1&quot;&gt;William Kretschmer&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Liang_D/0/1/0/all/0/1&quot;&gt;Daniel Liang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the complexity of learning quantum states in various models with
respect to the stabilizer formalism and obtain the following results:
&lt;/p&gt;
&lt;p&gt;- We prove that $\Omega(n)$ $T$-gates are necessary for any Clifford+$T$
circuit to prepare computationally pseudorandom quantum states, an exponential
improvement over the previously known bound. This bound is asymptotically tight
if linear-time quantum-secure pseudorandom functions exist.
&lt;/p&gt;
&lt;p&gt;- Given an $n$-qubit pure quantum state $|\psi\rangle$ that has fidelity at
least $\tau$ with some stabilizer state, we give an algorithm that outputs a
succinct description of a stabilizer state that witnesses fidelity at least
$\tau - \varepsilon$. The algorithm uses $O(n/(\varepsilon^2\tau^4))$ samples
and $\exp\left(O(n/\tau^4)\right) / \varepsilon^2$ time. In the regime of
$\tau$ constant, this algorithm estimates stabilizer fidelity substantially
faster than the na\&quot;ive $\exp(O(n^2))$-time brute-force algorithm over all
stabilizer states.
&lt;/p&gt;
&lt;p&gt;- We improve the soundness analysis of the stabilizer state property testing
algorithm due to Gross, Nezami, and Walter [Comms. Math. Phys. 385 (2021)]. As
an application, we exhibit a tolerant property testing algorithm for stabilizer
states.
&lt;/p&gt;
&lt;p&gt;The underlying algorithmic primitive in all of our results is Bell difference
sampling. To prove our results, we establish and/or strengthen connections
between Bell difference sampling, symplectic Fourier analysis, and graph
theory.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: On Solution Discovery via Reconfiguration</title>
    <link href="http://arxiv.org/abs/2304.14295"/>
    <id>http://arxiv.org/abs/2304.14295</id>
    <updated>2023-04-28T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fellows_M/0/1/0/all/0/1&quot;&gt;Michael R. Fellows&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Grobler_M/0/1/0/all/0/1&quot;&gt;Mario Grobler&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Megow_N/0/1/0/all/0/1&quot;&gt;Nicole Megow&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mouawad_A/0/1/0/all/0/1&quot;&gt;Amer E. Mouawad&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ramamoorthi_V/0/1/0/all/0/1&quot;&gt;Vijayaragunathan Ramamoorthi&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Rosamond_F/0/1/0/all/0/1&quot;&gt;Frances A. Rosamond&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Schmand_D/0/1/0/all/0/1&quot;&gt;Daniel Schmand&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Siebertz_S/0/1/0/all/0/1&quot;&gt;Sebastian Siebertz&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The dynamics of real-world applications and systems require efficient methods
for improving infeasible solutions or restoring corrupted ones by making
modifications to the current state of a system in a restricted way. We propose
a new framework of solution discovery via reconfiguration for constructing a
feasible solution for a given problem by executing a sequence of small
modifications starting from a given state. Our framework integrates and
formalizes different aspects of classical local search, reoptimization, and
combinatorial reconfiguration. We exemplify our framework on a multitude of
fundamental combinatorial problems, namely Vertex Cover, Independent Set,
Dominating Set, and Coloring. We study the classical as well as the
parameterized complexity of the solution discovery variants of those problems
and explore the boundary between tractable and intractable instances.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: An FPTAS for Budgeted Laminar Matroid Independent Set</title>
    <link href="http://arxiv.org/abs/2304.13984"/>
    <id>http://arxiv.org/abs/2304.13984</id>
    <updated>2023-04-28T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Doron_Arad_I/0/1/0/all/0/1&quot;&gt;Ilan Doron-Arad&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kulik_A/0/1/0/all/0/1&quot;&gt;Ariel Kulik&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Shachnai_H/0/1/0/all/0/1&quot;&gt;Hadas Shachnai&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the budgeted laminar matroid independent set problem. The input is a
ground set, where each element has a cost and a non-negative profit, along with
a laminar matroid over the elements and a budget. The goal is to select a
maximum profit independent set of the matroid whose total cost is bounded by
the budget. Several well known special cases, where we have, e.g., no matroid
constraint (the classic knapsack problem) or a uniform matroid constraint
(knapsack with a cardinality constraint), admit a fully polynomial-time
approximation scheme (FPTAS). In contrast, the budgeted matroid independent set
(BMI) problem with a general matroid has an efficient polynomial-time
approximation scheme (EPTAS) but does not admit an FPTAS. This implies an EPTAS
for our problem, which is the best known result prior to this work.
&lt;/p&gt;
&lt;p&gt;We present an FPTAS for budgeted laminar matroid independent set, improving
the previous EPTAS for this matroid family and generalizing the FPTAS known for
knapsack with a cardinality constraint and multiple-choice knapsack. Our scheme
is based on a simple dynamic program which utilizes the tree-like structure of
laminar matroids.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: A barrier for further approximating Sorting By Transpositions</title>
    <link href="http://arxiv.org/abs/2304.13996"/>
    <id>http://arxiv.org/abs/2304.13996</id>
    <updated>2023-04-28T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Silva_L/0/1/0/all/0/1&quot;&gt;Luiz Augusto G. da Silva&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kowada_L/0/1/0/all/0/1&quot;&gt;Luis Antonio B. Kowada&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Walter_M/0/1/0/all/0/1&quot;&gt;Maria Em&amp;#xed;lia M. T. Walter&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The Transposition Distance Problem (TDP) is a classical problem in genome
rearrangements which seeks to determine the minimum number of transpositions
needed to transform a linear chromosome into another represented by the
permutations $\pi$ and $\sigma$. This paper focuses on the equivalent problem
of Sorting By Transpositions (SBT), where $\sigma$ is the identity permutation
$\iota$. Specifically, we investigate properties of palisades, a family of
permutations that are ``hard&#39;&#39; to sort, as they require numerous transpositions
above the celebrated lower bound devised by Bafna and Pevzner. By determining
the transposition distance of palisades, we were able to provide the exact
transposition diameter for $3$-permutations (TD3), a special subset of the
Symmetric Group $S_n$, essential for the study of approximate solutions for SBT
using the simplification technique. The exact value for TD3 has remained
unknown since Elias and Hartman showed an upper bound for it. Another
consequence of determining the transposition distance of palisades is that,
using as lower bound the one by Bafna and Pevzner, it is impossible to
guarantee approximation ratios lower than $1.375$ when approximating SBT. This
finding has significant implications for the study of SBT, as this problem has
been subject of intense research efforts for the past 25 years.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Improved Online Scheduling of Moldable Task Graphs under Common Speedup Models</title>
    <link href="http://arxiv.org/abs/2304.14127"/>
    <id>http://arxiv.org/abs/2304.14127</id>
    <updated>2023-04-28T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Perotin_L/0/1/0/all/0/1&quot;&gt;Lucas Perotin&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sun_H/0/1/0/all/0/1&quot;&gt;Hongyang Sun&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We consider the online scheduling problem of moldable task graphs on
multiprocessor systems for minimizing the overall completion time (or
makespan). Moldable job scheduling has been widely studied in the literature,
in particular when tasks have dependencies (i.e., task graphs) or when tasks
are released on-the-fly (i.e., online). However, few studies have focused on
both (i.e., online scheduling of moldable task graphs). In this paper, we
design a new online scheduling algorithm for this problem and derive constant
competitive ratios under several common yet realistic speedup models (i.e.,
roofline, communication, Amdahl, and a general combination). These results
improve the ones we have shown in the preliminary version of this paper. We
also prove, for each speedup model, a lower bound on the competitiveness of any
online list scheduling algorithm that allocates processors to a task based only
on the task&#39;s parameters and not on its position in the graph. This lower bound
matches exactly the competitive ratio of our algorithm for the roofline,
communication and Amdahl&#39;s model, and is close to the ratio for the general
model. Finally, we provide a lower bound on the competitive ratio of any
deterministic online algorithm for the arbitrary speedup model, which is not
constant but depends on the number of tasks in the longest path of the graph.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Compact Distance Oracles with Large Sensitivity and Low Stretch</title>
    <link href="http://arxiv.org/abs/2304.14184"/>
    <id>http://arxiv.org/abs/2304.14184</id>
    <updated>2023-04-28T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Bilo_D/0/1/0/all/0/1&quot;&gt;Davide Bil&amp;#xf2;&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Choudhary_K/0/1/0/all/0/1&quot;&gt;Keerti Choudhary&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Cohen_S/0/1/0/all/0/1&quot;&gt;Sarel Cohen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Friedrich_T/0/1/0/all/0/1&quot;&gt;Tobias Friedrich&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Krogmann_S/0/1/0/all/0/1&quot;&gt;Simon Krogmann&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Schirneck_M/0/1/0/all/0/1&quot;&gt;Martin Schirneck&lt;/a&gt;&lt;/p&gt;&lt;p&gt;An $f$-edge fault-tolerant distance sensitive oracle ($f$-DSO) with stretch
$\sigma \geq 1$ is a data structure that preprocesses an input graph $G$. When
queried with the triple $(s,t,F)$, where $s, t \in V$ and $F \subseteq E$
contains at most $f$ edges of $G$, the oracle returns an estimate
$\widehat{d}_{G-F}(s,t)$ of the distance $d_{G-F}(s,t)$ between $s$ and $t$ in
the graph $G-F$ such that $d_{G-F}(s,t) \leq \widehat{d}_{G-F}(s,t) \leq \sigma
d_{G-F}(s,t)$. For any positive integer $k \ge 2$ and any $0 &amp;lt; \alpha &amp;lt; 1$, we
present an $f$-DSO with sensitivity $f = o(\log n/\log\log n)$, stretch $2k-1$,
space $O(n^{1+\frac{1}{k}+\alpha+o(1)})$, and an
$\widetilde{O}(n^{1+\frac{1}{k} - \frac{\alpha}{k(f+1)}})$ query time.
&lt;/p&gt;
&lt;p&gt;Prior to our work, there were only three known $f$-DSOs with subquadratic
space. The first one by Chechik et al. [Algorithmica 2012] has a stretch of
$(8k-2)(f+1)$, depending on $f$. Another approach is storing an $f$-edge
fault-tolerant $(2k-1)$-spanner of $G$. The bottleneck is the large query time
due to the size of any such spanner, which is $\Omega(n^{1+1/k})$ under the
Erd\H{o}s girth conjecture. Bil\`o et al. [STOC 2023] gave a solution with
stretch $3+\varepsilon$, query time $O(n^{\alpha})$ but space
$O(n^{2-\frac{\alpha}{f+1}})$, approaching the quadratic barrier for large
sensitivity. In the realm of subquadratic space, our $f$-DSOs are the first
ones that guarantee, at the same time, large sensitivity, low stretch, and
non-trivial query time. To obtain our results, we use the approximate distance
oracles of Thorup and Zwick [JACM 2005], and the derandomization of the $f$-DSO
of Weimann and Yuster [TALG 2013], that was recently given by Karthik and
Parter [SODA 2021].
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Fast Sampling of $b$-Matchings and $b$-Edge Covers</title>
    <link href="http://arxiv.org/abs/2304.14289"/>
    <id>http://arxiv.org/abs/2304.14289</id>
    <updated>2023-04-28T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chen_Z/0/1/0/all/0/1&quot;&gt;Zongchen Chen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gu_Y/0/1/0/all/0/1&quot;&gt;Yuzhou Gu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;For integer $b \ge 1$, a $b$-matching (resp. $b$-edge cover) of a graph
$G=(V,E)$ is a subset $S\subseteq E$ of edges such that every vertex is
incident with at most (resp. at least) $b$ edges from $S$. We prove that for
any $b \ge 1$ the simple Glauber dynamics for sampling (weighted) $b$-matchings
and $b$-edge covers mixes in $O(n\log n)$ time on all $n$-vertex bounded-degree
graphs. This significantly improves upon previous results which have worse
running time and only work for $b$-matchings with $b \le 7$ and for $b$-edge
covers with $b \le 2$.
&lt;/p&gt;
&lt;p&gt;Moreover generally, we prove spectral independence for a broad class of
binary symmetric Holant problems with log-concave signatures, including
$b$-matchings, $b$-edge covers, and antiferromagnetic $2$-spin edge models. We
hence deduce optimal mixing time of Glauber dynamics from spectral
independence.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: The Covering Canadian Traveller Problem Revisited</title>
    <link href="http://arxiv.org/abs/2304.14319"/>
    <id>http://arxiv.org/abs/2304.14319</id>
    <updated>2023-04-28T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hahn_N/0/1/0/all/0/1&quot;&gt;Niklas Hahn&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Xefteris_M/0/1/0/all/0/1&quot;&gt;Michalis Xefteris&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this paper, we consider the $k$-Covering Canadian Traveller Problem
($k$-CCTP), which can be seen as a variant of the Travelling Salesperson
Problem. The goal of $k$-CCTP is finding the shortest tour for a traveller to
visit a set of locations in a given graph and return to the origin. Crucially,
unknown to the traveller, up to $k$ edges of the graph are blocked and the
traveller only discovers blocked edges online at one of their respective
endpoints. The currently best known upper bound for $k$-CCTP is $O(\sqrt{k})$
which was shown in [Huang and Liao, ISAAC &#39;12]. We improve this polynomial
bound to a logarithmic one by presenting a deterministic $O(\log
k)$-competitive algorithm that runs in polynomial time. Further, we demonstrate
the tightness of our analysis by giving a lower bound instance for our
algorithm.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


</feed>
