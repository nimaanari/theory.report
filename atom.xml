<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Theory of Computing Report</title>
  <link rel="self" href=""/>
  <link href=""/>
  <id></id>
  <updated></updated>
  <generator uri="http://feedreader.github.io/">Pluto 1.6.2 on Ruby 3.0.4 (2022-04-12) [x86_64-linux]</generator>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Luca Aceto: Dean of the School of Technology at Reykjavik University: Call for applications</title>
    <link href="http://processalgebra.blogspot.com/2022/09/dean-of-school-of-technology-at.html"/>
    <id>tag:blogger.com,1999:blog-27705661.post-3799601982394256741</id>
    <updated>2022-09-19T16:58:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;Reykjavik University is looking for a new dean of the School of Technology, which comprises the Department of Applied Engineering, the Department of Computer Science, and the Department of Engineering.&amp;nbsp;&lt;/p&gt;&lt;p&gt;If you have a strong academic career, a vision of how our school can improve its standing and impact, and would enjoy living in Iceland, I encourage you to consider this opportunity!  See the ad at the link below for more information:&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://jobs.50skills.com/ru/en/15613&quot;&gt;https://jobs.50skills.com/ru/en/15613&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Spread the news through your network and encourage excellent candidates to apply.&lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By Luca Aceto&lt;/p&gt;
  </content>
    <author>
      <name>Luca Aceto</name>
      <uri>http://processalgebra.blogspot.com/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Extremal combinatorics, iterated pigeonhole arguments, and generalizations of PPP</title>
    <link href="http://arxiv.org/abs/2209.07625"/>
    <id>http://arxiv.org/abs/2209.07625</id>
    <updated>2022-09-19T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Pasarkar_A/0/1/0/all/0/1&quot;&gt;Amol Pasarkar&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Yannakakis_M/0/1/0/all/0/1&quot;&gt;Mihalis Yannakakis&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Papadimitriou_C/0/1/0/all/0/1&quot;&gt;Christos Papadimitriou&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the complexity of computational problems arising from existence
theorems in extremal combinatorics. For some of these problems, a solution is
guaranteed to exist based on an iterated application of the Pigeonhole
Principle. This results in the definition of a new complexity class within
TFNP, which we call PLC (for &quot;polynomial long choice&quot;). PLC includes all of
PPP, as well as numerous previously unclassified total problems, including
search problems related to Ramsey&#39;s theorem, the Sunflower theorem, the
Erd\H{o}s-Ko-Rado lemma, and K\&quot;onig&#39;s lemma. Whether the first two of these
four problems are PLC-complete is an important open question which we pursue;
in contrast, we show that the latter two are PPP-complete. Finally, we reframe
PPP as an optimization problem, and define a hierarchy of such problems related
to Tur\&#39;an&#39;s theorem.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Approximate traces on groups and the quantum complexity class $\operatorname{MIP}^{co,s}$</title>
    <link href="http://arxiv.org/abs/2209.08009"/>
    <id>http://arxiv.org/abs/2209.08009</id>
    <updated>2022-09-19T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Goldbring_I/0/1/0/all/0/1&quot;&gt;Isaac Goldbring&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hart_B/0/1/0/all/0/1&quot;&gt;Bradd Hart&lt;/a&gt;&lt;/p&gt;&lt;p&gt;An open question in quantum complexity theory is whether or not the class
$\operatorname{MIP}^{co}$, consisting of languages that can be efficiently
verified using interacting provers sharing quantum resources according to the
quantum commuting model, coincides with the class $coRE$ of languages with
recursively enumerable complement. We introduce the notion of a qc-modulus,
which encodes approximations to quantum commuting correlations, and show that
the existence of a computable qc-modulus gives a negative answer to a natural
variant of the aforementioned question.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Decision Tree Complexity versus Block Sensitivity and Degree</title>
    <link href="http://arxiv.org/abs/2209.08042"/>
    <id>http://arxiv.org/abs/2209.08042</id>
    <updated>2022-09-19T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chugh_R/0/1/0/all/0/1&quot;&gt;Rahul Chugh&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Podder_S/0/1/0/all/0/1&quot;&gt;Supartha Podder&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sanyal_S/0/1/0/all/0/1&quot;&gt;Swagato Sanyal&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Relations between the decision tree complexity and various other complexity
measures of Boolean functions is a thriving topic of research in computational
complexity. It is known that decision tree complexity is bounded above by the
cube of block sensitivity, and the cube of polynomial degree. However, the
widest separation between decision tree complexity and each of block
sensitivity and degree that is witnessed by known Boolean functions is
quadratic. In this work, we investigate the tightness of the existing cubic
upper bounds.
&lt;/p&gt;
&lt;p&gt;We improve the cubic upper bounds for many interesting classes of Boolean
functions. We show that for graph properties and for functions with a constant
number of alternations, both of the cubic upper bounds can be improved to
quadratic. We define a class of Boolean functions, which we call the zebra
functions, that comprises Boolean functions where each monotone path from 0^n
to 1^n has an equal number of alternations. This class contains the symmetric
and monotone functions as its subclasses. We show that for any zebra function,
decision tree complexity is at most the square of block sensitivity, and
certificate complexity is at most the square of degree.
&lt;/p&gt;
&lt;p&gt;Finally, we show using a lifting theorem of communication complexity by
G{\&quot;{o}}{\&quot;{o}}s, Pitassi and Watson that the task of proving an improved upper
bound on the decision tree complexity for all functions is in a sense
equivalent to the potentially easier task of proving a similar upper bound on
communication complexity for each bi-partition of the input variables, for all
functions. In particular, this implies that to bound the decision tree
complexity it suffices to bound smaller measures like parity decision tree
complexity, subcube decision tree complexity and decision tree rank, that are
defined in terms of models that can be efficiently simulated by communication
protocols.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: On Optimal Coverage of a Tree with Multiple Robots</title>
    <link href="http://arxiv.org/abs/2209.07557"/>
    <id>http://arxiv.org/abs/2209.07557</id>
    <updated>2022-09-19T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Aldana_Galvan_I/0/1/0/all/0/1&quot;&gt;I. Aldana-Galv&amp;#xe1;n&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Catana_Salazar_J/0/1/0/all/0/1&quot;&gt;J.C. Catana-Salazar&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Diaz_Banez_J/0/1/0/all/0/1&quot;&gt;J.M. D&amp;#xed;az-B&amp;#xe1;&amp;#xf1;ez&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Duque_F/0/1/0/all/0/1&quot;&gt;F. Duque&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fabila_Monroy_R/0/1/0/all/0/1&quot;&gt;R. Fabila-Monroy&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Heredia_M/0/1/0/all/0/1&quot;&gt;M.A. Heredia&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ramirez_Vigueras_A/0/1/0/all/0/1&quot;&gt;A. Ram&amp;#xed;rez-Vigueras&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Urrutia_J/0/1/0/all/0/1&quot;&gt;J. Urrutia&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the algorithmic problem of optimally covering a tree with $k$ mobile
robots. The tree is known to all robots, and our goal is to assign a walk to
each robot in such a way that the union of these walks covers the whole tree.
We assume that the edges have the same length, and that traveling along an edge
takes a unit of time. Two objective functions are considered: the cover time
and the cover length. The cover time is the maximum time a robot needs to
finish its assigned walk and the cover length is the sum of the lengths of all
the walks. We also consider a variant in which the robots must rendezvous
periodically at the same vertex in at most a certain number of moves. We show
that the problem is different for the two cost functions. For the cover time
minimization problem, we prove that the problem is NP-hard when $k$ is part of
the input, regardless of whether periodic rendezvous are required or not. For
the cover length minimization problem, we show that it can be solved in
polynomial time when periodic rendezvous are not required, and it is NP-hard
otherwise.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: $b$-Coloring Parameterized by Pathwidth is XNLP-complete</title>
    <link href="http://arxiv.org/abs/2209.07772"/>
    <id>http://arxiv.org/abs/2209.07772</id>
    <updated>2022-09-19T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jaffke_L/0/1/0/all/0/1&quot;&gt;Lars Jaffke&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lima_P/0/1/0/all/0/1&quot;&gt;Paloma T. Lima&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sharma_R/0/1/0/all/0/1&quot;&gt;Roohani Sharma&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We show that the $b$-Coloring problem is complete for the class XNLP when
parameterized by the pathwidth of the input graph. Besides determining the
precise parameterized complexity of this problem, this implies that b-Coloring
parameterized by pathwidth is $W[t]$-hard for all $t$, and resolves the
parameterized complexity of $b$-Coloring parameterized by treewidth.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Exploring the Tradeoff between Competitive Ratio and Variance in Online-Matching Markets</title>
    <link href="http://arxiv.org/abs/2209.07580"/>
    <id>http://arxiv.org/abs/2209.07580</id>
    <updated>2022-09-19T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Xu_P/0/1/0/all/0/1&quot;&gt;Pan Xu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this paper, we propose an online-matching-based model to study the
assignment problems arising in a wide range of online-matching markets,
including online recommendations, ride-hailing platforms, and crowdsourcing
markets. It features that each assignment can request a random set of resources
and yield a random utility, and the two (cost and utility) can be arbitrarily
correlated with each other. We present two linear-programming-based
parameterized policies to study the tradeoff between the \emph{competitive
ratio} (CR) on the total utilities and the \emph{variance} on the total number
of matches (unweighted version). The first one (SAMP) is to sample an edge
according to the distribution extracted from the clairvoyant optimal, while the
second (ATT) features a time-adaptive attenuation framework that leads to an
improvement over the state-of-the-art competitive-ratio result. We also
consider the problem under a large-budget assumption and show that SAMP
achieves asymptotically optimal performance in terms of competitive ratio.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: On Weighted Graph Sparsification by Linear Sketching</title>
    <link href="http://arxiv.org/abs/2209.07729"/>
    <id>http://arxiv.org/abs/2209.07729</id>
    <updated>2022-09-19T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chen_Y/0/1/0/all/0/1&quot;&gt;Yu Chen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Khanna_S/0/1/0/all/0/1&quot;&gt;Sanjeev Khanna&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Li_H/0/1/0/all/0/1&quot;&gt;Huan Li&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A seminal work of [Ahn-Guha-McGregor, PODS&#39;12] showed that one can compute a
cut sparsifier of an unweighted undirected graph by taking a near-linear number
of linear measurements on the graph. Subsequent works also studied computing
other graph sparsifiers using linear sketching, and obtained near-linear upper
bounds for spectral sparsifiers [Kapralov-Lee-Musco-Musco-Sidford, FOCS&#39;14] and
first non-trivial upper bounds for spanners [Filtser-Kapralov-Nouri, SODA&#39;21].
All these linear sketching algorithms, however, only work on unweighted graphs.
&lt;/p&gt;
&lt;p&gt;In this paper, we initiate the study of weighted graph sparsification by
linear sketching by investigating a natural class of linear sketches that we
call incidence sketches, in which each measurement is a linear combination of
the weights of edges incident on a single vertex. Our results are:
&lt;/p&gt;
&lt;p&gt;1. Weighted cut sparsification: We give an algorithm that computes a $(1 +
\epsilon)$-cut sparsifier using $\tilde{O}(n \epsilon^{-3})$ linear
measurements, which is nearly optimal.
&lt;/p&gt;
&lt;p&gt;2. Weighted spectral sparsification: We give an algorithm that computes a $(1
+ \epsilon)$-spectral sparsifier using $\tilde{O}(n^{6/5} \epsilon^{-4})$
linear measurements. Complementing our algorithm, we then prove a superlinear
lower bound of $\Omega(n^{21/20-o(1)})$ measurements for computing some
$O(1)$-spectral sparsifier using incidence sketches.
&lt;/p&gt;
&lt;p&gt;3. Weighted spanner computation: We focus on graphs whose largest/smallest
edge weights differ by an $O(1)$ factor, and prove that, for incidence
sketches, the upper bounds obtained by~[Filtser-Kapralov-Nouri, SODA&#39;21] are
optimal up to an $n^{o(1)}$ factor.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: A $(1.5+\epsilon)$-Approximation Algorithm for Weighted Connectivity Augmentation</title>
    <link href="http://arxiv.org/abs/2209.07860"/>
    <id>http://arxiv.org/abs/2209.07860</id>
    <updated>2022-09-19T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Traub_V/0/1/0/all/0/1&quot;&gt;Vera Traub&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zenklusen_R/0/1/0/all/0/1&quot;&gt;Rico Zenklusen&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Connectivity augmentation problems are among the most elementary questions in
Network Design. Many of these problems admit natural $2$-approximation
algorithms, often through various classic techniques, whereas it remains open
whether approximation factors below $2$ can be achieved. One of the most basic
examples thereof is the Weighted Connectivity Augmentation Problem (WCAP). In
WCAP, one is given an undirected graph together with a set of additional
weighted candidate edges, and the task is to find a cheapest set of candidate
edges whose addition to the graph increases its edge-connectivity. We present a
$(1.5+\varepsilon)$-approximation algorithm for WCAP, showing for the first
time that factors below $2$ are achievable.
&lt;/p&gt;
&lt;p&gt;On a high level, we design a well-chosen local search algorithm, inspired by
recent advances for Weighted Tree Augmentation. To measure progress, we
consider a directed weakening of WCAP and show that it has highly structured
planar solutions. Interpreting a solution of the original problem as one of
this directed weakening allows us to describe local exchange steps in a clean
and algorithmically amenable way. Leveraging these insights, we show that we
can efficiently search for good exchange steps within a component class for
link sets that is closely related to bounded treewidth subgraphs of circle
graphs. Moreover, we prove that an optimum solution can be decomposed into
smaller components, at least one of which leads to a good local search step as
long as we did not yet achieve the claimed approximation guarantee.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Prophet Inequalities for Cost Minimization</title>
    <link href="http://arxiv.org/abs/2209.07988"/>
    <id>http://arxiv.org/abs/2209.07988</id>
    <updated>2022-09-19T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Livanos_V/0/1/0/all/0/1&quot;&gt;Vasilis Livanos&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mehta_R/0/1/0/all/0/1&quot;&gt;Ruta Mehta&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Prophet inequalities for rewards maximization are fundamental results from
optimal stopping theory with several applications to mechanism design and
online optimization. We study the cost minimization counterpart of the
classical prophet inequality, where one is facing a sequence of costs $X_1,
X_2, \dots, X_n$ in an online manner and must &#39;&#39;stop&#39;&#39; at some point and take
the last cost seen. Given that the $X_i$&#39;s are independent, drawn from known
distributions, the goal is to devise a stopping strategy $S$ (online algorithm)
that minimizes the expected cost.
&lt;/p&gt;
&lt;p&gt;We first observe that if the $X_i$&#39;s are not identically distributed, then no
strategy can achieve a bounded approximation, no matter if the arrival order is
adversarial or random. This leads us to consider the case where the $X_i$&#39;s are
I.I.D.. For the I.I.D. case, we give a complete characterization of the optimal
stopping strategy. We show that it achieves a (distribution-dependent)
constant-factor approximation to the prophet&#39;s cost for almost all
distributions and that this constant is tight. In particular, for distributions
for which the integral of the hazard rate is a polynomial $H(x) = \sum_{i=1}^k
a_i x^{d_i}$, where $d_1 &amp;lt; \dots &amp;lt; d_k$, the approximation factor is
$\lambda(d_1)$, a decreasing function of $d_1$. Furthermore, for MHR
distributions, we show that this constant is at most $2$, and this is again
tight.
&lt;/p&gt;
&lt;p&gt;We also analyze single-threshold strategies for the cost prophet inequality
problem. We design a threshold that achieves a
$\operatorname{O}(\operatorname{polylog}n)$-factor approximation, where the
exponent in the logarithmic factor is a distribution-dependent constant, and we
show a matching lower bound.
&lt;/p&gt;
&lt;p&gt;We believe that our results are of independent interest for analyzing
approximately optimal (posted price-style) mechanisms for procuring items.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Fast approximation of search trees on trees with centroid trees</title>
    <link href="http://arxiv.org/abs/2209.08024"/>
    <id>http://arxiv.org/abs/2209.08024</id>
    <updated>2022-09-19T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Berendsohn_B/0/1/0/all/0/1&quot;&gt;Benjamin Aram Berendsohn&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Golinsky_I/0/1/0/all/0/1&quot;&gt;Ishay Golinsky&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kaplan_H/0/1/0/all/0/1&quot;&gt;Haim Kaplan&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kozma_L/0/1/0/all/0/1&quot;&gt;L&amp;#xe1;szl&amp;#xf3; Kozma&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Search trees on trees (STTs) generalize the fundamental binary search tree
(BST) data structure: in STTs the underlying search space is an arbitrary tree,
whereas in BSTs it is a path. An optimal BST of size $n$ can be computed for a
given distribution of queries in $O(n^2)$ time [Knuth 1971] and centroid BSTs
provide a nearly-optimal alternative, computable in $O(n)$ time [Mehlhorn
1977].
&lt;/p&gt;
&lt;p&gt;By contrast, optimal STTs are not known to be computable in polynomial time,
and the fastest constant-approximation algorithm runs in $O(n^3)$ time
[Berendsohn, Kozma 2022]. Centroid trees can be defined for STTs analogously to
BSTs, and they have been used in a wide range of algorithmic applications. In
the unweighted case (i.e., for a uniform distribution of queries), a centroid
tree can be computed in $O(n)$ time [Brodal et al. 2001; Della Giustina et al.
2019]. These algorithms, however, do not readily extend to the weighted case.
Moreover, no approximation guarantees were previously known for centroid trees
in either the unweighted or weighted cases.
&lt;/p&gt;
&lt;p&gt;In this paper we revisit centroid trees in a general, weighted setting, and
we settle both the algorithmic complexity of constructing them, and the quality
of their approximation. For constructing a weighted centroid tree, we give an
output-sensitive $O(n\log h)\subseteq O(n\log n)$ time algorithm, where $h$ is
the height of the resulting centroid tree. If the weights are of polynomial
complexity, the running time is $O(n\log\log n)$. We show these bounds to be
optimal, in a general decision tree model of computation. For approximation, we
prove that the cost of a centroid tree is at most twice the optimum, and this
guarantee is best possible, both in the weighted and unweighted cases. We also
give tight, fine-grained bounds on the approximation-ratio for bounded-degree
trees and on the approximation-ratio of more general $\alpha$-centroid trees.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR22-132 |  Fooling polynomials using invariant theory | 

	Harm Derksen, 

	Emanuele Viola</title>
    <link href="https://eccc.weizmann.ac.il/report/2022/132"/>
    <id>https://eccc.weizmann.ac.il/report/2022/132</id>
    <updated>2022-09-18T20:32:26+00:00</updated>
    <content type="html" xml:lang="en">
    We revisit the problem of constructing explicit pseudorandom generators
that fool with error $\epsilon$ degree-$d$ polynomials in $n$ variables
over the field $F_q$, in the case of large $q$. Previous constructions
either have seed length at least $2^{d}\log q$, and thus are only non-trivial
when the degree is less than $\log n$, or else rely on a seminal reduction by Bogdanov
(STOC 2005). This reduction yields seed length not less than $d^{4} \log n + \log q$
and requires fields of size at least $d^{6}/\epsilon^{2}$; and explicit generators
meeting such bounds are known.

Departing from Bogdanov&amp;#39;s reduction, we develop an algebraic analogue
of the Bogdanov-Viola paradigm (FOCS 2007, SICOMP 2010) of summing
generators for degree-one polynomials. Whereas previous analyses of
the paradigm are restricted to degree less than $\log n$, we give a new analysis
which handles large degrees. A main new idea is to show that the construction
preserves indecomposability of polynomials. Apparently for the first
time in the area, the proof uses invariant theory.

Our approach in particular yields several new pseudorandom generators.
In particular, for large enough fields we obtain seed length $O(d\log n+\log q)$
which is optimal up to constant factors. We also construct generators
for fields of size as small as $O(d^{4})$. Further reducing the field
size requires a significant change in techniques: Most or all generators
for large-degree polynomials rely on Weil bounds; but such bounds
are only applicable when $q&amp;gt;d^{4}$.
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Adam Sheffer: New CS Tenure Track Positions, New program in Manhattan</title>
    <link href="https://adamsheffer.wordpress.com/2022/09/18/new-cs-tenure-track-positions-new-program-in-manhattan/"/>
    <id>http://adamsheffer.wordpress.com/?p=5781</id>
    <updated>2022-09-18T18:01:54+00:00</updated>
    <content type="html" xml:lang="en">
    Do you happen to know anyone who is looking for a CS Tenure Track position in Manhattan? Someone who might be interested in being part of a new CS program and help decide the directions it will grow into? Please share this with them: https://geometrynyc.wixsite.com/csjobs.&lt;p class=&quot;authors&quot;&gt;By Adam Sheffer&lt;/p&gt;
  </content>
    <author>
      <name>Adam Sheffer</name>
      <uri>https://adamsheffer.wordpress.com</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR22-131 |  Radical Sylvester-Gallai for Cubics | 

	Rafael Mendes de Oliveira, 

	Akash Sengupta</title>
    <link href="https://eccc.weizmann.ac.il/report/2022/131"/>
    <id>https://eccc.weizmann.ac.il/report/2022/131</id>
    <updated>2022-09-18T08:52:56+00:00</updated>
    <content type="html" xml:lang="en">
    Let $\mathcal{F} = \{F_1, \ldots, F_m\}$ be a finite set of irreducible homogeneous multivariate polynomials of degree at most $3$ such that $F_i$ does not divide $F_j$ for $i\neq j$. 
We say that $\mathcal{F}$ is a cubic radical Sylvester-Gallai configuration if for any two distinct $F_i,F_j$ there exists a third polynomial $F_k$ such that whenever $F_i,F_j$ vanish, $F_k$ also vanishes. In particular, for any two indices $i, j \in [m]$, there exists $k \in [m] \setminus \{i,j\}$ such that $F_k \in \rad(F_i, F_j)$.

We prove that any cubic radical Sylvester-Gallai configuration is low-dimensional, that is
$$ \dim span_{\mathbb{K}}{\mathcal{F}} = O(1).$$
This solves a conjecture of Gupta [G14] in degree $3$ and generalizes the result in [S20], which proved that quadratic radical Sylvester-Gallai configurations are low-dimensional. 
Our result takes us one step closer towards solving the non-linear Sylvester-Gallai conjectures of Gupta [G14], which would yield the first deterministic polynomial time algorithm for the PIT problem for depth-4 circuits of bounded top and bottom fanins.


To prove our Sylvester-Gallai theorem, we develop several new tools combining techniques from algebraic geometry and elimination theory.
Among our technical contributions, we prove a structure theorem characterizing non-radical ideals generated by two cubic forms, generalizing the structure theorems of [HP94, CTSSD87, S20].
Moreover, building upon the groundbreaking work [AH20a], we introduce the notion of wide Ananyan-Hochster algebras and show that these algebras allow us to transfer the local conditions of Sylvester-Gallai configurations into global conditions.
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR22-130 |  A Borsuk-Ulam lower bound for sign-rank and its application | 

	Hamed Hatami, 

	Kaave Hosseini, 

	Xiang Meng</title>
    <link href="https://eccc.weizmann.ac.il/report/2022/130"/>
    <id>https://eccc.weizmann.ac.il/report/2022/130</id>
    <updated>2022-09-16T02:54:31+00:00</updated>
    <content type="html" xml:lang="en">
    We introduce a new topological argument based on the Borsuk-Ulam theorem to prove a lower bound on sign-rank.  

      This result implies the strongest possible separation between randomized and unbounded-error communication complexity. More precisely, we show that for a particular range of parameters, the randomized communication complexity of the Gap Hamming Distance problem is $O(1)$ while its unbounded-error communication complexity is  $\Omega(\log(n))$. 
     
 Previously, it was unknown whether the unbounded-error communication complexity could be asymptotically larger than the randomized communication complexity.
    
In connection to learning theory, we prove that,  despite its learnability properties, the class of large margin half-spaces in $\mathbb{R}^d$ is genuinely high-dimensional, i.e., it cannot be embedded in $\mathbb{R}^{d-1}$. This result is closely related to a recent conjecture of Alon, Hanneke, Holzman, and Moran (FOCS 2021) about the VC dimension of this class.
    
Our final application is to the theory of dimension reductions. The Johnson-Lindenstrauss theorem implies that any set of $N$ unit vectors is embeddable in dimension  $O(\gamma^{-2}\log N)$ without altering the signs of those pairwise inner products that have absolute values at least $\gamma&amp;gt;0$.  Our result establishes the tightness of this bound, which answers a question of Linial, Mendelson, Schechtman, and Shraibman (Combinatorica, 27(2007)) in the case of partial functions.
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: How Much Structure Is Needed for Huge Quantum Speedups?</title>
    <link href="http://arxiv.org/abs/2209.06930"/>
    <id>http://arxiv.org/abs/2209.06930</id>
    <updated>2022-09-16T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Aaronson_S/0/1/0/all/0/1&quot;&gt;Scott Aaronson&lt;/a&gt;&lt;/p&gt;&lt;p&gt;I survey, for a general scientific audience, three decades of research into
which sorts of problems admit exponential speedups via quantum computers --
from the classics (like the algorithms of Simon and Shor), to the breakthrough
of Yamakawa and Zhandry from April 2022. I discuss both the quantum circuit
model, which is what we ultimately care about in practice but where our
knowledge is radically incomplete, and the so-called oracle or black-box or
query complexity model, where we&#39;ve managed to achieve a much more thorough
understanding that then informs our conjectures about the circuit model. I
discuss the strengths and weaknesses of switching attention to sampling tasks,
as was done in the recent quantum supremacy experiments. I make some skeptical
remarks about widely-repeated claims of exponential quantum speedups for
practical machine learning and optimization problems. Through many examples, I
try to convey the &quot;law of conservation of weirdness,&quot; according to which every
problem admitting an exponential quantum speedup must have some unusual
property to allow the amplitude to be concentrated on the unknown right
answer(s).
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: The Complexity Classes of Hamming Distance Recoverable Robust Problems</title>
    <link href="http://arxiv.org/abs/2209.06939"/>
    <id>http://arxiv.org/abs/2209.06939</id>
    <updated>2022-09-16T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Grune_C/0/1/0/all/0/1&quot;&gt;Christoph Gr&amp;#xfc;ne&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In the well-known complexity class NP, many combinatorial problems can be
found, whose optimization counterpart are important for many practical
settings. Those problems usually consider full knowledge about the input and
optimize on this specific input. In a practical setting, however, uncertainty
in the input data is a usual phenomenon, whereby this is normally not covered
in optimization versions of NP problems. One concept to model the uncertainty
in the input data, is \textit{recoverable robustness}. In this setting, a
solution on the input is calculated, whereby a possible recovery to a good
solution should be guaranteed, whenever uncertainty manifests itself. That is,
a solution $\texttt{s}_0$ for the base scenario $\textsf{S}_0$ as well as a
solution \texttt{s} for every possible scenario of scenario set \textsf{S} has
to be calculated. In other words, not only solution $\texttt{s}_0$ for instance
$\textsf{S}_0$ is calculated but solutions \texttt{s} for all scenarios from
\textsf{S} are prepared to correct possible errors through uncertainty. This
paper introduces a specific concept of recoverable robust problems: Hamming
Distance Recoverable Robust Problems. In this setting, solutions $\texttt{s}_0$
and \texttt{s} have to be calculated, such that $\texttt{s}_0$ and \texttt{s}
may only differ in at most $\kappa$ elements. That is, one can recover from a
harmful scenario by choosing a different solution, which is not too far away
from the first solution. This paper surveys the complexity of Hamming distance
recoverable robust version of optimization problems, typically found in NP for
different types of scenarios. The complexity is primarily situated in the lower
levels of the polynomial hierarchy. The main contribution of the paper is that
recoverable robust problems with compression-encoded scenarios and $m \in
\mathbb{N}$ recoveries are $\Sigma^P_{2m+1}$-complete.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: On Power Set Axiom</title>
    <link href="http://arxiv.org/abs/2209.07497"/>
    <id>http://arxiv.org/abs/2209.07497</id>
    <updated>2022-09-16T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Levin_L/0/1/0/all/0/1&quot;&gt;Leonid A. Levin&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Usual math sets have special types: countable, compact, open, occasionally
Borel, rarely projective, etc. Generic sets dependent on Power Set axiom appear
mostly in esoteric areas, ST logic, etc. Dropping that Axiom may greatly
simplify the foundations of mainstream math. Meanwhile dependence on it of a
theorem is worth noting, as dependence on Choice often is.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Stochastic strategies for patrolling a terrain with a synchronized multi-robot system</title>
    <link href="http://arxiv.org/abs/2209.06968"/>
    <id>http://arxiv.org/abs/2209.06968</id>
    <updated>2022-09-16T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Caraballo_L/0/1/0/all/0/1&quot;&gt;Luis E. Caraballo&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Diaz_Banez_J/0/1/0/all/0/1&quot;&gt;Jos&amp;#xe9; M. D&amp;#xed;az-B&amp;#xe1;&amp;#xf1;ez&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fabila_Monroy_R/0/1/0/all/0/1&quot;&gt;Ruy Fabila-Monroy&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hidalgo_Toscan_C/0/1/0/all/0/1&quot;&gt;Carlos Hidalgo-Toscan&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A group of cooperative aerial robots can be deployed to efficiently patrol a
terrain, in which each robot flies around an assigned area and shares
information with the neighbors periodically in order to protect or supervise
it. To ensure robustness, previous works on these synchronized systems propose
sending a robot to the neighboring area in case it detects a failure. In order
to deal with unpredictability and to improve on the efficiency in the
deterministic patrolling scheme, this paper proposes random strategies to cover
the areas distributed among the agents. First, a theoretical study of the
stochastic process is addressed in this paper for two metrics: the \emph{idle
time}, the expected time between two consecutive observations of any point of
the terrain and the \emph{isolation time}, the expected time that a robot is
without communication with any other robot. After that, the random strategies
are experimentally compared with the deterministic strategy adding another
metric: the \emph{broadcast time}, the expected time elapsed from the moment a
robot emits a message until it is received by all the other robots of the team.
The simulations show that theoretical results are in good agreement with the
simulations and the random strategies outperform the behavior obtained with the
deterministic protocol proposed in the literature.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Spectral Total-Variation Processing of Shapes -- Theory and Applications</title>
    <link href="http://arxiv.org/abs/2209.07517"/>
    <id>http://arxiv.org/abs/2209.07517</id>
    <updated>2022-09-16T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Brokman_J/0/1/0/all/0/1&quot;&gt;Jonathan Brokman&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Burger_M/0/1/0/all/0/1&quot;&gt;Martin Burger&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gilboa_G/0/1/0/all/0/1&quot;&gt;Guy Gilboa&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this work we present a comprehensive analysis of total variation (TV) on
non Euclidean domains and its eigenfunctions. We specifically address
parameterized surfaces, a natural representation of the shapes used in 3D
graphics. Our work sheds new light on the celebrated Beltrami and Anisotropic
TV flows, and explains experimental findings from recent years on shape
spectral TV [Fumero et al. 2020] and adaptive anisotropic spectral TV [Biton
and Gilboa 2022]. A new notion of convexity on manifolds is derived, by
characterizing structures that are stable throughout the TV flow, performed on
manifolds. We further propose a time efficient nonlinear and non Euclidean
spectral framework for shape processing that is based on zero homogeneous
flows, and propose three different such methods. Each method satisfies distinct
characteristics, demonstrated through smoothing, enhancing and exaggerating
filters.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Multiway Powersort</title>
    <link href="http://arxiv.org/abs/2209.06909"/>
    <id>http://arxiv.org/abs/2209.06909</id>
    <updated>2022-09-16T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gelling_W/0/1/0/all/0/1&quot;&gt;William Cawley Gelling&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nebel_M/0/1/0/all/0/1&quot;&gt;Markus E. Nebel&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Smith_B/0/1/0/all/0/1&quot;&gt;Benjamin Smith&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wild_S/0/1/0/all/0/1&quot;&gt;Sebastian Wild&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Powersort (Munro &amp;amp; Wild, ESA2018) has recently replaced Timsort&#39;s suboptimal
merge policy in the CPython reference implementation of Python, as well as in
PyPy and further libraries. We present a stable mergesort variant, Multiway
Powersort, that exploits existing runs and finds nearly-optimal merging orders
for k-way merges with negligible overhead. As observed with Multiway Quicksort
(Kushagra et al., ALENEX 2014; Aum\&quot;uller &amp;amp; Dietzfelbinger, TALG 2016; Wild,
PhD thesis 2016) and the inclusion of Dual-Pivot Quicksort in the Java runtime
library, memory transfers increasingly determine the cost of internal sorting.
We demonstrate that our 4-way Powersort implementation can achieve substantial
speedups over standard (2-way) Powersort and other stable sorting methods
without compromising the optimally run-adaptive performance of Powersort.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Algorithms and Lower Bounds for Replacement Paths under Multiple Edge Failures</title>
    <link href="http://arxiv.org/abs/2209.07016"/>
    <id>http://arxiv.org/abs/2209.07016</id>
    <updated>2022-09-16T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Williams_V/0/1/0/all/0/1&quot;&gt;Virginia Vassilevska Williams&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Woldeghebriel_E/0/1/0/all/0/1&quot;&gt;Eyob Woldeghebriel&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Xu_Y/0/1/0/all/0/1&quot;&gt;Yinzhan Xu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;This paper considers a natural fault-tolerant shortest paths problem: for
some constant integer $f$, given a directed weighted graph with no negative
cycles and two fixed vertices $s$ and $t$, compute (either explicitly or
implicitly) for every tuple of $f$ edges, the distance from $s$ to $t$ if these
edges fail. We call this problem $f$-Fault Replacement Paths ($f$FRP).
&lt;/p&gt;
&lt;p&gt;We first present an $\tilde{O}(n^3)$ time algorithm for $2$FRP in $n$-vertex
directed graphs with arbitrary edge weights and no negative cycles. As $2$FRP
is a generalization of the well-studied Replacement Paths problem (RP) that
asks for the distances between $s$ and $t$ for any single edge failure, $2$FRP
is at least as hard as RP. Since RP in graphs with arbitrary weights is
equivalent in a fine-grained sense to All-Pairs Shortest Paths (APSP)
[Vassilevska Williams and Williams FOCS&#39;10, J.~ACM&#39;18], $2$FRP is at least as
hard as APSP, and thus a substantially subcubic time algorithm in the number of
vertices for $2$FRP would be a breakthrough. Therefore, our algorithm in
$\tilde{O}(n^3)$ time is conditionally nearly optimal. Our algorithm implies an
$\tilde{O}(n^{f+1})$ time algorithm for the $f$FRP problem, giving the first
improvement over the straightforward $O(n^{f+2})$ time algorithm.
&lt;/p&gt;
&lt;p&gt;Then we focus on the restriction of $2$FRP to graphs with small integer
weights bounded by $M$ in absolute values. Using fast rectangular matrix
multiplication, we obtain a randomized algorithm that runs in
$\tilde{O}(M^{2/3}n^{2.9153})$ time. This implies an improvement over our
$\tilde{O}(n^{f+1})$ time arbitrary weight algorithm for all $f&amp;gt;1$. We also
present a data structure variant of the algorithm that can trade off
pre-processing and query time. In addition to the algebraic algorithms, we also
give an $n^{8/3-o(1)}$ conditional lower bound for combinatorial $2$FRP
algorithms in directed unweighted graphs.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Almost Ramanujan Expanders from Arbitrary Expanders via Operator Amplification</title>
    <link href="http://arxiv.org/abs/2209.07024"/>
    <id>http://arxiv.org/abs/2209.07024</id>
    <updated>2022-09-16T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jeronimo_F/0/1/0/all/0/1&quot;&gt;Fernando Granha Jeronimo&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mittal_T/0/1/0/all/0/1&quot;&gt;Tushant Mittal&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Roy_S/0/1/0/all/0/1&quot;&gt;Sourya Roy&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wigderson_A/0/1/0/all/0/1&quot;&gt;Avi Wigderson&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We give an efficient algorithm that transforms any bounded degree expander
graph into another that achieves almost optimal (namely, near-quadratic, $d
\leq 1/\lambda^{2+o(1)}$) trade-off between (any desired) spectral expansion
$\lambda$ and degree $d$. Furthermore, the algorithm is local: every vertex can
compute its new neighbors as a subset of its original neighborhood of radius
$O(\log(1/\lambda))$. The optimal quadratic trade-off is known as the Ramanujan
bound, so our construction gives almost Ramanujan expanders from arbitrary
expanders.
&lt;/p&gt;
&lt;p&gt;The locality of the transformation preserves structural properties of the
original graph, and thus has many consequences. Applied to Cayley graphs, our
transformation shows that any expanding finite group has almost Ramanujan
expanding generators. Similarly, one can obtain almost optimal explicit
constructions of quantum expanders, dimension expanders, monotone expanders,
etc., from existing (suboptimal) constructions of such objects. Another
consequence is a &quot;derandomized&quot; random walk on the original (suboptimal)
expander with almost optimal convergence rate. Our transformation also applies
when the degree is not bounded or the expansion is not constant.
&lt;/p&gt;
&lt;p&gt;We obtain our results by a generalization of Ta-Shma&#39;s technique in his
breakthrough paper [STOC 2017], used to obtain explicit almost optimal binary
codes. Specifically, our spectral amplification extends Ta-Shma&#39;s analysis of
bias amplification from scalars to matrices of arbitrary dimension in a very
natural way. Curiously, while Ta-Shma&#39;s explicit bias amplification
derandomizes a well-known probabilistic argument (underlying the
Gilbert--Varshamov bound), there seems to be no known probabilistic (or other
existential) way of achieving our explicit (&quot;high-dimensional&quot;) spectral
amplification.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Concurrent Size</title>
    <link href="http://arxiv.org/abs/2209.07100"/>
    <id>http://arxiv.org/abs/2209.07100</id>
    <updated>2022-09-16T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sela_G/0/1/0/all/0/1&quot;&gt;Gal Sela&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Petrank_E/0/1/0/all/0/1&quot;&gt;Erez Petrank&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The size of a data structure (i.e., the number of elements in it) is a widely
used property of a data set. However, for concurrent programs, obtaining a
correct size efficiently is non-trivial. In fact, the literature does not offer
a mechanism to obtain a correct (linearizable) size of a concurrent data set
without resorting to inefficient solutions, such as taking a full snapshot of
the data structure to count the elements, or acquiring one global lock in all
update and size operations. This paper presents a methodology for adding a
concurrent linearizable size operation to sets and dictionaries with a
relatively low performance overhead. Theoretically, the proposed size operation
is wait-free with asymptotic complexity linear in the number of threads
(independently of data-structure size). Practically, we evaluated the
performance overhead by adding size to various concurrent data structures in
Java$-$a skip list, a hash table and a tree. The proposed linearizable size
operation executes faster by orders of magnitude compared to the existing
option of taking a snapshot, while incurring a throughput loss of $1\%-20\%$ on
the original data structure&#39;s operations.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Multicalibrated Regression for Downstream Fairness</title>
    <link href="http://arxiv.org/abs/2209.07312"/>
    <id>http://arxiv.org/abs/2209.07312</id>
    <updated>2022-09-16T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Globus_Harris_I/0/1/0/all/0/1&quot;&gt;Ira Globus-Harris&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gupta_V/0/1/0/all/0/1&quot;&gt;Varun Gupta&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jung_C/0/1/0/all/0/1&quot;&gt;Christopher Jung&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kearns_M/0/1/0/all/0/1&quot;&gt;Michael Kearns&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Morgenstern_J/0/1/0/all/0/1&quot;&gt;Jamie Morgenstern&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Roth_A/0/1/0/all/0/1&quot;&gt;Aaron Roth&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We show how to take a regression function $\hat{f}$ that is appropriately
``multicalibrated&#39;&#39; and efficiently post-process it into an approximately error
minimizing classifier satisfying a large variety of fairness constraints. The
post-processing requires no labeled data, and only a modest amount of unlabeled
data and computation. The computational and sample complexity requirements of
computing $\hat f$ are comparable to the requirements for solving a single fair
learning task optimally, but it can in fact be used to solve many different
downstream fairness-constrained learning problems efficiently. Our
post-processing method easily handles intersecting groups, generalizing prior
work on post-processing regression functions to satisfy fairness constraints
that only applied to disjoint groups. Our work extends recent work showing that
multicalibrated regression functions are ``omnipredictors&#39;&#39; (i.e. can be
post-processed to optimally solve unconstrained ERM problems) to constrained
optimization.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Envy-freeness in 3D Hedonic Games</title>
    <link href="http://arxiv.org/abs/2209.07440"/>
    <id>http://arxiv.org/abs/2209.07440</id>
    <updated>2022-09-16T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Cseh_A/0/1/0/all/0/1&quot;&gt;&amp;#xc1;gnes Cseh&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+McKay_M/0/1/0/all/0/1&quot;&gt;Michael McKay&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Manlove_D/0/1/0/all/0/1&quot;&gt;David Manlove&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the problem of partitioning a set of agents into coalitions based on
the agents&#39; additively separable preferences, which can also be viewed as a
hedonic game. We apply three successively weaker solution concepts, namely
envy-freeness, weakly justified envy-freeness, and justified envy-freeness.
&lt;/p&gt;
&lt;p&gt;In a model in which coalitions may have any size, trivial solutions exist for
these concepts, which provides a strong motivation for placing restrictions on
coalition size. In this paper, we require feasible coalitions to have size
three. We study the existence of partitions that are envy-free, weakly
justified envy-free, and justified envy-free, and the computational complexity
of finding such partitions, if they exist.
&lt;/p&gt;
&lt;p&gt;We present a comprehensive complexity classification, in terms of the
restrictions placed on the agents&#39; preferences. From this, we identify a
general trend that for the three successively weaker solution concepts,
existence and polynomial-time solvability hold under successively weaker
restrictions.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Omnipredictors for Constrained Optimization</title>
    <link href="http://arxiv.org/abs/2209.07463"/>
    <id>http://arxiv.org/abs/2209.07463</id>
    <updated>2022-09-16T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hu_L/0/1/0/all/0/1&quot;&gt;Lunjia Hu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Livni_Navon_I/0/1/0/all/0/1&quot;&gt;Inbal Livni-Navon&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Reingold_O/0/1/0/all/0/1&quot;&gt;Omer Reingold&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Yang_C/0/1/0/all/0/1&quot;&gt;Chutong Yang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The notion of omnipredictors (Gopalan, Kalai, Reingold, Sharan and Wieder
ITCS 2021), suggested a new paradigm for loss minimization. Rather than
learning a predictor based on a known loss function, omnipredictors can easily
be post-processed to minimize any one of a rich family of loss functions
compared with the loss of a class $C$. It has been shown that such
omnipredictors exist and are implied (for all convex and Lipschitz loss
functions) by the notion of multicalibration from the algorithmic fairness
literature. Nevertheless, it is often the case that the action selected must
obey some additional constraints (such as capacity or parity constraints). In
itself, the original notion of omnipredictors does not apply in this
well-motivated and heavily studied the context of constrained loss
minimization.
&lt;/p&gt;
&lt;p&gt;In this paper, we introduce omnipredictors for constrained optimization and
study their complexity and implications. The notion that we introduce allows
the learner to be unaware of the loss function that will be later assigned as
well as the constraints that will be later imposed, as long as the
subpopulations that are used to define these constraints are known.
&lt;/p&gt;
&lt;p&gt;The paper shows how to obtain omnipredictors for constrained optimization
problems, relying on appropriate variants of multicalibration. For some
interesting constraints and general loss functions and for general constraints
and some interesting loss functions, we show how omnipredictors are implied by
a variant of multicalibration that is similar in complexity to standard
multicalibration. We demonstrate that in the general case, standard
multicalibration is insufficient and show that omnipredictors are implied by
multicalibration with respect to a class containing all the level sets of
hypotheses in $C$. We also investigate the implications when the constraints
are group fairness notions.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: On (Random-order) Online Contention Resolution Schemes for the Matching Polytope of (Bipartite) Graphs</title>
    <link href="http://arxiv.org/abs/2209.07520"/>
    <id>http://arxiv.org/abs/2209.07520</id>
    <updated>2022-09-16T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+MacRury_C/0/1/0/all/0/1&quot;&gt;Calum MacRury&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ma_W/0/1/0/all/0/1&quot;&gt;Will Ma&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Grammel_N/0/1/0/all/0/1&quot;&gt;Nathaniel Grammel&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We present new results for online contention resolution schemes for the
matching polytope of graphs, in the random-order (RCRS) and adversarial (OCRS)
arrival models. Our results include improved selectability guarantees (i.e.,
lower bounds), as well as new impossibility results (i.e., upper bounds). By
well-known reductions to the prophet (secretary) matching problem, a
$c$-selectable OCRS (RCRS) implies a $c$-competitive algorithm for adversarial
(random order) edge arrivals. Similar reductions are also known for the
query-commit matching problem. For the adversarial arrival model, we present a
new analysis of the OCRS of Ezra et al.~(EC, 2020). We show that this scheme is
$0.344$-selectable for general graphs and $0.349$-selectable for bipartite
graphs, improving on the previous $0.337$ selectability result for this
algorithm. We also show that the selectability of this scheme cannot be greater
than $0.361$ for general graphs and $0.382$ for bipartite graphs. We further
show that no OCRS can achieve a selectability greater than $0.4$ for general
graphs, and $0.433$ for bipartite graphs.
&lt;/p&gt;
&lt;p&gt;For random-order arrivals, we present two attenuation-based schemes which use
new attenuation functions. Our first RCRS is $0.474$-selectable for general
graphs, and our second is $0.476$-selectable for bipartite graphs. These
results improve upon the recent $0.45$ (and $0.456$) selectability results for
general graphs (respectively, bipartite graphs) due to Pollner et al.~(EC,
2022). On general graphs, our 0.474-selectable RCRS provides the best known
positive result even for offline contention resolution, and also for the
correlation gap. We conclude by proving a fundamental upper bound of 0.5 on the
selectability of RCRS, using bipartite graphs.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: $\tilde{O}(n+\mathrm{poly}(k))$-time Algorithm for Bounded Tree Edit Distance</title>
    <link href="http://arxiv.org/abs/2209.07524"/>
    <id>http://arxiv.org/abs/2209.07524</id>
    <updated>2022-09-16T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Das_D/0/1/0/all/0/1&quot;&gt;Debarati Das&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gilbert_J/0/1/0/all/0/1&quot;&gt;Jacob Gilbert&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hajiaghayi_M/0/1/0/all/0/1&quot;&gt;MohammadTaghi Hajiaghayi&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kociumaka_T/0/1/0/all/0/1&quot;&gt;Tomasz Kociumaka&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Saha_B/0/1/0/all/0/1&quot;&gt;Barna Saha&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Saleh_H/0/1/0/all/0/1&quot;&gt;Hamed Saleh&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Computing the edit distance of two strings is one of the most basic problems
in computer science and combinatorial optimization. Tree edit distance is a
natural generalization of edit distance in which the task is to compute a
measure of dissimilarity between two (unweighted) rooted trees with node
labels. Perhaps the most notable recent application of tree edit distance is in
NoSQL big databases, such as MongoDB, where each row of the database is a JSON
document represented as a labeled rooted tree, and finding dissimilarity
between two rows is a basic operation. Until recently, the fastest algorithm
for tree edit distance ran in cubic time (Demaine, Mozes, Rossman, Weimann;
TALG&#39;10); however, Mao (FOCS&#39;21) broke the cubic barrier for the tree edit
distance problem using fast matrix multiplication.
&lt;/p&gt;
&lt;p&gt;Given a parameter $k$ as an upper bound on the distance, an $O(n+k^2)$-time
algorithm for edit distance has been known since the 1980s due to the works of
Myers (Algorithmica&#39;86) and Landau and Vishkin (JCSS&#39;88). The existence of an
$\tilde{O}(n+\mathrm{poly}(k))$-time algorithm for tree edit distance has been
posed as an open question, e.g., by Akmal and Jin (ICALP&#39;21), who gave a
state-of-the-art $\tilde{O}(nk^2)$-time algorithm. In this paper, we answer
this question positively.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">David Eppstein: Linkage</title>
    <link href="https://11011110.github.io/blog/2022/09/15/linkage.html"/>
    <id>https://11011110.github.io/blog/2022/09/15/linkage</id>
    <updated>2022-09-15T22:36:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Lithophanes, a 19th-century art medium involving backlit translucent engravings, &lt;a href=&quot;https://arstechnica.com/science/2022/08/19th-century-art-form-revived-to-make-tactile-science-graphics-for-the-blind/&quot;&gt;revived via 3d printing as a single format for scientific images that blind people can read by feeling and sighted people can see&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/108927524393418764&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;,&lt;/span&gt; &lt;a href=&quot;https://doi.org/10.1126/sciadv.abq2640&quot;&gt;original research paper&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A quick “not a Reuleaux triangle” link: &lt;a href=&quot;https://www.instructables.com/Lego-Triangle/&quot;&gt;Lego triangles&lt;/a&gt;, incorrectly embellished as &lt;a href=&quot;https://makezine.com/article/maker-news/lego-reuleaux-triangles/&quot;&gt;Lego Reuleaux triangles&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/108933430914328377&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; The second link even goes on to say “I don’t think [they] are quite convex enough to be proper Reuleaux triangles”. And in this it’s correct, if “convex” is interpreted to mean “bulgy”. You can tell because the corners are right angles. Proper Reuleaux triangles would have \(120^\circ\) corners.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;As part of a search for real-world applications of combinatorial design theory, Jeremy Kun asks: “&lt;a href=&quot;https://mathstodon.xyz/@j2kun/108936354352902797&quot;&gt;What is the authoritative text on combinatorial designs, anyway?&lt;/a&gt;” I suspect that the shakeup in the area caused by Peter Keevash’s use of the probabilistic method has caused what used to be the authoritative texts to become obsolete.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://youtube.com/shorts/KYMYshbhKcw&quot;&gt;Squaring the circle illusion&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@henryseg/108940642070353471&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; Henry Segerman 3d-prints a shape that, when rotated \(180^\circ\), changes appearance from a circle to a square. With the same area in the viewing frame, even.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finding a vertex-to-vertex and edge-to-edge mapping (“homomorphism”) from an input directed graph to a fixed oriented tree or cycle can be either polynomial-time or &lt;span style=&quot;white-space:nowrap&quot;&gt;\(\mathsf{NP}\)-complete,&lt;/span&gt; depending on the target. But &lt;a href=&quot;https://cstheory.stackexchange.com/questions/33836/complexity-of-digraph-homomorphism-to-an-oriented-cycle&quot;&gt;the targets for which it is &lt;span style=&quot;white-space:nowrap&quot;&gt;\(\mathsf{NP}\)-complete&lt;/span&gt; are surprisingly complicated!&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/108950099488030475&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;)&lt;/span&gt;  &lt;a href=&quot;https://arxiv.org/abs/2205.07528&quot;&gt;A recent search&lt;/a&gt; found the smallest hard tree to have &lt;span style=&quot;white-space:nowrap&quot;&gt;\(20\) vertices,&lt;/span&gt; and the smallest hard cycle to &lt;span style=&quot;white-space:nowrap&quot;&gt;have \(26\).&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tamal Dey and Yusu Wang have a new graduate-level textbook on computational topology &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/108953135639829468&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;):&lt;/span&gt; &lt;em&gt;&lt;a href=&quot;https://www.cs.purdue.edu/homes/tamaldey/book/CTDAbook/CTDAbook.pdf&quot;&gt;Computational Topology for Data Analysis&lt;/a&gt;&lt;/em&gt; (&lt;a href=&quot;https://doi.org/10.1017/9781009099950&quot;&gt;Cambridge University Press, 2022&lt;/a&gt;). &lt;a href=&quot;https://www.maa.org/press/maa-reviews/computational-topology-for-data-analysis&quot;&gt;Ellen Gasparovic reviews it for the MAA&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://web.archive.org/web/20220908210937/https://www.nytimes.com/interactive/2022/09/08/world/europe/succession-royal-family.html&quot;&gt;In case anyone else is looking for a topical real-world example of a depth-first traversal of a tree&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/108965503136254522&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Chegg stops pretending not to have coursework-cheating as their main business; &lt;a href=&quot;https://www.chronicle.com/article/some-students-use-chegg-to-cheat-the-site-has-stopped-helping-colleges-catch-them&quot;&gt;will no longer cooperate with university cheating investigations&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/108970379605304595&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.math.brown.edu/reschwar/PosterPappus/pappus.png&quot;&gt;Schwartz’s Pappus fractal&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/108972366289751471&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;,&lt;/span&gt; &lt;a href=&quot;http://www.math.brown.edu/reschwar/PosterPappus/pappus.pdf&quot;&gt;explanation&lt;/a&gt;). Start with two separate lines of three points \(abc\) &lt;span style=&quot;white-space:nowrap&quot;&gt;and \(ABC\).&lt;/span&gt; By &lt;a href=&quot;https://en.wikipedia.org/wiki/Pappus%27s_hexagon_theorem&quot;&gt;Pappus’s theorem&lt;/a&gt; the diagonal crossing points &lt;span style=&quot;white-space:nowrap&quot;&gt;\(\alpha=aB\cdot Ab\),&lt;/span&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;\(\beta=aC\cdot Ac\),&lt;/span&gt; and \(\gamma=bC\cdot Bc\) form another line of three &lt;span style=&quot;white-space:nowrap&quot;&gt;points \(\alpha\beta\gamma\).&lt;/span&gt; Now recurse with \(abc\) &lt;span style=&quot;white-space:nowrap&quot;&gt;and \(\alpha\beta\gamma\),&lt;/span&gt; and again with \(\alpha\beta\gamma\) &lt;span style=&quot;white-space:nowrap&quot;&gt;and \(ABC\).&lt;/span&gt; You get a nice lightning-bolt fractal shape.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://arxiv.org/html/2209.04402&quot;&gt;This year’s &lt;em&gt;Graph Drawing&lt;/em&gt; conference proceedings are online&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/108982719390301261&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt;  As in past years, they’re using a system where the proceedings are published both on arXiv and in Springer LNCS.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://ris.utwente.nl/ws/portalfiles/portal/275927505/3e2a9e5b2fad237a3d35f36fa2c5f44552f2.pdf&quot;&gt;An analysis of online exam-proctoring tool Proctorio finds it completely ineffective at catching cheaters&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/108984339518916646&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;,&lt;/span&gt; &lt;a href=&quot;https://news.ycombinator.com/item?id=32744976&quot;&gt;via&lt;/a&gt;). “The use of online proctoring is therefore best compared to taking a placebo: it has some positive influence, not because it works but because people believe that it works … policy makers would do well to balance the cost of deploying it (which can be
considerable) against the marginal benefits of this placebo effect.”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://langorigami.com/publication/paper-pentasia-an-aperiodic-surface-in-modular-origami/&quot;&gt;Lang’s paper pentasia&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/108995556838713267&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; The kite and dart Penrose tiling lifts to a surface in 3d with two equilateral triangles per tile, overhanging for the darts. Robert Lang made these nice physical models. Explanations by &lt;a href=&quot;https://link.springer.com/article/10.1007/s00283-021-10088-4&quot;&gt;Barry Cipra on the 1993 discovery of this surface with Conway&lt;/a&gt; and &lt;a href=&quot;https://langorigami.com/wp-content/uploads/2015/09/paper-pentasia.pdf&quot;&gt;Lang and Barry Hayes, also on a related 3d surface for the rhombic Penrose tiling&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Three more new Wikipedia Good Articles &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/108998160700266138&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;):&lt;/span&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Euclidean_minimum_spanning_tree&quot;&gt;Euclidean minimum spanning tree&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Doyle_spiral&quot;&gt;Doyle spiral&lt;/a&gt;, spiraling circle packings in which each circle is surrounded by a ring of six tangent circles&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Laves_graph&quot;&gt;Laves graph&lt;/a&gt;, a highly-symmetric 3-regular infinite graph in 3d&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;An algorithmic version of &lt;a href=&quot;en.wikipedia.org/wiki/Mantel&#39;s theorem&quot;&gt;Mantel’s theorem&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109004244575186009&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;):&lt;/span&gt; If an &lt;span style=&quot;white-space:nowrap&quot;&gt;\(n\)-vertex&lt;/span&gt; graph has more than &lt;span style=&quot;white-space:nowrap&quot;&gt;\(\bigl\lfloor\tfrac{n^2}{4}\bigr\rfloor\) edges&lt;/span&gt; then we can find a triangle in it in linear time.&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;Proof:&lt;/em&gt; Delete min-degree vertices, maintaining the edge excess, until the remaining \(k\) vertices all have &lt;span style=&quot;white-space:nowrap&quot;&gt;degree \(\ge\tfrac{k}{2}\).&lt;/span&gt; If &lt;span style=&quot;white-space:nowrap&quot;&gt;\(k\) is odd,&lt;/span&gt; all &lt;span style=&quot;white-space:nowrap&quot;&gt;have \(\ge \tfrac{k+1}{2}\);&lt;/span&gt; if &lt;span style=&quot;white-space:nowrap&quot;&gt;\(k\) is even,&lt;/span&gt; at least one &lt;span style=&quot;white-space:nowrap&quot;&gt;has \(\ge \tfrac{k}{2}+1\).&lt;/span&gt; Then a max-degree vertex and any neighbor have together &lt;span style=&quot;white-space:nowrap&quot;&gt;\(\ge k+1\) incidences,&lt;/span&gt; so by the pigeonhole principle they have a common neighbor forming a &lt;span style=&quot;white-space:nowrap&quot;&gt;triangle. \(\Box\)&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;authors&quot;&gt;By David Eppstein&lt;/p&gt;
  </content>
    <author>
      <name>David Eppstein</name>
      <uri>https://11011110.github.io/blog/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">CCI: jobs: PostDoc at Technion faculty of Computer Science (Israel) (apply by October 31, 2022)</title>
    <link href="https://cstheory-jobs.org/2022/09/15/postdoc-at-technion-faculty-of-computer-science-israel-apply-by-october-31-2022/"/>
    <id>http://cstheory-jobs.org/2022/09/15/postdoc-at-technion-faculty-of-computer-science-israel-apply-by-october-31-2022/</id>
    <updated>2022-09-15T21:13:46+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;Looking for a PostDoc interested in the area of sublinear algorithms and property testing, for up to four years. PhD applications will also be considered.&lt;/p&gt;
&lt;p&gt;Website: &lt;a href=&quot;https://eldar.cswp.cs.technion.ac.il/positions/&quot;&gt;https://eldar.cswp.cs.technion.ac.il/positions/&lt;/a&gt;&lt;br /&gt;
Email: eldar@cs.technion.ac.il&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By shacharlovett&lt;/p&gt;
  </content>
    <author>
      <name>CCI: jobs</name>
      <uri>https://cstheory-jobs.org</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Computational Complexity: Monarachy: A Problem with Definitions</title>
    <link href="http://blog.computationalcomplexity.org/2022/09/monarachy-problem-with-definitions.html"/>
    <id>tag:blogger.com,1999:blog-3722233.post-6674583717006469349</id>
    <updated>2022-09-15T20:41:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;&amp;nbsp;As I am sure you know, Queen Elizabeth II passed away at the age of 96 recently.&amp;nbsp; I am not a royal-watcher, but I am a royal-watcher-watcher. That is, the question of why people care about the lives of these people intrigues me. A few notes&lt;/p&gt;&lt;p&gt;1) Was she a &lt;i&gt;good Queen?&lt;/i&gt; People tend to think so; however, since the job is somewhat ill-defined its hard to say.&amp;nbsp;&lt;/p&gt;&lt;p&gt;2) The Queen is supposed to be above politics (she does not vote- I was surprised to find out that legally she can, but she really can&#39;t). We know very few of Queen Elizabeth II&#39;s opinions on political events. But the notion of &lt;i&gt;political &lt;/i&gt;is not well defined. One would think that if she did an appeal for people to take the COVID vax that would not be political, but somehow it is (I do not know if she did such an appeal). King Charles III believes in global warming and that we need to do something about it. This again should not be political but is.&amp;nbsp;&lt;/p&gt;&lt;p&gt;3) She is the second longest reigning Monarch. First is King Louis XIV who first became king at the age of 4. I had a blog complaining about this&amp;nbsp;&lt;a href=&quot;https://blog.computationalcomplexity.org/2022/05/queen-elizabeth-is-3rd-longest-reigning.html&quot;&gt;here&lt;/a&gt;. However, there is a more interesting point I want to make. From the first to the last day of King Louis XIV reign not much had changed. Technology, politics, other things just didn&#39;t change much. By contrast the world changed A LOT between Queen Elizabeth II first and last day:&lt;/p&gt;&lt;p&gt;a) The British were an important power in 1952. Less so now.&lt;/p&gt;&lt;p&gt;b) When her father died she was in Kenya and it took 4 hours to get the news to her. Now that would be immediate.&amp;nbsp;&lt;/p&gt;&lt;p&gt;c) Divorce was considered bad in 1952 and is why King Edmond VIII could not be king (he wanted to marry a twice-divorced woman whose ex-husbands were still alive). And now three of the Queen&#39;s children have been divorced.&lt;/p&gt;&lt;p&gt;d) Gay people.. enough said. There has even been a royal gay wedding, see&amp;nbsp;&lt;a href=&quot;https://www.dailymail.co.uk/news/article-5849971/Royal-familys-gay-wedding-story-Queens-cousin-Lord-Ivar-Mountbatten.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Black people (can&#39;t call them African-Americans), Women,... you fill it in.&amp;nbsp;&lt;/p&gt;&lt;p&gt;e) When Charles wanted to get married it seemed to be important that he marry a virgin. We cannot imagine this mentality anymore. When Prince William and Kate got married they were already living together and this was NOT an issue for ANYONE. I looked up what the Church of England thought of it and all I got was some very bland comments like &lt;i&gt;That&#39;s what young people do nowadays.&amp;nbsp;&lt;/i&gt;&lt;/p&gt;&lt;p&gt;3) Is the monarchy a good thing? As an American I feel I do not have a right to an opinion. If the citizens of the United Kingdom approve of the monarch (polls show they do) then who am I do tell them they are wrong? Even so, lets look at reasons for it&lt;/p&gt;&lt;p&gt;a) Tourism. It has been said that the Monarchy leads to MONEY from tourism. So it is worth the price? Nobody seems to know and it would be hard to tell. However, I don&#39;t think the citizens of the United Kingdom view&amp;nbsp; money as the reason for Monarchy. The American analog is giving Disneyland tax breaks to be in Florida which generates jobs. I doubt they think of the Monarchy in those mundane transactional terms.&amp;nbsp;&lt;/p&gt;&lt;p&gt;b) CS Lewis said&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;i&gt;Where men are forbidden to honour a king they honour millionaires, athletes, or film stars instead: even famous prostitutes and gangsters. For spiritual nature, like bodily nature, will be served; deny it food and it will gobble poison.&lt;/i&gt;&lt;/p&gt;&lt;p&gt;This is&amp;nbsp; bit odd- they must all pretend to like the monarchy to make it work. A long time ago when Charles and Dianna were both having affairs, 80% of the citizens the United Kingdom thought that was okay so long as they are discreet so &lt;i&gt;the people&lt;/i&gt;&amp;nbsp;don&#39;t find out. But- those ARE the people.&lt;/p&gt;&lt;p&gt;Also odd- CS Lewis was a theologian and a&amp;nbsp; believing Christian; however, his comment above can apply to God as well as to Kings.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By gasarch&lt;/p&gt;
  </content>
    <author>
      <name>Computational Complexity</name>
      <uri>http://blog.computationalcomplexity.org/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR22-129 |  Binary Codes with Resilience Beyond 1/4 via Interaction | 

	Klim Efremenko, 

	Gillat Kol, 

	Raghuvansh Saxena, 

	Zhijun Zhang</title>
    <link href="https://eccc.weizmann.ac.il/report/2022/129"/>
    <id>https://eccc.weizmann.ac.il/report/2022/129</id>
    <updated>2022-09-15T19:10:17+00:00</updated>
    <content type="html" xml:lang="en">
    In the reliable transmission problem, a sender, Alice, wishes to transmit a bit-string x to a remote receiver, Bob, over a binary channel with adversarial noise. The solution to this problem is to encode x using an error correcting code. As it is long known that the distance of binary codes is at most 1/2, reliable transmission is possible only if the channel corrupts (flips) at most a 1/4-fraction of the communicated bits.
We revisit the reliable transmission problem in the two-way setting, where both Alice and Bob can send bits to each other. Our main result is the construction of two-way error correcting codes that are resilient to a constant fraction of corruptions strictly larger than 1/4. Moreover, our code has constant rate and requires Bob to only send one short message. We mention that our result resolves an open problem by Haeupler, Kamath, and Velingker [APPROX-RANDOM, 2015] and by Gupta, Kalai, and Zhang [STOC, 2022].
Curiously, our new two-way code requires a fresh perspective on classical error correcting codes: While classical codes have only one distance guarantee for all pairs of codewords (i.e., the minimum distance), we construct codes where the distance between a pair of codewords depends on the “compatibility” of the messages they encode. We also prove that such codes are necessary for our result.
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Structure and Complexity of Graphical Designs for Weighted Graphs through Eigenpolytopes</title>
    <link href="http://arxiv.org/abs/2209.06349"/>
    <id>http://arxiv.org/abs/2209.06349</id>
    <updated>2022-09-15T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Babecki_C/0/1/0/all/0/1&quot;&gt;Catherine Babecki&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Shiroma_D/0/1/0/all/0/1&quot;&gt;David Shiroma&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We extend the theory of graphical designs, which are quadrature rules for
graphs, to positively weighted graphs. Through Gale duality for polytopes, we
show that there is a bijection between graphical designs and the faces of
eigenpolytopes associated to the graph. This bijection proves the existence of
graphical designs with positive quadrature weights, and upper bounds the size
of a graphical design. We further show that any combinatorial polytope appears
as the eigenpolytope of a positively weighted graph. Through this universality,
we establish two complexity results for graphical designs: it is strongly
NP-complete to determine if there is a graphical design smaller than the
mentioned upper bound, and it is #P-complete to count the number of minimal
graphical designs.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Red Blue Set Cover Problem on Axis-Parallel Hyperplanes and Other Objects</title>
    <link href="http://arxiv.org/abs/2209.06661"/>
    <id>http://arxiv.org/abs/2209.06661</id>
    <updated>2022-09-15T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Abidha_V/0/1/0/all/0/1&quot;&gt;V P Abidha&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ashok_P/0/1/0/all/0/1&quot;&gt;Pradeesha Ashok&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Given a universe $\mathcal{U}=R \cup B$ of a finite set of red elements $R$,
and a finite set of blue elements $B$ and a family $\mathcal{F}$ of subsets of
$\mathcal{U}$, the \RBSC problem is to find a subset $\mathcal{F}&#39;$ of
$\mathcal{F}$ that covers all blue elements of $B$ and minimum number of red
elements from $R$.
&lt;/p&gt;
&lt;p&gt;We prove that the \RBSC problem is NP-hard even when $R$ and $B$ respectively
are sets of red and blue points in ${\rm I\!R}^2$ and the sets in $\mathcal{F}$
are defined by axis-parallel lines i.e, every set is a maximal set of points
with the same $x$ or $y$ coordinate.
&lt;/p&gt;
&lt;p&gt;We then study the parameterized complexity of a generalization of this
problem, where $\mathcal{U}$ is a set of points in ${\rm I\!R}^d$ and
$\mathcal{F}$ is a collection of set of axis-parallel hyperplanes in ${\rm
I\!R}^d$, under different parameterizations. For every parameter, we show that
the problem is fixed-parameter tractable and also show the existence of a
polynomial kernel.
&lt;/p&gt;
&lt;p&gt;We further consider the \RBSC problem for some special types of rectangles in
${\rm I\!R}^2$.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Scheduling Algorithms for Federated Learning with Minimal Energy Consumption</title>
    <link href="http://arxiv.org/abs/2209.06210"/>
    <id>http://arxiv.org/abs/2209.06210</id>
    <updated>2022-09-15T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Pilla_L/0/1/0/all/0/1&quot;&gt;La&amp;#xe9;rcio Lima Pilla&lt;/a&gt; (STORM)&lt;/p&gt;&lt;p&gt;Federated Learning (FL) has opened the opportunity for collaboratively
training machine learning models on heterogeneous mobile or Edge devices while
keeping local data private.With an increase in its adoption, a growing concern
is related to its economic and environmental cost (as is also the case for
other machine learning techniques).Unfortunately, little work has been done to
optimize its energy consumption or emissions of carbon dioxide or equivalents,
as energy minimization is usually left as a secondary objective.In this paper,
we investigate the problem of minimizing the energy consumption of FL training
on heterogeneous devices by controlling the workload distribution.We model this
as the Minimal Cost FL Schedule problem, a total cost minimization problem with
identical, independent, and atomic tasks that have to be assigned to
heterogeneous resources with arbitrary cost functions.We propose a
pseudo-polynomial optimal solution to the problem based on the previously
unexplored Multiple-Choice Minimum-Cost Maximal Knapsack Packing Problem.We
also provide four algorithms for scenarios where cost functions are
monotonically increasing and follow the same behavior.These solutions are
likewise applicable on the minimization of other kinds of costs, and in other
one-dimensional data partition problems.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Algorithmic (Semi-)Conjugacy via Koopman Operator Theory</title>
    <link href="http://arxiv.org/abs/2209.06374"/>
    <id>http://arxiv.org/abs/2209.06374</id>
    <updated>2022-09-15T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Redman_W/0/1/0/all/0/1&quot;&gt;William T. Redman&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fonoberova_M/0/1/0/all/0/1&quot;&gt;Maria Fonoberova&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mohr_R/0/1/0/all/0/1&quot;&gt;Ryan Mohr&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kevrekidis_I/0/1/0/all/0/1&quot;&gt;Ioannis G. Kevrekidis&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mezic_I/0/1/0/all/0/1&quot;&gt;Igor Mezi&amp;#x107;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Iterative algorithms are of utmost importance in decision and control. With
an ever growing number of algorithms being developed, distributed, and
proprietarized, there is a similarly growing need for methods that can provide
classification and comparison. By viewing iterative algorithms as discrete-time
dynamical systems, we leverage Koopman operator theory to identify
(semi-)conjugacies between algorithms using their spectral properties. This
provides a general framework with which to classify and compare algorithms.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Performance Evaluation of Parallel Algorithms</title>
    <link href="http://arxiv.org/abs/2209.06450"/>
    <id>http://arxiv.org/abs/2209.06450</id>
    <updated>2022-09-15T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Anireh_D/0/1/0/all/0/1&quot;&gt;Donald Ene Vincent Ike Anireh&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Evaluating how well a whole system or set of subsystems performs is one of
the primary objectives of performance testing. We can tell via performance
assessment if the architecture implementation meets the design objectives.
Performance evaluations of several parallel algorithms are compared in this
study. Both theoretical and experimental methods are used in performance
assessment as a subdiscipline in computer science. The parallel method
outperforms its sequential counterpart in terms of throughput. The parallel
algorithm&#39;s performance (speedup) is examined, as shown in the result.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Parameterized algorithms for node connectivity augmentation problems</title>
    <link href="http://arxiv.org/abs/2209.06695"/>
    <id>http://arxiv.org/abs/2209.06695</id>
    <updated>2022-09-15T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nutov_Z/0/1/0/all/0/1&quot;&gt;Zeev Nutov&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A graph $G$ is $k$-out-connected from its node $s$ if it contains $k$
internally disjoint $sv$-paths to every node $v$; $G$ is $k$-connected if it is
$k$-out-connected from every node. In connectivity augmentation problems the
goal is to augment a graph $G_0=(V,E_0)$ by a minimum costs edge set $J$ such
that $G_0 \cup J$ has higher connectivity than $G_0$. In the
$k$-Out-Connectivity Augmentation ($k$-OCA) problem, $G_0$ is
$(k-1)$-out-connected from $s$ and $G_0 \cup J$ should be $k$-out-connected
from $s$; in the $k$-Connectivity Augmentation ($k$-CA) problem $G_0$ is
$(k-1)$-connected and $G_0 \cup J$ should be $k$-connected. The parameterized
complexity status of these problems was open even for $k=3$ and unit costs. We
will show that $k$-OCA and $3$-CA can be solved in time $9^p \cdot n^{O(1)}$,
where $p$ is the size of an optimal solution. Our paper is the first that shows
fixed parameter tractability of a $k$-node-connectivity augmentation problem
with high values of $k$. We will also consider the $(2,k)$-Connectivity
Augmentation problem where $G_0$ is $(k-1)$-edge-connected and $G_0 \cup J$
should be both $k$-edge-connected and $2$-connected. We will show that this
problem can be solved in time $9^p \cdot n^{O(1)}$, and for unit costs
approximated within $1.892$.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Emanuele Viola: Myth creation: The switching lemma</title>
    <link href="https://emanueleviola.wordpress.com/2022/09/14/myth-creation-the-switching-lemma/"/>
    <id>http://emanueleviola.wordpress.com/?p=1056</id>
    <updated>2022-09-14T17:11:22+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot; ?--&gt; &lt;!--http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd--&gt; &lt;!-- html,xhtml,-css,NoFonts --&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;The history of science is littered with anecdotes about misplaced credit. Because it does not matter if it was A or B who did it; it only matters if it was I or not I. In this spirit I am starting a series of posts about such misplaced credit, which I hesitated before calling more colorfully &amp;#8220;myth creation.&amp;#8221; Before starting, I want to make absolutely clear that I am in no way criticizing the works themselves or their authors. In fact, many are among my favorites. Moreover, at least in the examples I have in mind right now, the authors do place their work in the appropriate context with the use of citations etc. My only point is the credit that the work has received within and without our community (typically due to inertia and snowball effects rather than anything else).&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;Of course, at some level this doesn’t matter. You can call Chebichev’s polynomials rainbow sprinkles and the math doesn’t change. And yet at some other level maybe it does matter a little, for science isn’t yet a purely robotic activity. With these posts I will advertise unpopular points of views that might be useful, for example to researchers who are junior or from different communities.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;The switching lemma&lt;/h3&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;div class=&quot;quote&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;&lt;em&gt;I must admit I had a good run &lt;/em&gt;&amp;#8212; Johan Hastad (privately to the blogger)&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;Random restrictions have been used in complexity theory since at least the 60’s &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XSubbotovskaya61&quot;&gt;Sub61&lt;/a&gt;]&lt;/span&gt;. The first dramatic use in the context of AC0 is due to &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XFSS84&quot;&gt;FSS84&lt;/a&gt;, &lt;a href=&quot;#XAjt83&quot;&gt;Ajt83&lt;/a&gt;]&lt;/span&gt;. These works proved a &lt;em&gt;switching lemma&lt;/em&gt; the amazing fact that a DNF gets simplified by a random restriction to the point that it can be written as a CNF, so you can collapse layers and induct. (An exposition is given below.) Using it, they proved super-polynomial lower bounds for AC0. The proof in &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XFSS84&quot;&gt;FSS84&lt;/a&gt;]&lt;/span&gt; is very nice, and if I want to get a quick intuition of why switching is at all possible, I often go back to it. &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XAjt83&quot;&gt;Ajt83&lt;/a&gt;]&lt;/span&gt; is also a brilliant paper, and long, unavailable online for free, filled with a logical notation which makes some people twitch. The first symbol of the title says it all, and may be the most obscene ever chosen:&lt;/p&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5CSigma+_%7B1%7D%5E%7B1%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5CSigma+_%7B1%7D%5E%7B1%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5CSigma+_%7B1%7D%5E%7B1%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;Sigma _{1}^{1}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p&gt;Subsequently, &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XYao85&quot;&gt;Yao85&lt;/a&gt;]&lt;/span&gt; proved exponential lower bounds of the form &lt;img src=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bn%5E%7Bc%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bn%5E%7Bc%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=2%5E%7Bn%5E%7Bc%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;2^{n^{c}}&quot; class=&quot;latex&quot; /&gt;, with a refined analysis of the switching lemma. The bounds are tight, except for the constant &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c&quot; class=&quot;latex&quot; /&gt; which depends on the depth of the circuit. Finally, the star of this post &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;conf/stoc/Hastad86&quot;&gt;Has86&lt;/a&gt;, &lt;a href=&quot;#XHas87&quot;&gt;Has87&lt;/a&gt;]&lt;/span&gt; obtained &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c%3D1%2F%28depth-1%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c%3D1%2F%28depth-1%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c%3D1%2F%28depth-1%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c=1/(depth-1)&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;Yao’s paper doesn’t quite state that a DNF can be written exactly as a CNF, but it states that it can be approximated. Hastad’s work is the first to prove that a DNF can be written as a CNF, and in this sense his statement is cleaner than Yao’s. However, Yao’s paper states explicitly that a small circuit, after being hit by a restriction, can be set to constant by fixing few more bits.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;The modern formulation of the switching lemma says that a DNF can be written as a &lt;em&gt;shallow decision tree&lt;/em&gt; (and hence a small CNF). This formulation in terms of decision trees is actually not explicit in Hastad’s work. Beame, in his primer &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XBea94&quot;&gt;Bea94&lt;/a&gt;]&lt;/span&gt;, credits Cai with this idea and mentions several researchers noted Hastad’s proof works in this way.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;Another switching lemma trivia is that the proof in Hastad’s thesis is actually due to Boppana; Hastad’s original argument &amp;#8212; of which apparently no written record exists &amp;#8212; was closer to Razborov’s later proof.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;So, let’s recap. Random restrictions are already in &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XSubbotovskaya61&quot;&gt;Sub61&lt;/a&gt;]&lt;/span&gt;. The idea of switching is already in &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XFSS84&quot;&gt;FSS84&lt;/a&gt;, &lt;a href=&quot;#XAjt83&quot;&gt;Ajt83&lt;/a&gt;]&lt;/span&gt;. You already had three analyses of these ideas, two giving superpolynomial lower bounds and one &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XYao85&quot;&gt;Yao85&lt;/a&gt;]&lt;/span&gt; giving exponential. The formulation in terms of decision trees isn’t in &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XHas87&quot;&gt;Has87&lt;/a&gt;]&lt;/span&gt;, and the proof that appears in &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XHas87&quot;&gt;Has87&lt;/a&gt;]&lt;/span&gt; is due to Boppana.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;Still, I would guess &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XHas87&quot;&gt;Has87&lt;/a&gt;]&lt;/span&gt; is more well known than all the other works above combined. &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XYao85&quot;&gt;Yao85&lt;/a&gt;]&lt;/span&gt; did have a following at the time &amp;#8212; I think it appeared in the pop news. But hey &amp;#8212; have you ever heard of Yao’s switching lemma?&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;The current citation counts offer mixed support for my thesis:&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;FSS: 1351&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;Y: 732&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;H &amp;#8211; paper &amp;#8220;Almost optimal&amp;#8230;:&amp;#8221; 867&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;H &amp;#8211; thesis: 582&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;But it is very hard to use citation information. The two H citations overlap, and papers are cited for various reasons. For example FSS got a ton of citations for the connection to oracles (which has nothing to do with switching lemmas).&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;Instead it’s instructive to note the type of citations that you can find in the literature:&lt;/p&gt;
&lt;div class=&quot;quote&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;&lt;em&gt;Hastad’s switching lemma is a cornerstone of circuit complexity&lt;/em&gt; [No mention of FSS, A, Y]&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;div class=&quot;quote&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;&lt;em&gt;Hastad‘s Switching Lemma is one of the gems of computational complexity&lt;/em&gt; [Notes below in passing it builds on FSS, A, Y]&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;The wikipedia entry is also telling:&lt;/p&gt;
&lt;table class=&quot;quotation&quot; border=&quot;0&quot; cellspacing=&quot;15&quot; cellpadding=&quot;0&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;div class=&quot;quotation&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;&lt;em&gt;In computational complexity theory, Hastad’s switching lemma is a key tool for proving lower bounds on the size of constant-depth Boolean circuits. Using the switching lemma, Johan Hastad (1987) showed that.&lt;/em&gt;.. [No mention of FSS,A,Y]&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I think that 99% of the contribution of this line of research is the &lt;em&gt;amazing idea&lt;/em&gt; that random restrictions simplify a DNF so that you can write it as a CNF and collapse. 90% of the rest is analyzing this to get superpolynomial lower bounds. And 90% of whatever is left is analyzing this to get exponential lower bounds.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;Going back to something I mentioned at the beginning, I want to emphasize that Hastad during talks makes a point of reminding the audience that the idea of random restrictions is due to Sipser, and of Boppana’s contribution. And I also would like to thank him for his help with this post.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;OK &amp;#8212; so maybe this is so, but it must then be the case that &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XHas87&quot;&gt;Has87&lt;/a&gt;]&lt;/span&gt; is the final word on this stuff, like the ultimate tightest analysis that kills the problem. Actually, it is not tight in some regimes of interest, and several cool works of past and recent times address that. In the end, I can only think of one reason why &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XHas87&quot;&gt;Has87&lt;/a&gt;]&lt;/span&gt; entered the mythology in ways that other works did not, the reason that I carefully sidestepped while composing this post: å.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;Perhaps one reason behind the aura of the switching lemma is that it’s hard to find examples. It would be nice to read: If you have this extreme DNF here’s what happens, on the other hand for this other extreme DNF here’s what happens, and in general this always works and here’s the switching lemma. &lt;em&gt;Examples are forever&lt;/em&gt; – Erdos. Instead the switching lemma is typically presented as &lt;em&gt;blam&lt;/em&gt;!: an example-free encoding argument which feels &lt;em&gt;deus ex machina&lt;/em&gt;, as in this &lt;a href=&quot;https://arxiv.org/abs/2202.05651&quot;&gt;crisp presentation by Thapen&lt;/a&gt;. For a little more discussion, I liked &lt;a href=&quot;https://www.cse.cuhk.edu.hk/~andrejb/csci5170/notes/19L02.pdf&quot;&gt;Bogdanov’s lecture notes&lt;/a&gt;. Next I give a slightly different exposition of the encoding argument.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;&lt;b&gt;The simplest case: Or of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; bits&lt;/b&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;Here the circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; is simply the Or of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; bits &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x_%7B1%7D%2Cx_%7B2%7D%2C%5Cldots+%2Cx_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x_%7B1%7D%2Cx_%7B2%7D%2C%5Cldots+%2Cx_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x_%7B1%7D%2Cx_%7B2%7D%2C%5Cldots+%2Cx_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x_{1},x_{2},&amp;#92;ldots ,x_{n}&quot; class=&quot;latex&quot; /&gt;. This and the next case can be analyzed in more familiar ways, but the benefit of the encoding argument presented next is that it will extend to the general case more easily&amp;#8230; arguably. Anyway, it’s also just fun to learn a different argument.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;So, let’s take a random restriction &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;rho &quot; class=&quot;latex&quot; /&gt; with exactly &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; stars. Some of the bits may become &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt;, others &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt;, and others yet may remain unfixed, i.e., assigned to stars. Those that become &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt; you can ignore, while if some become &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt; then the whole circuit becomes &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;We will show that the number of restrictions for which the restricted circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C|_{&amp;#92;rho }&quot; class=&quot;latex&quot; /&gt; requires decision trees of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge d&quot; class=&quot;latex&quot; /&gt; is small. To accomplish this, we are going to encode/map such restrictions using/to a restriction&amp;#8230; with no stars (that is, just a 0/1 assignment to the variables). The gain is clear: just think of a restriction with zero stars versus a restriction with one star. The latter are more by a factor about the number &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; of variables.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;A critical observation is that we only want to encode restrictions for which &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C|_{&amp;#92;rho }&quot; class=&quot;latex&quot; /&gt; requires large depth. So &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;rho &quot; class=&quot;latex&quot; /&gt; does not map any variable to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt;, for else the Or is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt; which has decision trees of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;The way we are going to encode &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;rho &quot; class=&quot;latex&quot; /&gt; is this: &lt;em&gt;Simply replace the stars with ones&lt;/em&gt;. To go back, replace the ones with stars. We are using the ones in the encoding to “signal” where the stars are.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;Hence, the number of bad restrictions is at most &lt;img src=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;2^{n}&quot; class=&quot;latex&quot; /&gt;, which is tiny compared to the number &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbinom+%7Bn%7D%7Bs%7D2%5E%7Bn-s%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbinom+%7Bn%7D%7Bs%7D2%5E%7Bn-s%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbinom+%7Bn%7D%7Bs%7D2%5E%7Bn-s%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;binom {n}{s}2^{n-s}&quot; class=&quot;latex&quot; /&gt; of restrictions with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; stars.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;&lt;b&gt;The medium case: Or of functions on disjoint inputs&lt;/b&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;Instead of working with DNFs, I will consider a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; which is the Or of arbitrary functions &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f_{i}&quot; class=&quot;latex&quot; /&gt; each on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt; bits. You can immediately get this formulation from the usual one for DNFs, but I still find it a little useful since otherwise you might think there is something special about DNFs. What &lt;em&gt;is &lt;/em&gt;special is that you take the Or of the functions, and we will exploit this again shortly.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;In this warm-up case, we start with functions on &lt;em&gt;disjoint&lt;/em&gt; inputs. So, again, let’s take a random restriction &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;rho &quot; class=&quot;latex&quot; /&gt; with exactly &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; stars. Some of the functions may become &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt;, others &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt;, and others yet may remain unfixed. Those that become &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt; you can ignore, while if some become &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt; then the whole circuit becomes &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;As before, we will show that the number of restrictions for which the restricted circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C|_{&amp;#92;rho }&quot; class=&quot;latex&quot; /&gt; requires decision trees of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge d&quot; class=&quot;latex&quot; /&gt; is small. To accomplish this, we are going to encode/map such restrictions using/to a restriction with just &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s-d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s-d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s-d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s-d&quot; class=&quot;latex&quot; /&gt; stars, plus a little more information. As we saw already, the gain in reducing the number of stars is clear. In particular, standard calculations show that saving &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt; stars reduces the number of restrictions by a factor &lt;img src=&quot;https://s0.wp.com/latex.php?latex=O%28s%2Fn%29%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=O%28s%2Fn%29%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=O%28s%2Fn%29%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;O(s/n)^{d}&quot; class=&quot;latex&quot; /&gt;. The auxiliary information will give us a factor of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w^{d}&quot; class=&quot;latex&quot; /&gt;, leading to the familiar bound &lt;img src=&quot;https://s0.wp.com/latex.php?latex=O%28ws%2Fn%29%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=O%28ws%2Fn%29%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=O%28ws%2Fn%29%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;O(ws/n)^{d}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;As before, recall that we only want to encode restrictions for which &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C|_{&amp;#92;rho }&quot; class=&quot;latex&quot; /&gt; requires large depth. So no function in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C|_{&amp;#92;rho }&quot; class=&quot;latex&quot; /&gt; is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt;, for else the circuit is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt; and has decision trees of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt;. Also, you have &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt; stars among inputs to functions that are unfixed (i.e., not even fixed to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt;), for else again you can compute the function reading less than &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt; bits. Because the functions are unfixed, there is a setting for those &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt; stars (and possibly a few more stars – that would only help the argument) that make the corresponding functions &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt;. We are going to pick precisely that setting in our restriction &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Crho+%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Crho+%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Crho+%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;rho &amp;#039;&quot; class=&quot;latex&quot; /&gt; with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s-d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s-d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s-d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s-d&quot; class=&quot;latex&quot; /&gt; stars. This allows us to “signal” which functions had inputs with the stars we are saving (namely, those that are the constant &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt;). To completely recover &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;rho &quot; class=&quot;latex&quot; /&gt;, we simply add extra information to indicate where the stars were. The saving here is that we only have to say where the stars are among &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt; symbols, not &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;&lt;b&gt;The general case: Or of functions on any subset of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt; bits&lt;/b&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;First, the number of functions does not play a role, so you can think you have functions on any possible subset of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt; bits, where some functions may be constant. The idea is the same, except we have to be slightly more careful because when we set values for the stars in one function we may also affect other functions. The idea is simply to fix one function at the time. Specifically, starting with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;rho &quot; class=&quot;latex&quot; /&gt;, consider the first function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; that’s not made constant by &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;rho &quot; class=&quot;latex&quot; /&gt;. So the inputs to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; have some stars. As before, let us replace the stars with constants that make the function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; equal to the constant 1, and append the extra information that allows us to recover where these stars were in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Crho+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;rho &quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;We’d like to repeat the argument. Note however we only have guarantees about &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C|_{&amp;#92;rho }&quot; class=&quot;latex&quot; /&gt;, not &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C|_{&amp;#92;rho }&quot; class=&quot;latex&quot; /&gt; with some stars replaced with constants that make &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; equal to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt;. We also can’t just jump to the 2nd function that’s not constant in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C|_{&amp;#92;rho }&quot; class=&quot;latex&quot; /&gt;, since the “signal” fixing for that might clash with the fixing for the first – this is where the overlap in inputs makes things slightly more involved. Instead, because &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C|_{&amp;#92;rho }&quot; class=&quot;latex&quot; /&gt; required decision tree depth at least &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt;, we note there have to be some assignments to the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;m&quot; class=&quot;latex&quot; /&gt; stars in the input to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; so that the resulting, further restricted circuit still requires decision tree depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+d-m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+d-m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+d-m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge d-m&quot; class=&quot;latex&quot; /&gt; (else &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%7C_%7B%5Crho+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C|_{&amp;#92;rho }&quot; class=&quot;latex&quot; /&gt; has decision trees of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%3Cd&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%3Cd&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%3Cd&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;lt;d&quot; class=&quot;latex&quot; /&gt;).  We append this assignment to the auxiliary information and we continue the argument using the further restricted circuit.&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;h3 class=&quot;likesectionHead&quot;&gt;&lt;a id=&quot;x1-30001&quot;&gt;&lt;/a&gt;References&lt;/h3&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;div class=&quot;thebibliography&quot;&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt; [Ajt83] &lt;span class=&quot;bibsp&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XAjt83&quot;&gt;&lt;/a&gt;Mikl�s Ajtai. &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5CSigma+%5Csp+%7B1%7D%5Csb+%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5CSigma+%5Csp+%7B1%7D%5Csb+%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5CSigma+%5Csp+%7B1%7D%5Csb+%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;Sigma &amp;#92;sp {1}&amp;#92;sb {1}&quot; class=&quot;latex&quot; /&gt;-formulae on finite structures. Annals of Pure and Applied Logic, 24(1):1–48, 1983.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt; [Bea94]&lt;span class=&quot;bibsp&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XBea94&quot;&gt;&lt;/a&gt;Paul Beame. A switching lemma primer. Technical Report UW-CSE-95-07-01, Department of Computer Science and Engineering, University of Washington, November 1994. Available from &lt;a href=&quot;http://www.cs.washington.edu/homes/beame/&quot; rel=&quot;nofollow&quot;&gt;http://www.cs.washington.edu/homes/beame/&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt; [FSS84]&lt;span class=&quot;bibsp&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XFSS84&quot;&gt;&lt;/a&gt;Merrick L. Furst, James B. Saxe, and Michael Sipser. Parity, circuits, and the polynomial-time hierarchy. Mathematical Systems Theory, 17(1):13–27, 1984.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt; [Has86]&lt;span class=&quot;bibsp&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:conf/stoc/Hastad86&quot;&gt;&lt;/a&gt;Johan H�stad. Almost optimal lower bounds for small depth circuits. In Juris Hartmanis, editor, Proceedings of the 18th Annual ACM Symposium on Theory of Computing, May 28-30, 1986, Berkeley, California, USA, pages 6–20. ACM, 1986.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt; [H�s87]&lt;span class=&quot;bibsp&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XHas87&quot;&gt;&lt;/a&gt;Johan H�stad. Computational limitations of small-depth circuits. MIT Press, 1987.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt; [Sub61]&lt;span class=&quot;bibsp&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XSubbotovskaya61&quot;&gt;&lt;/a&gt;B. A. Subbotovskaya. Realizations of linear functions by formulas using +, *, -. Soviet Mathematics-Doklady, 2:110–112, 1961.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt; [Yao85]&lt;span class=&quot;bibsp&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XYao85&quot;&gt;&lt;/a&gt;Andrew Yao. Separating the polynomial-time hierarchy by oracles. In 26th IEEE Symp. on Foundations of Computer Science (FOCS), pages 1–10, 1985.&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;authors&quot;&gt;By Manu&lt;/p&gt;
  </content>
    <author>
      <name>Emanuele Viola</name>
      <uri>https://emanueleviola.wordpress.com</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Scott Aaronson: I had a dream</title>
    <link href="https://scottaaronson.blog/?p=6718"/>
    <id>https://scottaaronson.blog/?p=6718</id>
    <updated>2022-09-14T16:52:05+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;As I slept fitfully, still recovering from COVID, I had one of the more interesting dreams of my life:&lt;/p&gt;



&lt;p&gt;I was desperately trying to finish some PowerPoint slides in time to give a talk. Uncharacteristically for me, one of the slides displayed actual code. This was a dream, so nothing was as clear as I&amp;#8217;d like, but the code did &lt;em&gt;something&lt;/em&gt; vaguely reminiscent of &lt;a href=&quot;https://scottaaronson.blog/?p=710&quot;&gt;Rosser’s Theorem&lt;/a&gt;—e.g., enumerating all proofs in ZFC until it finds the lexicographically first proof or disproof of a certain statement, then branching into cases depending on whether it&amp;#8217;s a proof or a disproof. In any case, it was simple enough to fit on one slide.&lt;/p&gt;



&lt;p&gt;Suddenly, though, my whole presentation was deleted. Everything was ruined!&lt;/p&gt;



&lt;p&gt;One of the developers of PowerPoint happened to be right there in the lecture hall (of course!), so I confronted him with my laptop and angrily demanded an explanation. He said that I must have triggered the section of Microsoft Office that tries to detect and prevent any discussion of logical paradoxes that are too dangerous for humankind—the ones that would cause people to realize that our entire universe is just an illusion, a sandbox being run inside an AI, a glitch-prone Matrix. He said it patronizingly, as if it should&amp;#8217;ve been obvious: &amp;#8220;you and I both know that the Paradoxes are not to be talked about, so why would you be so &lt;em&gt;stupid&lt;/em&gt; as to put one in your presentation?&amp;#8221;&lt;/p&gt;



&lt;p&gt;My reaction was to jab my finger in the guy’s face, shove him, scream, and curse him out. At that moment, I wasn’t concerned in the slightest about the universe being an illusion, or about glitches in the Matrix. I was concerned about my embarrassment when I’d be called in 10 minutes to give my talk and would have nothing to show.&lt;/p&gt;



&lt;p&gt;My last thought, before I woke with a start, was to wonder whether Greg Kuperberg was right and I should give my presentations in &lt;a href=&quot;https://en.wikipedia.org/wiki/Beamer_(LaTeX)&quot;&gt;Beamer&lt;/a&gt;, or some other open-source software, and then I wouldn’t have had this problem.&lt;/p&gt;



&lt;p&gt;A coda: I woke a bit after 7AM Central and started to write this down. But then&amp;#8212;this is now real life (!)&amp;#8212;I saw an email saying that a dozen people were waiting for me in a conference room in Europe for an important Zoom meeting. We&amp;#8217;d gotten the time zones wrong; I&amp;#8217;d thought that it wasn&amp;#8217;t until 8AM my time. If not for this dream causing me to wake up, I would&amp;#8217;ve missed the meeting entirely.&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By Scott&lt;/p&gt;
  </content>
    <author>
      <name>Scott Aaronson</name>
      <uri>https://scottaaronson.blog</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Windows on Theory: Quick reminders: masters, postdocs, faculty, etc.</title>
    <link href="https://windowsontheory.org/2022/09/14/quick-reminders-masters-postdocs-faculty-etc/"/>
    <id>http://windowsontheory.org/?p=8452</id>
    <updated>2022-09-14T13:50:02+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;As we&amp;#8217;re getting closer to the season when undergraduate students are considering graduate school, and graduate students are considering the next steps such as postdoc or faculty positions,  I wanted to remind people of two resources for such positions: the &lt;a href=&quot;https://cstheory-jobs.org/&quot;&gt;TCS jobs&lt;/a&gt; and &lt;a href=&quot;https://www.cs.princeton.edu/~smattw/masters/masters.html&quot;&gt;crowd-sourced masters&lt;/a&gt; pages. &lt;/p&gt;



&lt;p&gt;The process and market for both graduate studies and faculty positions (at least in the US) is fairly standard, with more or less a common timeline, and general ideas of where to look for positions (universities&amp;#8217; websites are always a good start, as are the websites of &lt;a href=&quot;https://jobs.acm.org/jobs/products/&quot;&gt;ACM&lt;/a&gt; and &lt;a href=&quot;https://cra.org/ads/&quot;&gt;CRA&lt;/a&gt;).  Even so, it&amp;#8217;s not always clear which areas a university is searching for at any given year, and also these resources are very US-centric, while many great places are located outside the US.&lt;/p&gt;



&lt;p&gt;The &lt;strong&gt;postdoc market&lt;/strong&gt; is much more &amp;#8220;ad hoc&amp;#8221;. Some places such as the &lt;a href=&quot;https://simons.berkeley.edu/programs/participate&quot;&gt;Simons institute&lt;/a&gt; and the &lt;a href=&quot;https://www.ias.edu/math/csdm/postdocs&quot;&gt;IAS&lt;/a&gt; search for postdocs yearly and have several positions. (Our own &lt;a href=&quot;https://www.harvard.edu/kempner-institute/&quot;&gt;Kempner Institute&lt;/a&gt; will also be having regular searches after it launches this year.)  But in many other cases, postdoc positions are with an individual researcher that might have availability only every few years, which makes it harder for candidates to find out about this.  For such positions, the &lt;a href=&quot;https://cstheory-jobs.org/&quot;&gt;&lt;strong&gt;Theoretical Computer Science jobs&lt;/strong&gt;&lt;/a&gt; page is a great way to both advertise any position you have to offer, as well as find out about opportunities.  Please post any postdoc or faculty positions relevant to TCS in your institution, as well as advertise it to your students as a place to look for jobs.&lt;/p&gt;



&lt;p&gt;Finding information about &lt;strong&gt;research-oriented Masters programs&lt;/strong&gt; is also sometimes challenging. In the US it&amp;#8217;s common for students to apply straight to a Ph.D from undergraduate, and Masters programs are often intended more for professional development. But, as I &lt;a href=&quot;https://windowsontheory.org/2018/02/20/research-masters/&quot;&gt;wrote in the past,&lt;/a&gt; &lt;em&gt;research-oriented&lt;/em&gt; Masters programs can actually be a great fit for many students. A Ph.D is a huge commitment on both the student and advisor side. If you have not had a chance to do research during your undergraduate studies,  it may be better to start with a Masters before taking such a commitment. Some research Masters programs do not charge any tuition, and several offer a stipend. To post and look for such opportunities, see the &lt;a href=&quot;https://www.cs.princeton.edu/~smattw/masters/masters.html&quot;&gt;&lt;strong&gt;crowdsourced TCS research masters website&lt;/strong&gt;&lt;/a&gt;, managed by Aviad Rubinstein and Matt Weinberg.&lt;/p&gt;



&lt;p&gt;If there are other great resources or opportunities, please post them in the comments!&lt;/p&gt;



&lt;p&gt;In particular, the resources above are geared for theoretical CS. If you have suggestions of analogous resources for other fields, please post them as well.&lt;/p&gt;



&lt;p&gt; &lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By Boaz Barak&lt;/p&gt;
  </content>
    <author>
      <name>Windows on Theory</name>
      <uri>https://windowsontheory.org</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: On bounded depth proofs for Tseitin formulas on the grid; revisited</title>
    <link href="http://arxiv.org/abs/2209.05839"/>
    <id>http://arxiv.org/abs/2209.05839</id>
    <updated>2022-09-14T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+H%5Cr%7Ba%7Dstad_J/0/1/0/all/0/1&quot;&gt;Johan H&amp;#xe5;stad&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Risse_K/0/1/0/all/0/1&quot;&gt;Kilian Risse&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study Frege proofs using depth-$d$ Boolean formulas for the Tseitin
contradiction on $n \times n$ grids. We prove that if each line in the proof is
of size $M$ then the number of lines is exponential in $n/(\log M)^{O(d)}$.
This strengthens a recent result of Pitassi et al. [PRT22]. The key technical
step is a multi-switching lemma extending the switching lemma of H\r{a}stad
[H\r{a}s20] for a space of restrictions related to the Tseitin contradiction.
The strengthened lemma also allows us to improve the lower bound for standard
proof size of bounded depth Frege refutations from exponential in $\tilde
\Omega (n^{1/59d})$ to exponential in $\tilde \Omega (n^{1/(2d-1)})$.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: What is a combinatorial interpretation?</title>
    <link href="http://arxiv.org/abs/2209.06142"/>
    <id>http://arxiv.org/abs/2209.06142</id>
    <updated>2022-09-14T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Pak_I/0/1/0/all/0/1&quot;&gt;Igor Pak&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this survey we discuss the notion of combinatorial interpretation in the
context of Algebraic Combinatorics and related areas. We approach the subject
from the Computational Complexity perspective. We review many examples, state a
workable definition, discuss many open problems, and present recent results on
the subject.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Topological Measures for Pattern quantification of Impact Centers in Piezo Vibration Striking Treatment (PVST)</title>
    <link href="http://arxiv.org/abs/2209.05531"/>
    <id>http://arxiv.org/abs/2209.05531</id>
    <updated>2022-09-14T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Yesilli_M/0/1/0/all/0/1&quot;&gt;Melih C. Yesilli&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chumley_M/0/1/0/all/0/1&quot;&gt;Max M. Chumley&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chen_J/0/1/0/all/0/1&quot;&gt;Jisheng Chen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Khasawneh_F/0/1/0/all/0/1&quot;&gt;Firas A. Khasawneh&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Guo_Y/0/1/0/all/0/1&quot;&gt;Yang Guo&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Surface texture influences wear and tribological properties of manufactured
parts, and it plays a critical role in end-user products. Therefore,
quantifying the order or structure of a manufactured surface provides important
information on the quality and life expectancy of the product. Although texture
can be intentionally introduced to enhance aesthetics or to satisfy a design
function, sometimes it is an inevitable byproduct of surface treatment
processes such as Piezo Vibration Striking Treatment (PVST). Measures of order
for surfaces have been characterized using statistical, spectral, and geometric
approaches. For nearly hexagonal lattices, topological tools have also been
used to measure the surface order. This paper utilizes tools from Topological
Data Analysis for quantifying the impact centers&#39; pattern in PVST. We compute
measures of order based on optical digital microscope images of surfaces
treated using PVST. These measures are applied to the grid obtained from
estimating the centers of tool impacts, and they quantify the grid&#39;s deviations
from the nominal one. Our results show that TDA provides a convenient framework
for the characterization of pattern type that bypasses some limitations of
existing tools such as difficult manual processing of the data and the need for
an expert user to analyze and interpret the surface images.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Rectilinear Convex Hull of Points in 3D</title>
    <link href="http://arxiv.org/abs/2209.06020"/>
    <id>http://arxiv.org/abs/2209.06020</id>
    <updated>2022-09-14T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Perez_Lantero_P/0/1/0/all/0/1&quot;&gt;Pablo P&amp;#xe9;rez-Lantero&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Seara_C/0/1/0/all/0/1&quot;&gt;Carlos Seara&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Urrutia_J/0/1/0/all/0/1&quot;&gt;Jorge Urrutia&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Let $P$ be a set of $n$ points in $\mathbb{R}^3$ in general position, and let
$RCH(P)$ be the rectilinear convex hull of $P$. In this paper we obtain an
optimal $O(n\log n)$-time and $O(n)$-space algorithm to compute $RCH(P)$. We
also obtain an efficient $O(n\log^2 n)$-time and $O(n\log n)$-space algorithm
to compute and maintain the set of vertices of the rectilinear convex hull of
$P$ as we rotate $\mathbb R^3$ around the $z$-axis. Finally we study some
properties of the rectilinear convex hulls of point sets in $\mathbb{R}^3$.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Recovery from Non-Decomposable Distance Oracles</title>
    <link href="http://arxiv.org/abs/2209.05676"/>
    <id>http://arxiv.org/abs/2209.05676</id>
    <updated>2022-09-14T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hu_Z/0/1/0/all/0/1&quot;&gt;Zhuangfei Hu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Li_X/0/1/0/all/0/1&quot;&gt;Xinda Li&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Woodruff_D/0/1/0/all/0/1&quot;&gt;David P. Woodruff&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhang_H/0/1/0/all/0/1&quot;&gt;Hongyang Zhang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhang_S/0/1/0/all/0/1&quot;&gt;Shufan Zhang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A line of work has looked at the problem of recovering an input from distance
queries. In this setting, there is an unknown sequence $s \in \{0,1\}^{\leq
n}$, and one chooses a set of queries $y \in \{0,1\}^{\mathcal{O}(n)}$ and
receives $d(s,y)$ for a distance function $d$. The goal is to make as few
queries as possible to recover $s$. Although this problem is well-studied for
decomposable distances, i.e., distances of the form $d(s,y) = \sum_{i=1}^n
f(s_i, y_i)$ for some function $f$, which includes the important cases of
Hamming distance, $\ell_p$-norms, and $M$-estimators, to the best of our
knowledge this problem has not been studied for non-decomposable distances, for
which there are important special cases such as edit distance, dynamic time
warping (DTW), Frechet distance, earth mover&#39;s distance, and so on. We initiate
the study and develop a general framework for such distances. Interestingly,
for some distances such as DTW or Frechet, exact recovery of the sequence $s$
is provably impossible, and so we show by allowing the characters in $y$ to be
drawn from a slightly larger alphabet this then becomes possible. In a number
of cases we obtain optimal or near-optimal query complexity. We also study the
role of adaptivity for a number of different distance functions. One motivation
for understanding non-adaptivity is that the query sequence can be fixed and
the distances of the input to the queries provide a non-linear embedding of the
input, which can be used in downstream applications involving, e.g., neural
networks for natural language processing.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Unsplittable Euclidean Capacitated Vehicle Routing: A $(2+\epsilon)$-Approximation Algorithm</title>
    <link href="http://arxiv.org/abs/2209.05520"/>
    <id>http://arxiv.org/abs/2209.05520</id>
    <updated>2022-09-14T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Grandoni_F/0/1/0/all/0/1&quot;&gt;Fabrizio Grandoni&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mathieu_C/0/1/0/all/0/1&quot;&gt;Claire Mathieu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhou_H/0/1/0/all/0/1&quot;&gt;Hang Zhou&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In the unsplittable capacitated vehicle routing problem, we are given a
metric space with a vertex called depot and a set of vertices called terminals.
Each terminal is associated with a positive demand between 0 and 1. The goal is
to find a minimum length collection of tours starting and ending at the depot
such that the demand of each terminal is covered by a single tour (i.e., the
demand cannot be split), and the total demand of the terminals in each tour
does not exceed the capacity of 1.
&lt;/p&gt;
&lt;p&gt;Our main result is a polynomial-time $(2+\epsilon)$-approximation algorithm
for this problem in the two-dimensional Euclidean plane, i.e., for the special
case where the terminals and the depot are associated with points in the
Euclidean plane and their distances are defined accordingly. This improves on
recent work by Blauth, Traub, and Vygen [IPCO&#39;21] and Friggstad, Mousavi,
Rahgoshay, and Salavatipour [IPCO&#39;22].
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: A Note on the Quickest Minimum Cost Transshipment Problem</title>
    <link href="http://arxiv.org/abs/2209.05558"/>
    <id>http://arxiv.org/abs/2209.05558</id>
    <updated>2022-09-14T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Skutella_M/0/1/0/all/0/1&quot;&gt;Martin Skutella&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Klinz and Woeginger (1995) prove that the minimum cost quickest flow problem
is NP-hard. On the other hand, the quickest minimum cost flow problem can be
solved efficiently via a straightforward reduction to the quickest flow problem
without costs. More generally, we show how the quickest minimum cost
transshipment problem can be reduced to the efficiently solvable quickest
transshipment problem, thus adding another mosaic tile to the rich complexity
landscape of flows over time.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: An Improved Lower Bound for Matroid Intersection Prophet Inequalities</title>
    <link href="http://arxiv.org/abs/2209.05614"/>
    <id>http://arxiv.org/abs/2209.05614</id>
    <updated>2022-09-14T00:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Saxena_R/0/1/0/all/0/1&quot;&gt;Raghuvansh R. Saxena&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Velusamy_S/0/1/0/all/0/1&quot;&gt;Santhoshini Velusamy&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Weinberg_S/0/1/0/all/0/1&quot;&gt;S. Matthew Weinberg&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We consider prophet inequalities subject to feasibility constraints that are
the intersection of $q$ matroids. The best-known algorithms achieve a
$\Theta(q)$-approximation, even when restricted to instances that are the
intersection of $q$ partition matroids, and with i.i.d.~Bernoulli random
variables. The previous best-known lower bound is $\Theta(\sqrt{q})$ due to a
simple construction of [Kleinberg-Weinberg STOC 2012] (which uses
i.i.d.~Bernoulli random variables, and writes the construction as the
intersection of partition matroids).
&lt;/p&gt;
&lt;p&gt;We establish an improved lower bound of $q^{1/2+\Omega(1/\log \log q)}$ by
writing the construction of [Kleinberg-Weinberg STOC 2012] as the intersection
of asymptotically fewer partition matroids. We accomplish this via an improved
upper bound on the product dimension of a graph with $p^p$ disjoint cliques of
size $p$, using recent techniques developed in [Alon-Alweiss European Journal
of Combinatorics 2020].
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


</feed>
