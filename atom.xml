<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Theory of Computing Report</title>
  <link rel="self" href=""/>
  <link href=""/>
  <id></id>
  <updated></updated>
  <generator uri="http://feedreader.github.io/">Pluto 1.6.2 on Ruby 3.0.5 (2022-11-24) [x86_64-linux]</generator>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Computational Complexity: Peer Review</title>
    <link href="https://blog.computationalcomplexity.org/2023/03/peer-review.html"/>
    <id>tag:blogger.com,1999:blog-3722233.post-2234125126384970909</id>
    <updated>2023-03-06T14:08:00+00:00</updated>
    <content type="html" xml:lang="en">
    I ran into a partner of a computer scientist at a social event who asked me &quot;Is the publication system in CS screwed up or really screwed up?&quot; If you don&#39;t know my response you haven&#39;t been reading this blog long.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Today let&#39;s talk about peer review. &lt;a href=&quot;https://sigcrap.org/2023/01/on-peer-review-in-academic-publications/&quot;&gt;Kevin McCurley&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&quot;https://experimentalhistory.substack.com/p/the-rise-and-fall-of-peer-review&quot;&gt;Adam&lt;/a&gt; &lt;a href=&quot;https://experimentalhistory.substack.com/p/the-dance-of-the-naked-emperors&quot;&gt;Mastroianni&lt;/a&gt;&amp;nbsp;have recent, not so positive, takes on this topic.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Peer review came out of a system where we had limited slots in journals and, in computer science, conferences and we had to make tough decisions. Journals and conferences would gain a reputation based somewhat on how difficult it was to get papers published there.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Now we have basically unlimited space to publish your results. And you definitely should do so, posting your papers on your own webpage, and a paper archive site like &lt;a href=&quot;https://arxiv.org/&quot;&gt;arXiv&lt;/a&gt; or &lt;a href=&quot;https://eccc.weizmann.ac.il&quot;&gt;ECCC&lt;/a&gt;. The research community would flourish in a world where everyone posts their paper online for public comment, people can promote their favorite papers on social media and we have a TikTok-system for recommending papers to you.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So why do we still need paper review? Mostly because we have to review researchers for jobs and grants, and with &lt;a href=&quot;https://www.chronicle.com/article/is-it-time-to-eliminate-recommendation-letters-hint-yes&quot;&gt;the questioning the value of recommendation letters&lt;/a&gt;, publication quality and quantity has become a stronger proxy for measuring people for better or for worse.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;First of all, peer review is a cornerstone of science. Would you rather have papers reviewed by faceless bureaucrats who know little about the subject area? Or papers only ranked by manipulable statistics like citations.&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;But the way we apply peer review, to decide acceptances in conferences, just adds too much randomness to the system. CS conferences have multiplied and continue to get &lt;a href=&quot;https://analyticsindiamag.com/icml-is-turning-down-papers-by-the-dozen-and-researchers-are-pissed&quot;&gt;increased submissions&lt;/a&gt;&amp;nbsp;as the field grows. It&#39;s just impossible to maintain any sort of uniformity in quality of acceptances. Or too often, we find conference committees and funding panels playing it safe rather than take risks with new research. With so much randomness, it&#39;s best to try many papers instead of focusing on a stronger result, leading to too much &lt;a href=&quot;https://doi.org/10.1073/pnas.2021636118&quot;&gt;incremental research&lt;/a&gt;, especially in academia.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For hiring, promotion, tenure and funding decisions, we too often rely on short cuts, such as the number of papers accepted to major conferences. Those who don&#39;t win the conference lottery get disillusioned and often leave academia for industry and no one wins.&lt;/div&gt;&lt;p class=&quot;authors&quot;&gt;By Lance Fortnow&lt;/p&gt;
  </content>
    <author>
      <name>Computational Complexity</name>
      <uri>http://blog.computationalcomplexity.org/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Ternary Quantization: A Survey</title>
    <link href="http://arxiv.org/abs/2303.01505"/>
    <id>http://arxiv.org/abs/2303.01505</id>
    <updated>2023-03-06T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Liu_D/0/1/0/all/0/1&quot;&gt;Dan Liu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Liu_X/0/1/0/all/0/1&quot;&gt;Xue Liu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Inference time, model size, and accuracy are critical for deploying deep
neural network models. Numerous research efforts have been made to compress
neural network models with faster inference and higher accuracy. Pruning and
quantization are mainstream methods to this end. During model quantization,
converting individual float values of layer weights to low-precision ones can
substantially reduce the computational overhead and improve the inference
speed. Many quantization methods have been studied, for example, vector
quantization, low-bit quantization, and binary/ternary quantization. This
survey focuses on ternary quantization. We review the evolution of ternary
quantization and investigate the relationships among existing ternary
quantization methods from the perspective of projection function and
optimization methods.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Complexity of Reasoning with Cardinality Minimality Conditions</title>
    <link href="http://arxiv.org/abs/2303.01571"/>
    <id>http://arxiv.org/abs/2303.01571</id>
    <updated>2023-03-06T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Creignou_N/0/1/0/all/0/1&quot;&gt;Nadia Creignou&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Olive_F/0/1/0/all/0/1&quot;&gt;Fr&amp;#xe9;d&amp;#xe9;ric Olive&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Schmidt_J/0/1/0/all/0/1&quot;&gt;Johannes Schmidt&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Many AI-related reasoning problems are based on the problem of satisfiability
of propositional formulas with some cardinality-minimality condition. While the
complexity of the satisfiability problem (SAT) is well understood when
considering systematically all fragments of propositional logic within
Schaefer&#39;s framework (STOC 1978) this is not the case when such minimality
condition is added. We consider the CardMinSat problem, which asks, given a
formula F and an atom x, whether x is true in some cardinality-minimal model of
F. We completely classify the computational complexity of the CardMinSat
problem within Schaefer&#39;s framework, thus paving the way for a better
understanding of the tractability frontier of many AI-related reasoning
problems. To this end we use advanced algebraic tools developed by (Schnoor &amp;amp;
Schnoor 2008) and (Lagerkvist 2014).
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Certified Randomness from Quantum Supremacy</title>
    <link href="http://arxiv.org/abs/2303.01625"/>
    <id>http://arxiv.org/abs/2303.01625</id>
    <updated>2023-03-06T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Aaronson_S/0/1/0/all/0/1&quot;&gt;Scott Aaronson&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Hung_S/0/1/0/all/0/1&quot;&gt;Shih-Han Hung&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We propose an application for near-term quantum devices: namely, generating
cryptographically certified random bits, to use (for example) in proof-of-stake
cryptocurrencies. Our protocol repurposes the existing &quot;quantum supremacy&quot;
experiments, based on random circuit sampling, that Google and USTC have
successfully carried out starting in 2019. We show that, whenever the outputs
of these experiments pass the now-standard Linear Cross-Entropy Benchmark
(LXEB), under plausible hardness assumptions they necessarily contain
$\Omega(n)$ min-entropy, where $n$ is the number of qubits. To achieve a net
gain in randomness, we use a small random seed to produce pseudorandom
challenge circuits. In response to the challenge circuits, the quantum computer
generates output strings that, after verification, can then be fed into a
randomness extractor to produce certified nearly-uniform bits -- thereby
&quot;bootstrapping&quot; from pseudorandomness to genuine randomness. We prove our
protocol sound in two senses: (i) under a hardness assumption called Long List
Quantum Supremacy Verification, which we justify in the random oracle model,
and (ii) unconditionally in the random oracle model against an eavesdropper who
could share arbitrary entanglement with the device. (Note that our protocol&#39;s
output is unpredictable even to a computationally unbounded adversary who can
see the random oracle.) Currently, the central drawback of our protocol is the
exponential cost of verification, which in practice will limit its
implementation to at most $n\sim 60$ qubits, a regime where attacks are
expensive but not impossible. Modulo that drawback, our protocol appears to be
the only practical application of quantum computing that both requires a QC and
is physically realizable today.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Complexity of total dominator coloring in graphs</title>
    <link href="http://arxiv.org/abs/2303.01746"/>
    <id>http://arxiv.org/abs/2303.01746</id>
    <updated>2023-03-06T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Henning_M/0/1/0/all/0/1&quot;&gt;Michael A. Henning&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kusum/0/1/0/all/0/1&quot;&gt;Kusum&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Pandey_A/0/1/0/all/0/1&quot;&gt;Arti Pandey&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Paul_K/0/1/0/all/0/1&quot;&gt;Kaustav Paul&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Let $G=(V,E)$ be a graph with no isolated vertices. A vertex $v$ totally
dominate a vertex $w$ ($w \ne v$), if $v$ is adjacent to $w$. A set $D
\subseteq V$ called a total dominating set of $G$ if every vertex $v\in V$ is
totally dominated by some vertex in $D$. The minimum cardinality of a total
dominating set is the total domination number of $G$ and is denoted by
$\gamma_t(G)$. A total dominator coloring of graph $G$ is a proper coloring of
vertices of $G$, so that each vertex totally dominates some color class. The
total dominator chromatic number $\chi_{td}(G)$ of $G$ is the least number of
colors required for a total dominator coloring of $G$. The Total Dominator
Coloring problem is to find a total dominator coloring of $G$ using the minimum
number of colors. It is known that the decision version of this problem is
NP-complete for general graphs. We show that it remains NP-complete even when
restricted to bipartite, planar and split graphs. We further study the Total
Dominator Coloring problem for various graph classes, including trees, cographs
and chain graphs. First, we characterize the trees having
$\chi_{td}(T)=\gamma_t(T)+1$, which completes the characterization of trees
achieving all possible values of $\chi_{td}(T)$. Also, we show that for a
cograph $G$, $\chi_{td}(G)$ can be computed in linear-time. Moreover, we show
that $2 \le \chi_{td}(G) \le 4$ for a chain graph $G$ and give characterization
of chain graphs for every possible value of $\chi_{td}(G)$ in linear-time.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Quantum Merlin-Arthur proof systems for synthesizing quantum states</title>
    <link href="http://arxiv.org/abs/2303.01877"/>
    <id>http://arxiv.org/abs/2303.01877</id>
    <updated>2023-03-06T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Delavenne_H/0/1/0/all/0/1&quot;&gt;Hugo Delavenne&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Gall_F/0/1/0/all/0/1&quot;&gt;Fran&amp;#xe7;ois Le Gall&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Liu_Y/0/1/0/all/0/1&quot;&gt;Yupan Liu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Miyamoto_M/0/1/0/all/0/1&quot;&gt;Masayuki Miyamoto&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Complexity theory typically focuses on the difficulty of solving
computational problems using classical inputs and outputs, even with a quantum
computer. In the quantum world, it is natural to apply a different notion of
complexity, namely the complexity of synthesizing quantum states. We
investigate a state-synthesizing counterpart of the class NP, referred to as
stateQMA, which is concerned with preparing certain quantum states through a
polynomial-time quantum verifier with the aid of a single quantum message from
an all-powerful but untrusted prover. This is a subclass of the class stateQIP
recently introduced by Rosenthal and Yuen (ITCS 2022), which permits
polynomially many interactions between the prover and the verifier. Our main
result consists of the basic properties of this class (as well as a variant
with an exponentially small gap), such as error reduction, and its relationship
to other fundamental state synthesizing classes, viz., states generated by
uniform polynomial-time quantum circuits (stateBQP) and space-uniform
polynomial-space quantum circuits (statePSPACE). Additionally, we demonstrate
that stateQCMA is closed under perfect completeness. Our proof techniques are
based on the quantum singular value transformation introduced by Gily\&#39;en, Su,
Low, and Wiebe (STOC 2019), and its adaption to achieve exponential precision
with a bounded space.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Quantum state testing beyond the polarizing regime and quantum triangular discrimination</title>
    <link href="http://arxiv.org/abs/2303.01952"/>
    <id>http://arxiv.org/abs/2303.01952</id>
    <updated>2023-03-06T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Liu_Y/0/1/0/all/0/1&quot;&gt;Yupan Liu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The complexity class Quantum Statistical Zero-Knowledge ($\mathsf{QSZK}$)
captures computational difficulties of quantum state testing with respect to
the trace distance for efficiently preparable mixed states (Quantum State
Distinguishability Problem, QSDP), as introduced by Watrous (FOCS 2002).
However, this class faces the same parameter issue as its classical
counterpart, because of error reduction for the QSDP (the polarization lemma),
as demonstrated by Sahai and Vadhan (JACM, 2003).
&lt;/p&gt;
&lt;p&gt;In this paper, we introduce quantum analogues of triangular discrimination,
which is a symmetric version of the $\chi^2$ divergence, and investigate the
quantum state testing problems for quantum triangular discrimination and
quantum Jensen-Shannon divergence (a symmetric version of the quantum relative
entropy). These new $\mathsf{QSZK}$-complete problems allow us to improve the
parameter regime for testing quantum states in trace distance. Additionally, we
prove that the quantum state testing for trace distance with negligible errors
is in $\mathsf{PP}$ while the same problem without error is in
$\mathsf{BQP}_1$. This indicates that the length-preserving polarization for
the QSDP implies that $\mathsf{QSZK}$ is in $\mathsf{PP}$.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Spacetime-Efficient Low-Depth Quantum State Preparation with Applications</title>
    <link href="http://arxiv.org/abs/2303.02131"/>
    <id>http://arxiv.org/abs/2303.02131</id>
    <updated>2023-03-06T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Gui_K/0/1/0/all/0/1&quot;&gt;Kaiwen Gui&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Dalzell_A/0/1/0/all/0/1&quot;&gt;Alexander M. Dalzell&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Achille_A/0/1/0/all/0/1&quot;&gt;Alessandro Achille&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Suchara_M/0/1/0/all/0/1&quot;&gt;Martin Suchara&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Chong_F/0/1/0/all/0/1&quot;&gt;Frederic T. Chong&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We propose a novel deterministic method for preparing arbitrary quantum
states, and we show that it requires asymptotically fewer quantum resources
than previous methods. When our protocol is compiled into CNOT and arbitrary
single-qubit gates, it prepares an $N$-dimensional state in depth $O(\log(N))$
and spacetime allocation (a metric that accounts for the fact that oftentimes
some ancilla qubits need not be active for the entire protocol) $O(N)$, which
are both optimal and not simultaneously achieved by previous methods. When
compiled into the $\{\mathrm{H,S,T,CNOT}\}$ gate set, it prepares an arbitrary
state up to error $\epsilon$ in depth $O(\log(N/\epsilon))$ and spacetime
allocation $O(N\log(\log(N)/\epsilon))$, improving over
$O(\log(N)\log(N/\epsilon))$ and $O(N\log(N/\epsilon))$, respectively. We
illustrate how the reduced spacetime allocation of our protocol enables rapid
preparation of many disjoint states with only constant-factor ancilla overhead
-- $O(N)$ ancilla qubits are reused efficiently to prepare a product state of
$w$ $N$-dimensional states in depth $O(w + \log(N))$ rather than $O(w\log(N))$,
achieving effectively constant depth per state. We highlight several
applications where this ability would be useful, including quantum machine
learning, Hamiltonian simulation, and solving linear systems of equations. We
provide quantum circuit descriptions of our protocol along with detailed
pseudocode.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Near Optimal Memory-Regret Tradeoff for Online Learning</title>
    <link href="http://arxiv.org/abs/2303.01673"/>
    <id>http://arxiv.org/abs/2303.01673</id>
    <updated>2023-03-06T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Peng_B/0/1/0/all/0/1&quot;&gt;Binghui Peng&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Rubinstein_A/0/1/0/all/0/1&quot;&gt;Aviad Rubinstein&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In the experts problem, on each of $T$ days, an agent needs to follow the
advice of one of $n$ ``experts&#39;&#39;. After each day, the loss associated with each
expert&#39;s advice is revealed. A fundamental result in learning theory says that
the agent can achieve vanishing regret, i.e. their cumulative loss is within
$o(T)$ of the cumulative loss of the best-in-hindsight expert.
&lt;/p&gt;
&lt;p&gt;Can the agent perform well without sufficient space to remember all the
experts? We extend a nascent line of research on this question in two
directions:
&lt;/p&gt;
&lt;p&gt;$\bullet$ We give a new algorithm against the oblivious adversary, improving
over the memory-regret tradeoff obtained by [PZ23], and nearly matching the
lower bound of [SWXZ22].
&lt;/p&gt;
&lt;p&gt;$\bullet$ We also consider an adaptive adversary who can observe past experts
chosen by the agent. In this setting we give both a new algorithm and a novel
lower bound, proving that roughly $\sqrt{n}$ memory is both necessary and
sufficient for obtaining $o(T)$ regret.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Streaming Algorithms for Learning with Experts: Deterministic Versus Robust</title>
    <link href="http://arxiv.org/abs/2303.01709"/>
    <id>http://arxiv.org/abs/2303.01709</id>
    <updated>2023-03-06T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Woodruff_D/0/1/0/all/0/1&quot;&gt;David P. Woodruff&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhang_F/0/1/0/all/0/1&quot;&gt;Fred Zhang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhou_S/0/1/0/all/0/1&quot;&gt;Samson Zhou&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In the online learning with experts problem, an algorithm must make a
prediction about an outcome on each of $T$ days (or times), given a set of $n$
experts who make predictions on each day (or time). The algorithm is given
feedback on the outcomes of each day, including the cost of its prediction and
the cost of the expert predictions, and the goal is to make a prediction with
the minimum cost, specifically compared to the best expert in the set. Recent
work by Srinivas, Woodruff, Xu, and Zhou (STOC 2022) introduced the study of
the online learning with experts problem under memory constraints.
&lt;/p&gt;
&lt;p&gt;However, often the predictions made by experts or algorithms at some time
influence future outcomes, so that the input is adaptively chosen. Whereas
deterministic algorithms would be robust to adaptive inputs, existing
algorithms all crucially use randomization to sample a small number of experts.
&lt;/p&gt;
&lt;p&gt;In this paper, we study deterministic and robust algorithms for the experts
problem. We first show a space lower bound of
$\widetilde{\Omega}\left(\frac{nM}{RT}\right)$ for any deterministic algorithm
that achieves regret $R$ when the best expert makes $M$ mistakes. Our result
shows that the natural deterministic algorithm, which iterates through pools of
experts until each expert in the pool has erred, is optimal up to
polylogarithmic factors. On the positive side, we give a randomized algorithm
that is robust to adaptive inputs that uses
$\widetilde{O}\left(\frac{n}{R\sqrt{T}}\right)$ space for $M=O\left(\frac{R^2
T}{\log^2 n}\right)$, thereby showing a smooth space-regret trade-off.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: On Sensitivity of Compact Directed Acyclic Word Graphs</title>
    <link href="http://arxiv.org/abs/2303.01726"/>
    <id>http://arxiv.org/abs/2303.01726</id>
    <updated>2023-03-06T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fujimaru_H/0/1/0/all/0/1&quot;&gt;Hiroto Fujimaru&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nakashima_Y/0/1/0/all/0/1&quot;&gt;Yuto Nakashima&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Inenaga_S/0/1/0/all/0/1&quot;&gt;Shunsuke Inenaga&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Compact directed acyclic word graphs (CDAWGs) [Blumer et al. 1987] are a
fundamental data structure on strings with applications in text pattern
searching, data compression, and pattern discovery. Intuitively, the CDAWG of a
string $T$ is obtained by merging isomorphic subtrees of the suffix tree
[Weiner 1973] of the same string $T$, thus CDAWGs are a compact indexing
structure. In this paper, we investigate the sensitivity of CDAWGs when a
single character edit operation (insertion, deletion, or substitution) is
performed at the left-end of the input string $T$, namely, we are interested in
the worst-case increase in the size of the CDAWG after an left-end edit
operation. We prove that if $e$ is the number of edges of the CDAWG for string
$T$, then the number of new edges added to the CDAWG after an left-edit
operation on $T$ is less than $e$. Further, we present almost matching lower
bounds on the sensitivity of CDAWGs for all cases of insertion, deletion, and
substitution.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Linear Space Data Structures for Finite Groups with Constant Query-time</title>
    <link href="http://arxiv.org/abs/2303.01957"/>
    <id>http://arxiv.org/abs/2303.01957</id>
    <updated>2023-03-06T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Das_B/0/1/0/all/0/1&quot;&gt;Bireswar Das&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kumar_A/0/1/0/all/0/1&quot;&gt;Anant Kumar&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sharma_S/0/1/0/all/0/1&quot;&gt;Shivdutt Sharma&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Thakkar_D/0/1/0/all/0/1&quot;&gt;Dhara Thakkar&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A finite group of order $n$ can be represented by its Cayley table. In the
word-RAM model the Cayley table of a group of order $n$ can be stored using
$O(n^2)$ words and can be used to answer a multiplication query in constant
time. It is interesting to ask if we can design a data structure to store a
group of order $n$ that uses $o(n^2)$ space but can still answer a
multiplication query in constant time.
&lt;/p&gt;
&lt;p&gt;We design a constant query-time data structure that can store any finite
group using $O(n)$ words where $n$ is the order of the group.
&lt;/p&gt;
&lt;p&gt;Farzan and Munro (ISSAC 2006) gave an information theoretic lower bound of
$\Omega(n)$ on the number of words to store a group of order $n$. Since our
data structure achieves this lower bound and answers queries in constant time,
it is optimal in both space usage and query-time.
&lt;/p&gt;
&lt;p&gt;A crucial step in the process is essentially to design linear space and
constant query-time data structures for nonabelian simple groups. The data
structures for nonableian simple groups are designed using a lemma that we
prove using the Classification Theorem for Finite Simple Groups (CFSG).
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Gil Kalai: Israel AGT Day, Reichman University, March 5, 2023</title>
    <link href="https://gilkalai.wordpress.com/2023/03/04/israel-agt-day-reichman-university-march-5-2023/"/>
    <id>http://gilkalai.wordpress.com/?p=23922</id>
    <updated>2023-03-04T10:13:37+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;&lt;img data-attachment-id=&quot;23930&quot; data-permalink=&quot;https://gilkalai.wordpress.com/2023/03/04/israel-agt-day-reichman-university-march-5-2023/ru1/&quot; data-orig-file=&quot;https://gilkalai.files.wordpress.com/2023/03/ru1.jpg&quot; data-orig-size=&quot;275,183&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;ru1&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://gilkalai.files.wordpress.com/2023/03/ru1.jpg?w=275&quot; data-large-file=&quot;https://gilkalai.files.wordpress.com/2023/03/ru1.jpg?w=275&quot; class=&quot;alignnone size-full wp-image-23930&quot; src=&quot;https://gilkalai.files.wordpress.com/2023/03/ru1.jpg?w=640&quot; alt=&quot;ru1&quot; srcset=&quot;https://gilkalai.files.wordpress.com/2023/03/ru1.jpg 275w, https://gilkalai.files.wordpress.com/2023/03/ru1.jpg?w=150 150w&quot; sizes=&quot;(max-width: 275px) 100vw, 275px&quot;   /&gt;&lt;/p&gt;
&lt;p&gt;We are running tomorrow the annual &lt;a href=&quot;https://sites.google.com/view/israelagt/home&quot;&gt;Israeli workshop in algorithmic game theory.&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Where&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;: Reichman University. The conference will take place in room EL03, Adelson building. &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Program&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;: &lt;/span&gt;&lt;a class=&quot;XqQF9c&quot; href=&quot;https://sites.google.com/view/israelagt/program?authuser=0&quot;&gt;&lt;span class=&quot;C9DxTc aw5Odc &quot;&gt;here&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;C9DxTc &quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Registration&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;: &lt;/span&gt;&lt;a class=&quot;XqQF9c&quot; href=&quot;https://sites.google.com/view/israelagt/registration?authuser=0&quot;&gt;&lt;span class=&quot;C9DxTc aw5Odc &quot;&gt;here&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;C9DxTc &quot;&gt; (free).&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Main speakers&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;: &lt;/span&gt;&lt;a class=&quot;XqQF9c&quot; href=&quot;https://www.microsoft.com/en-us/research/people/moshe/?from=https://research.microsoft.com/en-us/people/moshe/&amp;amp;type=exact&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Moshe Babaioff&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;C9DxTc &quot;&gt; (Microsoft Research),&lt;/span&gt;&lt;a class=&quot;XqQF9c&quot; href=&quot;http://www.ma.huji.ac.il/~kalai&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; &lt;span class=&quot;C9DxTc &quot;&gt;Gil Kalai&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;C9DxTc &quot;&gt; (Reichman University and The Hebrew University of Jerusalem),&lt;/span&gt;&lt;a class=&quot;XqQF9c&quot; href=&quot;https://www.divyarthimohan.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; &lt;span class=&quot;C9DxTc &quot;&gt;Divyarthi Mohan&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;C9DxTc &quot;&gt; (Tel Aviv University),&lt;/span&gt;&lt;a class=&quot;XqQF9c&quot; href=&quot;https://www.uva.nl/en/profile/r/e/r.e.m.reiffenhauser/r.e.m.reiffenhauser.html?cb#Ancillary-activities&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; &lt;span class=&quot;C9DxTc &quot;&gt;Rebecca Reiffenhäuser&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;C9DxTc &quot;&gt; (University of Amsterdam),&lt;/span&gt;&lt;a class=&quot;XqQF9c&quot; href=&quot;https://nirr.cswp.cs.technion.ac.il/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; &lt;span class=&quot;C9DxTc &quot;&gt;Nir Rosenfeld&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;C9DxTc &quot;&gt; (Technion)&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;. (See below for the full program.)&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Organizers&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;: &lt;/span&gt;&lt;a class=&quot;XqQF9c&quot; href=&quot;https://aloneden.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;C9DxTc aw5Odc &quot;&gt;Alon Eden&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;C9DxTc &quot;&gt;, &lt;/span&gt;&lt;a class=&quot;XqQF9c&quot; href=&quot;https://www.mfeldman.sites.tau.ac.il/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;C9DxTc aw5Odc &quot;&gt;Michal Feldman&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;C9DxTc &quot;&gt;, &lt;/span&gt;&lt;a class=&quot;XqQF9c&quot; href=&quot;http://www.ma.huji.ac.il/~kalai/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;C9DxTc aw5Odc &quot;&gt;Gil Kalai &lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;C9DxTc &quot;&gt;and &lt;/span&gt;&lt;a class=&quot;XqQF9c&quot; href=&quot;https://cs.idc.ac.il/~tami/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;C9DxTc aw5Odc &quot;&gt;Tami Tamir&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;C9DxTc &quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Previous editions of the AGT day: &lt;/span&gt;&lt;a class=&quot;XqQF9c&quot; href=&quot;https://sites.google.com/view/agtday2018/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;C9DxTc aw5Odc &quot;&gt;2018&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;C9DxTc &quot;&gt;, &lt;/span&gt;&lt;a class=&quot;XqQF9c&quot; href=&quot;https://sites.google.com/view/agtday2019&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;C9DxTc aw5Odc &quot;&gt;2019&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;C9DxTc &quot;&gt;, &lt;/span&gt;&lt;a class=&quot;XqQF9c&quot; href=&quot;https://sites.google.com/mail.huji.ac.il/iagt-day-2020&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;C9DxTc aw5Odc &quot;&gt;2020&lt;/span&gt;&lt;/a&gt;  (we had a break for a few years due to the epidemic, and then we had a Zoom international seminar.)&lt;/p&gt;
&lt;h2 dir=&quot;ltr&quot;&gt;Program&lt;/h2&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;09:00 &amp;#8211; 09:30    &lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Gathering&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;09:30 &amp;#8211; 10:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;00&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;    &lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Nir Rosenfeld &lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;(&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Technion&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Strategic Classification: Learning in Face of Strategic Behavior&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;10:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;00&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt; &amp;#8211; &lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;10&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;40&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;    &lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Lightning Talks Session 1:&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Yoav Kolumbus (The Hebrew University) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Simon Mauras (Tel Aviv University) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Rotem Torkan (The Technion) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Shaul Rosner (Reichman University) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Aditya Aradhye&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt; (Tel Aviv University) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Ariel Shaulker (Weizmann) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Omer Madmon (The Technion)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;1&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;0&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;40&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt; &amp;#8211; 11:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;1&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;0&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;    Coffee&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;11:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;1&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;0 &amp;#8211; 1&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;1&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;40&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;    &lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Moshe Babaioff&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt; (&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Microsoft Research&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Making Auctions Robust to Aftermarkets&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;1&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;1&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;40&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt; &amp;#8211; 12:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;20&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;    Lightning Talks Session &lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;2:&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Yotam Gafni (The Technion) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Hodaya Barr (Bar-Ilan University)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Samuel Bismuth (Ariel University)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Suman Sadhukhan&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt; (Haifa University) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Tal Alon (The Technion)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Uri Sherman (Tel Aviv University)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;12:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;2&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;0 &amp;#8211; 1&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;3&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;5&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;0     &lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Lunch&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;1&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;3&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;5&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;0 &amp;#8211; 14:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;20&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;    &lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Rebecca Reiffenhäuser&lt;/span&gt; &lt;span class=&quot;C9DxTc &quot;&gt;(&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;University of Amsterdam&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Round-Robin Beyond Additive Agents: Existence and Fairness of Approximate Equilibria (or how to be fair to deceptive egoists.)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;14:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;20&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt; &amp;#8211; 15:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;00&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;    Lightning Talks Session &lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;3:&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Konstantin Zabarnyi&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt; (The Technion)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Xin Huang (The Technion)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Shiri Ron (Weizmann)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Vishnu V. Narayan (Tel Aviv University)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Tomasz Ponitka (Tel Aviv University)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Yehonatan Mizrahi (The Hebrew University)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;1&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;5&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;0&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;0 &amp;#8211; 1&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;5&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;:&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;3&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;0&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;    Coffee&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;15:40-16:25      &lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Gil Kalai &lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;(&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Reichman University and The Hebrew University&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Noise sensitivity and stability: social choice, and beyond&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;16:25 &amp;#8211; 17:00&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;    &lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Divyarthi Mohan&lt;/span&gt;&lt;span class=&quot;C9DxTc &quot;&gt; (Tel Aviv University)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;&lt;span class=&quot;C9DxTc &quot;&gt;Approximately Efficient Auctions with Private Interdependent Valuations&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;zfr3Q CDt4Ke &quot; dir=&quot;ltr&quot;&gt;
&lt;p class=&quot;authors&quot;&gt;By Gil Kalai&lt;/p&gt;
  </content>
    <author>
      <name>Gil Kalai</name>
      <uri>https://gilkalai.wordpress.com</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Luca Aceto: Call for papers for the Fourteenth International Symposium on Games, Automata, Logics, and Formal Verification (GandALF 23)</title>
    <link href="http://processalgebra.blogspot.com/2023/03/call-for-papers-for-fourteenth.html"/>
    <id>tag:blogger.com,1999:blog-27705661.post-5623197841107558775</id>
    <updated>2023-03-03T18:19:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;font-variant-caps: normal; margin-bottom: 12pt; margin-left: 0cm; margin-right: 0cm; text-align: start; word-spacing: 0px;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black;&quot;&gt;The  Fourteenth International Symposium on Games, Automata, Logics, and  Formal Verification (GandALF 23) will be held in Udine (Italy) on &lt;b&gt;September 18-20, 2023&lt;/b&gt;.&lt;/span&gt;&lt;span style=&quot;color: #212121; font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-caps: normal; margin-bottom: 12pt; margin-left: 0cm; margin-right: 0cm; text-align: start; word-spacing: 0px;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black;&quot;&gt;The aim of &lt;/span&gt;&lt;span style=&quot;color: #212121; font-size: 12pt;&quot;&gt;&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://eur03.safelinks.protection.outlook.com/?url%3Dhttps%253A%252F%252Fgandalf23.uniud.it%252F%26data%3D05%257C01%257CNicola.Gigante%2540unibz.it%257C204a35b991bd4546f47808db1b3ec169%257C9251326703e3401a80d4c58ed6674e3b%257C0%257C0%257C638133728581440233%257CUnknown%257CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%253D%257C3000%257C%257C%257C%26sdata%3Dph0joQZQtBbunVwgHYqPHMncM2tDYyPonxPtttFJ0%252BU%253D%26reserved%3D0&amp;amp;source=gmail&amp;amp;ust=1677953643634000&amp;amp;usg=AOvVaw1Du3rgXN5-e8vKyHa8ba-6&quot; href=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgandalf23.uniud.it%2F&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581440233%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;amp;sdata=ph0joQZQtBbunVwgHYqPHMncM2tDYyPonxPtttFJ0%2BU%3D&amp;amp;reserved=0&quot; target=&quot;_blank&quot; title=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgandalf23.uniud.it%2F&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581440233%7CUnknown%7CTWFpbGZsb3d8eyJ&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt;&quot;&gt;GandALF  2023&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black;&quot;&gt; is to bring together researchers from academia and industry who are  actively working in the fields of Games, Automata, Logics, and Formal  Verification. The idea is to cover an  ample spectrum of themes, ranging from theory to applications, and  stimulate cross-fertilization. Papers focused on formal methods are  especially welcome. Authors are invited to submit original research or  tool papers on all relevant topics in these areas.  Papers discussing new ideas that are at an early stage of development  are also welcome. The topics covered by the conference include, but are  not limited to, the following:&lt;/span&gt;&lt;span style=&quot;color: #212121; font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;font-variant-caps: normal; margin-top: 0cm; text-align: start; word-spacing: 0px;&quot; type=&quot;disc&quot;&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; margin-top: 12pt; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Automata Theory&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Automated Deduction&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Computational aspects of Game Theory&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Concurrency and Distributed computation&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Decision Procedures&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Deductive, Compositional, and Abstraction Techniques for Verification&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Finite Model Theory&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;First-order and Higher-order Logics&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Formal Languages&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Formal Methods for Systems Biology, Hybrid, Embedded, and Mobile Systems&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Game Semantics&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Games and Automata for Verification&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Logical aspects of Computational Complexity&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Logics of Programs&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Modal and Temporal Logics&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Model Checking&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Models of Reactive and Real-Time Systems&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Probabilistic Models (Markov Decision processes)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Program Analysis and Software Verification&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Reinforcement Learning&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Run-time Verification and Testing&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Specification and Verification of Finite and Infinite-state Systems&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; margin-bottom: 12pt; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Synthesis&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 style=&quot;font-variant-caps: normal; margin-bottom: 4pt; margin-left: 0cm; margin-right: 0cm; text-align: start; word-spacing: 0px;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black; font-size: 17pt;&quot;&gt;Important Dates&lt;/span&gt;&lt;span style=&quot;color: #212121;&quot;&gt;&lt;/span&gt;&lt;/h2&gt;&lt;ul style=&quot;font-variant-caps: normal; margin-top: 0cm; text-align: start; word-spacing: 0px;&quot; type=&quot;disc&quot;&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; margin-top: 12pt; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Abstract submission deadline: 23 June 2023&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Paper submission deadline: 30 June 2023&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Acceptance notification: 7 August 2023&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Camera-ready deadline: 6 September 2023&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; margin-bottom: 12pt; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Conference dates: 18-20 September 2023&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;font-variant-caps: normal; margin: 0cm; text-align: start; word-spacing: 0px;&quot;&gt;&lt;span style=&quot;color: black; font-family: &amp;quot;Apple Color Emoji&amp;quot;;&quot;&gt;&lt;img alt=&quot;⚠&quot; aria-label=&quot;⚠&quot; class=&quot;an1&quot; data-emoji=&quot;⚠&quot; src=&quot;https://fonts.gstatic.com/s/e/notoemoji/15.0/26a0/72.png&quot; /&gt;&lt;/span&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black;&quot;&gt; all deadlines are&lt;/span&gt;&lt;span style=&quot;color: #212121; font-size: 12pt;&quot;&gt;&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://eur03.safelinks.protection.outlook.com/?url%3Dhttps%253A%252F%252Ftime.is%252FAnywhere_on_Earth%26data%3D05%257C01%257CNicola.Gigante%2540unibz.it%257C204a35b991bd4546f47808db1b3ec169%257C9251326703e3401a80d4c58ed6674e3b%257C0%257C0%257C638133728581596458%257CUnknown%257CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%253D%257C3000%257C%257C%257C%26sdata%3DeC2EO8fFly5I36033%252FfwYhalDYSPaiL9wAZdV0tXkRA%253D%26reserved%3D0&amp;amp;source=gmail&amp;amp;ust=1677953643634000&amp;amp;usg=AOvVaw0zxDTKqWBvXYvukxeYuIkf&quot; href=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Ftime.is%2FAnywhere_on_Earth&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;amp;sdata=eC2EO8fFly5I36033%2FfwYhalDYSPaiL9wAZdV0tXkRA%3D&amp;amp;reserved=0&quot; target=&quot;_blank&quot; title=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Ftime.is%2FAnywhere_on_Earth&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black; font-size: 11pt;&quot;&gt;&lt;/span&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt;&quot;&gt;AoE&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style=&quot;font-variant-caps: normal; margin-bottom: 4pt; margin-left: 0cm; margin-right: 0cm; text-align: start; word-spacing: 0px;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black; font-size: 17pt;&quot;&gt;Publication&lt;/span&gt;&lt;span style=&quot;color: #212121;&quot;&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style=&quot;font-variant-caps: normal; margin-bottom: 12pt; margin-left: 0cm; margin-right: 0cm; text-align: start; word-spacing: 0px;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black;&quot;&gt;The proceedings will be published by&lt;/span&gt;&lt;span style=&quot;color: #212121; font-size: 12pt;&quot;&gt;&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://eur03.safelinks.protection.outlook.com/?url%3Dhttp%253A%252F%252Fwww.eptcs.org%252F%26data%3D05%257C01%257CNicola.Gigante%2540unibz.it%257C204a35b991bd4546f47808db1b3ec169%257C9251326703e3401a80d4c58ed6674e3b%257C0%257C0%257C638133728581596458%257CUnknown%257CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%253D%257C3000%257C%257C%257C%26sdata%3DWs0nc87HnhyBhUZwAca5HLD05DjkqT1Xax1v1D5BHY8%253D%26reserved%3D0&amp;amp;source=gmail&amp;amp;ust=1677953643634000&amp;amp;usg=AOvVaw2f77k5jeRmhlBy_X2s8Aoc&quot; href=&quot;https://eur03.safelinks.protection.outlook.com/?url=http%3A%2F%2Fwww.eptcs.org%2F&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;amp;sdata=Ws0nc87HnhyBhUZwAca5HLD05DjkqT1Xax1v1D5BHY8%3D&amp;amp;reserved=0&quot; target=&quot;_blank&quot; title=&quot;https://eur03.safelinks.protection.outlook.com/?url=http%3A%2F%2Fwww.eptcs.org%2F&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiM&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black; font-size: 11pt;&quot;&gt;&lt;/span&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt;&quot;&gt;Electronic Proceedings in Theoretical Computer Science&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black;&quot;&gt;. Authors of selected papers will be invited  to submit a revised version of their work to a special issue of &lt;/span&gt;&lt;span style=&quot;color: #212121; font-size: 12pt;&quot;&gt;&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://eur03.safelinks.protection.outlook.com/?url%3Dhttps%253A%252F%252Flmcs.episciences.org%252F%26data%3D05%257C01%257CNicola.Gigante%2540unibz.it%257C204a35b991bd4546f47808db1b3ec169%257C9251326703e3401a80d4c58ed6674e3b%257C0%257C0%257C638133728581596458%257CUnknown%257CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%253D%257C3000%257C%257C%257C%26sdata%3D3qoyAWm2tV4tBh2UtfJJNGoubJu%252BPD7IQ76WMWrLoj8%253D%26reserved%3D0&amp;amp;source=gmail&amp;amp;ust=1677953643635000&amp;amp;usg=AOvVaw3OIfVUOVGeaUgU9mKWMz1c&quot; href=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Flmcs.episciences.org%2F&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;amp;sdata=3qoyAWm2tV4tBh2UtfJJNGoubJu%2BPD7IQ76WMWrLoj8%3D&amp;amp;reserved=0&quot; target=&quot;_blank&quot; title=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Flmcs.episciences.org%2F&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3d8e&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt;&quot;&gt;Logical  Methods in Computer Science&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #212121; font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-caps: normal; margin-bottom: 12pt; margin-left: 0cm; margin-right: 0cm; text-align: start; word-spacing: 0px;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black;&quot;&gt;The  previous editions of GandALF already led to special issues of the  International Journal of Foundations of Computer Science (GandALF 2010),  Theoretical Computer Science (GandALF 2011 and 2012), Information  and Computation (GandALF 2013, 2014, 2016, 2017, 2018, 2019, and 2020),  Acta Informatica (GandALF 2015) and Logical Methods in Computer Science  (GandALF 2021 and 2022).&lt;/span&gt;&lt;span style=&quot;color: #212121; font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style=&quot;font-variant-caps: normal; margin-bottom: 4pt; margin-left: 0cm; margin-right: 0cm; text-align: start; word-spacing: 0px;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black; font-size: 17pt;&quot;&gt;Submission&lt;/span&gt;&lt;span style=&quot;color: #212121;&quot;&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style=&quot;font-variant-caps: normal; margin-bottom: 12pt; margin-left: 0cm; margin-right: 0cm; text-align: start; word-spacing: 0px;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black;&quot;&gt;Submitted  papers should not exceed 14 pages (excluding references and clearly  marked appendices) using EPTCS format (please use the LaTeX style  provided&lt;/span&gt;&lt;span style=&quot;color: #212121; font-size: 12pt;&quot;&gt;&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://eur03.safelinks.protection.outlook.com/?url%3Dhttp%253A%252F%252Fstyle.eptcs.org%252F%26data%3D05%257C01%257CNicola.Gigante%2540unibz.it%257C204a35b991bd4546f47808db1b3ec169%257C9251326703e3401a80d4c58ed6674e3b%257C0%257C0%257C638133728581596458%257CUnknown%257CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%253D%257C3000%257C%257C%257C%26sdata%3DSNBcTuEkf8eyzgQcAu5a5Kf%252BrcfTEiecK0G%252FFl%252FxGUo%253D%26reserved%3D0&amp;amp;source=gmail&amp;amp;ust=1677953643635000&amp;amp;usg=AOvVaw1hB25OYZc998q4PAmWFQBo&quot; href=&quot;https://eur03.safelinks.protection.outlook.com/?url=http%3A%2F%2Fstyle.eptcs.org%2F&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;amp;sdata=SNBcTuEkf8eyzgQcAu5a5Kf%2BrcfTEiecK0G%2FFl%2FxGUo%3D&amp;amp;reserved=0&quot; target=&quot;_blank&quot; title=&quot;https://eur03.safelinks.protection.outlook.com/?url=http%3A%2F%2Fstyle.eptcs.org%2F&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3d8eyJWIjo&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt;&quot;&gt; here&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black;&quot;&gt;),  be unpublished, and contain original research. For papers reporting  experimental results, authors are encouraged to make their data  available with their submission. Submissions  must be in PDF format and will be handled via easychair at the  following address:&lt;/span&gt;&lt;span style=&quot;color: #212121; font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-caps: normal; margin-bottom: 12pt; margin-left: 0cm; margin-right: 0cm; text-align: start; word-spacing: 0px;&quot;&gt;&lt;span style=&quot;color: #212121; font-size: 12pt;&quot;&gt;&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://eur03.safelinks.protection.outlook.com/?url%3Dhttps%253A%252F%252Feasychair.org%252Fconferences%252F%253Fconf%253Dgandalf23%26data%3D05%257C01%257CNicola.Gigante%2540unibz.it%257C204a35b991bd4546f47808db1b3ec169%257C9251326703e3401a80d4c58ed6674e3b%257C0%257C0%257C638133728581596458%257CUnknown%257CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%253D%257C3000%257C%257C%257C%26sdata%3DBQgAWuw5m0iIHF9DO%252F6IaSO5rGfX69z2i0WMOAtHF70%253D%26reserved%3D0&amp;amp;source=gmail&amp;amp;ust=1677953643635000&amp;amp;usg=AOvVaw1DI9khGUQ6hcIT3Eimb7iS&quot; href=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Feasychair.org%2Fconferences%2F%3Fconf%3Dgandalf23&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;amp;sdata=BQgAWuw5m0iIHF9DO%2F6IaSO5rGfX69z2i0WMOAtHF70%3D&amp;amp;reserved=0&quot; target=&quot;_blank&quot; title=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Feasychair.org%2Fconferences%2F%3Fconf%3Dgandalf23&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt;&quot;&gt;https://easychair.org/&lt;wbr&gt;&lt;/wbr&gt;conferences/?conf=gandalf23&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #212121; font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style=&quot;font-variant-caps: normal; margin-bottom: 4pt; margin-left: 0cm; margin-right: 0cm; text-align: start; word-spacing: 0px;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black; font-size: 17pt;&quot;&gt;Invited Speakers&lt;/span&gt;&lt;span style=&quot;color: #212121;&quot;&gt;&lt;/span&gt;&lt;/h2&gt;&lt;ul style=&quot;font-variant-caps: normal; margin-top: 0cm; text-align: start; word-spacing: 0px;&quot; type=&quot;disc&quot;&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://eur03.safelinks.protection.outlook.com/?url%3Dhttps%253A%252F%252Fwww.city.ac.uk%252Fabout%252Fpeople%252Facademics%252Flaure-daviaud%26data%3D05%257C01%257CNicola.Gigante%2540unibz.it%257C204a35b991bd4546f47808db1b3ec169%257C9251326703e3401a80d4c58ed6674e3b%257C0%257C0%257C638133728581596458%257CUnknown%257CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%253D%257C3000%257C%257C%257C%26sdata%3DGBYxq2WyWlRqmuSMGwGdqP3JRC%252BuEWUW43%252F9QF9YxRU%253D%26reserved%3D0&amp;amp;source=gmail&amp;amp;ust=1677953643635000&amp;amp;usg=AOvVaw0xwpakFRahdkD7dFIsLOqo&quot; href=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.city.ac.uk%2Fabout%2Fpeople%2Facademics%2Flaure-daviaud&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;amp;sdata=GBYxq2WyWlRqmuSMGwGdqP3JRC%2BuEWUW43%2F9QF9YxRU%3D&amp;amp;reserved=0&quot; target=&quot;_blank&quot; title=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.city.ac.uk%2Fabout%2Fpeople%2Facademics%2Flaure-daviaud&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C63813372&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;Laure  Daviaud&lt;/span&gt;&lt;/a&gt;&amp;nbsp; – City, University of London (UK)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://eur03.safelinks.protection.outlook.com/?url%3Dhttps%253A%252F%252Fresearchportal.helsinki.fi%252Fen%252Fpersons%252Fjuha-kontinen%26data%3D05%257C01%257CNicola.Gigante%2540unibz.it%257C204a35b991bd4546f47808db1b3ec169%257C9251326703e3401a80d4c58ed6674e3b%257C0%257C0%257C638133728581596458%257CUnknown%257CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%253D%257C3000%257C%257C%257C%26sdata%3DIXlrMlQScI%252FDcMMbHd6azAcBg0xffklN2Fefe1Nv8z0%253D%26reserved%3D0&amp;amp;source=gmail&amp;amp;ust=1677953643635000&amp;amp;usg=AOvVaw28nElUVZ3TWibTdFxRdolz&quot; href=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fresearchportal.helsinki.fi%2Fen%2Fpersons%2Fjuha-kontinen&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;amp;sdata=IXlrMlQScI%2FDcMMbHd6azAcBg0xffklN2Fefe1Nv8z0%3D&amp;amp;reserved=0&quot; target=&quot;_blank&quot; title=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fresearchportal.helsinki.fi%2Fen%2Fpersons%2Fjuha-kontinen&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C6381337285&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;Juha  Kontinen&lt;/span&gt;&lt;/a&gt; – University of Helsinki (Finland)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://eur03.safelinks.protection.outlook.com/?url%3Dhttps%253A%252F%252Fpeople.irisa.fr%252FSophie.Pinchinat%252F%26data%3D05%257C01%257CNicola.Gigante%2540unibz.it%257C204a35b991bd4546f47808db1b3ec169%257C9251326703e3401a80d4c58ed6674e3b%257C0%257C0%257C638133728581596458%257CUnknown%257CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%253D%257C3000%257C%257C%257C%26sdata%3Dsu49qSMSOWK9ypr71ZqDEBoEZLHkKTEyssLeNCJKNSw%253D%26reserved%3D0&amp;amp;source=gmail&amp;amp;ust=1677953643635000&amp;amp;usg=AOvVaw2T8ddRYZFyrbZS5p1ZYH8l&quot; href=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpeople.irisa.fr%2FSophie.Pinchinat%2F&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;amp;sdata=su49qSMSOWK9ypr71ZqDEBoEZLHkKTEyssLeNCJKNSw%3D&amp;amp;reserved=0&quot; target=&quot;_blank&quot; title=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpeople.irisa.fr%2FSophie.Pinchinat%2F&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;Sophie  Pinchinat&lt;/span&gt;&lt;/a&gt; – IRISA/University of Rennes (France)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; margin-bottom: 12pt; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://eur03.safelinks.protection.outlook.com/?url%3Dhttp%253A%252F%252Fwww.cs.tau.ac.il%252F~rabinoa%26data%3D05%257C01%257CNicola.Gigante%2540unibz.it%257C204a35b991bd4546f47808db1b3ec169%257C9251326703e3401a80d4c58ed6674e3b%257C0%257C0%257C638133728581596458%257CUnknown%257CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%253D%257C3000%257C%257C%257C%26sdata%3DDA0GzC76yGwDsLQXREnz3GptdoDvOO0kblPsvoeJbKw%253D%26reserved%3D0&amp;amp;source=gmail&amp;amp;ust=1677953643635000&amp;amp;usg=AOvVaw134qVzmG_a3hO_V1dTv_f5&quot; href=&quot;https://eur03.safelinks.protection.outlook.com/?url=http%3A%2F%2Fwww.cs.tau.ac.il%2F~rabinoa&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;amp;sdata=DA0GzC76yGwDsLQXREnz3GptdoDvOO0kblPsvoeJbKw%3D&amp;amp;reserved=0&quot; target=&quot;_blank&quot; title=&quot;https://eur03.safelinks.protection.outlook.com/?url=http%3A%2F%2Fwww.cs.tau.ac.il%2F~rabinoa&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;Alexander  Rabinovich&lt;/span&gt;&lt;/a&gt; – Tel Aviv University (Israel)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 style=&quot;font-variant-caps: normal; margin-bottom: 6pt; margin-left: 0cm; margin-right: 0cm; text-align: start; word-spacing: 0px;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black; font-size: 17pt;&quot;&gt;Program Committee&lt;/span&gt;&lt;span style=&quot;color: #212121;&quot;&gt;&lt;/span&gt;&lt;/h1&gt;&lt;ul style=&quot;font-variant-caps: normal; margin-top: 0cm; text-align: start; word-spacing: 0px;&quot; type=&quot;disc&quot;&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Dario Della Monica (co-chair) – University of Udine (Italy)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Antonis Achilleos (co-chair) – Reykjavik University (Iceland)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul style=&quot;font-variant-caps: normal; margin-top: 0cm; text-align: start; word-spacing: 0px;&quot; type=&quot;disc&quot;&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Parosh Aziz Abdulla – Uppsala University (Sweden)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Christel Baier –&amp;nbsp; Technische Universität Dresden (Germany)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Valentina Castiglioni – Reykjavik University (Iceland)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Giorgio Delzanno – University of Genova (Italy)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Léo Exibard – Université Gustave Eiffel (France)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Gabriele Fici – University of Palermo (Italy)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Dana Fisman – Ben-Gurion University (Israel)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Nicola Gigante – Free University of Bozen-Bolzano (Italy)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Miika Hannula – University of Helsinki (Finland)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Naoki Kobayashi – The University of Tokyo (Japan)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Orna Kupferman – Hebrew University (Israel)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Martin Leucker – University of Lübeck (Germany)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Fabio Mogavero – University of Napoli (Italy)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Shankara Narayanan Krishna – Indian Institute of Technology, Bombay (India)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Pawel Parys – University of Warsaw (Poland)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Guillermo Pérez – University of Antwerp (Belgium)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Giovanni Pighizzini – University of Milano (Italy)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Gabriele Puppis – University of Udine (Italy)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Joshua Sack – California State University Long Beach (USA)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Ocan Sankur – CNRS/Irisa (France)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Patrick Totzke – University of Liverpool (UK)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Jana Wagemaker –&amp;nbsp; Radboud University (Netherlands)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Martin Zimmermann – Aalborg University (Denmark)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; margin-bottom: 12pt; vertical-align: baseline;&quot;&gt;&lt;i&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;(to be completed)&lt;/span&gt;&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 style=&quot;font-variant-caps: normal; margin-bottom: 6pt; margin-left: 0cm; margin-right: 0cm; text-align: start; word-spacing: 0px;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black; font-size: 17pt;&quot;&gt;Steering Committee&lt;/span&gt;&lt;span style=&quot;color: #212121;&quot;&gt;&lt;/span&gt;&lt;/h1&gt;&lt;ul style=&quot;font-variant-caps: normal; margin-top: 0cm; text-align: start; word-spacing: 0px;&quot; type=&quot;disc&quot;&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Luca Aceto – Reykjavik University (Iceland)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Javier Esparza – University of Munich (Germany)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Salvatore La Torre – University of Salerno (Italy)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Angelo Montanari – University of Udine (Italy)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Mimmo Parente – University of Salerno (Italy)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Jean-François Raskin – Université libre de Bruxelles (Belgium)&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;MsoNormal&quot; style=&quot;color: black; font-variant-alternates: normal; font-variant-caps: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; margin-bottom: 12pt; vertical-align: baseline;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot;&gt;Martin Zimmermann – Aalborg University (Denmark)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 style=&quot;font-variant-caps: normal; margin-bottom: 12pt; margin-left: 0cm; margin-right: 0cm; text-align: start; word-spacing: 0px;&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black; font-size: 16pt;&quot;&gt;Website&lt;/span&gt;&lt;span style=&quot;color: #212121;&quot;&gt;&lt;/span&gt;&lt;/h2&gt; &lt;span style=&quot;color: #212121; font-size: 12pt;&quot;&gt;&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://eur03.safelinks.protection.outlook.com/?url%3Dhttps%253A%252F%252Fgandalf23.uniud.it%252F%26data%3D05%257C01%257CNicola.Gigante%2540unibz.it%257C204a35b991bd4546f47808db1b3ec169%257C9251326703e3401a80d4c58ed6674e3b%257C0%257C0%257C638133728581596458%257CUnknown%257CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%253D%257C3000%257C%257C%257C%26sdata%3Dw0Gd1%252BYM9FaY7t0%252Bh5WqknncIo7NLbwzpCArvP2PUaA%253D%26reserved%3D0&amp;amp;source=gmail&amp;amp;ust=1677953643635000&amp;amp;usg=AOvVaw2q9UCgiF3YNdhTTRgkY4P8&quot; href=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgandalf23.uniud.it%2F&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;amp;sdata=w0Gd1%2BYM9FaY7t0%2Bh5WqknncIo7NLbwzpCArvP2PUaA%3D&amp;amp;reserved=0&quot; target=&quot;_blank&quot; title=&quot;https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgandalf23.uniud.it%2F&amp;amp;data=05%7C01%7CNicola.Gigante%40unibz.it%7C204a35b991bd4546f47808db1b3ec169%7C9251326703e3401a80d4c58ed6674e3b%7C0%7C0%7C638133728581596458%7CUnknown%7CTWFpbGZsb3d8eyJ&quot;&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt;&quot;&gt;https://gandalf23.uniud.it/&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span face=&quot;&amp;quot;Arial&amp;quot;,sans-serif&quot; style=&quot;color: black;&quot;&gt; &lt;br /&gt;&lt;/span&gt;&lt;p class=&quot;authors&quot;&gt;By Luca Aceto&lt;/p&gt;
  </content>
    <author>
      <name>Luca Aceto</name>
      <uri>http://processalgebra.blogspot.com/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: On the Consistency of Circuit Lower Bounds for Non-Deterministic Time</title>
    <link href="http://arxiv.org/abs/2303.01016"/>
    <id>http://arxiv.org/abs/2303.01016</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Atserias_A/0/1/0/all/0/1&quot;&gt;Albert Atserias&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Buss_S/0/1/0/all/0/1&quot;&gt;Sam Buss&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Muller_M/0/1/0/all/0/1&quot;&gt;Moritz M&amp;#xfc;ller&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We prove the first unconditional consistency result for superpolynomial
circuit lower bounds with a relatively strong theory of bounded arithmetic.
Namely, we show that the theory V$^0_2$ is consistent with the conjecture that
NEXP $\not\subseteq$ P/poly, i.e., some problem that is solvable in
non-deterministic exponential time does not have polynomial size circuits. We
suggest this is the best currently available evidence for the truth of the
conjecture. The same techniques establish the same results with NEXP replaced
by the class of problems that are decidable in non-deterministic barely
superpolynomial time such as NTIME$(n^{O(\log\log\log n)})$. Additionally, we
establish a magnification result on the hardness of proving circuit lower
bounds.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Complexity: Algorithmic Randomness and Probabilistic Laws</title>
    <link href="http://arxiv.org/abs/2303.01411"/>
    <id>http://arxiv.org/abs/2303.01411</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/physics/1/au:+Barrett_J/0/1/0/all/0/1&quot;&gt;Jeffrey A. Barrett&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/physics/1/au:+Chen_E/0/1/0/all/0/1&quot;&gt;Eddy Keming Chen&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We consider two ways one might use algorithmic randomness to characterize a
probabilistic law. The first is a generative chance* law. Such laws involve a
nonstandard notion of chance. The second is a probabilistic* constraining law.
Such laws impose relative frequency and randomness constraints that every
physically possible world must satisfy. While each notion has virtues, we argue
that the latter has advantages over the former. It supports a unified governing
account of non-Humean laws and provides independently motivated solutions to
issues in the Humean best-system account. On both notions, we have a much
tighter connection between probabilistic laws and their corresponding sets of
possible worlds. Certain histories permitted by traditional probabilistic laws
are ruled out as physically impossible. As a result, such laws avoid one
variety of empirical underdetermination, but the approach reveals other
varieties of underdetermination that are typically overlooked.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Complexity</name>
      <uri>https://arxiv.org/list/cs.CC/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Enumeration and Unimodular Equivalence of Empty Delta-Modular Simplices</title>
    <link href="http://arxiv.org/abs/2303.01224"/>
    <id>http://arxiv.org/abs/2303.01224</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Gribanov_D/0/1/0/all/0/1&quot;&gt;D. Gribanov&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Consider a class of simplices defined by systems $A x \leq b$ of linear
inequalities with $\Delta$-modular matrices. A matrix is called
$\Delta$-modular, if all its rank-order sub-determinants are bounded by
$\Delta$ in an absolute value. In our work we call a simplex $\Delta$-modular,
if it can be defined by a system $A x \leq b$ with a $\Delta$-modular matrix
$A$. And we call a simplex empty, if it contains no points with integer
coordinates. In literature, a simplex is called lattice-simplex, if all its
vertices have integer coordinates. And a lattice-simplex called empty, if it
contains no points with integer coordinates excluding its vertices.
&lt;/p&gt;
&lt;p&gt;Recently, assuming that $\Delta$ is fixed, it was shown that the number of
$\Delta$-modular empty simplices modulo the unimodular equivalence relation is
bounded by a polynomial on dimension. We show that the analogous fact holds for
the class of $\Delta$-modular empty lattice-simplices. As the main result,
assuming again that the value of the parameter $\Delta$ is fixed, we show that
all unimodular equivalence classes of simplices of the both types can be
enumerated by a polynomial-time algorithm. As the secondary result, we show the
existence of a polynomial-time algorithm for the problem to check the
unimodular equivalence relation for a given pair of $\Delta$-modular, not
necessarily empty, simplices.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Interactive Exploration of the Temporal $\alpha$-Shape</title>
    <link href="http://arxiv.org/abs/2303.00878"/>
    <id>http://arxiv.org/abs/2303.00878</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Weitbrecht_F/0/1/0/all/0/1&quot;&gt;Felix Weitbrecht&lt;/a&gt;&lt;/p&gt;&lt;p&gt;An interesting subcomplex of the Delaunay triangulation are $\alpha$-shapes,
which give a more detailed representation of the shape of point sets than the
convex hull. We extend an algorithm which computes all Delaunay simplices over
all time windows to also compute the temporal $\alpha$-shape, which is a
description of all $\alpha$-shapes over all time windows and all values of
$\alpha$, in output-sensitive linear time. We present an interactive demo
application based on a fast query data structure. Experimental results show
that our algorithm is practical and can be used on real-world data sets.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Computational Geometry: Geometric Spanning Trees Minimizing the Wiener Index</title>
    <link href="http://arxiv.org/abs/2303.01096"/>
    <id>http://arxiv.org/abs/2303.01096</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Abu_Affash_A/0/1/0/all/0/1&quot;&gt;A. Karim Abu-Affash&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Carmi_P/0/1/0/all/0/1&quot;&gt;Paz Carmi&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Luwisch_O/0/1/0/all/0/1&quot;&gt;Ori Luwisch&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mitchell_J/0/1/0/all/0/1&quot;&gt;Joseph S. B. Mitchell&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The Wiener index of a network, introduced by the chemist Harry Wiener, is the
sum of distances between all pairs of nodes in the network. This index,
originally used in chemical graph representations of the non-hydrogen atoms of
a molecule, is considered to be a fundamental and useful network descriptor. We
study the problem of constructing geometric networks on point sets in Euclidean
space that minimize the Wiener index: given a set $P$ of $n$ points in
$\mathbb{R}^d$, the goal is to construct a network, spanning $P$ and satisfying
certain constraints, that minimizes the Wiener index among the allowable class
of spanning networks.
&lt;/p&gt;
&lt;p&gt;In this work, we focus mainly on spanning networks that are trees and we
focus on problems in the plane ($d=2$). We show that any spanning tree that
minimizes the Wiener index has non-crossing edges in the plane. Then, we use
this fact to devise an $O(n^4)$-time algorithm that constructs a spanning tree
of minimum Wiener index for points in convex position. We also prove that the
problem of computing a spanning tree on $P$ whose Wiener index is at most $W$,
while having total (Euclidean) weight at most $B$, is NP-hard.
&lt;/p&gt;
&lt;p&gt;Computing a tree that minimizes the Wiener index has been studied in the area
of communication networks, where it is known as the optimum communication
spanning tree problem.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Computational Geometry</name>
      <uri>https://arxiv.org/list/cs.CG/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Coresets for Clustering in Geometric Intersection Graphs</title>
    <link href="http://arxiv.org/abs/2303.01400"/>
    <id>http://arxiv.org/abs/2303.01400</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Bandyapadhyay_S/0/1/0/all/0/1&quot;&gt;Sayan Bandyapadhyay&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fomin_F/0/1/0/all/0/1&quot;&gt;Fedor V. Fomin&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Inamdar_T/0/1/0/all/0/1&quot;&gt;Tanmay Inamdar&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Designing coresets--small-space sketches of the data preserving cost of the
solutions within $(1\pm \epsilon)$-approximate factor--is an important research
direction in the study of center-based $k$-clustering problems, such as
$k$-means or $k$-median. Feldman and Langberg [STOC&#39;11] have shown that for
$k$-clustering of $n$ points in general metrics, it is possible to obtain
coresets whose size depends logarithmically in $n$. Moreover, such a dependency
in $n$ is inevitable in general metrics. A significant amount of recent work in
the area is devoted to obtaining coresests whose sizes are independent of $n$
(i.e., ``small&#39;&#39; coresets) for special metrics, like $d$-dimensional Euclidean
spaces, doubling metrics, metrics of graphs of bounded treewidth, or those
excluding a fixed minor.
&lt;/p&gt;
&lt;p&gt;In this paper, we provide the first constructions of small coresets for
$k$-clustering in the metrics induced by geometric intersection graphs, such as
Euclidean-weighted Unit Disk/Square Graphs. These constructions follow from a
general theorem that identifies two canonical properties of a graph metric
sufficient for obtaining small coresets. The proof of our theorem builds on the
recent work of Cohen-Addad, Saulpic, and Schwiegelshohn [STOC &#39;21], which
ensures small-sized coresets conditioned on the existence of an interesting set
of centers, called ``centroid set&#39;&#39;. The main technical contribution of our
work is the proof of the existence of such a small-sized centroid set for
graphs that satisfy the two canonical geometric properties. The new coreset
construction helps to design the first $(1+\epsilon)$-approximation for
center-based clustering problems in UDGs and USGs, that is fixed-parameter
tractable in $k$ and $\epsilon$ (FPT-AS).
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Scarf&#39;s algorithm and stable marriages</title>
    <link href="http://arxiv.org/abs/2303.00791"/>
    <id>http://arxiv.org/abs/2303.00791</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Faenza_Y/0/1/0/all/0/1&quot;&gt;Yuri Faenza&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+He_C/0/1/0/all/0/1&quot;&gt;Chengyue He&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Sethuraman_J/0/1/0/all/0/1&quot;&gt;Jay Sethuraman&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Scarf&#39;s algorithm gives a pivoting procedure to find a special vertex -- a
dominating vertex -- in down-monotone polytopes. This paper studies the
behavior of Scarf&#39;s algorithm when employed to find stable matchings in
bipartite graphs. First, it proves that Scarf&#39;s algorithm can be implemented to
run in polynomial time, showing the first positive result on its runtime in
significant settings. Second, it shows an infinite family of instances where,
no matter the pivoting rule and runtime, Scarf&#39;s algorithm outputs a matching
from an exponentially small subset of all stable matchings, thus showing a
structural weakness of the approach.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Parallel and Distributed Exact Single-Source Shortest Paths with Negative Edge Weights</title>
    <link href="http://arxiv.org/abs/2303.00811"/>
    <id>http://arxiv.org/abs/2303.00811</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ashvinkumar_V/0/1/0/all/0/1&quot;&gt;Vikrant Ashvinkumar&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Bernstein_A/0/1/0/all/0/1&quot;&gt;Aaron Bernstein&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Cao_N/0/1/0/all/0/1&quot;&gt;Nairen Cao&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Grunau_C/0/1/0/all/0/1&quot;&gt;Christoph Grunau&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Haeupler_B/0/1/0/all/0/1&quot;&gt;Bernhard Haeupler&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jiang_Y/0/1/0/all/0/1&quot;&gt;Yonggang Jiang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nanongkai_D/0/1/0/all/0/1&quot;&gt;Danupon Nanongkai&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Su_H/0/1/0/all/0/1&quot;&gt;Hsin Hao Su&lt;/a&gt;&lt;/p&gt;&lt;p&gt;This paper presents parallel and distributed algorithms for single-source
shortest paths when edges can have negative weights (negative-weight SSSP). We
show a framework that reduces negative-weight SSSP in either setting to
$n^{o(1)}$ calls to any SSSP algorithm that works with a virtual source. More
specifically, for a graph with $m$ edges, $n$ vertices, undirected hop-diameter
$D$, and polynomially bounded integer edge weights, we show randomized
algorithms for negative-weight SSSP with (i) $W_{SSSP}(m,n)n^{o(1)}$ work and
$S_{SSSP}(m,n)n^{o(1)}$ span, given access to an SSSP algorithm with
$W_{SSSP}(m,n)$ work and $S_{SSSP}(m,n)$ span in the parallel model, (ii)
$T_{SSSP}(n,D)n^{o(1)}$, given access to an SSSP algorithm that takes
$T_{SSSP}(n,D)$ rounds in $\mathsf{CONGEST}$. This work builds off the recent
result of [Bernstein, Nanongkai, Wulff-Nilsen, FOCS&#39;22], which gives a
near-linear time algorithm for negative-weight SSSP in the sequential setting.
&lt;/p&gt;
&lt;p&gt;Using current state-of-the-art SSSP algorithms yields randomized algorithms
for negative-weight SSSP with (i) $m^{1+o(1)}$ work and $n^{1/2+o(1)}$ span in
the parallel model, (ii) $(n^{2/5}D^{2/5} + \sqrt{n} + D)n^{o(1)}$ rounds in
$\mathsf{CONGEST}$.
&lt;/p&gt;
&lt;p&gt;Our main technical contribution is an efficient reduction for computing a
low-diameter decomposition (LDD) of directed graphs to computations of SSSP
with a virtual source. Efficiently computing an LDD has heretofore only been
known for undirected graphs in both the parallel and distributed models. The
LDD is a crucial step of the algorithm in [Bernstein, Nanongkai, Wulff-Nilsen,
FOCS&#39;22], and we think that its applications to other problems in parallel and
distributed models are far from being exhausted.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Predictive Flows for Faster Ford-Fulkerson</title>
    <link href="http://arxiv.org/abs/2303.00837"/>
    <id>http://arxiv.org/abs/2303.00837</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Davies_S/0/1/0/all/0/1&quot;&gt;Sami Davies&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Moseley_B/0/1/0/all/0/1&quot;&gt;Benjamin Moseley&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Vassilvitskii_S/0/1/0/all/0/1&quot;&gt;Sergei Vassilvitskii&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wang_Y/0/1/0/all/0/1&quot;&gt;Yuyan Wang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Recent work has shown that leveraging learned predictions can improve the
running time of algorithms for bipartite matching and similar combinatorial
problems. In this work, we build on this idea to improve the performance of the
widely used Ford-Fulkerson algorithm for computing maximum flows by seeding
Ford-Fulkerson with predicted flows. Our proposed method offers strong
theoretical performance in terms of the quality of the prediction. We then
consider image segmentation, a common use-case of flows in computer vision, and
complement our theoretical analysis with strong empirical results.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Pandora&#39;s Problem with Combinatorial Cost</title>
    <link href="http://arxiv.org/abs/2303.01078"/>
    <id>http://arxiv.org/abs/2303.01078</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Berger_B/0/1/0/all/0/1&quot;&gt;Ben Berger&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ezra_T/0/1/0/all/0/1&quot;&gt;Tomer Ezra&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Feldman_M/0/1/0/all/0/1&quot;&gt;Michal Feldman&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fusco_F/0/1/0/all/0/1&quot;&gt;Federico Fusco&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Pandora&#39;s problem is a fundamental model in economics that studies optimal
search strategies under costly inspection. In this paper we initiate the study
of Pandora&#39;s problem with combinatorial costs, capturing many real-life
scenarios where search cost is non-additive. Weitzman&#39;s celebrated algorithm
[1979] establishes the remarkable result that, for additive costs, the optimal
search strategy is non-adaptive and computationally feasible.
&lt;/p&gt;
&lt;p&gt;We inquire to which extent this structural and computational simplicity
extends beyond additive cost functions. Our main result is that the class of
submodular cost functions admits an optimal strategy that follows a fixed,
non-adaptive order, thus preserving the structural simplicity of additive cost
functions. In contrast, for the more general class of subadditive (or even XOS)
cost functions, the optimal strategy may already need to determine the search
order adaptively. On the computational side, obtaining any approximation to the
optimal utility requires super polynomially many queries to the cost function,
even for a strict subclass of submodular cost functions.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Quantum Channel Certification with Incoherent Strategies</title>
    <link href="http://arxiv.org/abs/2303.01188"/>
    <id>http://arxiv.org/abs/2303.01188</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Fawzi_O/0/1/0/all/0/1&quot;&gt;Omar Fawzi&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Flammarion_N/0/1/0/all/0/1&quot;&gt;Nicolas Flammarion&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Garivier_A/0/1/0/all/0/1&quot;&gt;Aur&amp;#xe9;lien Garivier&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Oufkir_A/0/1/0/all/0/1&quot;&gt;Aadil Oufkir&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In the problem of quantum channel certification, we have black box access to
a quantum process and would like to decide if this process matches some
predefined specification or is $\varepsilon$-far from this specification. The
objective is to achieve this task while minimizing the number of times the
black box is used.
&lt;/p&gt;
&lt;p&gt;Here, we focus on optimal incoherent strategies for two relevant extreme
cases of channel certification. The first one is when the predefined
specification is a unitary channel, e.g., a gate in a quantum circuit.
&lt;/p&gt;
&lt;p&gt;In this case, we show that testing whether the black box is described by a
fixed unitary operator in dimension $d$ or $\varepsilon$-far from it in the
trace norm requires $\Theta(d/\varepsilon^2)$ uses of the black box. The second
setting we consider is when the predefined specification is a completely
depolarizing channel with input dimension $d_{\text{in}}$ and output dimension
$d_{\text{out}}$.
&lt;/p&gt;
&lt;p&gt;In this case, we prove that, in the non-adaptive setting,
$\tilde{\Theta}(d_{\text{in}}^2d_{\text{out}}^{1.5}/\varepsilon^2)$ uses of the
channel are necessary and sufficient to verify whether it is equal to the
depolarizing channel or $\varepsilon$-far from it in the diamond norm.
&lt;/p&gt;
&lt;p&gt;Finally, we prove a lower bound of
$\Omega(d_{\text{in}}^2d_{\text{out}}/\varepsilon^2)$ for this problem in the
adaptive setting. Note that the special case $d_{\text{in}} = 1$ corresponds to
the well-studied quantum state certification problem.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Choosing Public Datasets for Private Machine Learning via Gradient Subspace Distance</title>
    <link href="http://arxiv.org/abs/2303.01256"/>
    <id>http://arxiv.org/abs/2303.01256</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/stat/1/au:+Gu_X/0/1/0/all/0/1&quot;&gt;Xin Gu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/stat/1/au:+Kamath_G/0/1/0/all/0/1&quot;&gt;Gautam Kamath&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/stat/1/au:+Wu_Z/0/1/0/all/0/1&quot;&gt;Zhiwei Steven Wu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Differentially private stochastic gradient descent privatizes model training
by injecting noise into each iteration, where the noise magnitude increases
with the number of model parameters. Recent works suggest that we can reduce
the noise by leveraging public data for private machine learning, by projecting
gradients onto a subspace prescribed by the public data. However, given a
choice of public datasets, it is not a priori clear which one may be most
appropriate for the private task. We give an algorithm for selecting a public
dataset by measuring a low-dimensional subspace distance between gradients of
the public and private examples. We provide theoretical analysis demonstrating
that the excess risk scales with this subspace distance. This distance is easy
to compute and robust to modifications in the setting. Empirical evaluation
shows that trained model accuracy is monotone in this distance.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Solving Distance-constrained Labeling Problems for Small Diameter Graphs via TSP</title>
    <link href="http://arxiv.org/abs/2303.01290"/>
    <id>http://arxiv.org/abs/2303.01290</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hanaka_T/0/1/0/all/0/1&quot;&gt;Tesshu Hanaka&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ono_H/0/1/0/all/0/1&quot;&gt;Hirotaka Ono&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sugiyama_K/0/1/0/all/0/1&quot;&gt;Kosuke Sugiyama&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this paper, we give a simple polynomial-time reduction of {L(p)-Labeling}
on graphs with a small diameter to {Metric (Path) TSP}, which enables us to use
numerous results on {(Metric) TSP}. On the practical side, we can utilize
various high-performance heuristics for TSP, such as Concordo and LKH, to solve
our problem. On the theoretical side, we can see that the problem for any p
under this framework is 1.5-approximable, and it can be solved by the Held-Karp
algorithm in O(2^n n^2) time, where n is the number of vertices, and so on.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Improved Algorithms for Monotone Moldable Job Scheduling using Compression and Convolution</title>
    <link href="http://arxiv.org/abs/2303.01414"/>
    <id>http://arxiv.org/abs/2303.01414</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Grage_K/0/1/0/all/0/1&quot;&gt;Kilian Grage&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jansen_K/0/1/0/all/0/1&quot;&gt;Klaus Jansen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ohnesorge_F/0/1/0/all/0/1&quot;&gt;Felix Ohnesorge&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In the moldable job scheduling problem one has to assign a set of $n$ jobs to
$m$ machines, in order to minimize the time it takes to process all jobs. Each
job is moldable, so it can be assigned not only to one but any number of the
equal machines. We assume that the work of each job is monotone and that jobs
can be placed non-contiguously. In this work we present a $(\frac 3 2 +
\epsilon)$-approximation algorithm with a worst-case runtime of ${O(n
\log^2(\frac 1 \epsilon + \frac {\log (\epsilon m)} \epsilon) +
\frac{n}{\epsilon} \log(\frac 1 \epsilon) {\log (\epsilon m)})}$ when $m\le
16n$. This is an improvement over the best known algorithm of the same quality
by a factor of $\frac 1 \epsilon$ and several logarithmic dependencies. We
complement this result with an improved FPTAS with running time $O(n
\log^2(\frac 1 \epsilon + \frac {\log (\epsilon m)} \epsilon))$ for instances
with many machines $m&amp;gt; 8\frac n \epsilon$. This yields a $\frac 3
2$-approximation with runtime $O(n \log^2(\log m))$ when $m&amp;gt;16n$.
&lt;/p&gt;
&lt;p&gt;We achieve these results through one new core observation: In an
approximation setting one does not need to consider all $m$ possible allotments
for each job. We will show that we can reduce the number of relevant allotments
for each job from $m$ to $O(\frac 1 \epsilon + \frac {\log (\epsilon
m)}{\epsilon})$. Using this observation immediately yields the improved FPTAS.
For the other result we use a reduction to the knapsack problem first
introduced by Mouni\&#39;e, Rapine and Trystram. We use the reduced number of
machines to give a new elaborate rounding scheme and define a modified version
of this this knapsack instance. This in turn allows for the application of a
convolution based algorithm by Axiotis and Tzamos. We further back our
theoretical results through a practical implementation and compare our
algorithm to the previously known best result.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Distributed Deep Multilevel Graph Partitioning</title>
    <link href="http://arxiv.org/abs/2303.01417"/>
    <id>http://arxiv.org/abs/2303.01417</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sanders_P/0/1/0/all/0/1&quot;&gt;Peter Sanders&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Seemaier_D/0/1/0/all/0/1&quot;&gt;Daniel Seemaier&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We describe the engineering of the distributed-memory multilevel graph
partitioner dKaMinPar. It scales to (at least) 8192 cores while achieving
partitioning quality comparable to widely used sequential and shared-memory
graph partitioners. In comparison, previous distributed graph partitioners
scale only in more restricted scenarios and often induce a considerable quality
penalty compared to non-distributed partitioners. When partitioning into a
large number of blocks, they even produce infeasible solution that violate the
balancing constraint. dKaMinPar achieves its robustness by a scalable
distributed implementation of the deep-multilevel scheme for graph
partitioning. Crucially, this includes new algorithms for balancing during
refinement and coarsening.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Improved Space Bounds for Learning with Experts</title>
    <link href="http://arxiv.org/abs/2303.01453"/>
    <id>http://arxiv.org/abs/2303.01453</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Aamand_A/0/1/0/all/0/1&quot;&gt;Anders Aamand&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chen_J/0/1/0/all/0/1&quot;&gt;Justin Y. Chen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nguyen_H/0/1/0/all/0/1&quot;&gt;Huy L&amp;#xea; Nguyen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Silwal_S/0/1/0/all/0/1&quot;&gt;Sandeep Silwal&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We give improved tradeoffs between space and regret for the online learning
with expert advice problem over $T$ days with $n$ experts. Given a space budget
of $n^{\delta}$ for $\delta \in (0,1)$, we provide an algorithm achieving
regret $\tilde{O}(n^2 T^{1/(1+\delta)})$, improving upon the regret bound
$\tilde{O}(n^2 T^{2/(2+\delta)})$ in the recent work of [PZ23]. The improvement
is particularly salient in the regime $\delta \rightarrow 1$ where the regret
of our algorithm approaches $\tilde{O}_n(\sqrt{T})$, matching the $T$
dependence in the standard online setting without space restrictions.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">arXiv: Data Structures and Algorithms: Faster exact and approximation algorithms for packing and covering matroids via push-relabel</title>
    <link href="http://arxiv.org/abs/2303.01478"/>
    <id>http://arxiv.org/abs/2303.01478</id>
    <updated>2023-03-03T01:30:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Quanrud_K/0/1/0/all/0/1&quot;&gt;Kent Quanrud&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Matroids are a fundamental object of study in combinatorial optimization.
Three closely related and important problems involving matroids are maximizing
the size of the union of $k$ independent sets (that is, $k$-fold matroid
union), computing $k$ disjoint bases (a.k.a. matroid base packing), and
covering the elements by $k$ bases (a.k.a. matroid base covering). These
problems generalize naturally to integral and real-valued capacities on the
elements. This work develops faster exact and/or approximation problems for
these and some other closely related problems such as optimal reinforcement and
matroid membership. We obtain improved running times both for general matroids
in the independence oracle model and for the graphic matroid. The main thrust
of our improvements comes from developing a faster and unifying push-relabel
algorithm for the integer-capacitated versions of these problems, building on
previous work by Frank and Mikl\&#39;os [FM12]. We then build on this algorithm in
two directions. First we develop a faster augmenting path subroutine for
$k$-fold matroid union that, when appended to an approximation version of the
push-relabel algorithm, gives a faster exact algorithm for some parameters of
$k$. In particular we obtain a subquadratic-query running time in the
uncapacitated setting for the three basic problems listed above. We also obtain
faster approximation algorithms for these problems with real-valued capacities
by reducing to small integral capacities via randomized rounding. To this end,
we develop a new randomized rounding technique for base covering problems in
matroids that may also be of independent interest.
&lt;/p&gt;
  </content>
    <author>
      <name>arXiv: Data Structures and Algorithms</name>
      <uri>https://arxiv.org/list/cs.DS/recent</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR23-020 |  Certified Randomness from Quantum Supremacy | 

	Scott Aaronson, 

	Shih-Han Hung</title>
    <link href="https://eccc.weizmann.ac.il/report/2023/020"/>
    <id>https://eccc.weizmann.ac.il/report/2023/020</id>
    <updated>2023-03-02T23:10:26+00:00</updated>
    <content type="html" xml:lang="en">
    We propose an application for near-term quantum devices: namely, generating cryptographically certified random bits, to use (for example) in proof-of-stake cryptocurrencies. Our protocol repurposes the existing &amp;quot;quantum supremacy&amp;quot; experiments, based on random circuit sampling, that Google and USTC have successfully carried out starting in 2019. We show that, whenever the outputs of these experiments pass the now-standard Linear Cross-Entropy Benchmark (LXEB), under plausible hardness assumptions they necessarily contain $\Omega(n)$ min-entropy, where $n$ is the number of qubits. To achieve a net gain in randomness, we use a small random seed to produce pseudorandom challenge circuits. In response to the challenge circuits, the quantum computer generates output strings that, after verification, can then be fed into a randomness extractor to produce certified nearly-uniform bits---thereby &amp;quot;bootstrapping&amp;quot; from pseudorandomness to genuine randomness. We prove our protocol sound in two senses: (i) under a hardness assumption called Long List Quantum Supremacy Verification, which we justify in the random oracle model, and (ii) unconditionally in the random oracle model against an eavesdropper who could share arbitrary entanglement with the device. (Note that our protocol&amp;#39;s output is unpredictable even to a computationally unbounded adversary who can see the random oracle.) Currently, the central drawback of our protocol is the exponential cost of verification, which in practice will limit its implementation to at most $n\sim 60$ qubits, a regime where attacks are expensive but not impossible. Modulo that drawback, our protocol appears to be the only practical application of quantum computing that both requires a QC and is physically realizable today.
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR23-019 |  Theory of Unconditional Pseudorandom Generators | 

	Pooya Hatami, 

	William Hoza</title>
    <link href="https://eccc.weizmann.ac.il/report/2023/019"/>
    <id>https://eccc.weizmann.ac.il/report/2023/019</id>
    <updated>2023-03-02T23:09:23+00:00</updated>
    <content type="html" xml:lang="en">
    This is a survey of unconditional *pseudorandom generators* (PRGs). A PRG uses a short, truly random seed to generate a long, &amp;quot;pseudorandom&amp;quot; sequence of bits. To be more specific, for each restricted model of computation (e.g., bounded-depth circuits or read-once branching programs), we would like to design a PRG that &amp;quot;fools&amp;quot; the model, meaning that every function computable in the model behaves approximately the same when we plug in pseudorandom bits from the PRG as it does when we plug in truly random bits. In this survey, we discuss four major paradigms for designing PRGs:

- We present several PRGs based on $k$-wise uniform generators, small-bias generators, and simple combinations thereof, including proofs of Viola&amp;#39;s theorem on fooling low-degree polynomials (Comput. Complexity 2009) and Braverman&amp;#39;s theorem on fooling $\mathbf{AC}^0$ circuits (J. ACM 2010).

- We present several PRGs based on &amp;quot;recycling&amp;quot; random bits to take advantage of communication bottlenecks, such as the Impagliazzo-Nisan-Wigderson generator (STOC 1994).

- We present connections between PRGs and computational hardness, including the Nisan-Wigderson framework for converting a hard Boolean function into a PRG (J. Comput. Syst. Sci. 1994).

- We present PRG frameworks based on random restrictions, including the &amp;quot;polarizing random walks&amp;quot; framework (Chattopadhyay, Hatami, Hosseini, and Lovett, Theory Comput. 2019).

We explain how to use these paradigms to construct PRGs that work *unconditionally*, with no unproven mathematical assumptions. The PRG constructions use ingredients such as finite field arithmetic, expander graphs, and randomness extractors. The analyses use techniques such as Fourier analysis, sandwiching approximators, and simplification-under-restrictions lemmas.
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Computational Complexity: Goodbye Dilbert</title>
    <link href="https://blog.computationalcomplexity.org/2023/03/goodbye-dilbert.html"/>
    <id>tag:blogger.com,1999:blog-3722233.post-3317586011216436608</id>
    <updated>2023-03-02T13:19:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;Scott Adams, creator of Dilbert, had a racist rant in a video he posted last week. As a result &lt;a href=&quot;https://www.wsj.com/articles/newspapers-drop-dilbert-after-cartoonist-calls-black-americans-hate-group-21348ce1?st=mcxbs51a70by7i3&amp;amp;reflink=desktopwebshare_permalink&quot;&gt;most newspapers that carried the comic strip are dropping Dilbert&lt;/a&gt;, including our local Chicago Tribune. I fully support these moves. Much as I believe in separating the art from the artist, it&#39;s different when the artist is living and profiting from their art.&lt;/p&gt;&lt;p&gt;So we need to say to Dilbert, making the end of an era. Dilbert started in 1989 as a strip that captured the absurdities of the work place in an anonymous tech company, predating movies like &lt;a href=&quot;https://www.imdb.com/title/tt0151804/&quot;&gt;Office Space&lt;/a&gt; and shows like &lt;a href=&quot;https://www.imdb.com/title/tt1235547/&quot;&gt;Better Off Ted&lt;/a&gt; and&amp;nbsp;&lt;a href=&quot;https://www.imdb.com/title/tt2575988/&quot;&gt;Silicon Valley&lt;/a&gt;. I used Dilbert strips (with permission) in my book, namely&amp;nbsp;&lt;a href=&quot;https://dilbert.com/strip/2001-10-25&quot;&gt;this strip&lt;/a&gt; to introduce Kolmogorov complexity and &lt;a href=&quot;https://dilbert.com/strip/1997-12-22&quot;&gt;this strip&lt;/a&gt; to describe my research area. Just call me Dan.&lt;/p&gt;&lt;p&gt;Farewell to Dilbert, Dogbert, Wally, Alice, Asok, the pointy-haired boss and the rest. I won&#39;t miss Scott Adams, but I will miss his creations.&lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By Lance Fortnow&lt;/p&gt;
  </content>
    <author>
      <name>Computational Complexity</name>
      <uri>http://blog.computationalcomplexity.org/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR23-018 |  Memory-Sample Lower Bounds for Learning with Classical-Quantum Hybrid Memory | 

	Qipeng Liu, 

	Ran Raz, 

	Wei Zhan</title>
    <link href="https://eccc.weizmann.ac.il/report/2023/018"/>
    <id>https://eccc.weizmann.ac.il/report/2023/018</id>
    <updated>2023-03-02T04:17:11+00:00</updated>
    <content type="html" xml:lang="en">
    In a work by Raz (J. ACM and FOCS 16), it was proved that any algorithm for parity learning on $n$ bits requires either $\Omega(n^2)$ bits of classical memory or an exponential number (in~$n$) of random samples. A line of recent works continued that research direction and showed that for a large collection of classical learning tasks, either super-linear classical memory size or super-polynomially many samples are needed. All these works consider learning algorithms as classical branching programs, which perform classical computation within bounded memory.

However, these results do not capture all physical computational models, remarkably, quantum computers and the use of quantum memory. It leaves the possibility that a small piece of quantum memory could significantly reduce the need for classical memory or samples and thus completely change the nature of the classical learning task. Despite the recent research on the necessity of quantum memory for intrinsic quantum learning problems like shadow tomography and purity testing, the role of quantum memory in classical learning tasks remains obscure. 

In this work, we study classical learning tasks in the presence of quantum memory. We prove that any quantum algorithm with both, classical memory and quantum memory, for parity learning on $n$ bits, requires either $\Omega(n^2)$ bits of classical memory or $\Omega(n)$ bits of quantum  memory or an exponential number of samples. In other words, the memory-sample lower bound for parity learning remains qualitatively the same, even if the learning algorithm can use, in addition to the classical memory, a quantum memory of size $c n$ (for some constant $c&amp;gt;0$).

Our result is more general and applies to many other classical learning tasks. Following previous works, we represent by the matrix $M: A \times X \to \{-1,1\}$ the following learning task. An unknown $x$ is sampled uniformly at random from a concept class $X$, and a learning algorithm tries to uncover $x$ by seeing streaming of random samples $(a_i, b_i = M(a_i, x))$ where for every $i$, $a_i\in A$ is chosen uniformly at random. Assume that $k,\ell,r$ are integers such that any submatrix of $M$ of at least $2^{-k}\cdot|A|$ rows and at least $2^{-\ell}\cdot|X|$ columns, has a bias of at most $2^{-r}$. We prove that any algorithm with classical and quantum hybrid memory for the learning problem corresponding to $M$ needs either (1) $\Omega(k \cdot \ell)$ bits of classical memory, or (2) $\Omega(r)$ qubits of quantum memory, or (3) $2^{\Omega(r)}$ random samples, to achieve a success probability at least $2^{-O(r)}$. 

Our results refute the possibility that a small amount of quantum memory significantly reduces the size of classical memory needed for efficient learning on these problems. Our results also imply improved security of several existing cryptographical protocols in the bounded-storage model (protocols that are based on parity learning on $n$ bits), proving that security holds even in the presence of a quantum adversary with at most $c n^2$ bits of classical memory and $c n$ bits of quantum memory (for some constant $c&amp;gt;0$).
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">TCS+ Seminar Series: TCS+ talk: Wednesday, March 8 — Christos Tzamos, U Athens/UW Madison</title>
    <link href="https://tcsplus.wordpress.com/2023/03/01/tcs-talk-wednesday-march-8-christos-tzamos-u-athens-uw-madison/"/>
    <id>http://tcsplus.wordpress.com/?p=671</id>
    <updated>2023-03-01T21:43:08+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;The next TCS+ talk will take place this coming Wednesday, March 8th at 1:00 PM Eastern Time (10:00 AM Pacific Time, 19:00 Central European Time, 18:00 UTC). &lt;strong&gt;Christos Tzamos&lt;/strong&gt; from University of Athens/UW Madison will speak about &amp;#8220;&lt;em&gt;A Strongly Polynomial Algorithm for Approximate Forster Transforms and its Application to Halfspace Learning&lt;/em&gt;&amp;#8221; (abstract below).&lt;/p&gt;
&lt;p&gt;You can reserve a spot as an individual or a group to join us live by signing up on &lt;a href=&quot;https://sites.google.com/view/tcsplus/welcome/next-tcs-talk&quot;&gt;the online form&lt;/a&gt;. Registration is &lt;em&gt;not&lt;/em&gt; required to attend the interactive talk, and the link will be posted on the website the day prior to the talk; however, by registering in the form, you will receive a reminder, along with the link. (The recorded talk will also be posted &lt;a href=&quot;https://sites.google.com/view/tcsplus/welcome/past-talks&quot;&gt;on our website&lt;/a&gt; afterwards) As usual, for more information about the TCS+ online seminar series and the upcoming talks, or to &lt;a href=&quot;https://sites.google.com/view/tcsplus/welcome/suggest-a-talk&quot;&gt;suggest&lt;/a&gt; a possible topic or speaker, please see &lt;a href=&quot;https://sites.google.com/view/tcsplus/&quot;&gt;the website&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote&quot;&gt;&lt;p&gt;Abstract: The Forster transform is a method of regularizing a dataset by placing it in radial isotropic position while maintaining some of its essential properties. Forster transforms have played a key role in a diverse range of settings spanning computer science and functional analysis. Prior work had given weakly polynomial time algorithms for computing Forster transforms, when they exist. Our main result is the first strongly polynomial time algorithm to compute an approximate Forster transform of a given dataset or certify that no such transformation exists. By leveraging our strongly polynomial Forster algorithm, we obtain the first strongly polynomial time algorithm for distribution-free PAC learning of halfspaces. This learning result is surprising because proper PAC learning of halfspaces is equivalent to linear programming. Our learning approach extends to give a strongly polynomial halfspace learner in the presence of random classification noise and, more generally, Massart noise.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;#8220;&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By plustcs&lt;/p&gt;
  </content>
    <author>
      <name>TCS+ Seminar Series</name>
      <uri>https://tcsplus.wordpress.com</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">David Eppstein: Non-crossing Hamiltonian paths and cycles in output-polynomial time</title>
    <link href="https://11011110.github.io/blog/2023/03/01/non-crossing-hamiltonian.html"/>
    <id>https://11011110.github.io/blog/2023/03/01/non-crossing-hamiltonian</id>
    <updated>2023-03-01T17:51:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;My paper “Non-crossing Hamiltonian paths and cycles in output-polynomial time”, to appear at SoCG, is now online as a preprint at &lt;a href=&quot;https://arxiv.org/abs/2303.00147&quot;&gt;arXiv:2303.00147&lt;/a&gt;. This is the full version; the SoCG version will need to be cut down by omitting proofs to reach the 500-line proceedings limit. It’s about &lt;a href=&quot;https://en.wikipedia.org/wiki/Polygonalization&quot;&gt;polygonalization&lt;/a&gt;, the problem of finding all ways of connecting dots in the plane into a simple polygon (allowing connections that pass straight through a dot, but not allowing missing a dot altogether). The main results are that we can list all of these in time polynomial in the output size, and in polynomial time get an approximate count of them that is bounded above and below the true count by a polynomial of its value. Previously, the best we knew were that there were at most exponentially many polygonalizations and that we could list them in exponential time.&lt;/p&gt;

&lt;p&gt;I think of this as being in the vein of recent conferences like the &lt;a href=&quot;https://www.siam.org/conferences/cm/conference/sosa23&quot;&gt;Symposium on Simplicity in Algorithms&lt;/a&gt; or the new “simplicity track” of the &lt;a href=&quot;http://esa-symposium.org/&quot;&gt;European Symposium on Algorithms&lt;/a&gt;: simple algorithms whose analysis isn’t. In fact, the algorithm in my paper isn’t even new. It’s the same one that was already used to achieve exponential time, in a paper “Algorithmic enumeration of surrounding polygons” by Katsuhisa Yamanaka, David Avis, Takashi Horiyama, Yoshio Okamoto, Ryuhei Uehara, and Tanami Yamauchi, published in 2021 in &lt;em&gt;Discrete Applied Mathematics&lt;/em&gt; (&lt;a href=&quot;https://doi.org/10.1016/j.dam.2020.03.034&quot;&gt;doi:10.1016/j.dam.2020.03.03&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;If we want to list all structures, from an exponentally large family of structures, in time polynomial per structure, then I think there’s really only one idea and a lot of elaboration on that idea. The idea is: describe your structures as the vertices of a large state space, with some sort of local operation for moving from state to state; prove that this local operation suffices to connect all the states together; and then apply a graph exploration algorithm like depth-first search to find all of the states from some starting state. The trouble is, for polygonalizations, we don’t know a good local operation. The obvious candidates, local moves that replace two or three edges of a polygon by a different set of edges, &lt;a href=&quot;/blog/2020/01/29/unflippable-polygon.html&quot;&gt;were proven not to work&lt;/a&gt; in a 2002 paper by Carmen Fernando, Michael Houle, and Ferran Hurtado (&lt;a href=&quot;https://doi.org/10.1016%2FS0304-3975%2801%2900409-1&quot;&gt;doi:10.1016/S0304-3975(01)00409-1&lt;/a&gt;). Instead, Yamanaka et al. propose to list all of the members of a larger family of structures, and then filter out the ones that are really polygonalizations. These more general structures are the “surrounding polygons” of their paper’s title.&lt;/p&gt;

&lt;p&gt;A surrounding polygon is just a simple polygon that uses some of the given dots as vertices and contains the rest. The example below is taken from the last section of my paper. There I show that point sets like the one in the illustration, with one concave chain of dots inside a triangle, have \((n-1)2^{n-4}\) polygonalizations but a polynomially-larger number of surrounding polygons proportional to \(n(1+\varphi)^n\). Here \(\varphi\) is the golden ratio; this is &lt;a href=&quot;/blog/2020/01/12/counting-grid-polygonalizations.html&quot;&gt;not the first occurrence of the golden ratio in counting polygonalizations&lt;/a&gt;. A reviewer told me that these point sets are called “party-hat sets” or “ice-cream cone sets” but I’m not sure I believe it; I couldn’t find those names in a Google Scholar search.&lt;/p&gt;

&lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/blog/assets/2023/pseudotriangle.svg&quot; alt=&quot;A set of points in the form of a triangle with a concave chain of points replacing one of its edges, and a surrounding polygon of the points. The points that are vertices of the polygon are colored blue, and the other points surrounded by the polygon are colored red.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The simplest surrounding polygon of any input is just its &lt;a href=&quot;https://en.wikipedia.org/wiki/Convex_hull&quot;&gt;convex hull&lt;/a&gt;. You can get from any surrounding polygon that is not the convex hull to a simpler one by “&lt;a href=&quot;https://en.wikipedia.org/wiki/Two_ears_theorem&quot;&gt;ear-cutting&lt;/a&gt;”: find two consecutive edges of the polygon that form two sides of an empty triangle outside the polygon, and replace them by a single shortcut edge. The shortcutted vertex becomes surrounded, and the area of the polygon grows, so repeated ear-cutting can only stop at the convex hull, implying that all surrounding polygons are connected through the convex hull. If you choose carefully which ear to cut, you give all surrounding polygons the structure of a tree, and the algorithm of Yamanaka et al. amounts to depth-first search of this tree. You can then find the polygonalizations just by running this algorithm and outputting only the surrounding polygons that use all the dots, at some tree leaves.&lt;/p&gt;

&lt;p&gt;The idea of my new paper is to analyze these structures in the style of my book, &lt;a href=&quot;https://www.ics.uci.edu/~eppstein/forbidden/&quot;&gt;&lt;em&gt;Forbidden Configurations in Discrete Geometry&lt;/em&gt;&lt;/a&gt;, in terms of simple parameters of point sets that are monotonic (they don’t go down when you add more points) and that depend only on the order-type of the point set and not its exact coordinates. The question I set out to answer is: which point sets have only a very small number of polygonalizations, and which have many? I quickly identified two ways in which a point set could only have a small number:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Most of its points could belong to a single line. If a set of \(n\) points has \(n-k\) points on a line, and only a much smaller number \(k\) of points elsewhere, then most of the edges would have to connect paths of consecutive points along the line, and there aren’t very many ways of doing that. This number \(k\) is one of the parameters studied in my book. Working out the details of this argument showed more specifically that the number of polygonalizations is \(n^{O(k)}\): there are only \(O(k)\) points of any polygonalization where something interesting happens, and only \(O(n)\) choices for what happens there.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Most of its points could belong to the convex hull. If all points belong to the convex hull, then that is the only polygonalization. And if there are \(n-k\) points on the hull, and only a much smaller number \(k\) of points elsewhere, then the only points where something interesting happens are the \(O(k)\) points that are either not on the hull, or adjacent to a non-hull point. All the rest of their points have to be connected to their two hull neighbors. So again the number of polygonalizations is \(n^{O(k)}\). The parameter used here, the number of points interior to the hull, was not from my book, but maybe it should have been.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More strongly, upper bounds of the same form also apply to surrounding polygons. Allowing an interesting point to be skipped by the polygon doesn’t increase its number of choices much. Consecutive blocks of uninteresting points along a long line of points must either all be skipped or all be part of a surrounding polygon, again not increasing the number of choices by much. And a surrounding polygon cannot skip any point of the convex hull, because then it would not be surrounded. The part of the analysis that I found more difficult was proving that these are the only cases. If you have points that are mostly not on a line and mostly not on a hull, then there are exponentially many polygonalizations. And if you have one of the two situations with few polygonalizations described above, then the number of polygonalizations is accurately described by the upper bounds above. For details of these lower bounds, see the paper. The number of surrounding polygons can only be at least as large as the number of polygonalizations, because every polygonalization is a surrounding polygon.&lt;/p&gt;

&lt;p&gt;Once that analysis was done, the algorithms for listing polygonalizations and for approximately counting them came for free. The lower bound and the upper bound on the number of polygonalizations have the same form as each other, so they give an accurate approximation without any more effort. And the bounds on the number of polygonalizations and on the number of surrounding polygons have the same form as each other, so the analysis of the algorithm for surrounding polygons (that it takes input-polynomial time per polygon) also shows that it generates all polygonalizations in output-polynomial time.&lt;/p&gt;

&lt;p&gt;The “non-crossing Hamiltonian paths” of the new paper’s title are the same thing, but easier. The easier-to-generate structures are non-crossing paths, which you can form into a forest (rooted at the one-vertex paths) by a parent operation that removes the final edge of a path. And points in convex position still have many paths; the only point sets that have a small number of non-crossing Hamiltonian paths (or non-crossing paths) are the ones with most of the points on a single line.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109951209389425592&quot;&gt;Discuss on Mastodon&lt;/a&gt;)&lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By David Eppstein&lt;/p&gt;
  </content>
    <author>
      <name>David Eppstein</name>
      <uri>https://11011110.github.io/blog/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Richard Lipton: SODA 2023</title>
    <link href="https://rjlipton.wpcomstaging.com/2023/03/01/soda-2023/"/>
    <id>https://rjlipton.wpcomstaging.com/?p=21186</id>
    <updated>2023-03-01T06:02:29+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;
&lt;font color=&quot;#0044cc&quot;&gt;&lt;br /&gt;
&lt;em&gt;Traces of strings, plus ways of tracing accepted papers&lt;/em&gt;&lt;br /&gt;
&lt;font color=&quot;#000000&quot;&gt;&lt;/p&gt;
&lt;p&gt;
Anindya De was at Northwestern University and is now at the University of Pennsylvania&amp;#8212;see &lt;a href=&quot;https://www.seas.upenn.edu/~anindyad/&quot;&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;
&lt;a href=&quot;https://rjlipton.wpcomstaging.com/2023/03/01/soda-2023/ad-2/&quot; rel=&quot;attachment wp-att-21192&quot;&gt;&lt;img data-attachment-id=&quot;21192&quot; data-permalink=&quot;https://rjlipton.wpcomstaging.com/2023/03/01/soda-2023/ad-2/&quot; data-orig-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?fit=400%2C400&amp;amp;ssl=1&quot; data-orig-size=&quot;400,400&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;4&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;Canon EOS 5D Mark III&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;1551052800&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;200&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;200&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0.00625&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;1&amp;quot;}&quot; data-image-title=&quot;ad&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?fit=300%2C300&amp;amp;ssl=1&quot; data-large-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?fit=400%2C400&amp;amp;ssl=1&quot; decoding=&quot;async&quot; loading=&quot;lazy&quot; src=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?resize=250%2C250&amp;#038;ssl=1&quot; alt=&quot;&quot; width=&quot;250&quot; height=&quot;250&quot; class=&quot;aligncenter wp-image-21192&quot; srcset=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?w=400&amp;amp;ssl=1 400w, https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?resize=300%2C300&amp;amp;ssl=1 300w, https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?resize=150%2C150&amp;amp;ssl=1 150w, https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?resize=200%2C200&amp;amp;ssl=1 200w&quot; sizes=&quot;(max-width: 250px) 100vw, 250px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
He was advised by two of the top advisors ever there were: Luca Trevisan and Umesh Vazirani. &lt;/p&gt;
&lt;p&gt;
&lt;p&gt;&lt;H2&gt; Traces &lt;/H2&gt;&lt;/p&gt;
&lt;p&gt;&lt;p&gt;
I recently ran across a great paper by Anindya titled &lt;a href=&quot;https://arxiv.org/abs/2211.03292&quot;&gt;Approximate Trace Reconstruction from a Single Trace&lt;/a&gt;. It is co-authored with Xi Chen (Columbia University), Chin Ho Lee (Harvard University), and Rocco Servedio and Sandip Sinha (Columbia University). Notice that we did not put an &lt;a href=&quot;https://jewishstandard.timesofisrael.com/horse-mule-horse-mule/&quot;&gt;Oxford comma&lt;/a&gt; between Servedio and Sinha as they are both from Columbia. The paper appeared at &lt;a href=&quot;https://www.siam.org/conferences/cm/program/accepted-papers/soda23-accepted-papers&quot;&gt;SODA 2023&lt;/a&gt; this January. &lt;/p&gt;
&lt;p&gt;
Here are pointers to the almost 200 papers that were in the conference. I put this together before discovering the site &lt;a href=&quot;https://www.conference-publishing.com/&quot;&gt;conference-publishing.com&lt;/a&gt;, which as mentioned in my STOC 2023 &lt;a href=&quot;https://rjlipton.wpcomstaging.com/2023/02/25/stoc-2023/&quot;&gt;post&lt;/a&gt; generates paper lists with links for a host of conferences. So I did all the following links myself. Do scroll past the list to the bottom to read a little more about traces which Ken and I put together.&lt;/p&gt;
&lt;ol&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/pdf/2204.09129.pdf&quot;&gt;Small Shadows of Lattice Polytopes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.05186&quot;&gt;Fair allocation of a multiset of indivisible items&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.02277&quot;&gt;Hierarchies of Minion Tests for PCSPs through Tensors&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2210.08293&quot;&gt;Approximate Graph Colouring and Crystals&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.04455&quot;&gt;The Price of Stability for First Price Auction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2206.04549&quot;&gt;Spencer&amp;#8217;s theorem in nearly input-sparsity time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.11195&quot;&gt;Spatial Mixing and the random-cluster dynamics on lattices&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch157&quot;&gt;Nonlinear codes exceeding the Gilbert-Varshamov and Tsfasman-Vladut-Zink bounds&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.09391&quot;&gt;A Near-Linear Time Sampler for the Ising Model with External Field&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2209.02655&quot;&gt;Concentration of polynomial random matrices via Efron-Stein inequalities&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.15945&quot;&gt;Quantum Speed-ups for String Synchronizing Sets, Longest Common Substring, and kmismatch Matching&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2208.11275&quot;&gt;Halving by a Thousand Cuts or Punctures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/pdf/10.1137/1.9781611977554.ch50&quot;&gt;On the number incidences when avoiding an induced biclique in geometric settings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2206.00579&quot;&gt;Subexponential mixing for partition chains on grid-like graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2103.02972&quot;&gt;Weisfeilera Leman and Graph Spectra&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2203.09334&quot;&gt;Stronger 3SUM-Indexing Lower Bounds&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.10556&quot;&gt;Tight Bounds for Monotone Minimal Perfect Hashing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2208.02732&quot;&gt;Almost Consistent Systems of Linear Equations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.05898&quot;&gt;Testing and Learning Quantum Juntas Nearly Optimally&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch155&quot;&gt;Testing Convex Truncation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch55&quot;&gt;Player-optimal Stable Regret for Bandit Learning in Matching Markets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2103.03769&quot;&gt;Competitive Information Design for Pandoras Box&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2106.12725&quot;&gt;Breaking the O(n)-Barrier in the Construction of Compressed Suffix Arrays and Suffix Trees&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.14108&quot;&gt;Short Synchronizing Words for Random Automata&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.00450&quot;&gt;Packing cycles in planar and bounded-genus graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://web.eecs.umich.edu/~pettie/papers/LLL.pdf&quot;&gt;Improved Distributed Algorithms for the Lovasz Local Lemma and Edge Coloring&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2112.07050&quot;&gt;Optimal Fully Dynamic &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{k}&quot; class=&quot;latex&quot; /&gt;-Center Clustering for Adaptive and Oblivious Adversaries&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.13335&quot;&gt;A logic-based algorithmic meta-theorem for mim-width&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.12800&quot;&gt;Tiny Pointers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07158&quot;&gt;Streaming complexity of CSPs with randomly ordered constraints&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.04458&quot;&gt;Computing Square Colorings on Bounded-Treewidth and Planar Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2203.00751&quot;&gt;Near-Linear Time Approximations for Cut Problems via Fair Cuts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://deepai.org/publication/stronger-privacy-amplification-by-shuffling-for-renyi-and-approximate-differential-privacy&quot;&gt;Stronger Privacy Amplification by Shuffling for R&amp;eacute;nyi and Approximate Differential Privacy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2208.13696&quot;&gt;Minimizing Completion Times for Stochastic Jobs via Batched Free Times&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2106.02149&quot;&gt;Optimal Pricing Schemes for an Impatient Buyer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07974&quot;&gt;Online Prediction in Sub-linear Space&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.03268&quot;&gt;Fast Discrepancy Minimization with Hereditary Guarantees&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07363&quot;&gt;Exact Flow Sparsification Requires Unbounded Size&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07809&quot;&gt;Curve Simplification and Clustering under Frechet Distance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.08783&quot;&gt;Almost Tight Bounds for Online Facility Location in the Random-Order Model&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2104.00406&quot;&gt;The complete classification for quantified equality constraints&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.02170&quot;&gt;Small subgraphs with large average degree&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2208.07544&quot;&gt;Mean estimation when you have the source code; or, quantum Monte Carlo methods&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2212.03016&quot;&gt;Online Min-Max Paging&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2209.08904&quot;&gt;Gap-ETH-Tight Approximation Schemes for Red-Green-Blue Separation and BicoloredEuclidean Travelling Salesman Tours&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.02951&quot;&gt;Map matching queries on realistic input graphs under the Frachet distance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2208.07410&quot;&gt;Private Query Release via the Johnson Lindenstrauss Transform&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2206.07571&quot;&gt;Efficient decoding up to a constant fraction of the code length for asymptotically goodquantum codes&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.01248&quot;&gt;Passing the Limits of Pure Local Search for weighted k-Set Packing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.11892&quot;&gt;Improved Bounds for Sampling Solutions of Random CNF Formulas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.03158&quot;&gt;Pricing Query Complexity of Revenue Maximization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07422&quot;&gt;Flow-augmentation III: complexity dichotomy for Boolean CSPs parameterized by thenumber of unsatisfied constraints&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07425&quot;&gt;Parameter tractability of Directed Multicut with three terminal pairs parameterizedby the size of the cutset: twin-width meets flow-augmentation&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2012.06713&quot;&gt;Approximate Trace Reconstruction from a Single Trace&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07519&quot;&gt;Dynamic Algorithms for Packing-Covering LPs via Multiplicative Weight Updates&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2204.03469&quot;&gt;Sharp threshold sequence and universality for Ising perceptron models&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2204.02519&quot;&gt;Maintaining Expander Decompositions via Sparse Cuts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.09341&quot;&gt;Near Optimal Analysis of the Cube versus Cube Test&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.09341&quot;&gt;Approximating Knapsack and Partition via Dense Subset Sums&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2210.13755&quot;&gt;Online and Bandit Algorithms for Norms with Gradient-Stable Approximations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2204.04868&quot;&gt;On complex roots of the independence polynomial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://deepai.org/publication/simplex-range-searching-revisited-how-to-shave-logs-in-multi-level-data-structures&quot;&gt;Simplex Range Searching Revisited: How to Shave Logs in Multi-Level Data Structures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.04112&quot;&gt;Improved Pattern-Avoidance Bounds for Greedy BSTs via Matrix Decomposition&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.06527&quot;&gt;Moser-Tardos Algorithm: Beyond Shearer&amp;#8217;s Bound&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2212.14847&quot;&gt;Deterministic counting Lovasz local lemma beyond linear programming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2205.05564&quot;&gt;Conflict-free hypergraph matchings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2208.12721&quot;&gt;A Subquadratic &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bn%5E%5Cepsilon%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{n^&amp;#92;epsilon}&quot; class=&quot;latex&quot; /&gt;-approximation for the Continuous Frachet Distance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2204.08044&quot;&gt;Interdependent Public Projects&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.04994&quot;&gt;A Nearly Time-Optimal Distributed Approximation of Minimum Cost &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{k}&quot; class=&quot;latex&quot; /&gt;-Edge-Connected Spanning Subgraph&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07426&quot;&gt;A tight quasi-polynomial bound for Global Label Min-Cut&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2205.07709&quot;&gt;Polynomial formulations as a barrier for reduction-based hardness proofs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch173&quot;&gt;Faster Algorithm for Turn-based Stochastic Games with Bounded Treewidth&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2203.17144&quot;&gt;Instability of backoff protocols with arbitrary arrival rates&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch158&quot;&gt;On the orbit closure intersection problems for matrix tuples under conjugation and leftright actions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.04377&quot;&gt;Constant Approximating Parameterized k-SetCover is W[2]-hard&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.08268?context=stat.ML&quot;&gt;Online Lewis Weight Sampling&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.11328&quot;&gt;Toeplitz Low-Rank Approximation with Sublinear Query Complexity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.06874&quot;&gt;Kernelization for Graph Packing Problems via Rainbow Matching&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.01143&quot;&gt;Improved Integrality Gap in Max-Min Allocation: or Topology at the North Pole&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.06292&quot;&gt;Generalized Unrelated Machine Scheduling Problem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.04278&quot;&gt;Tight Complexity Bounds for Counting Generalized Dominating Sets in Bounded-Treewidth Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2301.07537&quot;&gt;An Improved Approximation for Maximum Weighted k-Set Packing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2212.09348&quot;&gt;Excluding Single-Crossing Matching Minors in Bipartite Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2206.15335&quot;&gt;Byzantine Agreement with Optimal Resilience via Statistical Fraud Detection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.05345&quot;&gt;Finding Triangles and Other Small Subgraphs in Geometric Intersection Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch188&quot;&gt;Simple, deterministic, fast (but weak) approximations to edit distance and Dyck edit distance&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch132&quot;&gt;From algorithms to connectivity and back: finding a giant component in random k-SAT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2206.00594&quot;&gt;Sparse graphs with bounded induced cycle packing number have logarithmic treewidth&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.08311&quot;&gt;Shrunk subspaces via operator Sinkhorn iteration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.10398&quot;&gt;Improved Approximation Algorithms for Unrelated Machines&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.01723&quot;&gt;Model-Checking for First-Order Logic with Disjoint Paths Predicates in Proper MinorClosed Graph Classes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.10556&quot;&gt;A Distanced Matching Game, Decremental APSP in Expanders, and Faster DeterministicAlgorithms for Graph Cut Problems&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2005.06156&quot;&gt;Super-resolution and Robust Sparse Continuous Fourier Transform in Any Constant Dimension: Nearly Linear Time and Sample Complexity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://chaoxuprime.com/files/papers/sub4part.pdf&quot;&gt;A Polynomial Time Algorithm for Finding a Minimum 4-Partition of a Submodular Function&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.05423&quot;&gt;Positivity of the symmetric group characters is PH-hard&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/1905.08841&quot;&gt;Parallel Exact Shortest Paths in Almost Linear Work and Square Root Depth&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/10.1137/1.9781611977554.ch40&quot;&gt;On the Integrality Gap of MFN Relaxation for the Capacitated Facility Location Problem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/pdf/10.1137/1.9781611977554.ch105&quot;&gt;Weak Bisimulation Finiteness of Pushdown Systems With Deterministic Transitions-ExpTime-Complete&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2206.13057&quot;&gt;Beating Greedy Matching in Sublinear Time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2203.11863&quot;&gt;Integrality Gaps for Random Integer Programs via Discrepancy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2209.10265&quot;&gt;Improved Approximation for Two-Edge-Connectivity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch117&quot;&gt;Zigzagging through acyclic orientations of chordal graphs and hypergraphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.04797&quot;&gt;Shortest Cycles With Monotone Submodular Costs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2107.07347&quot;&gt;Traversing the FFT Computation Tree for Dimension-Independent Sparse FourierTransforms&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07449&quot;&gt;Fixed-Parameter Tractability of Maximum Colored Path and Beyond&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2007.12257&quot;&gt;A half-integral Erd&amp;#337;s-P&amp;oacute;sa theorem for directed odd cycles&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2210.13395&quot;&gt;Improved Bi-point Rounding Algorithms and a Golden Barrier for &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{k}&quot; class=&quot;latex&quot; /&gt;-Median&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.05659&quot;&gt;Approximate Distance Oracles for Planar Graphs with Subpolynomial Error Dependency&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.02717&quot;&gt;A Framework for Approximation Schemes on Disk Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.13281&quot;&gt;Cubic Goldreich-Levin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.04507&quot;&gt;Closing the Gap Between Directed Hopsets and Shortcut Sets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.09215&quot;&gt;&amp;#8220;Who is Next in Line?&amp;#8221; On the Significance of Knowing the Arrival Order in Bayesian Online Settings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.05217&quot;&gt;Smaller Low-Depth Circuits for Kronecker Powers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.14759&quot;&gt;Fast algorithms for solving the Hamilton Cycle problem with high probability&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.05053&quot;&gt;On Minimizing Tardy Processing Time, Max-Min Skewed Convolution, and TrianglarStructured ILPs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2302.02290&quot;&gt;Maximal k-Edge-Connected Subgraphs in Weighted Graphs via Local Random Contraction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.10850&quot;&gt;A simple and sharper proof of the hypergraph Moore bound&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.08643&quot;&gt;A Sublinear-Time Quantum Algorithm for Approximating Partition Functions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.13484&quot;&gt;On Problems Related to Unbounded SubsetSum: A Unified Combinatorial Approach&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.03893&quot;&gt;Query Complexity of the Metric Steiner Tree Problem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2210.12601&quot;&gt;Sublinear-Time Algorithms for Max Cut, Max E2Lin&lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%28q%29%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{(q)}&quot; class=&quot;latex&quot; /&gt;, and Unique Label Cover on Expanders&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.06790&quot;&gt;Near-Linear Sample Complexity for &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7BL_p%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{L_p}&quot; class=&quot;latex&quot; /&gt; Polynomial Regression&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2209.07520&quot;&gt;On (Random-order) Online Contention Resolution Schemes for the Matching Polytope of (Bipartite) Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.09964&quot;&gt;Optimal Algorithms for Linear Algebra in the Current Matrix Multiplication Time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07946&quot;&gt;Algebraic Algorithms for Fractional Linear Matroid Parity via Non-commutative Rank&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.05006&quot;&gt;Almost Tight Error Bounds on Differentially Private Continual Counting&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2208.09159&quot;&gt;Secretary Problems: The Power of a Single Sample&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2112.06380&quot;&gt;Robust Voting Rules from Algorithmic Robust Statistics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch9&quot;&gt;Faster and Unified Algorithms for Diameter Reducing Shortcuts and Minimum Chain Cover&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch85&quot;&gt;Improved girth approximation in weighted undirected graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2112.03791&quot;&gt;Online Sorting and Translational Packing of Convex Polygons&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2302.05951&quot;&gt;Fully Dynamic Exact Edge Connectivity in Sublinear Time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.11072&quot;&gt;Algorithmizing the Multiplicity Schwartz-Zippel Lemma&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07949&quot;&gt;A Nearly Tight Analysis of Greedy k-means++&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07007?context=cs&quot;&gt;A polynomial-time algorithm for 1/2-well-supported Nash equilibria in bimatrix games&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.10969&quot;&gt;Bidder subset selection problem in auction design&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2204.09035&quot;&gt;Massively Parallel Computation on Embedded Planar Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2301.09810&quot;&gt;Balanced Allocations: The Power of Memory with Heterogeneous Bins&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2003.00545&quot;&gt;Simple Mechanisms for Agents with Non-linear Utilities&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch59&quot;&gt;The Power of Clairvoyance for Multi-Level Aggregation and Set Cover with Delay&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.05769&quot;&gt;Steiner Connectivity Augmentation and Splitting-off in Poly-logarithmic Maximum Flows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.05509&quot;&gt;Discrepancy minimization via regularization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch162&quot;&gt;Equivalence Test for Read-Once Arithmetic Formulas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2210.07534&quot;&gt;Time-Space Tradeoffs for Element Distinctness and Set Intersection via Pseudorandomness&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2209.11651&quot;&gt;Local Distributed Rounding: Generalized to MIS, Matching, Set Cover, and Beyond&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch143&quot;&gt;Parameterized Approximation Scheme for Biclique-free Max k-Weight SAT and Max Coverage&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2209.11669&quot;&gt;Improved Distributed Network Decomposition, Hitting Sets, and Spanners, via Derandomization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.05150&quot;&gt;Breaching the 2 LMP Approximation Barrier for Facility Location with Applications to kMedian&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.12441&quot;&gt;Query Complexity of Inversion Minimization on Trees&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch4&quot;&gt;Faster Deterministic Worst-Case Fully Dynamic All-Pairs Shortest Paths via Decremental Hop-Restricted Shortest Paths&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch189&quot;&gt;Optimal Square Detection Over General Alphabets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2203.16476&quot;&gt;Differentially Private All-Pairs Shortest Path Distances: Improved Algorithms and Lower Bounds&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch96&quot;&gt;Faster Computation of 3-Edge-Connected Components in Digraphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2201.10758&quot;&gt;Sampling Equilibria: Fast No-Regret Learning in Structured Games&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.07327&quot;&gt;Higher degree sum-of-squares relaxations robust against oblivious outliers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.07606&quot;&gt;Fast Distributed Brooks Theorem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch119&quot;&gt;Graph Classes With Few Minimal Separators. I. Finite Forbidden Subgraphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.03530&quot;&gt;Optimal Deterministic Massively Parallel Connectivity on Forests&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.03151&quot;&gt;Foundations of Transaction Fee Mechanism Design&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch119&quot;&gt;Graph Classes With Few Minimal Separators. II. A Dichotomy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.01945&quot;&gt;Distributed Maximal Matching and Maximal Independent Set on Hypergraphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.08800&quot;&gt;Quantum tomography using state-preparation unitaries&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2204.01911&quot;&gt;Almost-Linear Planted Cliques Elude the Metropolis Process&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.05450&quot;&gt;Timeliness Through Telephones&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://www.ccs.neu.edu/home/viola/papers/resilient.pdf&quot;&gt;Efficient resilient functions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07438&quot;&gt;Dynamic Matching with Better-than-2 Approximation in Polylogarithmic Update Time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.03877&quot;&gt;The Need for Seed (in the abstract Tile Assembly Model)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.08347&quot;&gt;Private Convex Optimization in General Norms&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07607&quot;&gt;Dynamic Algorithms for Maximum Matching Size&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.01254&quot;&gt;Unique Games hardness of Quantum Max-Cut, and a conjectured vector-valued Borell&amp;#8217;s inequality&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch23&quot;&gt;A Nearly-tight Analysis of Multipass Pairing Heaps&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2108.04458&quot;&gt;A Tight Analysis of Slim Heaps and Smooth Heaps&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2106.04863&quot;&gt;Lossless Online Rounding for Online Bipartite Matching (Despite its Impossibility)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07983?context=cs&quot;&gt;Approximation Algorithms for Steiner Tree Augmentation Problems&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2204.08404&quot;&gt;Low Degree Testing over the Reals&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.05170&quot;&gt;Streaming algorithms for the missing item finding problem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://cse.hkust.edu.hk/faculty/arya/pub/soda23.pdf&quot;&gt;Economical Convex Coverings and Applications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://eccc.weizmann.ac.il/report/2022/146/&quot;&gt;Interactive Coding with Small Memory&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2301.05682&quot;&gt;Non-Stochastic CDF Estimation Using Threshold Queries&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch30&quot;&gt;Elliptic Curve Fast Fourier Transform Part I : Low-degree extension in time O(n log n) over all finite fields&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch33&quot;&gt;Single-Pass Streaming Algorithms for Correlation Clustering&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.01468&quot;&gt;A New Approach to Estimating Effective Resistances and Counting Spanning Trees in Expander Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2210.06375&quot;&gt;Superpolynomial Lower Bounds for Decision Tree Learning and Testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.07132&quot;&gt;The &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%5Cell_p%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{&amp;#92;ell_p}&quot; class=&quot;latex&quot; /&gt;-Subspace Sketch Problem in Small Dimensions with Applications to Support Vector Machines&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2210.17515&quot;&gt;Beating &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%281-1%2Fe%29%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{(1-1/e)}&quot; class=&quot;latex&quot; /&gt;-Approximation for Weighted Stochastic Matching&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch35&quot;&gt;Towards Multi-Pass Streaming Lower Bounds for Optimal Approximation of Max-Cut&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.03341&quot;&gt;Parameterized Algorithm for the Planar Disjoint Paths Problem: Exponential in &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bk%5E2%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{k^2}&quot; class=&quot;latex&quot; /&gt;, and Linear in &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{n}&quot; class=&quot;latex&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.02581&quot;&gt;Learning Hierarchical Cluster Structure of Graphs in Sublinear Time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.09106&quot;&gt;The Exact Bipartite Matching Polytope Has Exponential Extension Complexity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.03161&quot;&gt;4D Range Reporting in the Pointer Machine Model in Almost-Optimal Time&lt;/a&gt;&lt;/p&gt;
&lt;/ol&gt;
&lt;p&gt;
&lt;p&gt;&lt;H2&gt; The Trace Result &lt;/H2&gt;&lt;/p&gt;
&lt;p&gt;&lt;p&gt;
The trace problem begins by sending a binary string &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; of length &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{n}&quot; class=&quot;latex&quot; /&gt; through a &lt;b&gt;deletion channel&lt;/b&gt; with parameter &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%5Cdelta+%5Cin+%5B0%2C1%5D%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{&amp;#92;delta &amp;#92;in [0,1]}&quot; class=&quot;latex&quot; /&gt;. Each bit &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx_i%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x_i}&quot; class=&quot;latex&quot; /&gt; entering the channel survives with probability &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B1+-+%5Cdelta%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{1 - &amp;#92;delta}&quot; class=&quot;latex&quot; /&gt; to be part of the output string &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt;. That is, &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx_i%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x_i}&quot; class=&quot;latex&quot; /&gt; is deleted with probability &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%5Cdelta%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{&amp;#92;delta}&quot; class=&quot;latex&quot; /&gt;. The deletions are independent. For an unknown string &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt;, the problem is:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;b&gt; &lt;/b&gt; &lt;em&gt; Given &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{k}&quot; class=&quot;latex&quot; /&gt; strings &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By_1%2C%5Cdots%2Cy_k%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y_1,&amp;#92;dots,y_k}&quot; class=&quot;latex&quot; /&gt; produced by &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{k}&quot; class=&quot;latex&quot; /&gt; runs of the channel on &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt;, reconstruct &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; if possible. Else, calculate a binary string &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%27%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x&amp;#039;}&quot; class=&quot;latex&quot; /&gt; of length &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{n}&quot; class=&quot;latex&quot; /&gt; that minimizes a distance metric &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bd%28x%2Cx%27%29%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{d(x,x&amp;#039;)}&quot; class=&quot;latex&quot; /&gt;. The metric of choice is to maximize the length &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%5Cell%28x%2Cx%27%29%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{&amp;#92;ell(x,x&amp;#039;)}&quot; class=&quot;latex&quot; /&gt; of the longest common subsequence (not necessarily contiguous) of &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; and &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%27%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x&amp;#039;}&quot; class=&quot;latex&quot; /&gt;, which corresponds to minimizing their edit distance. &lt;/em&gt;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;p&gt;
As indicated by its title &amp;#8220;Approximate Trace Reconstruction from a Single Trace,&amp;#8221; the &lt;a href=&quot;https://arxiv.org/abs/2211.03292&quot;&gt;paper&lt;/a&gt; tackles the extreme case &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bk%3D1%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{k=1}&quot; class=&quot;latex&quot; /&gt;. Of course one cannot reconstruct &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; (unless no deletions occur so &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By+%3D+x%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y = x}&quot; class=&quot;latex&quot; /&gt;) so the game is to find &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%27%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x&amp;#039;}&quot; class=&quot;latex&quot; /&gt; that are most likely to have produced the lone observed &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt;. The scoring function takes the expectation of &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%5Cell%28x%27%2Cx%29%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{&amp;#92;ell(x&amp;#039;,x)}&quot; class=&quot;latex&quot; /&gt; over both the generation of &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; from the true &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; and the run of the algorithm guessing &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%27%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x&amp;#039;}&quot; class=&quot;latex&quot; /&gt; from &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt;. There are two main questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
How well does the algorithm perform&amp;#8212;relative to theoretically optimal choices given &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt;&amp;#8212;when &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; itself is generated uniformly at random? &lt;/p&gt;
&lt;li&gt;
How well does the algorithm perform when &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; is generated adversarially? Note that &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; is still probabilistic, and the performance of both the theoretical optimal algorithm and their algorithm are evaluated based on the distribution of &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; for the fixed (unseen) &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt;.
&lt;/ul&gt;
&lt;p&gt;
These questions are posed for small, medium, and large values of &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%5Cdelta%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{&amp;#92;delta}&quot; class=&quot;latex&quot; /&gt;. When the deletion probability is close to &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{1}&quot; class=&quot;latex&quot; /&gt;, the strings &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; are most often tiny. One would think they offer no help in coming close to &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt;. However, they do help efficient algorithms come close to the optimal policy for a worst-case chosen &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt;. The paradoxical results of their paper, in their own words (but reversing their order), are: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
In the average-case setting, having access to a single trace is provably not very useful: no algorithm, computationally efficient or otherwise, can achieve significantly higher accuracy given one trace that is &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bo%28n%29%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{o(n)}&quot; class=&quot;latex&quot; /&gt; bits long than it could with no traces. &lt;/p&gt;
&lt;li&gt;
Having access to a single trace is already quite useful for worst-case trace reconstruction: an efficient algorithm can perform much more accurate reconstruction, given one trace that is even only a few bits long, than it could given no traces at all.
&lt;/ol&gt;
&lt;p&gt;
The deep point is that when &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; as well as &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; is random, seeing &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; gives little advantage to both the optimal strategy (which does not know &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt;) and their algorithm. Whereas, when &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; is fixed, the knowledge of &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; is more valuable to the optimal strategy and separates it from the case of not seeing &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; at all. However, the profit given by even a short &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; is one that is apprehendable by a complexity-limited deterministic algorithm that sees only &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt;. That&amp;#8217;s our attempt at an intuitive takeaway; as always we invite readers to consult the paper in detail.&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;&lt;H2&gt; Open Problems &lt;/H2&gt;&lt;/p&gt;
&lt;p&gt;&lt;p&gt;
Comparing my list of pointer to the papers from SODA, which was a bit of trouble to create by hand, to the STOC&amp;#8217;23 &lt;a href=&quot;https://www.conference-publishing.com/list.php?Event=STOC23&quot;&gt;output&lt;/a&gt; from the conference-publishing site, leads to a curious question:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;b&gt; &lt;/b&gt; &lt;em&gt; Do we scan lists of papers more by looking for subject words in their titles or looking for authors we know? &lt;/em&gt;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;p&gt;
Well, I have not found SODA&amp;#8217;23 on that website, where authors too would be given; for me, copying the authors would more than double the manual work.&lt;/p&gt;
&lt;p&gt;
&lt;p class=&quot;authors&quot;&gt;By RJLipton+KWRegan&lt;/p&gt;
  </content>
    <author>
      <name>Richard Lipton</name>
      <uri>https://rjlipton.wpcomstaging.com</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">David Eppstein: Linkage for 200,000 edits to Wikipedia</title>
    <link href="https://11011110.github.io/blog/2023/02/28/linkage-200k-edits.html"/>
    <id>https://11011110.github.io/blog/2023/02/28/linkage-200k-edits</id>
    <updated>2023-02-28T17:40:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.whitehouse.gov/briefing-room/presidential-actions/2023/02/16/executive-order-on-further-advancing-racial-equity-and-support-for-underserved-communities-through-the-federal-government/&quot;&gt;Executive Order on Further Advancing Racial Equity and Support for Underserved Communities Through The Federal Government&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@sorelle@mastodon.social/109875326202971711&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;),&lt;/span&gt; including guidelines for equitable use of AI and automated systems through a new &lt;a href=&quot;https://www.whitehouse.gov/ostp/ai-bill-of-rights/&quot;&gt;Blueprint for an AI Bill of Rights&lt;/a&gt; (that is, rights for people to be protected against unfair uses of AI, not rights for artificial intelligences).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://press.princeton.edu/ideas/why-prove-it&quot;&gt;Why prove it?&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@highergeometer/109854745668334423&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;,&lt;/span&gt; &lt;a href=&quot;https://www.math.columbia.edu/~woit/wordpress/?p=13288&quot;&gt;via&lt;/a&gt;). John Stillwell on human-written vs machine-checkable proofs, with reference to the abc conjecture.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.ics.uci.edu/~eppstein/pix/ltcc/index.html&quot;&gt;Low tide at Crystal Cove State Park&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109894403539276698&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt;&lt;/p&gt;

    &lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;https://www.ics.uci.edu/~eppstein/pix/ltcc/Seagrass2-m.jpg&quot; alt=&quot;Low tide at Crystal Cove State Park, California&quot; style=&quot;border-style:solid;border-color:black&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Another newly promoted Wikipedia Good Article: &lt;a href=&quot;https://en.wikipedia.org/wiki/Polygonalization&quot;&gt;Polygonalization&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109906715996859674&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;),&lt;/span&gt; about finding a polygon that uses all of a given set of points as vertices. The usual definitions allow it to go straight through some of the vertices, rather than always turning, though, and the illustration below shows why: for some point sets, including 3x3 grids, a polygon that turns everywhere might not exist.&lt;/p&gt;

    &lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/blog/assets/2023/3x3_grid_polygonalizations.svg&quot; alt=&quot;Eight ways of polygonalizing a 3x3 grid&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://terrytao.wordpress.com/2023/02/18/would-it-be-possible-to-create-a-tool-to-automatically-diagram-papers/&quot;&gt;Would it be possible to create a tool to automatically diagram papers?&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@tao/109887019658810502&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;),&lt;/span&gt; by Terry Tao, inspired by the diagrams the proof-assistant people have been using to guide their work.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;People who indulge in the fringe belief in the reality of certain folklore beasts are sad that &lt;a href=&quot;https://boingboing.net/2023/02/22/the-cryptid-complications-of-wikipedias-editing-policies.html&quot;&gt;Wikipedia now focuses on the folklore of these beasts without going into much detail about the fringe belief in their reality&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109918360457067075&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; (Based on a both-sides-ist &lt;em&gt;Slate&lt;/em&gt; article that I’m not going to link.)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=MDhT6-6Yr_I&quot;&gt;Origami actuators&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@logicalelegance@mastodon.online/109920746034435458&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;),&lt;/span&gt; for simple repetitive motions of origami models, by attaching flat-printed electromagnets to them.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Gasarch writes: &lt;a href=&quot;https://blog.computationalcomplexity.org/2023/02/it-is-more-important-than-ever-to-teach.html&quot;&gt;It is more important than ever to teach your students probability (even non-stem students)&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109935523877122235&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; Why: because your university may be making deals promoting online gambling to the same students, as the linked copy of a New York Times article details.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://xtools.wmflabs.org/ec/en.wikipedia.org/David_Eppstein&quot;&gt;Sometime in the last month (not exactly sure when) I passed the milestone of 200,000 edits (all non-automated) to Wikipedia&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109941265893054592&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; That’s…a lot of edits. Although, as of earlier in the month when it was below 200,000, it only places me at 260 on the &lt;a href=&quot;https://en.wikipedia.org/w/index.php?title=Wikipedia:List_of_Wikipedians_by_number_of_edits&amp;amp;oldid=1138516223&quot;&gt;list of all-time prolific editors&lt;/a&gt;. And a couple of the top ten are now blocked, so it’s not exactly always a place of pride.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.thisiscolossal.com/2023/02/zai-divecha-phase-shift/&quot;&gt;Mesmerizing paper sculptures and animations by Zai Divecha convey the subtlety of change&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@colossal@mastodon.art/109937307601608046&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;,&lt;/span&gt; &lt;a href=&quot;https://zaidivecha.com/&quot;&gt;see also&lt;/a&gt;). Basically a 3d papercraft zoetrope.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;authors&quot;&gt;By David Eppstein&lt;/p&gt;
  </content>
    <author>
      <name>David Eppstein</name>
      <uri>https://11011110.github.io/blog/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Simons Institute Blog: Theory at the Institute and Beyond, February 2023</title>
    <link href="https://blog.simons.berkeley.edu/2023/02/theory-at-the-institute-and-beyond-february-2023/"/>
    <id>https://blog.simons.berkeley.edu/?p=874</id>
    <updated>2023-02-28T17:00:08+00:00</updated>
    <content type="html" xml:lang="en">
    by Venkatesan Guruswami (Simons Institute) This semester at the Simons Institute, the Meta-Complexity program is buzzing along with intense activity in the form of multiple reading groups and a weekly seminar, on top of the usual three workshops and boot &amp;#8230; &lt;a href=&quot;https://blog.simons.berkeley.edu/2023/02/theory-at-the-institute-and-beyond-february-2023/&quot;&gt;Continue reading &lt;span class=&quot;meta-nav&quot;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;p class=&quot;authors&quot;&gt;By Simons Institute Editor&lt;/p&gt;
  </content>
    <author>
      <name>Simons Institute Blog</name>
      <uri>https://blog.simons.berkeley.edu</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Gil Kalai: Alef’s Corner: Democracy (Israel, 2023)</title>
    <link href="https://gilkalai.wordpress.com/2023/02/28/alefs-corner-democracy-israel-2023/"/>
    <id>http://gilkalai.wordpress.com/?p=23914</id>
    <updated>2023-02-28T16:27:04+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;&lt;/p&gt;


&lt;h2&gt;&lt;img loading=&quot;lazy&quot; data-attachment-id=&quot;23916&quot; data-permalink=&quot;https://gilkalai.wordpress.com/2023/02/28/alefs-corner-democracy-israel-2023/dem1/&quot; data-orig-file=&quot;https://gilkalai.files.wordpress.com/2023/02/dem1.jpeg&quot; data-orig-size=&quot;684,701&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;Dem1&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://gilkalai.files.wordpress.com/2023/02/dem1.jpeg?w=293&quot; data-large-file=&quot;https://gilkalai.files.wordpress.com/2023/02/dem1.jpeg?w=640&quot; class=&quot;alignnone size-full wp-image-23916&quot; src=&quot;https://gilkalai.files.wordpress.com/2023/02/dem1.jpeg&quot; alt=&quot;Dem1&quot; width=&quot;684&quot; height=&quot;701&quot; srcset=&quot;https://gilkalai.files.wordpress.com/2023/02/dem1.jpeg 684w, https://gilkalai.files.wordpress.com/2023/02/dem1.jpeg?w=146&amp;amp;h=150 146w, https://gilkalai.files.wordpress.com/2023/02/dem1.jpeg?w=293&amp;amp;h=300 293w&quot; sizes=&quot;(max-width: 684px) 100vw, 684px&quot; /&gt;&lt;img loading=&quot;lazy&quot; data-attachment-id=&quot;23918&quot; data-permalink=&quot;https://gilkalai.wordpress.com/2023/02/28/alefs-corner-democracy-israel-2023/dem2/&quot; data-orig-file=&quot;https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg&quot; data-orig-size=&quot;1000,1000&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;Dem2&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg?w=300&quot; data-large-file=&quot;https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg?w=640&quot; class=&quot;alignnone size-full wp-image-23918&quot; src=&quot;https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg&quot; alt=&quot;Dem2&quot; width=&quot;1000&quot; height=&quot;1000&quot; srcset=&quot;https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg 1000w, https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg?w=150&amp;amp;h=150 150w, https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg?w=300&amp;amp;h=300 300w, https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg?w=768&amp;amp;h=768 768w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; /&gt;&lt;/h2&gt;
&lt;h2&gt;Democracy in Hebrew is דמוקרטיה represented by the letter &amp;#8220;dalet&amp;#8221; &lt;strong&gt;&lt;span style=&quot;color: #ff0000&quot;&gt;ד&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt; &lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By Gil Kalai&lt;/p&gt;
  </content>
    <author>
      <name>Gil Kalai</name>
      <uri>https://gilkalai.wordpress.com</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Computational Complexity: I wish we had less students in a Class. Demographics says I may get my wish.</title>
    <link href="https://blog.computationalcomplexity.org/2023/02/i-wish-we-had-less-students-in-class.html"/>
    <id>tag:blogger.com,1999:blog-3722233.post-4886994334648303687</id>
    <updated>2023-02-27T15:10:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;&amp;nbsp;According to&amp;nbsp;&lt;a href=&quot;https://www.vox.com/the-highlight/23428166/college-enrollment-population-education-crash&quot;&gt;this&lt;/a&gt;&amp;nbsp;article, in the near future LESS people will be going to college. There is even a name for this upcoming shift: &lt;i&gt;The Enrollment Cliff. &lt;/i&gt;Why?&lt;/p&gt;&lt;p&gt;Is it Covid-related?&amp;nbsp; Is it that College has gotten to expensive? To liberal? To much cancel culture?&amp;nbsp; To many dead white males in the core? The core is to multicultural? Online learning is stealing our students?&amp;nbsp;&lt;/p&gt;&lt;p&gt;No. The reason is actually very boring and does not serve anyone&#39;s political agenda. (thats not quite right).&amp;nbsp; Or any agenda. And you can probably guess the cause from the title of this blog post.&lt;/p&gt;&lt;p&gt;For some years up until 2007 the birth rate was slowly dropping. Then there was a large drop in the birth rate after the recession of 2007, and the birth rate has never really recovered. And the recession might not have that much to do with it-- the long term move from an agricultural society (where kids are an economic gain) to an industrial one (where, after child labor laws and the expense of college, kids are an economic loss- though that can be debated) has resulted in a very long term decline in births.&amp;nbsp;&lt;/p&gt;&lt;p&gt;And from personal experience, I know (a) very few people who have 4 or more kids, (b) there is NO stigma about having 0 kids as there once was.&amp;nbsp; Of course the sample size of people I know may be skewed.&amp;nbsp;&lt;/p&gt;&lt;p&gt;ANYWAY, what will this mean for colleges?&amp;nbsp;&lt;/p&gt;&lt;p&gt;a) Harvard, Yale, etc will not be affected. Plenty of people will still apply. Note that they draw from all of American and also internationally.&amp;nbsp;&lt;/p&gt;&lt;p&gt;b) Colleges that draw from a local area may be affected a lot since they depend on locals, and that population may be shrinking.&amp;nbsp;&lt;/p&gt;&lt;p&gt;c) Schools in between Harvard and Small colleges- hard to say.&amp;nbsp;&lt;/p&gt;&lt;p&gt;d) The sports betting places paying schools to allow them to promote on campus (and in some cases helping them promote it) may find far less students to sucker into this loser&#39;s game. See my blog on this topic&amp;nbsp;&lt;a href=&quot;https://blog.computationalcomplexity.org/2023/02/it-is-more-important-than-ever-to-teach.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Univ of MD has around 4000 Computer Science majors (depending on who tells you this its either a brag or a complaint). In the Spring of 2023 there are three lectures of Discrete math of sizes 240, 270, and 90. Each of those also has recitations of&amp;nbsp; 30 (or so) each. If the decline is gradual (either from demographics or from the CS majors bubble finally bursting, or from the other reasons above) then I am sure we can handle it. If it declines very suddenly we may have a problem adjusting.&amp;nbsp;&lt;/p&gt;&lt;p&gt;One caveat to this that I&#39;ve heard is that immigration will save us. Maybe. But America is politically going in the opposite direction. The counterargument of &lt;i&gt;without immigration there will be less students&lt;/i&gt; &lt;i&gt;going to college &lt;/i&gt;is not that compelling to most Americans. There are other more intelligent and compelling pro-immigration arguments. However, American politics is no longer interested in compelling and logical arguments. (The notion that it once was may be nostalgia for a time that never was.)&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By gasarch&lt;/p&gt;
  </content>
    <author>
      <name>Computational Complexity</name>
      <uri>http://blog.computationalcomplexity.org/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR23-017 |  Near-Optimal Set-Multilinear Formula Lower Bounds | 

	Deepanshu Kush, 

	Shubhangi Saraf</title>
    <link href="https://eccc.weizmann.ac.il/report/2023/017"/>
    <id>https://eccc.weizmann.ac.il/report/2023/017</id>
    <updated>2023-02-27T15:04:14+00:00</updated>
    <content type="html" xml:lang="en">
    The seminal work of Raz (J. ACM 2013) as well as the recent breakthrough results by Limaye, Srinivasan, and Tavenas (FOCS 2021, STOC 2022) have demonstrated a potential avenue for obtaining lower bounds for general algebraic formulas, via strong enough lower bounds for set-multilinear formulas.

In this paper, we make progress along this direction by proving near-optimal lower bounds against low-depth as well
as unbounded-depth set-multilinear formulas.
More precisely, we show that over any field of characteristic zero, there is a polynomial $f$ computed by a polynomial-sized set-multilinear branching program (i.e., $f$ is in set-multilinear VBP) defined over $\Theta(n^2)$ variables and of degree $\Theta(n)$, such that any product-depth $\Delta$ set-multilinear formula computing $f$ has size at
least $n^{\Omega( n^{1/\Delta}/\Delta)}$. Moreover, we show that any unbounded-depth set-multilinear formula computing $f$ has size at least $n^{\Omega(\log n)}$.


If such strong lower bounds are proven for the iterated matrix multiplication (IMM) polynomial or rather, any polynomial
that is computed by an ordered set-multilinear branching program (i.e., a further restriction of set-multilinear VBP), then this would have dramatic consequences as it would imply super-polynomial lower bounds 
for general algebraic formulas (Raz, J. ACM 2013; Tavenas, Limaye, and Srinivasan, STOC 2022).

Prior to our work, either only weaker lower bounds were known for the IMM polynomial (Tavenas, Limaye, and Srinivasan, STOC 2022), or similar strong lower bounds were known but for a
hard polynomial not known to be even in set-multilinear VP (Kush and Saraf, CCC 2022; Raz, J. ACM 2009).

By known depth-reduction results, our lower bounds are essentially tight
for $f$ and in general, for any hard polynomial that is in set-multilinear VBP or set-multilinear VP.
Any asymptotic improvement in the lower bound (for a hard polynomial, say, in VNP) would imply super-polynomial lower bounds for general set-multilinear circuits.
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Hung Le: Halperin-Zwick Algorithm for Spanners</title>
    <link href="https://minorfree.github.io/hz-spanner/"/>
    <id>https://minorfree.github.io/hz-spanner</id>
    <updated>2023-02-26T00:00:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;This post describes a simple linear time algorithm by Halperin-Zwick [6] for constructing a \((2k-1)\)-spanner of unweighted graphs for any given integer \(k\geq 1\). The spanner  has \(O(n^{1+1/k})\) edges and hence is sparse. When \(k = \log n\), it only has \(O(n)\) edges.  This sparsity makes spanners an important object in many applications.&lt;/p&gt;

&lt;p&gt;This post was inspired by my past attempt to track down the detail of the Halperin-Zwick algorithm. Halperin and Zwick never published their algorithm, and all papers I am aware of cite their unpublished manuscript [6]. The algorithm by Halperin-Zwick is a simple modification of an earlier algorithm by Pelege and Schäffer [8], which, according to Uri Zwick, is the reason why they did not publish their result. The spanner by Pelege and Schäffer [8] has stretch \(4k-3\) for the same sparsity. The idea of Halperin-Zwick algorithm was given as Exercise 3 in Chapter 16 of  the book by Peleg [7].&lt;/p&gt;

&lt;p&gt;First, let’s define spanners. Graphs in this post are connected.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;\(t\)-Spanner&lt;/strong&gt;: Given a graph \(G\), a \(t\)-spanner is a subgraph of \(G\), denoted by \(H\),  such that for every two vertices \(u,v\in V(G)\):&lt;/p&gt;

\[d_H(u,v)\leq t\cdot d_G(u,v)\]

&lt;hr /&gt;

&lt;p&gt;Here \(d_H\) and \(d_G\) denote the graph distances in \(H\) and in \(G\), respectively. Graph \(G\) could be weighted or unweighted; we only consider unweighted graphs in this post. The distance constraint on \(H\) implies that \(H\) is connected and spanning.&lt;/p&gt;

&lt;p&gt;Parameter \(t\) is called the &lt;em&gt;stretch&lt;/em&gt; of the spanner. We often construct a spanner with an odd stretch: \(t = 2k-1\) for some integer \(k\geq 1\). Why not even stretches? Short answer: there is no gain in terms of the worst case bounds for even stretch [1].&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Theorem&lt;/strong&gt; (Halperin-Zwick): Let \(G\) be an unweighted graph with \(n\) vertices and \(m\) edges. Let \(k\geq 1\) be any given integer. There is an algorithm that runs in time \(O(m)\) and constructs a \((2k-1)\)-spanner of \(G\) with \(O(n^{1+1/k})\) edges.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;It is often instructive to think about \(k=2\), i.e, constructing a \(3\)-spanner. And this is where we start.&lt;/p&gt;

&lt;h1 id=&quot;stretch-3&quot;&gt;Stretch 3&lt;/h1&gt;

&lt;p&gt;Here we seek a \(3\)-spanner with \(O(n^{3/2})\) edges. There are two steps: clustering and connecting the clusters. Let’s focus on clustering first. The idea is to: construct a set of radius-1 clusters (a set of stars) that have at least \(\sqrt{n}\) vertices each. This implies that the number of clusters is \(O(\sqrt{n})\) and hence we can afford to add one edge from each vertex to each cluster. The remaining vertices induce a graph of at most \(O(n^{3/2})\); we can add all the edges.&lt;/p&gt;

&lt;p&gt;The cluster can be constructed greedily; the pseudocode of the algorithm is given below. We use \(N_G(v)\) to denote neighbors of \(v\) in a graph \(G\).&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;span style=&quot;font-variant: small-caps&quot;&gt;Clustering&lt;/span&gt;\((G)\)&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;\(1.\) \({\mathcal C} \leftarrow \emptyset, \quad G_1\leftarrow G\)&lt;br /&gt;
\(2.\) while \(G_i \not= \emptyset\)&lt;br /&gt;
\(3.\)      \(x\leftarrow\) an arbitrary vertex in \(G_i\)&lt;br /&gt;
\(4.\)      \(C_x\leftarrow {x}\)&lt;br /&gt;
\(5.\)      if \(\lvert N_{G_i}(x)\rvert  \geq \sqrt{n}\)&lt;br /&gt;
\(6.\)            \(C_v\leftarrow C_v\cup N_{G_i}(x)\)&lt;br /&gt;
\(7.\)      \({\mathcal C} \leftarrow {\mathcal C}\cup {C_x}\) &lt;br /&gt;
\(8.\)       \(G_{i+1}\leftarrow G_i\setminus C_v, \quad i\leftarrow i+1\)&lt;br /&gt;
\(9.\) return \({\mathcal C}\)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;p&gt;We call the vertex \(v\) in the cluster \(C_v\) in line 4 the &lt;em&gt;center&lt;/em&gt; of the cluster. We use \(E(C_v)\) to the edges of \(G\) connecting \(v\) to other vertices in \(C_v\).&lt;/p&gt;

&lt;p&gt;Observe  that every cluster \(C\in {\mathcal C}\) has radius at most \(1\) and it has either at least \(\sqrt{n}\) vertices or  exactly one vertex. We call \(C\) a &lt;em&gt;heavy cluster&lt;/em&gt; if \(\lvert C \rvert\geq \sqrt{n}\), and a &lt;em&gt;light cluster&lt;/em&gt; otherwise.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Observation 1&lt;/strong&gt;: The number of heavy clusters in \({\mathcal C}\) is at most \(\sqrt{n}\).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;To get a 3-spanner of \(G\), we simply add an edge from every vertex to each heavy cluster of \({\mathcal C}\), and an edge between every pair of light clusters. (Light clusters are singletons.) 
***
 &lt;span style=&quot;font-variant: small-caps&quot;&gt;3Spanner&lt;/span&gt;\((G)\)&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;\(1.\) \({\mathcal C} \leftarrow\)&lt;span style=&quot;font-variant: small-caps&quot;&gt;Clustering&lt;/span&gt;\((G)\)&lt;br /&gt;
\(2.\) \(H\leftarrow (V,\emptyset)\)&lt;br /&gt;
\(3.\) for each heavy cluster \(C\in {\mathcal C}\)&lt;br /&gt;
\(4.\)      add \(E(C)\) to \(H\)&lt;br /&gt;
\(5\).      for each vertex \(v \in N_G(C)\)&lt;br /&gt;
\(6.\)            \((v,u)\leftarrow\) an arbitrary edge from \(v\) to \(C\)&lt;br /&gt;
\(7.\)            add \((u,v)\) to \(H\)&lt;br /&gt;
\(8.\) add to \(H\) all edges between light clusters&lt;br /&gt;
\(9.\) return \(H\)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;In line 5, we use \(N_G(C)\) to denote the set of neighbors of \(C\), which are vertices are not in \(C\) and having at least one edge to \(C\).  The running time is clearly \(O(m)\).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sparsity analysis.&lt;/strong&gt; Note that \(E(C)\leq \lvert C \rvert-1\). Thus, the total number of edges added to \(H\) in line 4 over all iterations is at most \(n-1\). Furthermore, the number of edges added to \(H\) in the loop in line 5 is at most \(n\) and hence by Observation 1, the total number of edges added in lines 3-7 is \(O(n\sqrt{n}) = O(n^{3/2})\).&lt;/p&gt;

&lt;p&gt;To bound the number of edges added in line 8, observe that, if we order light clusters by the order it is added to \({\mathcal C}\) in line 7 of algorithm &lt;span style=&quot;font-variant: small-caps&quot;&gt;Clustering&lt;/span&gt;, then each light cluster is incident to at most \(\sqrt{n}\) light clusters following it in the order. It follows that the total number of edges added in line 8 is \(O(n\sqrt{n}) = O(n^{3/2})\).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stretch analysis.&lt;/strong&gt; We show that \(d_G(u,v)\leq 3 d_H(u,v)\). By the triangle inequality, it suffices to show the inequality for every edge \((u,v)\) of \(G\). This means we have to show that \(d_H(u,v)\leq 3\).  This inequality holds if \((u,v)\in E(H)\), and hence we only need to consider the case where at least one of \(u\) and \(v\) is in a heavy cluster.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/figs/clusters.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Figure 1: (a) stretch-3 path for edge \((u,v)\) and (b) stretch-\((2k-1)\) path for edge \((u,v)\)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If \(u\) and \(v\) are in the same heavy cluster \(C\), then \(d_H(u,v)\leq 2\) and the stretch guarantee holds. Otherwise, let \(C_x\) be the heavy cluster centered at \(x\) containing \(v\), say. As \((u,v)\not\in H\), there must be another vertex \(w\in C_x\) such that \((u,w)\in H\) by the construction in line 6. Thus, the path \(u\rightarrow w\rightarrow x\rightarrow v\) is a path of length 3 in \(H\) between \(u\) and \(v\), as desired. See Figure 1(a).&lt;/p&gt;

&lt;h1 id=&quot;larger-stretches&quot;&gt;Larger Stretches&lt;/h1&gt;

&lt;p&gt;The algorithm for constructing a \((2k-1)\)-spanner with \(O(n^{1+1/k})\) edges is somewhat similar to the stretch-3 case, but we will need a finer analysis. A key observation, which we also use in the 3-spanner construction, is that if we have a cluster, say \(C\), of radius \(k\), and a vertex \(v\in N_G(C)\), it suffices to keep only one edge from \(v\) to \(C\). Thus, as long as \(N_G(C)\) has at most \(n^{1/k}\lvert C \rvert\) vertices, we can add an edge from \(v\) to \(C\) for each \(v\in N_G(C)\); the &lt;em&gt;average number of edges added per vertex&lt;/em&gt; of \(C\) is \(n^{1/k}\).&lt;/p&gt;

&lt;p&gt;What if \(\lvert N_G(C) \rvert \geq n^{1/k}\lvert C \rvert\)? In this case, we simply grow \(C\) by adding all of its neighbors. How many times will it grow? At most \(k-1\) times, as every time \(C\) grows, its size increases by a factor of strictly larger than \(n^{1/k}\), and there are only \(n\) vertices in the graph.&lt;/p&gt;

&lt;p&gt;The pseudocode of the algorithm is given below. The set \(A\) holds the edges between \(C\) and its neighbors described above. The rest is essentially the same as the clustering for stretch 3.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;span style=&quot;font-variant: small-caps&quot;&gt;Clustering&lt;/span&gt;\((G,k)\)&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;\(1.\) \({\mathcal C} \leftarrow \emptyset, \quad A\leftarrow \emptyset, \quad G_1\leftarrow G\)&lt;br /&gt;
\(2.\) while \(G_i \not= \emptyset\)&lt;br /&gt;
\(3.\)      \(x\leftarrow\) an arbitrary vertex in \(G_i\)&lt;br /&gt;
\(4.\)      \(C_x\leftarrow {x}\)&lt;br /&gt;
\(5.\)      while \(\lvert N_{G_i}(C_x)\rvert \geq n^{1/k} \lvert C_{x} \rvert\)&lt;br /&gt;
\(6.\)            \(C_v\leftarrow C_x\cup N_{G_i}(C_x)\)&lt;br /&gt;
\(7.\)      for each \(v \in N_{G_i}(C_x)\)&lt;br /&gt;
\(8.\)            \((v,u)\leftarrow\) an arbitrary edge from \(v\) to \(C\)&lt;br /&gt;
\(9.\)            add \((v,u)\) to \(A\)&lt;br /&gt;
\(10.\)      \({\mathcal C} \leftarrow {\mathcal C}\cup {C_v}\) &lt;br /&gt;
\(11.\)       \(G_{i+1}\leftarrow G_i\setminus C_v, \quad i\leftarrow i+1\)&lt;br /&gt;
\(12.\) return \(({\mathcal C},A)\)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;Once we perform clustering, we only need to add the set \(A\) and the edges inside each cluster to the spanner.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;span style=&quot;font-variant: small-caps&quot;&gt;Spanner&lt;/span&gt;\((G,k)\)&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;\(1.\) \(H\leftarrow (V,\emptyset)\)&lt;br /&gt;
\(2.\) \(({\mathcal C},A) \leftarrow\)&lt;span style=&quot;font-variant: small-caps&quot;&gt;Clustering&lt;/span&gt;\((G,k)\)&lt;br /&gt;
\(3.\) add \(A\) to \(H\)&lt;br /&gt;
\(4.\) for each cluster \(C\in {\mathcal C}\)&lt;br /&gt;
\(5.\)      add \(E(C)\) to \(H\)&lt;br /&gt;
\(6.\) return \(H\)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Sparsity analysis.&lt;/strong&gt; The number of edges added in the loop in line 4 is at most \(n-1\). Observe that for each cluster \(C_x\) added to \({\mathcal C}\) in line 6 of &lt;span style=&quot;font-variant: small-caps&quot;&gt;Clustering&lt;/span&gt;, the number of edges added to \(A\) in the loop in line 7 is at most \(n^{1/k}\lvert C_{x} \rvert\). Thus, \(\lvert A \rvert\leq n^{1/k}\sum_{C}\lvert C \rvert \leq n^{1+1/k}\). This implies that \(\lvert E(H) \rvert = O(n^{1+1/k})\).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stretch analysis.&lt;/strong&gt; Let \((u,v)\) be any edge of \(G\) such that \((u,v)\not\in H\). We need to show that \(d_H(u,v)\leq 2k-1\). Observe that:&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Observation 2&lt;/strong&gt;: Every cluster \(C_x\in {\mathcal C}\) has radius at most \(k-1\).&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Proof: Every time the radius of \(C_x\) increases by \(1\), the size of \(C_x\) increases by a factor of strictly larger than \(n^{1/k}\) by the construction. Thus, after \(t\) rounds, \(n\geq \lvert C_{x} \rvert &amp;gt; n^{t/k}\), which gives \(t\leq k-1\).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Let \(C_x\) be the cluster containing \(v\). If \(u\in C_x\), then \(d_G(u,v)\leq 2\cdot (k-1)\). Otherwise, suppose w.l.o.g, that \(v\) is clustered before \(u\). Observe that \(u\in N_{G_{i}}(C_x)\) and hence an edge \((u,w)\) is added to \(A\), which is eventually added to \(H\). See Figure 1(b). Thus, the path consisting of an edge \((u,w)\), the shortest path from \(w\) to \(x\), and the shortest path from \(x\) to \(v\), is a path of length at most \(2(k-1)+1 = 2k-1\) between \(u\) and \(v\) in \(H\), as desired.&lt;/p&gt;

&lt;h1 id=&quot;optimality-the-girth-conjecture&quot;&gt;Optimality: The Girth Conjecture&lt;/h1&gt;

&lt;p&gt;It is not hard to construct a class of graphs such that for any graph \(G\) of size \(n\) in the class, the Halperin-Zwick algorithm produces a \((2k-1)\)-spanner for \(G\) that has \(\Omega(n^{1+1/k})\) edges. Could we go below the bound \(\Theta(n^{1+1/k})\) on the number of edges (by a different algorithm, say)? The consensus seems to be no, though currently we do not have a definite answer.&lt;/p&gt;

&lt;p&gt;Spanners have a tight connection to the girth of graphs; a graph has girth \(g\) if the shortest simple cycle in the graph has length \(g\).&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Observation 3&lt;/strong&gt;: Let \(H\) be a graph of girth \(2k+1\). Then any \((2k-1)\)-spanner of \(H\) must contain every edge of \(H\).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Observation 3 essentially says that any \((2k-1)\)-spanner of \(H\) must be itself. Thus, the question of the optimality of spanners reduces to: is there any graph with \(o(n^{1+1/k})\) edges and girth \((2k+1)\)? The Erdős’ Girth Conjecture implies that the answer is no.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Erdős’ Girth Conjecture [5]&lt;/strong&gt;: For any \(n \geq 1\) and \(k\geq 1\), there exists a graph with \(n\) vertices of girth \((2k+1)\) that has \(\Omega(n^{1+1/k})\) edges.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Erdős stated a lower bound \(c_k\cdot n^{1+1/k}\) on the number of edges in the conjecture [5]; that is, the constant is allowed to degrade as \(k\) increases.  The spanner literature often cites the stronger version above, where the constant remains the same for every \(k\). The Erdős’ Girth Conjecture is known to hold for a few small values of \(k\).&lt;/p&gt;

&lt;p&gt;While Erdős’ Girth Conjecture remains wide open, we could ask: is it possible to construct a \((2k-1)\)-spanner that has girth at least \(2k+1\)? If yes, then the output spanner is (existentially) optimal regardless of the truth of Erdős’ Girth Conjecture.&lt;/p&gt;

&lt;p&gt;It turns out that the following simple greedy algorithm, formally described in [2] and attributed to Marshall Bern, does the job: consider edges in increasing weight order and add an edge \(e\) to the current spanner if the distance between its endpoints in the spanner is larger than \((2k-1)w(e)\). The algorithm works for weighted graphs as well. It is an instructive exercise to show that the output graph is a \((2k-1)\)-spanner and has girth at least \(2k+1\).&lt;/p&gt;

&lt;p&gt;The major downsize of the greedy algorithm is its running time: the current best known implemtation takes \(O(mn^{1+1/k})\) time. Even in unweighted graphs, to the best of my knowledge, the following problem remains open:&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Open Problem&lt;/strong&gt;: Construct a maximal subgraph of girth at least \((2k+1)\) in nearly linear time.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;For an unweighted graph, a maximal subgraph of girth at least \((2k+1)\) is a \((2k-1)\)-spanner.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;We have mentioned two algorithms for constructing a spanner. Another beautiful algorithm that I hope to cover in a future post is the randomized construction by Baswana and Sen [4]. A notable feature of the Baswana-Sen algorithm is that it can be implemented efficiently in both parallel and distributed models. The recent survey paper [1] contains almost all known algorithms for spanners and its sibling problems.&lt;/p&gt;

&lt;h1 id=&quot;bibliographical-notes&quot;&gt;Bibliographical Notes&lt;/h1&gt;

&lt;p&gt;The concept of a spanner was formally introduced by Peleg and Schaffer [8], though its conception was much earlier. Peleg and Schaffer constructed a \((4k-3)\)-spanner with \(O(n^{1+1/k})\) edges by connecting every pair of clusters in the output of &lt;span style=&quot;font-variant: small-caps&quot;&gt;Clustering&lt;/span&gt;\((G,k)\) by an edge. This clustering procedure was due to Awerbuch [2].&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;p&gt;[1] Ahmed, R., Bodwin, G., Sahneh, F. D., Hamm, K., Jebelli, M. J. L., Kobourov, S., and Spence, R. (2020). Graph spanners: A tutorial review. Computer Science Review, 37, 100253.&lt;/p&gt;

&lt;p&gt;[2] Althöfer, I., Das, G., Dobkin, D., Joseph, D., and Soares, J. (1993). On sparse spanners of weighted graphs. Discrete \&amp;amp; Computational Geometry, 9(1), 81-100.&lt;/p&gt;

&lt;p&gt;[3] Awerbuch, B. (1985). Complexity of network synchronization. Journal of the ACM (JACM), 32(4), 804-823.&lt;/p&gt;

&lt;p&gt;[4] Baswana, S., and Sen, S. (2007). A simple and linear time randomized algorithm for computing sparse spanners in weighted graphs. Random Structures &amp;amp; Algorithms, 30(4), 532-563.&lt;/p&gt;

&lt;p&gt;[5] Erdős, P. (1965). Extremal problems in graph theory. In Proceedings of the Symposium on Theory of Graphs and its Applications, page 29-36, 1963.&lt;/p&gt;

&lt;p&gt;[6] Halperin, S., and Zwick, U. (1996). Unpublished manuscript.&lt;/p&gt;

&lt;p&gt;[7] Peleg, D. (2000). Distributed computing: a locality-sensitive approach. Society for Industrial and Applied Mathematics.&lt;/p&gt;

&lt;p&gt;[8] Peleg, D., and Schäffer, A. A. (1989). Graph spanners. Journal of graph theory, 13(1), 99-116.&lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By Hung Le&lt;/p&gt;
  </content>
    <author>
      <name>Hung Le</name>
      <uri>https://minorfree.github.io</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Richard Lipton: STOC 2023</title>
    <link href="https://rjlipton.wpcomstaging.com/2023/02/25/stoc-2023/"/>
    <id>https://rjlipton.wpcomstaging.com/?p=21165</id>
    <updated>2023-02-25T23:40:51+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;
&lt;a href=&quot;http://acm-stoc.org/stoc2023/&quot;&gt;STOC 2023&lt;/a&gt; is the 55th Annual ACM Symposium on Theory of Computing. It will be held on June 20-23, 2023 in Orlando, Florida. &lt;/p&gt;
&lt;p&gt;
Perhaps the best paper ever at STOC was by Stephen Cook. His 1971 STOC paper &lt;a href=&quot;https://dl.acm.org/doi/10.1145/800157.805047&quot;&gt;The Complexity of Theorem Proving Procedures&lt;/a&gt; formalized the notions of polynomial-time and started the search to prove &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{P}&quot; class=&quot;latex&quot; /&gt; is not equal to &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{NP}&quot; class=&quot;latex&quot; /&gt;. &lt;/p&gt;
&lt;p&gt;
&lt;a href=&quot;https://rjlipton.wpcomstaging.com/2023/02/25/stoc-2023/cook/&quot; rel=&quot;attachment wp-att-21168&quot;&gt;&lt;img data-attachment-id=&quot;21168&quot; data-permalink=&quot;https://rjlipton.wpcomstaging.com/2023/02/25/stoc-2023/cook/&quot; data-orig-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/02/cook.jpeg?fit=290%2C174&amp;amp;ssl=1&quot; data-orig-size=&quot;290,174&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;cook&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/02/cook.jpeg?fit=290%2C174&amp;amp;ssl=1&quot; data-large-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/02/cook.jpeg?fit=290%2C174&amp;amp;ssl=1&quot; decoding=&quot;async&quot; loading=&quot;lazy&quot; src=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/02/cook.jpeg?resize=290%2C174&amp;#038;ssl=1&quot; alt=&quot;&quot; width=&quot;290&quot; height=&quot;174&quot; class=&quot;aligncenter size-full wp-image-21168&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
See &lt;a href=&quot;https://en.wikipedia.org/wiki/Symposium_on_Theory_of_Computing&quot;&gt;this&lt;/a&gt; for more. &lt;/p&gt;
&lt;p&gt;
&lt;span id=&quot;more-21165&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;H2&gt; Papers with Pointers &lt;/H2&gt;&lt;/p&gt;
&lt;p&gt;&lt;p&gt;
Many web sites on STOC 2023 list the accepted papers but not with pointers. We planned to create these links ourself but we discovered this site that already has them:&lt;/p&gt;
&lt;p&gt;
&lt;a href=&quot;https://www.conference-publishing.com/list.php?Event=STOC23&quot;&gt;List of papers&lt;/a&gt; with pointers. &lt;/p&gt;
&lt;p&gt;
This saved us having to create the pointers. Try them&amp;#8212;fun to see the accepted papers.&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;&lt;H2&gt; The Program Committee &lt;/H2&gt;&lt;/p&gt;
&lt;p&gt;&lt;p&gt;
Thanks to the program committee for working so hard on putting together such a terrific program. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
Amir Abboud (Weizmann Institute of Science) &lt;/p&gt;
&lt;li&gt;
Josh Alman (Columbia University) &lt;/p&gt;
&lt;li&gt;
Andris Ambainis (University of Latvia) &lt;/p&gt;
&lt;li&gt;
Nima Anari (Stanford University) &lt;/p&gt;
&lt;li&gt;
Srinivasan Arunachalam (IBM Thomas J. Watson Research Center) &lt;/p&gt;
&lt;li&gt;
Petra Berenbrink (Universitat Hamburg) &lt;/p&gt;
&lt;li&gt;
Aaron Bernstein (Rutgers University) &lt;/p&gt;
&lt;li&gt;
Aditya Bhaskara (University of Utah) &lt;/p&gt;
&lt;li&gt;
Sayan Bhattacharya (University of Warwick) &lt;/p&gt;
&lt;li&gt;
Eric Blais (University of Waterloo) &lt;/p&gt;
&lt;li&gt;
Hans Bodlaender (Utrecht University) &lt;/p&gt;
&lt;li&gt;
Adam Bouland (Stanford University) &lt;/p&gt;
&lt;li&gt;
Anne Broadbent (University of Ottawa) &lt;/p&gt;
&lt;li&gt;
Mark Bun (Boston University) &lt;/p&gt;
&lt;li&gt;
Keren Censor-Hillel (Technion) &lt;/p&gt;
&lt;li&gt;
Timothy Chan (University of Illinois at Urbana-Champaign) &lt;/p&gt;
&lt;li&gt;
Arkadev Chattopadhyay (Tata Institute of Fundamental Research) &lt;/p&gt;
&lt;li&gt;
Chandra Chekuri (University of Illinois at Urbana-Champaign) &lt;/p&gt;
&lt;li&gt;
Xue Chen (University of Science and Technology of China) &lt;/p&gt;
&lt;li&gt;
Gil Cohen (Tel Aviv University) &lt;/p&gt;
&lt;li&gt;
Dana Dachman-Soled (University of Maryland College Park) &lt;/p&gt;
&lt;li&gt;
Anindya De (University of Pennsylvania) &lt;/p&gt;
&lt;li&gt;
Shahar Dobzhinski (Weizmann Institute of Science) &lt;/p&gt;
&lt;li&gt;
Shaddin Dughmi (University of Southern California) &lt;/p&gt;
&lt;li&gt;
Vida Dujmovic (University of Ottawa) &lt;/p&gt;
&lt;li&gt;
Yuval Filmus (Technion) &lt;/p&gt;
&lt;li&gt;
Sumegha Garg (Stanford University) &lt;/p&gt;
&lt;li&gt;
Rong Ge (Duke University) &lt;/p&gt;
&lt;li&gt;
Elena Grigorescu (Purdue University) &lt;/p&gt;
&lt;li&gt;
Shuichi Hirahara (National Institute of Informatics, Japan) &lt;/p&gt;
&lt;li&gt;
Zhiyi Huang (University of Hong Kong) &lt;/p&gt;
&lt;li&gt;
Sungjin Im (University of California, Merced) &lt;/p&gt;
&lt;li&gt;
Giuseppe Italiano (LUISS University) &lt;/p&gt;
&lt;li&gt;
Ken-ichi Kawarabayashi (National Institute of Informatics, Japan) &lt;/p&gt;
&lt;li&gt;
Sanjeev Khanna (University of Pennsylvania) &lt;/p&gt;
&lt;li&gt;
Robin Kothari (Google Research) &lt;/p&gt;
&lt;li&gt;
Marvin Kunnemann (TU Kaiserslautern) &lt;/p&gt;
&lt;li&gt;
Rasmus Kyng (ETH Zurich) &lt;/p&gt;
&lt;li&gt;
Sophie Laplante (Universite Paris Cite) &lt;/p&gt;
&lt;li&gt;
Hung Le (University of Massachusetts, Amherst) &lt;/p&gt;
&lt;li&gt;
Daniel Lokshtanov (University of California, Santa Barbara) &lt;/p&gt;
&lt;li&gt;
Sepideh Mahabadi (Microsoft Research) &lt;/p&gt;
&lt;li&gt;
Nicole Megow (Universitat Bremen) &lt;/p&gt;
&lt;li&gt;
Slobodan Mitrovic (University of California, Davis) &lt;/p&gt;
&lt;li&gt;
Ankur Moitra (Massachusetts Institute of Technology) &lt;/p&gt;
&lt;li&gt;
Shay Moran (Technion and Google Research) &lt;/p&gt;
&lt;li&gt;
Christopher Musco (New York University) &lt;/p&gt;
&lt;li&gt;
Krzysztof Onak (Boston University) &lt;/p&gt;
&lt;li&gt;
Rotem Oshman (Tel Aviv University) &lt;/p&gt;
&lt;li&gt;
Prasad Raghavendra (University of California, Berkeley) &lt;/p&gt;
&lt;li&gt;
Susanna Rezende (Lund University) &lt;/p&gt;
&lt;li&gt;
Robert Robere (McGill University) &lt;/p&gt;
&lt;li&gt;
Alon Rosen (Bocconi University and Reichman University) &lt;/p&gt;
&lt;li&gt;
Ron Rothblum (Technion) &lt;/p&gt;
&lt;li&gt;
Alex Russell (University of Connecticut) &lt;/p&gt;
&lt;li&gt;
Laura Sanita (Bocconi University) &lt;/p&gt;
&lt;li&gt;
Thatchaphol Saranurak (University of Michigan) &lt;/p&gt;
&lt;li&gt;
Tselil Schramm (Stanford University) &lt;/p&gt;
&lt;li&gt;
Rocco Servedio (Columbia University), Chair &lt;/p&gt;
&lt;li&gt;
Tasos Sidiropoulos (University of Illinois at Chicago) &lt;/p&gt;
&lt;li&gt;
Alex Slivkins (Microsoft Research) &lt;/p&gt;
&lt;li&gt;
Srikanth Srinivasan (Aarhus University) &lt;/p&gt;
&lt;li&gt;
David Steurer (ETH Zurich) &lt;/p&gt;
&lt;li&gt;
Ola Svensson (EPFL) &lt;/p&gt;
&lt;li&gt;
Chaitanya Swamy (University of Waterloo) &lt;/p&gt;
&lt;li&gt;
Madhur Tulsiani (Toyota Technological Institute at Chicago) &lt;/p&gt;
&lt;li&gt;
Christos Tzamos (University of Wisconsin-Madison) &lt;/p&gt;
&lt;li&gt;
Muthu Venkitasubramaniam (Georgetown University) &lt;/p&gt;
&lt;li&gt;
Ben Lee Volk (Reichman University) &lt;/p&gt;
&lt;li&gt;
Andreas Wiese (Technical University of Munich) &lt;/p&gt;
&lt;li&gt;
Mary Wootters (Stanford University) &lt;/p&gt;
&lt;li&gt;
Yuichi Yoshida (National Institute of Informatics, Japan) &lt;/p&gt;
&lt;li&gt;
Huacheng Yu (Princeton University)
&lt;/ul&gt;
&lt;p&gt;
&lt;p&gt;&lt;H2&gt; Open Problems &lt;/H2&gt;&lt;/p&gt;
&lt;p&gt;&lt;p&gt;
I hope having the list of accepted papers with links is of some value. Cook&amp;#8217;s paper might be the best ever, but it did not get the award for best paper at the time. Here are some of the more recent &lt;a href=&quot;https://www.sigact.org/prizes/best_paper.html&quot;&gt;best papers&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;
2020	&lt;a href=&quot;https://arxiv.org/abs/1908.08483&quot;&gt;Improved Bounds for The Sunflower Lemma&lt;/a&gt; &lt;br /&gt;
2019	&lt;a href=&quot;https://arxiv.org/abs/1809.07115&quot;&gt;The Reachability Problem for Petri Nets is Not Elementary&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;
I like the second one above for personal reasons that I expounded long ago &lt;a href=&quot;https://rjlipton.wpcomstaging.com/2009/04/08/an-expspace-lower-bound/&quot;&gt;here&lt;/a&gt;, and which Ken expanded on &lt;a href=&quot;https://rjlipton.wpcomstaging.com/2015/07/12/the-long-reach-of-reachability/&quot;&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;
&lt;p class=&quot;authors&quot;&gt;By rjlipton&lt;/p&gt;
  </content>
    <author>
      <name>Richard Lipton</name>
      <uri>https://rjlipton.wpcomstaging.com</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">David Eppstein: Isohedral Delaunay complexes</title>
    <link href="https://11011110.github.io/blog/2023/02/25/isohedral-delaunay-complexes.html"/>
    <id>https://11011110.github.io/blog/2023/02/25/isohedral-delaunay-complexes</id>
    <updated>2023-02-25T09:19:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;The Delaunay complex of a set of points in the Euclidean plane partitions the convex hull of the points into polygonal cells. Each cell is the convex hull of a co-circular subset of the points whose circle does not contain any more points. It’s often called a &lt;a href=&quot;https://en.wikipedia.org/wiki/Delaunay_triangulation&quot;&gt;Delaunay triangulation&lt;/a&gt;, because for points in &lt;a href=&quot;General position&quot;&gt;general position&lt;/a&gt; the cells are all triangles, but I do not want to assume general position here. It is &lt;a href=&quot;https://en.wikipedia.org/wiki/Isohedral_figure&quot;&gt;isohedral&lt;/a&gt; when all of the cells are symmetric to each other (maybe a little more strong than asking for them all to have the same shape). For example, the familiar tilings of the plane by squares or regular hexagons are both isohedral and Delaunay. Another example is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Deltoidal_trihexagonal_tiling&quot;&gt;tiling of the plane by 60°–90°–120° kites&lt;/a&gt;:&lt;/p&gt;

&lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/blog/assets/2023/tetrille-delaunay.svg&quot; alt=&quot;Tiling of the plane by 60°–90°–120° kites, with shading showing that the circumcircles of each site are empty of other tiling vertices&quot; style=&quot;width:100%;max-width:720px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some other tilings, even very symmetric ones, might not be Delaunay. For instance, it is impossible to make a Delaunay version of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Cairo_pentagonal_tiling&quot;&gt;Cairo pentagonal tiling&lt;/a&gt; because its tiles have two complementary angles or two right angles, impossible for a co-circular pentagon.&lt;/p&gt;

&lt;p&gt;In these cases, the symmetries are of the familiar kind, translations and rotations of the plane. But translation symmetry forces us to use infinitely many points. Can finite Delaunay complexes be isohedral? Sort of, maybe, but with a different kind of symmetry.
You can translate between Delaunay complexes on the plane and on a sphere by &lt;a href=&quot;https://en.wikipedia.org/wiki/Stereographic_projection&quot;&gt;stereographic projection&lt;/a&gt;, and translations, rotations, and scaling in the plane become Möbius transformations on the sphere. So the projection onto the sphere of a square grid becomes a spherical Delaunay complex that is symmetric under Möbius transformations.&lt;/p&gt;

&lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/blog/assets/2023/stereographic-square-tiling.svg&quot; alt=&quot;Stereographic projection of a square grid from the plane to a sphere&quot; title=&quot;CC-BY-SA 4.0 image https://commons.wikimedia.org/wiki/File:Stereogr-proj-netz.svg by Ag2gaeh from Wikimedia commons&quot; style=&quot;width:100%;max-width:720px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Rotations of the sphere are also a very special case of Möbius transformations, so we can look for Delaunay complexes with rotational symmetries. Suppose you have a polyhedron all of whose vertices lie on a sphere, and all of whose faces are symmetric to each other by rotations of the sphere. Then the intersection of the sphere with any face plane of the polyhedron is a circle through the vertices of a face that does not contain any other vertices, the defining property of a Delaunay cell. So these polyhedra are isohedral spherical Delaunay complexes. This is true, for instance, for the Platonic solids and for the two infinite families of &lt;a href=&quot;https://en.wikipedia.org/wiki/Bipyramid&quot;&gt;bipyramids&lt;/a&gt; and the &lt;a href=&quot;https://en.wikipedia.org/wiki/Trapezohedron&quot;&gt;trapezohedra&lt;/a&gt; but false for some other isohedral polyhedra like the &lt;a href=&quot;https://en.wikipedia.org/wiki/Rhombic_dodecahedron&quot;&gt;rhombic dodecahedron&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Triakis_tetrahedron&quot;&gt;triakis tetrahedron&lt;/a&gt; whose vertices cannot all be placed on a sphere.&lt;/p&gt;

&lt;p&gt;You can map these spherical Delaunay complexes back onto the plane by stereographic projection again. You might think that the result is always a planar Delaunay complex in which all faces are symmetric to each other under Möbius transformation, but there’s a catch. The projection preserves circles, but it turns inside out the ones that contain the pole of the projection. If they were empty on the sphere, they instead turn into circles in the plane that contain every other point. These inside-out circles correspond to Delaunay cells on the sphere that do not map to Delaunay cells in the plane. For instance, projecting the cube vertices back down to the plane with the pole at the midpoint of a cube edge produces a Delaunay complex with only four quadrilaterals; the other two faces of the cube come from inside-out circles and do not become Delaunay cells.&lt;/p&gt;

&lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/blog/assets/2023/cube-edge-projection.svg&quot; alt=&quot;Delaunay complex of a cube, stereographically projected onto the plane with its pole at an edge midpoint&quot; style=&quot;width:100%;max-width:720px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All of this generalizes directly to 3d Delaunay triangulations, and to isohedral 4d polytopes with cospherical vertices, but less is known about what shapes are possible. The regular 4-polytopes, certainly, have symmetric facets and cospherical vertices, but there are other possibilities as well. The &lt;a href=&quot;http://www.polytope.net/hedrondude/dice4.htm&quot;&gt;isohedral 4-polytopes with up to 20 sides&lt;/a&gt; have been classified, but I don’t know which of these can have cospherical vertices.&lt;/p&gt;

&lt;p&gt;There are, at least, three different infinite families of isohedral 4d polytopes with cospherical vertices, analogous to the bipyramids and trapezohedra. To describe this, it helps to think of four-dimensional Euclidean space as having two complex numbers \(\alpha\) and \(\beta\) as coordinates, and the unit sphere as the points for which \(\vert\alpha\vert^2+\vert\beta\vert^2=1\). These are the state vectors of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Qubit&quot;&gt;qubit&lt;/a&gt;, so we can write these points on the sphere using &lt;a href=&quot;https://en.wikipedia.org/wiki/Bra%E2%80%93ket_notation&quot;&gt;quantum notation&lt;/a&gt; as \(\alpha\,\vert0\rangle+\beta\,\vert1\rangle\), where \(\vert0\rangle\) and \(\vert1\rangle\) are just the two basis vectors for the two-complex-number coordinate system. In this notation, consider the following three sets of points, all on the unit sphere, for integer parameters \(n\) and \(m\):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Let \(X\) be the set of \(n\) points \(e^{2\pi i/n}\,\vert0\rangle\), for the integers \(i\) with \(0\le i\lt n\). These form a regular \(n\)-gon in the plane \(\beta=0\).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Let \(Y\) be the set of \(m\) points \(e^{2\pi j/m}\,\vert1\rangle\), for the integers \(j\) with \(0\le j\lt n\). These form a regular \(m\)-gon, in the perpendicular plane \(\alpha=0\).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Let \(Z\) be the set of \(mn\) points&lt;/p&gt;

\[\frac{1}{\sqrt 2}e^{2\pi i/n}\,\vert0\rangle + \frac{1}{\sqrt 2}e^{2\pi j/m}\,\vert1\rangle,\]

    &lt;p&gt;for the same ranges of \(i\) and \(j\). These lie on a &lt;a href=&quot;https://en.wikipedia.org/wiki/Flat_torus&quot;&gt;flat torus&lt;/a&gt;, the Cartesian product of two circles, and form the vertices of a tiling of the torus by rectangles.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then the convex hull of \(X\cup Y\) has as its facets \(mn\) congruent tetrahedra, each formed as the convex hull of an edge of the \(X\)-polygon and an edge of the \(Y\)-polygon. The convex hull of \(Z\) is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Duoprism&quot;&gt;duoprism&lt;/a&gt; whose facets are two kinds of prisms: the Cartesian product of an edge of the \(X\)-polygon with the whole \(Y\)-polygon, and vice versa. When \(n=m\) these two prisms are congruent and the resulting duoprism is isohedral, and dual to the convex hull of \(X\cup Y\). Here is a stereographic projection for \(n=m=18\), taken from the &lt;a href=&quot;https://www.math.cmu.edu/~fho/jenn/polytopes/index.html&quot;&gt;Jenn 3d website&lt;/a&gt;:&lt;/p&gt;

&lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/blog/assets/2023/18x18-torus.png&quot; alt=&quot;Stereographic projection into 3d of a 4-dimensional polytope, the (18,18)-duoprism, appearing as a torus tiled with squares&quot; title=&quot;Public domain image https://www.math.cmu.edu/~fho/jenn/polytopes/18x18-torus.png&quot; style=&quot;width:100%;max-width:720px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this image, the most prominent feature is the tiling by squares of the torus containing \(Z\). If you follow sequences of edges of this square grid, through opposite edges at each vertex, you will also see many 18-gons. Some of the 18-gons slice the “inside” of the torus radially into distorted prisms; these are Delaunay cells. Many of the perpendicular 18-gons slice across the “donut hole” of the torus, forming more Delaunay cells. But some of the remaining 18-gons lie on the convex hull of the shape, and cannot be used as slices for the projected set. The missing slices cause the Delaunay triangulation of the stereographic projection to miss some cells, and that can only happen because the spheres for these cells were inverted by the projection.&lt;/p&gt;

&lt;p&gt;You can also take the convex hull of \(X\cup Y\cup Z\). This has two triangular-prism facets for each tetrahedron of \(X\cup Y\), meeting at one of the squares of \(Z\). The reason I’m interested in this example comes from &lt;a href=&quot;/blog/2023/02/20/geometric-graphs-unbounded.html&quot;&gt;my most recent post, on flip-width of geometric graphs&lt;/a&gt;. If you take an induced subgraph of this polytope, consisting only of the points in \(X\cup Y\cup Z\) whose coefficients \(i\) and \(j\) are both even, the result is a subdivided complete bipartite graph \(K_{n,n}\), where by “subdivided” I mean that each edge of \(K_{n,n}\) has been replaced by a two-edge path. This isn’t an interchange, in the sense of the previous post, but it has unbounded flip-width, because it is a sparse graph that does not have bounded expansion.&lt;/p&gt;

&lt;p&gt;What I really want, though, is a 3d Euclidean Delaunay triangulation with unbounded flip-width, not a non-triangulation complex and not a 4-polytope (I already had one of those in my previous post). To get this, use a stereographic projection whose pole is on the central torus, in the middle of one of the squares (or really on the corresponding point of the unit sphere), and note that the Delaunay spheres of the polytope faces will intersect this torus in Delaunay circles of the squares. But for a square grid, the center of each square belongs only to the circumcircle of that square, not to any of the other circumcircles. So the pole of the projection will only belong to two of the Delaunay spheres, the two sharing the chosen square. The two prisms for these two spheres will be missing from the Delaunay complex (instead, their union, some sort of &lt;a href=&quot;https://en.wikipedia.org/wiki/Gyrobifastigium&quot;&gt;gyrobifastifium&lt;/a&gt;, will form the convex hull of the points), but all the other prisms will still be present. They contain all the edges of the graph, so it still contains a large induced subdivided biclique. Perturbing the points slightly to get a triangulation rather than a complex doesn’t change this.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109926574982696332&quot;&gt;Discuss on Mastodon&lt;/a&gt;)&lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By David Eppstein&lt;/p&gt;
  </content>
    <author>
      <name>David Eppstein</name>
      <uri>https://11011110.github.io/blog/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">CCI: jobs: postdoc at TU Eindhoven, University of Amsterdam, Leiden University, CWI (apply by March 31, 2023)</title>
    <link href="https://cstheory-jobs.org/2023/02/24/postdoc-at-tu-eindhoven-university-of-amsterdam-leiden-university-cwi-apply-by-march-31-2023/"/>
    <id>http://cstheory-jobs.org/2023/02/24/postdoc-at-tu-eindhoven-university-of-amsterdam-leiden-university-cwi-apply-by-march-31-2023/</id>
    <updated>2023-02-24T12:53:26+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;Postdoc Positions in Algorithmics and Stochastics, in the NETWORKS project (the Netherlands).&lt;/p&gt;
&lt;p&gt;The NETWORKS project is a collaboration of researchers from four institutions in The Netherlands: TU Eindhoven, University of Amsterdam, Leiden University and the Centrum Wiskunde &amp;amp; Informatica (CWI). NETWORKS has openings for postdocs working on algorithmics or stochastics for network problems.&lt;/p&gt;
&lt;p&gt;Website: &lt;a href=&quot;https://www.thenetworkcenter.nl/Open-Positions/openposition/30/8-Postdoctoral-fellows-in-Stochastics-and-Algorithmics-COFUND-&quot;&gt;https://www.thenetworkcenter.nl/Open-Positions/openposition/30/8-Postdoctoral-fellows-in-Stochastics-and-Algorithmics-COFUND-&lt;/a&gt;&lt;br /&gt;
Email: info@thenetworkcenter.nl&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By shacharlovett&lt;/p&gt;
  </content>
    <author>
      <name>CCI: jobs</name>
      <uri>https://cstheory-jobs.org</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Emanuele Viola: Mathematics of the impossible: Computational Complexity, Chapter 5, Completeness: Reducing arbitrary computation</title>
    <link href="https://emanueleviola.wordpress.com/2023/02/23/mathematics-of-the-impossible-computational-complexity-chapter-5-completeness-reducing-arbitrary-computation/"/>
    <id>http://emanueleviola.wordpress.com/?p=1208</id>
    <updated>2023-02-23T19:33:28+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p style=&quot;text-align:justify&quot;&gt;In this chapter we show how to reduce arbitrary computation to 3Sat (and hence to the other problems in section&amp;nbsp;º&lt;a href=&quot;#x1-500004.3&quot;&gt;4.3&lt;!--tex4ht:ref: sec:Reductions-from-3Sat --&gt;&lt;/a&gt;). What powers everything is the following landmark and, in hindsight, simple result which reduces circuit computation to 3Sat.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-56001r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 5.1.  &lt;/span&gt; Given a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C:&amp;#92;{0,1&amp;#92;} ^{n}&amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; gates we can compute in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt; a 3CNF formula &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f_{C}&quot; class=&quot;latex&quot; /&gt; in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%2Bs&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%2Bs&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%2Bs&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n+s&quot; class=&quot;latex&quot; /&gt; variables such that for every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{n}&quot; class=&quot;latex&quot; /&gt;:&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+C%28x%29%3D1%5CLeftrightarrow+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bs%7D%3Af_%7BC%7D%28x%2Cy%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+C%28x%29%3D1%5CLeftrightarrow+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bs%7D%3Af_%7BC%7D%28x%2Cy%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+C%28x%29%3D1%5CLeftrightarrow+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bs%7D%3Af_%7BC%7D%28x%2Cy%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} C(x)=1&amp;#92;Leftrightarrow &amp;#92;exists y&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{s}:f_{C}(x,y)=1. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The key idea to &lt;em&gt;guess computation and check it efficiently, using that computation is local.&lt;/em&gt; The additional &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; variables one introduces contain the values of the gates during the computation of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;. We simply have to check that they all correspond to a valid computation, and this can be written as 3CNF because each gate depends on at most two other gates.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;Introduce a variable &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y_{i}&quot; class=&quot;latex&quot; /&gt; for each non-input gate &lt;img src=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;g_{i}&quot; class=&quot;latex&quot; /&gt; in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt;. The value of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y_{i}&quot; class=&quot;latex&quot; /&gt; is intended to be the value of gate &lt;img src=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;g_{i}&quot; class=&quot;latex&quot; /&gt; during the computation. Whether the value of a gate &lt;img src=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;g_{i}&quot; class=&quot;latex&quot; /&gt; is correct is a function of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;3&quot; class=&quot;latex&quot; /&gt; variables: &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y_{i}&quot; class=&quot;latex&quot; /&gt; and the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le 2&quot; class=&quot;latex&quot; /&gt; gates that input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;g_{i}&quot; class=&quot;latex&quot; /&gt;, some of which could be input variables. This can be written as a 3CNF by Theorem &lt;a href=&quot;#x1-25003r3&quot;&gt;2.3&lt;!--tex4ht:ref: thm:every-function-ckt-Lupanov --&gt;&lt;/a&gt;. Take an And of all these 3CNFs. Finally, add clause &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y_%7Bo%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y_%7Bo%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y_%7Bo%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y_{o}&quot; class=&quot;latex&quot; /&gt; for the output gate &lt;img src=&quot;https://s0.wp.com/latex.php?latex=g_%7Bo%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=g_%7Bo%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=g_%7Bo%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;g_{o}&quot; class=&quot;latex&quot; /&gt;. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-56002r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 5.1.  &lt;/span&gt;Write down the 3CNF for the circuit in figure&amp;nbsp;&lt;a href=&quot;#x1-240062&quot;&gt;2.2&lt;!--tex4ht:ref: fig:Ckt --&gt;&lt;/a&gt;, as given by the proof of Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt; is &lt;em&gt;a depth-reduction&lt;/em&gt; result. Indeed, note that a 3CNF can be written as a circuit of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c&amp;#92;log s&quot; class=&quot;latex&quot; /&gt;, whereas the original circuit may have any depth. This is helpful for example if you don’t have the depth to run the circuit yourself. You can let someone else produce the computation, and you can check it in small depth.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We can combine Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt; with the simulations in Chapter &lt;a href=&quot;#x1-180002&quot;&gt;2&lt;!--tex4ht:ref: chap:The-alphabet-of --&gt;&lt;/a&gt; to reduce computation in other models to 3SAT. In particular, we can reduce MTMs running in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; to 3Sat of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;log ^{c}t&quot; class=&quot;latex&quot; /&gt;. To obtain such parameters we need the quasilinear simulation of MTMs by circuits, Theorem &lt;a href=&quot;#x1-25007r5&quot;&gt;2.5&lt;!--tex4ht:ref: thm:simu-TMs-by-CKTs-quasi-linear --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   However, recall that a quasilinear simulation of RAMs by circuits is not known. Only a power simulation is (which is obtained by combining the power simulation of RAMs by MTMs, Theorem &lt;a href=&quot;#x1-26003r6&quot;&gt;2.6&lt;!--tex4ht:ref: thm:simu-RAM-by-TM --&gt;&lt;/a&gt;, with a simulation of MTMs by circuits). This would reduce RAM computation running in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; to 3CNFs of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t^{c}&quot; class=&quot;latex&quot; /&gt;. We content ourselves with this power loss for the beginning of this chapter. Later in section&amp;nbsp;º&lt;a href=&quot;#x1-610005.3&quot;&gt;5.3&lt;!--tex4ht:ref: sec:RAM-to-SAT-quasilinear --&gt;&lt;/a&gt; we will obtain a quasi-linear simulation using an enjoyable argument which also bypasses Theorem &lt;a href=&quot;#x1-25007r5&quot;&gt;2.5&lt;!--tex4ht:ref: thm:simu-TMs-by-CKTs-quasi-linear --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   In fact, these simulations apply to a more general, &lt;em&gt;non-deterministic&lt;/em&gt;, model of computation. We define this model next, and then present the simulation with power loss in &lt;a href=&quot;#x1-60003r2&quot;&gt;5.2&lt;!--tex4ht:ref: thm:-3Sat-is-NP-complete --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.1   &lt;/span&gt; &lt;a id=&quot;x1-570005.1&quot;&gt;&lt;/a&gt;Nondeterministic computation&lt;/h3&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;In the concluding equation in Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt; there is an &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cexists+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;exists &quot; class=&quot;latex&quot; /&gt; quantifier on the right-hand side, but there isn’t one on the left, next to the circuit. However, because the simulation works for every input, we can “stick” a quantifier on the left and have the same result. The resulting circuit computation &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C(x,y)&quot; class=&quot;latex&quot; /&gt; has two inputs, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt;. We can think of it as a &lt;em&gt;non-deterministic&lt;/em&gt; circuit, which on input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; outputs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt; iff &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+y%3AC%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+y%3AC%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cexists+y%3AC%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;exists y:C(x,y)&quot; class=&quot;latex&quot; /&gt;. Following the discussion before, we could do the same for other models like TMs, MTMs, and RAMs. The message here is that – if we allow for an &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cexists+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;exists &quot; class=&quot;latex&quot; /&gt; quantifier, or in other words consider nondeterministic computation – efficient computation is &lt;em&gt;equivalent&lt;/em&gt; to 3CNF! This is one motivation for formally introducing a &lt;em&gt;nondeterministic &lt;/em&gt;computational model.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-57001r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Definition&lt;/b&gt; 5.1.  &lt;/span&gt;NTime&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(t(n))&quot; class=&quot;latex&quot; /&gt; is the set of functions &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%3AX%5Csubseteq+%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%3AX%5Csubseteq+%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%3AX%5Csubseteq+%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f:X&amp;#92;subseteq &amp;#92;{0,1&amp;#92;}^* &amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; for which there is a RAM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; such that:&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &amp;#8211; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%28x%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%28x%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%28x%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f(x)=1&quot; class=&quot;latex&quot; /&gt; iff &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%28%7Cx%7C%29%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%28%7Cx%7C%29%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%28%7Cx%7C%29%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;exists y&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{t(|x|)}&quot; class=&quot;latex&quot; /&gt; such that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M(x,y)=1&quot; class=&quot;latex&quot; /&gt;, and&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &amp;#8211; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M(x,y)&quot; class=&quot;latex&quot; /&gt; stops within &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28%7Cx%7C%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28%7Cx%7C%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28%7Cx%7C%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(|x|)&quot; class=&quot;latex&quot; /&gt; steps on every input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(x,y)&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We also define&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BNP%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cge+1%7D%5Ctext+%7BNTime%7D%28n%5E%7Bd%7D%29%2C%5C%5C+%5Ctext+%7BNExp%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cge+1%7D%5Ctext+%7BNTime%7D%282%5E%7Bn%5E%7Bd%7D%7D%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BNP%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cge+1%7D%5Ctext+%7BNTime%7D%28n%5E%7Bd%7D%29%2C%5C%5C+%5Ctext+%7BNExp%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cge+1%7D%5Ctext+%7BNTime%7D%282%5E%7Bn%5E%7Bd%7D%7D%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BNP%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cge+1%7D%5Ctext+%7BNTime%7D%28n%5E%7Bd%7D%29%2C%5C%5C+%5Ctext+%7BNExp%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cge+1%7D%5Ctext+%7BNTime%7D%282%5E%7Bn%5E%7Bd%7D%7D%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;text {NP}:= &amp;amp; &amp;#92;bigcup _{d&amp;#92;ge 1}&amp;#92;text {NTime}(n^{d}),&amp;#92;&amp;#92; &amp;#92;text {NExp}:= &amp;amp; &amp;#92;bigcup _{d&amp;#92;ge 1}&amp;#92;text {NTime}(2^{n^{d}}). &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Note that the running time of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; is a function of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|x|&quot; class=&quot;latex&quot; /&gt;, not &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7C%28x%2Cy%29%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7C%28x%2Cy%29%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7C%28x%2Cy%29%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|(x,y)|&quot; class=&quot;latex&quot; /&gt;. This difference is inconsequential for NP, since the composition of two powers is another power. But it is important for a more fine-grained analysis. We refer to a RAM machine as in Definition &lt;a href=&quot;#x1-57001r1&quot;&gt;5.1&lt;!--tex4ht:ref: def:NTime --&gt;&lt;/a&gt; as a &lt;em&gt;nondeterministic machine&lt;/em&gt;, and to the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M(x,y)&quot; class=&quot;latex&quot; /&gt; as the &lt;em&gt;nondeterministic choices,&lt;/em&gt; or &lt;em&gt;guesses, &lt;/em&gt;of the machine on input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We can also define NTime in a way that is similar to BPTime, Definition &lt;a href=&quot;#x1-27001r7&quot;&gt;2.7&lt;!--tex4ht:ref: def:BPTime-BPP --&gt;&lt;/a&gt;. The two definitions are essentially equivalent. Our choice for BPTime is motivated by the identification of BPTime with computation that is actually run. For example, in a programming language one uses an instruction like Rand to obtain random values; one does not think of the                                                                                                                                                                                     randomness as being part of the input. By contrast, NTime is a more abstract model, and the definition with the nondeterministic guesses explicitly laid out is closer in spirit to a 3CNF.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   All the problems we studied in section&amp;nbsp;º&lt;a href=&quot;#x1-500004.3&quot;&gt;4.3&lt;!--tex4ht:ref: sec:Reductions-from-3Sat --&gt;&lt;/a&gt; are in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-57002r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Fact&lt;/b&gt; 5.1.  &lt;/span&gt;3Sat, Clique, Cover-by-vertexes, SubsetSum, and 3Color are in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;For a 3Sat instance &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt;, the variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; correspond to an assignment. Checking if the assignment satisfies &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; is in P. This shows that 3Sat is in NP. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-57003r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 5.2.  &lt;/span&gt;Finish the proof by ad&lt;br /&gt;
dressing the other problems in Fact &lt;a href=&quot;#x1-57002r1&quot;&gt;5.1&lt;!--tex4ht:ref: fact:3Sa-etc-in-NP --&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h5 class=&quot;likesubsubsectionHead&quot;&gt;&lt;a id=&quot;x1-580005.1&quot;&gt;&lt;/a&gt;How to think of NP&lt;/h5&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;We can think of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt; as the problems which admit a solution that can be verified efficiently, namely in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;. For example for 3Sat it is easy to verify if an assignment satisfies the clauses, for 3Color it is easy to verify if a coloring is such that any edge has endpoints of different colors, for SubsetSum it is easy to verify if a subset has a sum equal to a target, and so on. However, as we saw above this verification step can be cast in a restricted model, namely a 3CNF. So we don’t have to think of the verification step as using the full power of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt; computation.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Here’s a vivid illustration of NP. Suppose I claim that the following matrix contains a &lt;img src=&quot;https://s0.wp.com/latex.php?latex=9&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=9&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=9&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;9&quot; class=&quot;latex&quot; /&gt;:&lt;/p&gt;
&lt;div style=&quot;text-align:center&quot;&gt;
&lt;div class=&quot;fbox&quot;&gt;
&lt;div class=&quot;minipage&quot;&gt;56788565634705634705637480563476&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;70156137805167840132838202386421&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;85720582340570372307580234576423&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;80275880237505788075075802346518&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;78502378564067807582348057285428&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;05723748754543650350562378804337&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;52305723485008160234723884077764&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;86543234567865435674567836738063&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;45463788486754345743457483460040&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;73273873486574375464584895741832&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;85075783485634856237847287422112&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;83748874883753485745788788223201&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   How can you tell, without tediously examining the whole matrix? However, if I tell you that it’s in row 10, 8 digits from the right, you can quickly check that I am right. I won’t be able to cheat, since you can check my claims. On the other hand I can provide a proof that’s easy to verify.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h5 class=&quot;likesubsubsectionHead&quot;&gt;&lt;a id=&quot;x1-590005.1&quot;&gt;&lt;/a&gt;P vs.&amp;nbsp;NP&lt;/h5&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;The flagship question of complexity theory is whether &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%3D%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%3D%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%3D%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}=&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt; or not. This is a young, prominent special case of the grand challenge we introduced in Chapter &lt;a href=&quot;#x1-370003&quot;&gt;3&lt;!--tex4ht:ref: chap:The-grand-challenge --&gt;&lt;/a&gt;. Contrary to the analogous question for &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {BPP}&quot; class=&quot;latex&quot; /&gt;, cf.&amp;nbsp;section&amp;nbsp;&lt;a href=&quot;#x1-290002.5.2&quot;&gt;2.5.2&lt;!--tex4ht:ref: subsec:BPTime-vs-time --&gt;&lt;/a&gt;, the general belief seems to be that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&amp;#92;ne &amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt;. Similarly to BPP, cf.&amp;nbsp;Theorem &lt;a href=&quot;#x1-29001r9&quot;&gt;2.9&lt;!--tex4ht:ref: thm:Time-vs-BPTime --&gt;&lt;/a&gt;, the best deterministic simulation of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt; runs in exponential time by trying all nondeterministic guesses. This gives the middle inclusion in the following fact; the other two are by definition.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-59001r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Fact&lt;/b&gt; 5.2.  &lt;/span&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Csubseteq+%5Ctext+%7BNP%7D%5Csubseteq+%5Ctext+%7BExp+%5Censuremath+%7B%5Csubseteq+%5Ctext+%7BNExp%7D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Csubseteq+%5Ctext+%7BNP%7D%5Csubseteq+%5Ctext+%7BExp+%5Censuremath+%7B%5Csubseteq+%5Ctext+%7BNExp%7D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Csubseteq+%5Ctext+%7BNP%7D%5Csubseteq+%5Ctext+%7BExp+%5Censuremath+%7B%5Csubseteq+%5Ctext+%7BNExp%7D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&amp;#92;subseteq &amp;#92;text {NP}&amp;#92;subseteq &amp;#92;text {Exp &amp;#92;ensuremath {&amp;#92;subseteq &amp;#92;text {NExp}}}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   A consequence of the Time Hierarchy Theorem &lt;a href=&quot;#x1-40003r4&quot;&gt;3.4&lt;!--tex4ht:ref: thm:TIME-hierarchy-TM --&gt;&lt;/a&gt; is that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&amp;#92;ne &amp;#92;text {Exp}&quot; class=&quot;latex&quot; /&gt;. From the inclusions above it follows that&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BNP%7D%5Ctext+%7B+or+NP%7D%5Cne+%5Ctext+%7BExp%2C+possibly+both%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BNP%7D%5Ctext+%7B+or+NP%7D%5Cne+%5Ctext+%7BExp%2C+possibly+both%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BP%7D%5Cne+%5Ctext+%7BNP%7D%5Ctext+%7B+or+NP%7D%5Cne+%5Ctext+%7BExp%2C+possibly+both%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;text {P}&amp;#92;ne &amp;#92;text {NP}&amp;#92;text { or NP}&amp;#92;ne &amp;#92;text {Exp, possibly both}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p&gt;Thus, we are not completely clueless, and we know that at least one important separation is lurking somewhere. Most people appear to think that &lt;em&gt;both&lt;/em&gt; separations hold, but we are unable to prove &lt;em&gt;either&lt;/em&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   For multi-tape machines, a separation between deterministic and non-deterministic linear time is in &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XPPST83&quot;&gt;24&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;conf/coco/Santhanam01&quot;&gt;27&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.2   &lt;/span&gt; &lt;a id=&quot;x1-600005.2&quot;&gt;&lt;/a&gt;NP-completeness&lt;/h3&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;We now go back to the question at the beginning of this chapter about reducing arbitrary computation to 3Sat. We shall reduce all of NP to 3Sat in Theorem &lt;a href=&quot;#x1-60003r2&quot;&gt;5.2&lt;!--tex4ht:ref: thm:-3Sat-is-NP-complete --&gt;&lt;/a&gt;. Problems like 3Sat admitting such reductions deserve a definition.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-60001r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Definition&lt;/b&gt; 5.2.  &lt;/span&gt;We call a problem &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&quot; class=&quot;latex&quot; /&gt;:&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   NP-hard if every problem in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt; reduces to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&quot; class=&quot;latex&quot; /&gt; in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;;&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   NP-complete if it is NP-hard and in NP.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   One can define &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt;-hard (and hence NP-complete) w.r.t.&amp;nbsp;different reductions, cf.&amp;nbsp;Chapter &lt;a href=&quot;#x1-450004&quot;&gt;4&lt;!--tex4ht:ref: chap:Reductions --&gt;&lt;/a&gt;, and we will do so later. But the simple choice above suffices for now.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Complete problems are the “hardest problems” in the class, as formalized in the following fact.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-60002r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Fact&lt;/b&gt; 5.3.  &lt;/span&gt;Suppose &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BL%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BL%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BL%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {L}&quot; class=&quot;latex&quot; /&gt; is NP-complete. Then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%7D%5CLeftrightarrow+%5Ctext+%7BP%7D%3D%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%7D%5CLeftrightarrow+%5Ctext+%7BP%7D%3D%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%7D%5CLeftrightarrow+%5Ctext+%7BP%7D%3D%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#92;in &amp;#92;text {P}&amp;#92;Leftrightarrow &amp;#92;text {P}=&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28%5CLeftarrow+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28%5CLeftarrow+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28%5CLeftarrow+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(&amp;#92;Leftarrow )&quot; class=&quot;latex&quot; /&gt; This is because &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#92;in &amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   (&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5CRightarrow+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5CRightarrow+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5CRightarrow+%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;Rightarrow )&quot; class=&quot;latex&quot; /&gt; Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%27%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%27%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%27%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#039;&amp;#92;in &amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt;. Because &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&quot; class=&quot;latex&quot; /&gt; is NP-hard we know that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%5Censuremath+%7B%5CRightarrow+L%27%5Cin+%5Ctext+%7BP%7D%7D.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%5Censuremath+%7B%5CRightarrow+L%27%5Cin+%5Ctext+%7BP%7D%7D.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%5Censuremath+%7B%5CRightarrow+L%27%5Cin+%5Ctext+%7BP%7D%7D.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#92;in &amp;#92;text {P&amp;#92;ensuremath {&amp;#92;Rightarrow L&amp;#039;&amp;#92;in &amp;#92;text {P}}.}&quot; class=&quot;latex&quot; /&gt; &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Fact &lt;a href=&quot;#x1-60002r3&quot;&gt;5.3&lt;!--tex4ht:ref: fact:np-complete-in-P-iff-p=00003Dnp --&gt;&lt;/a&gt; points to an important interplay between problems and complexity classes. We can study complexity classes by studying their complete problems, and vice versa.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The central result in the theory of NP completeness is the following.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-60003r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 5.2.  &lt;/span&gt;&lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XCook73&quot;&gt;7&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;#XLevin73&quot;&gt;20&lt;/a&gt;]&lt;/span&gt; 3Sat is NP-complete.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;3Sat is in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt; by Fact &lt;a href=&quot;#x1-57002r1&quot;&gt;5.1&lt;!--tex4ht:ref: fact:3Sa-etc-in-NP --&gt;&lt;/a&gt;. Next we prove NP-hardness. The main idea is Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt;, while the rest of the proof mostly amounts to opening up definitions and using some previous simulations. Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#92;in &amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt; and let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; be the corresponding TM which runs in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{d}&quot; class=&quot;latex&quot; /&gt; on inputs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(x,y)&quot; class=&quot;latex&quot; /&gt; where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7Cx%7C%3Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7Cx%7C%3Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7Cx%7C%3Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|x|=n&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7Cy%7C%3Dn%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7Cy%7C%3Dn%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7Cy%7C%3Dn%5E%7Bd%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|y|=n^{d}&quot; class=&quot;latex&quot; /&gt;, for some constant &lt;img src=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=d&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;d&quot; class=&quot;latex&quot; /&gt;. We can work with TMs instead of RAMs since they are equivalent up to a power loss, as we saw in Theorem &lt;a href=&quot;#x1-26003r6&quot;&gt;2.6&lt;!--tex4ht:ref: thm:simu-RAM-by-TM --&gt;&lt;/a&gt;. We can construct in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P }&quot; class=&quot;latex&quot; /&gt;a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C(x,y)&quot; class=&quot;latex&quot; /&gt; of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7Dn%5E%7Bc_%7Bd%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7Dn%5E%7Bc_%7Bd%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7BM%7Dn%5E%7Bc_%7Bd%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{M}n^{c_{d}}&quot; class=&quot;latex&quot; /&gt; such that for any &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%2Cy&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%2Cy&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%2Cy&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x,y&quot; class=&quot;latex&quot; /&gt; we have &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1%5CLeftrightarrow+C%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1%5CLeftrightarrow+C%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1%5CLeftrightarrow+C%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M(x,y)=1&amp;#92;Leftrightarrow C(x,y)=1&quot; class=&quot;latex&quot; /&gt; by Theorem &lt;a href=&quot;#x1-25006r4&quot;&gt;2.4&lt;!--tex4ht:ref: thm:simu-tm-by-ckts-simple --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Now, suppose we are given an input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt; for which we are trying to decide membership in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&quot; class=&quot;latex&quot; /&gt;. This is equivalent to deciding if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+y%3AC%28w%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cexists+y%3AC%28w%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cexists+y%3AC%28w%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;exists y:C(w,y)=1&quot; class=&quot;latex&quot; /&gt; by what we just said. We can “hard-wire” &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt; into &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; to obtain the circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7Bw%7D%28y%29%3A%3DC%28w%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7Bw%7D%28y%29%3A%3DC%28w%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7Bw%7D%28y%29%3A%3DC%28w%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{w}(y):=C(w,y)&quot; class=&quot;latex&quot; /&gt; only on the variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt;, with no loss in size. Here by “hard-wise” se mean replacing the input gates &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; with the bits of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt;. Now we can apply Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt; to this new circuit to produce a 3CNF &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f_%7Bw%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f_%7Bw%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f_%7Bw%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f_{w}&quot; class=&quot;latex&quot; /&gt; on variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; and new variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;z&quot; class=&quot;latex&quot; /&gt; such that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7Bw%7D%28y%29%3D1%5CLeftrightarrow+%5Cexists+z%3Af%28y%2Cz%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7Bw%7D%28y%29%3D1%5CLeftrightarrow+%5Cexists+z%3Af%28y%2Cz%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7Bw%7D%28y%29%3D1%5CLeftrightarrow+%5Cexists+z%3Af%28y%2Cz%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{w}(y)=1&amp;#92;Leftrightarrow &amp;#92;exists z:f(y,z)=1&quot; class=&quot;latex&quot; /&gt;, for any &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt;. The size of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f_%7Bw%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f_%7Bw%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f_%7Bw%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f_{w}&quot; class=&quot;latex&quot; /&gt; and the number of variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;z&quot; class=&quot;latex&quot; /&gt; is power in the size of the circuit.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We have obtained:&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+w%5Cin+L%5CLeftrightarrow+%5Cexists+y%3AM%28w%2Cy%29%3D1%5CLeftrightarrow+%5Cexists+y%3AC_%7Bw%7D%28y%29%3D1%5CLeftrightarrow+%5Cexists+y%2Cz%3Af_%7Bw%7D%28y%2Cz%29%3D1%5CLeftrightarrow+f_%7Bw%7D%5Cin+%5Ctext+%7B3Sat%2C%7D+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+w%5Cin+L%5CLeftrightarrow+%5Cexists+y%3AM%28w%2Cy%29%3D1%5CLeftrightarrow+%5Cexists+y%3AC_%7Bw%7D%28y%29%3D1%5CLeftrightarrow+%5Cexists+y%2Cz%3Af_%7Bw%7D%28y%2Cz%29%3D1%5CLeftrightarrow+f_%7Bw%7D%5Cin+%5Ctext+%7B3Sat%2C%7D+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+w%5Cin+L%5CLeftrightarrow+%5Cexists+y%3AM%28w%2Cy%29%3D1%5CLeftrightarrow+%5Cexists+y%3AC_%7Bw%7D%28y%29%3D1%5CLeftrightarrow+%5Cexists+y%2Cz%3Af_%7Bw%7D%28y%2Cz%29%3D1%5CLeftrightarrow+f_%7Bw%7D%5Cin+%5Ctext+%7B3Sat%2C%7D+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} w&amp;#92;in L&amp;#92;Leftrightarrow &amp;#92;exists y:M(w,y)=1&amp;#92;Leftrightarrow &amp;#92;exists y:C_{w}(y)=1&amp;#92;Leftrightarrow &amp;#92;exists y,z:f_{w}(y,z)=1&amp;#92;Leftrightarrow f_{w}&amp;#92;in &amp;#92;text {3Sat,} &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p&gt;as desired. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   In section&amp;nbsp;º&lt;a href=&quot;#x1-500004.3&quot;&gt;4.3&lt;!--tex4ht:ref: sec:Reductions-from-3Sat --&gt;&lt;/a&gt; we reduced 3Sat to other problems which are also in NP by Fact &lt;a href=&quot;#x1-57002r1&quot;&gt;5.1&lt;!--tex4ht:ref: fact:3Sa-etc-in-NP --&gt;&lt;/a&gt;. This implies that all these problems are NP-complete. Here we use that if problem &lt;img src=&quot;https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;A&quot; class=&quot;latex&quot; /&gt; reduces to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;B&quot; class=&quot;latex&quot; /&gt; in P, and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;B&quot; class=&quot;latex&quot; /&gt; reduces to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt;, then also &lt;img src=&quot;https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;A&quot; class=&quot;latex&quot; /&gt; reduces to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt;. This is because if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&amp;#92;in &amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt; then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=B%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=B%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=B%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;B&amp;#92;in &amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;, and so &lt;img src=&quot;https://s0.wp.com/latex.php?latex=A%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=A%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=A%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;A&amp;#92;in &amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-60004r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Corollary&lt;/b&gt; 5.1.  &lt;/span&gt; Clique, Cover-by-vertexes, Subset-sum, and 3Color are NP-complete.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   It is important to note that there is nothing special about the &lt;em&gt;existence&lt;/em&gt; of NP-complete problems. The following is a simple such problem that does not require any of the machinery in this section.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-60005r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 5.3.  &lt;/span&gt;Consider the problem, given a RAM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt;, an input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;, and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;in &amp;#92;mathbb {N}&quot; class=&quot;latex&quot; /&gt;, where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; is written in unary, decide if there is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{t}&quot; class=&quot;latex&quot; /&gt; such that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M%28x%2Cy%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M(x,y)=1&quot; class=&quot;latex&quot; /&gt;. Prove that this is NP-complete.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   What if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; is written in binary?&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The interesting aspect of NP-complete problems such as 3Sat and those in Corollary &lt;a href=&quot;#x1-60004r1&quot;&gt;5.1&lt;!--tex4ht:ref: cor:all-probs-NP-complete --&gt;&lt;/a&gt; is that they are very simple and structured, and don’t refer to computational models. This makes them suitable for reductions, and for inferring properties of the complexity class which are not evident from a machine-based definition.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.3   &lt;/span&gt; &lt;a id=&quot;x1-610005.3&quot;&gt;&lt;/a&gt;From RAM to 3SAT in quasi-linear time&lt;/h3&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;The framework in the previous section is useful to relate membership in P of different problems in NP, but it is not suitable for a more fine-grained analysis. For example, under the assumption that 3Sat is in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28cn%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28cn%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28cn%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {Time}(cn)&quot; class=&quot;latex&quot; /&gt; we cannot immediately conclude that other problems in NP are solvable in this time or in about this time. We can only conclude that they are in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;. In particular, the complexity of 3Sat cannot be related to that of other central conjectures, such as whether 3Sum is in subquadratic time, Conjecture &lt;a href=&quot;#x1-49003r1&quot;&gt;4.1&lt;!--tex4ht:ref: conj:3sum --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The culprit is the power loss in reducing RAM computation to circuits, mentioned at the beginning of the chapter. We now remedy this situation and present a quasi-linear reduction. As we did before, cf.&amp;nbsp;Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt; and Theorem &lt;a href=&quot;#x1-60003r2&quot;&gt;5.2&lt;!--tex4ht:ref: thm:-3Sat-is-NP-complete --&gt;&lt;/a&gt;, we first state a version of the simulation for (deterministic) computation which contains all the main ideas, and then we note that a completeness result follows.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-61001r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 5.3.  &lt;/span&gt;Given an input length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&amp;#92;in &amp;#92;mathbb {N}&quot; class=&quot;latex&quot; /&gt;, a time bound &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Cin+%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;in &amp;#92;mathbb {N}&quot; class=&quot;latex&quot; /&gt;, and a RAM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; that runs in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; on inputs of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; bits, we can compute in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%27%3A%3Dc_%7BM%7Dt%28%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%27%3A%3Dc_%7BM%7Dt%28%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%27%3A%3Dc_%7BM%7Dt%28%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#039;:=c_{M}t(&amp;#92;log t)^{c}&quot; class=&quot;latex&quot; /&gt; a 3CNF &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; on variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(x,y)&quot; class=&quot;latex&quot; /&gt; where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7Cy%7C%5Cle+t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7Cy%7C%5Cle+t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7Cy%7C%5Cle+t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|y|&amp;#92;le t&amp;#039;&quot; class=&quot;latex&quot; /&gt; such that for every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{n}&quot; class=&quot;latex&quot; /&gt;:&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+M%28x%29%3D1%5Ciff+%5Cexists+y%3Af%28x%2Cy%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+M%28x%29%3D1%5Ciff+%5Cexists+y%3Af%28x%2Cy%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+M%28x%29%3D1%5Ciff+%5Cexists+y%3Af%28x%2Cy%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} M(x)=1&amp;#92;iff &amp;#92;exists y:f(x,y)=1. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We now present the proof of this amazing result; you may want to refer back to Definition &lt;a href=&quot;#x1-26001r5&quot;&gt;2.5&lt;!--tex4ht:ref: def:RAM --&gt;&lt;/a&gt; of a RAM. A key concept in the proof is the following “snapshot” of the RAM computation.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-61002r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Definition&lt;/b&gt; 5.3.  &lt;/span&gt;The &lt;em&gt;internal configuration, &lt;/em&gt;abbreviated IC&lt;em&gt;, &lt;/em&gt;of a RAM specifies:&lt;/p&gt;
&lt;ul class=&quot;itemize1&quot;&gt;
&lt;li class=&quot;itemize&quot;&gt;its registers,&lt;/li&gt;
&lt;li class=&quot;itemize&quot;&gt;the program counter,&lt;/li&gt;
&lt;li class=&quot;itemize&quot;&gt;the word length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt;, and&lt;/li&gt;
&lt;li class=&quot;itemize&quot;&gt;if the current instruction is a Read &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r_%7Bi%7D%3A%3D%5Cmu+%5Br_%7Bj%7D%5D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=r_%7Bi%7D%3A%3D%5Cmu+%5Br_%7Bj%7D%5D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=r_%7Bi%7D%3A%3D%5Cmu+%5Br_%7Bj%7D%5D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;r_{i}:=&amp;#92;mu [r_{j}]&quot; class=&quot;latex&quot; /&gt; or Write &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmu+%5Br_%7Bj%7D%5D%3A%3Dr_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmu+%5Br_%7Bj%7D%5D%3A%3Dr_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmu+%5Br_%7Bj%7D%5D%3A%3Dr_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mu [r_{j}]:=r_{i}&quot; class=&quot;latex&quot; /&gt; then the IC includes the content &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmu+%5Br_%7Bj%7D%5D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmu+%5Br_%7Bj%7D%5D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmu+%5Br_%7Bj%7D%5D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mu [r_{j}]&quot; class=&quot;latex&quot; /&gt; of the       memory cell indexed by &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;r_{j}&quot; class=&quot;latex&quot; /&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Note that at most one memory cell is included in one IC. By contrast, the configuration of a TM (Definition &lt;a href=&quot;#x1-19001r1&quot;&gt;2.1&lt;!--tex4ht:ref: def:TM --&gt;&lt;/a&gt;) includes all its tape cells. Also note that an IC has length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le c_{M}+c&amp;#92;log t&quot; class=&quot;latex&quot; /&gt; bits, where the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{M}&quot; class=&quot;latex&quot; /&gt; is for the program counter, and the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c&amp;#92;log t&quot; class=&quot;latex&quot; /&gt; is for the rest, using that the maximum word length of a machine running in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;ge n&quot; class=&quot;latex&quot; /&gt; is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c&amp;#92;log t&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;paragraphHead&quot;&gt;&lt;a id=&quot;x1-620005.3&quot;&gt;&lt;/a&gt;The key idea in the proof.&lt;/span&gt;    At the high level, the approach is, like in Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt;, to guess computation and check it efficiently. We are going to &lt;em&gt;guess &lt;/em&gt;the sequence of ICs, and we need additional ideas to check them efficiently by a circuit. This is not immediate, since, again, the RAM can use direct access to read and write in memory at arbitrary locations, something which is not easy to do with a circuit.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The key idea is to check operations involving memory &lt;em&gt;independently &lt;/em&gt;from the operations involving registers but not memory. If both checks pass, then the computation is correct. More precisely, a sequence of internal configurations &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7B1%7D%2Cs_%7B2%7D%2C%5Cldots+%2Cs_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7B1%7D%2Cs_%7B2%7D%2C%5Cldots+%2Cs_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7B1%7D%2Cs_%7B2%7D%2C%5Cldots+%2Cs_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{1},s_{2},&amp;#92;ldots ,s_{t}&quot; class=&quot;latex&quot; /&gt; corresponds to the computation of the RAM on input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; iff for every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i%3Ct&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i%3Ct&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i%3Ct&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&amp;lt;t&quot; class=&quot;latex&quot; /&gt;:
&lt;/p&gt;
&lt;ol class=&quot;enumerate1&quot;&gt;
&lt;li class=&quot;enumerate&quot; id=&quot;x1-62002x1&quot;&gt;If &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{i}&quot; class=&quot;latex&quot; /&gt; does not access memory, then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{i+1}&quot; class=&quot;latex&quot; /&gt; has its registers, program counter, and word length       updated according to the instruction executed in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{i}&quot; class=&quot;latex&quot; /&gt;,&lt;/li&gt;
&lt;li class=&quot;enumerate&quot; id=&quot;x1-62004x2&quot;&gt;If &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{i}&quot; class=&quot;latex&quot; /&gt; is computing a read operation &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r_%7Bi%7D%3A%3D%5Ctext+%7B%5Censuremath+%7B%5Cmu+%5Br_%7Bj%7D%5D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=r_%7Bi%7D%3A%3D%5Ctext+%7B%5Censuremath+%7B%5Cmu+%5Br_%7Bj%7D%5D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=r_%7Bi%7D%3A%3D%5Ctext+%7B%5Censuremath+%7B%5Cmu+%5Br_%7Bj%7D%5D%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;r_{i}:=&amp;#92;text {&amp;#92;ensuremath {&amp;#92;mu [r_{j}]}}&quot; class=&quot;latex&quot; /&gt; then in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{i+1}&quot; class=&quot;latex&quot; /&gt; register &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;r_{j}&quot; class=&quot;latex&quot; /&gt; contains &lt;em&gt;the most recent value       written in memory cell &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;r_{j}&quot; class=&quot;latex&quot; /&gt;&lt;/em&gt;. In case this cell was never written, then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=r_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;r_{j}&quot; class=&quot;latex&quot; /&gt; should contain &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x_%7Bj%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x_{j}&quot; class=&quot;latex&quot; /&gt; if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=j%5Cin+%5C%7B1%2C2%2C%5Cldots+%2Cn%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=j%5Cin+%5C%7B1%2C2%2C%5Cldots+%2Cn%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=j%5Cin+%5C%7B1%2C2%2C%5Cldots+%2Cn%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;j&amp;#92;in &amp;#92;{1,2,&amp;#92;ldots ,n&amp;#92;}&quot; class=&quot;latex&quot; /&gt;, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;       if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=j%3D0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=j%3D0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=j%3D0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;j=0&quot; class=&quot;latex&quot; /&gt;, and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt; otherwise. The program counter in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7Bi%2B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{i+1}&quot; class=&quot;latex&quot; /&gt; also points to the next instruction.&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;Rather than directly constructing a 3CNF that implements these checks, we construct a circuit and then appeal to Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt;. It is easy to construct a circuit of quasi-linear size implementing Check 1, since the circuit only has to check adjacent pairs of ICs. As remarked before, these ICs have length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le c_{M}+c&amp;#92;log t&quot; class=&quot;latex&quot; /&gt;. For fixed &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i%2C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i%2C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i%2C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i,&quot; class=&quot;latex&quot; /&gt; Check 1 can be implemented by a circuit which depends on the RAM and has size power in the length of an IC. Taking an And of these circuits over the choices of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; gives a circuit of the desired size for Check 1.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The difficulty lies in Check 2, because the circuit needs to find “the most recent value written.” The solution is to &lt;em&gt;sort&lt;/em&gt; the ICs by memory addresses. After sorting, we can implement Check (2) as easily as Check (1), since we just need to check adjacent pairs of ICs.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The emergence of sorting in the theory of NP-completeness cements the pivotal role this operation plays in computer science.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   To implement this idea we need to be able to sort with a quasi-linear size circuit. Standard sorting algorithms like Mergesort, Heapsort, or Radixsort run in quasi-linear time on a RAM, but rely on direct addressing (cf.&amp;nbsp;section&amp;nbsp;º&lt;a href=&quot;#x1-260002.4&quot;&gt;2.4&lt;!--tex4ht:ref: sec:RAMs --&gt;&lt;/a&gt;) and for this reason cannot be easily implemented by a circuit of quasi-linear size. However other algorithms have been developed that do have such an implementation, for example a variant of Mergesort called Odd-Even-Mergesort &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XBatcher68&quot;&gt;6&lt;/a&gt;]&lt;/span&gt;, see also &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XViolaNEU-ram2sat-neu-author&quot;&gt;22&lt;/a&gt;]&lt;/span&gt;. This gives the following lemma.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-62005r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Lemma&lt;/b&gt; 5.1.  &lt;/span&gt;Given &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;m&quot; class=&quot;latex&quot; /&gt; we can compute in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%27%3A%3Dt%5Ccdot+%28m%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%27%3A%3Dt%5Ccdot+%28m%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%27%3A%3Dt%5Ccdot+%28m%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#039;:=t&amp;#92;cdot (m&amp;#92;log t)^{c}&quot; class=&quot;latex&quot; /&gt; a circuit (of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le t&amp;#039;&quot; class=&quot;latex&quot; /&gt;) that sorts &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; integers of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=m&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;m&quot; class=&quot;latex&quot; /&gt; bits.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We summarize the key steps in the proof.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof of Theorem &lt;a href=&quot;#x1-61001r3&quot;&gt;5.3&lt;!--tex4ht:ref: thm:redux-RAM-2-3cnf-quasilinear --&gt;&lt;/a&gt;&lt;/b&gt;.&amp;nbsp;&lt;/span&gt; We construct a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{M}&quot; class=&quot;latex&quot; /&gt; and then appeal to Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt;. The extra variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; correspond to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; ICs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7B1%7D%2Cs_%7B2%7D%2C%5Cldots+%2Cs_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7B1%7D%2Cs_%7B2%7D%2C%5Cldots+%2Cs_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7B1%7D%2Cs_%7B2%7D%2C%5Cldots+%2Cs_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{1},s_{2},&amp;#92;ldots ,s_{t}&quot; class=&quot;latex&quot; /&gt;. An IC takes &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7BM%7D%2Bc%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{M}+c&amp;#92;log t&quot; class=&quot;latex&quot; /&gt; bits to specify, so we need &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7Dt%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7Dt%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7Dt%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le c_{M}t&amp;#92;log t&quot; class=&quot;latex&quot; /&gt; variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt;. The circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{M}&quot; class=&quot;latex&quot; /&gt; first performs Check (1) above for each adjacent pair &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28s_%7Bi%7D%2Cs_%7Bi%2B1%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28s_%7Bi%7D%2Cs_%7Bi%2B1%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28s_%7Bi%7D%2Cs_%7Bi%2B1%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(s_{i},s_{i+1})&quot; class=&quot;latex&quot; /&gt; of ICs. This takes size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7D%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7D%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7BM%7D%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{M}&amp;#92;log ^{c}t&quot; class=&quot;latex&quot; /&gt; for each pair, and so size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7Dt%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7Dt%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7BM%7Dt%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{M}t&amp;#92;log ^{c}t&quot; class=&quot;latex&quot; /&gt; overall.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{M}&quot; class=&quot;latex&quot; /&gt; sorts the ICs by memory addresses, producing sorted ICs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%27_%7B1%7D%2Cs%27_%7B2%7D%2C%5Cldots+%2Cs%27_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%27_%7B1%7D%2Cs%27_%7B2%7D%2C%5Cldots+%2Cs%27_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%27_%7B1%7D%2Cs%27_%7B2%7D%2C%5Cldots+%2Cs%27_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#039;_{1},s&amp;#039;_{2},&amp;#92;ldots ,s&amp;#039;_{t}&quot; class=&quot;latex&quot; /&gt;. This takes size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Ccdot+%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Ccdot+%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Ccdot+%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;cdot &amp;#92;log ^{c}t&quot; class=&quot;latex&quot; /&gt; by Lemma &lt;a href=&quot;#x1-62005r1&quot;&gt;5.1&lt;!--tex4ht:ref: lem:sorting-ckt-quasilinear --&gt;&lt;/a&gt;, using that the memory addresses have &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+c%5Clog+t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le c&amp;#92;log t&quot; class=&quot;latex&quot; /&gt; bits. Then the circuit performs Check (2) for each adjacent pair &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28s%27_%7Bi%7D%2Cs%27_%7Bi%2B1%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28s%27_%7Bi%7D%2Cs%27_%7Bi%2B1%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28s%27_%7Bi%7D%2Cs%27_%7Bi%2B1%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(s&amp;#039;_{i},s&amp;#039;_{i+1})&quot; class=&quot;latex&quot; /&gt; of ICs. The circuit size required for this is no more than for Check (1).&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Finally, the circuit takes an And of the results of the two checks, and also checks that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s_%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s_{t}&quot; class=&quot;latex&quot; /&gt; is accepting. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We can now prove completeness in a manner similar to Theorem &lt;a href=&quot;#x1-60003r2&quot;&gt;5.2&lt;!--tex4ht:ref: thm:-3Sat-is-NP-complete --&gt;&lt;/a&gt;, with a relatively simple extension of Theorem &lt;a href=&quot;#x1-61001r3&quot;&gt;5.3&lt;!--tex4ht:ref: thm:redux-RAM-2-3cnf-quasilinear --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-62006r4&quot;&gt;&lt;/a&gt;                                                                                                                                                                                     &lt;b&gt;Theorem&lt;/b&gt; 5.4.  &lt;/span&gt;Every problem &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&quot; class=&quot;latex&quot; /&gt; in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNTime%7D%28t%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNTime%7D%28t%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNTime%7D%28t%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NTime}(t)&quot; class=&quot;latex&quot; /&gt; map reduces to 3Sat in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28c_%7BL%2Ct%7Dt%5Clog+%5E%7Bc%7Dt%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28c_%7BL%2Ct%7Dt%5Clog+%5E%7Bc%7Dt%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28c_%7BL%2Ct%7Dt%5Clog+%5E%7Bc%7Dt%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {Time}(c_{L,t}t&amp;#92;log ^{c}t)&quot; class=&quot;latex&quot; /&gt;, for every function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;ge n&quot; class=&quot;latex&quot; /&gt; such that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(x)&quot; class=&quot;latex&quot; /&gt; is computable in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(x)&quot; class=&quot;latex&quot; /&gt; given &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The assumption on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; is similar to that in the hierarchy Theorem &lt;a href=&quot;#x1-40003r4&quot;&gt;3.4&lt;!--tex4ht:ref: thm:TIME-hierarchy-TM --&gt;&lt;/a&gt;, and is satisfied by all standard functions including all those in this book – cf.&amp;nbsp;discussion after Theorem &lt;a href=&quot;#x1-40003r4&quot;&gt;3.4&lt;!--tex4ht:ref: thm:TIME-hierarchy-TM --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; be a RAM computing &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&quot; class=&quot;latex&quot; /&gt; in the assumed time. Given an input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt; of length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; we have to efficiently compute a 3CNF &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; such that&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%28n%29%7D%3AM%28w%2Cy%29%3D1%5Ciff+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bc_%7BL%2Ct%7Dt%28n%29%5Clog+%5E%7Bc%7Dt%28n%29%7D%3Af%28y%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%28n%29%7D%3AM%28w%2Cy%29%3D1%5Ciff+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bc_%7BL%2Ct%7Dt%28n%29%5Clog+%5E%7Bc%7Dt%28n%29%7D%3Af%28y%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bt%28n%29%7D%3AM%28w%2Cy%29%3D1%5Ciff+%5Cexists+y%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bc_%7BL%2Ct%7Dt%28n%29%5Clog+%5E%7Bc%7Dt%28n%29%7D%3Af%28y%29%3D1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;exists y&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{t(n)}:M(w,y)=1&amp;#92;iff &amp;#92;exists y&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{c_{L,t}t(n)&amp;#92;log ^{c}t(n)}:f(y)=1. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   First we compute &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)&quot; class=&quot;latex&quot; /&gt;, using the assumption. We now apply Theorem &lt;a href=&quot;#x1-61001r3&quot;&gt;5.3&lt;!--tex4ht:ref: thm:redux-RAM-2-3cnf-quasilinear --&gt;&lt;/a&gt;, but on a new input length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%27%3A%3Dc%28n%2Bt%29%5Cle+ct&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%27%3A%3Dc%28n%2Bt%29%5Cle+ct&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%27%3A%3Dc%28n%2Bt%29%5Cle+ct&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&amp;#039;:=c(n+t)&amp;#92;le ct&quot; class=&quot;latex&quot; /&gt;, to accommodate for inputs of the form &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(x,y)&quot; class=&quot;latex&quot; /&gt;. This produces a formula &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7BL%2Ct%7Dt%28%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7BL%2Ct%7Dt%28%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7BL%2Ct%7Dt%28%5Clog+t%29%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{L,t}t(&amp;#92;log t)^{c}&quot; class=&quot;latex&quot; /&gt; in variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28x%2Cy%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(x,y)&quot; class=&quot;latex&quot; /&gt; and new variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;z&quot; class=&quot;latex&quot; /&gt;. We can now set &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=w&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;w&quot; class=&quot;latex&quot; /&gt; and conclude the proof. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   With these sharper results we can now study hardness and completenss within time bounds such as &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{2}&quot; class=&quot;latex&quot; /&gt;, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5Clog+%5E%7B3%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5Clog+%5E%7B3%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5Clog+%5E%7B3%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&amp;#92;log ^{3}n&quot; class=&quot;latex&quot; /&gt; etc. We work out an example in the next section.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h4 class=&quot;subsectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.3.1   &lt;/span&gt; &lt;a id=&quot;x1-630005.3.1&quot;&gt;&lt;/a&gt;Quasilinear-time completeness&lt;/h4&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;In this section we use the machinery we just developed to study completeness in quasi-linear time, instead of power time.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-63001r4&quot;&gt;&lt;/a&gt; &lt;b&gt;Definition&lt;/b&gt; 5.4.  &lt;/span&gt;We define the quasi-linear time complexity classes&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BQLin-Time%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cin+%5Cmathbb+%7BN%7D%7D%5Ctext+%7BTime%7D%28n%5Clog+%5E%7Bd%7Dn%29%5Ctext+%7B+and%7D%5C%5C+%5Ctext+%7BQLin-NTime%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cin+%5Cmathbb+%7BN%7D%7D%5Ctext+%7BNTime%7D%28n%5Clog+%5E%7Bd%7Dn%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BQLin-Time%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cin+%5Cmathbb+%7BN%7D%7D%5Ctext+%7BTime%7D%28n%5Clog+%5E%7Bd%7Dn%29%5Ctext+%7B+and%7D%5C%5C+%5Ctext+%7BQLin-NTime%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cin+%5Cmathbb+%7BN%7D%7D%5Ctext+%7BNTime%7D%28n%5Clog+%5E%7Bd%7Dn%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Ctext+%7BQLin-Time%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cin+%5Cmathbb+%7BN%7D%7D%5Ctext+%7BTime%7D%28n%5Clog+%5E%7Bd%7Dn%29%5Ctext+%7B+and%7D%5C%5C+%5Ctext+%7BQLin-NTime%7D%3A%3D+%26+%5Cbigcup+_%7Bd%5Cin+%5Cmathbb+%7BN%7D%7D%5Ctext+%7BNTime%7D%28n%5Clog+%5E%7Bd%7Dn%29.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;text {QLin-Time}:= &amp;amp; &amp;#92;bigcup _{d&amp;#92;in &amp;#92;mathbb {N}}&amp;#92;text {Time}(n&amp;#92;log ^{d}n)&amp;#92;text { and}&amp;#92;&amp;#92; &amp;#92;text {QLin-NTime}:= &amp;amp; &amp;#92;bigcup _{d&amp;#92;in &amp;#92;mathbb {N}}&amp;#92;text {NTime}(n&amp;#92;log ^{d}n). &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-63002r5&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 5.5.  &lt;/span&gt;3Sat is complete for QLin-NTime with respect to mapping reductions in QLin-Time. That is:&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &amp;#8211; 3Sat is in QLin-NTime, and&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &amp;#8211; every problem in QLin-NTime map reduces to 3Sat in QLin-Time.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;To show that 3Sat is in QLin-NTime, consider a 3CNF instance &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; of length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;. This instance has at most &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; variables, and we can guess an assignment &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; to them within our budget of non-deterministic guesses. There remains to verify that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; satisfies &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt;. For this, we can do one pass over the clauses. For each clause, we access the bits in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; corresponding to the 3 variables in the clause, and check if the clause is satisfied. This takes constant time per clause, and so time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn&quot; class=&quot;latex&quot; /&gt; overall.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The second part follows from Theorem &lt;a href=&quot;#x1-62006r4&quot;&gt;5.4&lt;!--tex4ht:ref: thm:redux-NTime-3Sat --&gt;&lt;/a&gt;, using the fact that the composition of two quasilinear functions is also quasilinear (similarly to the fact that the composition of two power functions is also a power). &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Note that the proof that 3Sat is in QLin-NTime relies on our computational model being a RAM, because we use direct access to fetch the values for the variables in a clause.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We can now give the following quasi-linear version of Fact &lt;a href=&quot;#x1-60002r3&quot;&gt;5.3&lt;!--tex4ht:ref: fact:np-complete-in-P-iff-p=00003Dnp --&gt;&lt;/a&gt;. The only extra observation for the proof is again that the composition of two quasi-linear functions is quasi-linear.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-63003r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Corollary&lt;/b&gt; 5.2.  &lt;/span&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7B3Sat%7D%5Cin+%5Ctext+%7BQLin-NTime%7D%5CLeftrightarrow+%5Ctext+%7BQLin-NTime%7D%3D%5Ctext+%7BQLin-Time.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7B3Sat%7D%5Cin+%5Ctext+%7BQLin-NTime%7D%5CLeftrightarrow+%5Ctext+%7BQLin-NTime%7D%3D%5Ctext+%7BQLin-Time.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7B3Sat%7D%5Cin+%5Ctext+%7BQLin-NTime%7D%5CLeftrightarrow+%5Ctext+%7BQLin-NTime%7D%3D%5Ctext+%7BQLin-Time.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {3Sat}&amp;#92;in &amp;#92;text {QLin-NTime}&amp;#92;Leftrightarrow &amp;#92;text {QLin-NTime}=&amp;#92;text {QLin-Time.}&quot; class=&quot;latex&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-63004r4&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 5.4.  &lt;/span&gt;Prove that Theorem &lt;a href=&quot;#x1-63002r5&quot;&gt;5.5&lt;!--tex4ht:ref: thm:3Sat-is-complete-quasilinear --&gt;&lt;/a&gt; holds with 3Color instead of 3Sat. What about Clique and Subset-sum?&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-63005r5&quot;&gt;&lt;/a&gt;                                                                                                                                                                                     &lt;b&gt;Exercise&lt;/b&gt; 5.5.  &lt;/span&gt;Prove that 3Sum reduces to 3Sat in Subquadratic time. That is: &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7B3Sat%7D%5Cin+%5Ctext+%7BSubquadraticTime%5Censuremath+%7B%5CRightarrow+%5Ctext+%7B3Sum%7D%5Cin+%5Ctext+%7BSubquadraticTime%7D%7D+%28i.e.%2C+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7B3Sat%7D%5Cin+%5Ctext+%7BSubquadraticTime%5Censuremath+%7B%5CRightarrow+%5Ctext+%7B3Sum%7D%5Cin+%5Ctext+%7BSubquadraticTime%7D%7D+%28i.e.%2C+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7B3Sat%7D%5Cin+%5Ctext+%7BSubquadraticTime%5Censuremath+%7B%5CRightarrow+%5Ctext+%7B3Sum%7D%5Cin+%5Ctext+%7BSubquadraticTime%7D%7D+%28i.e.%2C+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {3Sat}&amp;#92;in &amp;#92;text {SubquadraticTime&amp;#92;ensuremath {&amp;#92;Rightarrow &amp;#92;text {3Sum}&amp;#92;in &amp;#92;text {SubquadraticTime}} (i.e., }&quot; class=&quot;latex&quot; /&gt;Conjecture &lt;a href=&quot;#x1-49003r1&quot;&gt;4.1&lt;!--tex4ht:ref: conj:3sum --&gt;&lt;/a&gt; is false).&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.4   &lt;/span&gt; &lt;a id=&quot;x1-640005.4&quot;&gt;&lt;/a&gt;Completeness in other classes&lt;/h3&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;The completeness phenomenon is not special to NP but enjoyed by many other classes. In this section we begin to explore completeness for NExp and Exp. One needs to be careful how hardness (and hence completeness) is defined, since these classes are known to be different from &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt; by the hierarchy Theorem &lt;a href=&quot;#x1-40003r4&quot;&gt;3.4&lt;!--tex4ht:ref: thm:TIME-hierarchy-TM --&gt;&lt;/a&gt;. So defining a problem &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&quot; class=&quot;latex&quot; /&gt; to be NExp-hard if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%7D%5CRightarrow+%5Ctext+%7BNExp%7D%3D%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%7D%5CRightarrow+%5Ctext+%7BNExp%7D%3D%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BP%7D%5CRightarrow+%5Ctext+%7BNExp%7D%3D%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#92;in &amp;#92;text {P}&amp;#92;Rightarrow &amp;#92;text {NExp}=&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt; would mean simply that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%5Cnot+%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%5Cnot+%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%5Cnot+%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#92;not &amp;#92;in &amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;. To avoid this in this section hardness (hence completeness) is defined w.r.t.&amp;nbsp;mapping reductions, cf.&amp;nbsp;Chapter &lt;a href=&quot;#x1-450004&quot;&gt;4&lt;!--tex4ht:ref: chap:Reductions --&gt;&lt;/a&gt;. (Another option would be to replace &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt; with say &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {BPP}&quot; class=&quot;latex&quot; /&gt;, since it is not known if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D%3D%5Ctext+%7BNExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D%3D%5Ctext+%7BNExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPP%7D%3D%5Ctext+%7BNExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {BPP}=&amp;#92;text {NExp}&quot; class=&quot;latex&quot; /&gt;.)&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h4 class=&quot;subsectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.4.1   &lt;/span&gt; &lt;a id=&quot;x1-650005.4.1&quot;&gt;&lt;/a&gt;NExp completeness&lt;/h4&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;Complete problems for NExp include &lt;em&gt;succinct&lt;/em&gt; versions of problems complete for NExp. Here succinct means that rather than giving the input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; to the problem in standard format, the input consists instead of a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bm%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bm%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%3A%5C%7B0%2C1%5C%7D+%5E%7Bm%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C:&amp;#92;{0,1&amp;#92;} ^{m}&amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; encoding &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;, for example &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%28i%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%28i%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%28i%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C(i)&quot; class=&quot;latex&quot; /&gt; equals bit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;, for every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-65001r5&quot;&gt;&lt;/a&gt; &lt;b&gt;Definition&lt;/b&gt; 5.5.  &lt;/span&gt;The Succinct-3Sat problem: Given a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; encoding a 3CNF &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f_{C}&quot; class=&quot;latex&quot; /&gt;, does &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f_{C}&quot; class=&quot;latex&quot; /&gt; have a satisfying assignment?&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-65002r6&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 5.6.  &lt;/span&gt;Succinct-3Sat  is  NExp  complete  with  respect  to  power-time  mapping reductions.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof sketch.&lt;/b&gt;.&amp;nbsp;&lt;/span&gt; Let us first show that Succinct-3Sat is in NExp. Given a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; of length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;, we can run it on every possible input (of length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le n&quot; class=&quot;latex&quot; /&gt;) and write down the formula &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f_%7BC%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f_{C}&quot; class=&quot;latex&quot; /&gt; encoded by &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt;. This formula has size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le 2^{n}&quot; class=&quot;latex&quot; /&gt;. We can then use the fact that 3Sat is in NP to decide satisfiability of this formula in non-deterministic power time in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;2^{n}&quot; class=&quot;latex&quot; /&gt;, that is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNTime%7D%282%5E%7Bcn%7D%29%5Csubseteq+%5Ctext+%7BNExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNTime%7D%282%5E%7Bcn%7D%29%5Csubseteq+%5Ctext+%7BNExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNTime%7D%282%5E%7Bcn%7D%29%5Csubseteq+%5Ctext+%7BNExp%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NTime}(2^{cn})&amp;#92;subseteq &amp;#92;text {NExp}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   To prove NExp hardness it is convenient to work with TMs rather than RAMs. The main observation is that in the simulation of a TM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; on an input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; by a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{M}&quot; class=&quot;latex&quot; /&gt;, Theorem &lt;a href=&quot;#x1-25006r4&quot;&gt;2.4&lt;!--tex4ht:ref: thm:simu-tm-by-ckts-simple --&gt;&lt;/a&gt;, the circuit is very regular, in the sense that we can construct another circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S_{M}&quot; class=&quot;latex&quot; /&gt; which is a succinct encoding of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{M}&quot; class=&quot;latex&quot; /&gt;. The circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S_{M}&quot; class=&quot;latex&quot; /&gt; is given as input indexes to gates in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{M}&quot; class=&quot;latex&quot; /&gt; and outputs the type of the gate and its wires. The size of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S_{M}&quot; class=&quot;latex&quot; /&gt; is power in the index length and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt;. Thus, if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C_{M}&quot; class=&quot;latex&quot; /&gt; has size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t^{c}&quot; class=&quot;latex&quot; /&gt;, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S_{M}&quot; class=&quot;latex&quot; /&gt; only needs size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bc%7Dt&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;log ^{c}t&quot; class=&quot;latex&quot; /&gt;. If &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%3D2%5E%7Bn%5E%7Bd%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%3D2%5E%7Bn%5E%7Bd%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%3D2%5E%7Bn%5E%7Bd%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t=2^{n^{d}}&quot; class=&quot;latex&quot; /&gt;, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S_{M}&quot; class=&quot;latex&quot; /&gt; has size power in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;, as desired. The transformation from circuit to 3CNF in Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt; is also regular and can be done succinctly. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   As a consequence, we obtain the following “concrete” problem not in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-65003r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Corollary&lt;/b&gt; 5.3.  &lt;/span&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BSuccinct-3Sat%7D%5Cnot+%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BSuccinct-3Sat%7D%5Cnot+%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BSuccinct-3Sat%7D%5Cnot+%5Cin+%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {Succinct-3Sat}&amp;#92;not &amp;#92;in &amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h4 class=&quot;subsectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.4.2   &lt;/span&gt; &lt;a id=&quot;x1-660005.4.2&quot;&gt;&lt;/a&gt;Exp-completeness&lt;/h4&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;Exp-complete problems include several two-player games. The important feature for completeness is that the game may last for an exponential number of steps (otherwise it would belong to a class believed to be stricter which we will investigate in Chapter ??). These games include (generalized versions of) Chess &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;journals/jct/FraenkelL81&quot;&gt;8&lt;/a&gt;]&lt;/span&gt; and Checkers &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;journals/siamcomp/Robson84&quot;&gt;26&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.5   &lt;/span&gt; &lt;a id=&quot;x1-670005.5&quot;&gt;&lt;/a&gt;Power from completeness&lt;/h3&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;The realization that arbitrary computation can be reduced to 3Sat and other problems is powerful and liberating. In particular it allows us to significantly widen the net of reductions.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h4 class=&quot;subsectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.5.1   &lt;/span&gt; &lt;a id=&quot;x1-680005.5.1&quot;&gt;&lt;/a&gt;Optimization problems&lt;/h4&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;As observed in section&amp;nbsp;º&lt;a href=&quot;#x1-540004.6&quot;&gt;4.6&lt;!--tex4ht:ref: sec:Gap-SAT:-The-PCP --&gt;&lt;/a&gt;, 3Sat trivially reduces to Max-3Sat. The converse will be shown next.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-68001r7&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 5.7.  &lt;/span&gt;Max-3Sat reduces to 3Sat in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;Consider the problem Atleast-3Sat: Given a 3CNF formula and an integer &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt;, is there an assignment that satisfies at least &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; clauses? This is in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BNP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {NP}&quot; class=&quot;latex&quot; /&gt; and so can be reduced to 3Sat in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {P}&quot; class=&quot;latex&quot; /&gt;. This is the step that’s not easy without “thinking completeness:” given an algorithm for 3Sat it isn’t clear how to use it directly to solve Atleast-3Sat.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Hence, if 3Sat is in P so is Atleast-3Sat. On input a 3CNF &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt;, using binary search and the fact that Atleast-3Sat is in P, we can find in P the largest &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; s.t.&amp;nbsp;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28f%2Ct%29%5Cin+%5Ctext+%7BAtleast-3Sat%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28f%2Ct%29%5Cin+%5Ctext+%7BAtleast-3Sat%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28f%2Ct%29%5Cin+%5Ctext+%7BAtleast-3Sat%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(f,t)&amp;#92;in &amp;#92;text {Atleast-3Sat}&quot; class=&quot;latex&quot; /&gt;. Having found this &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt;, there remains to construct an assignment satisfying the clauses. This can be done fixing one variable at the time as in Theorem &lt;a href=&quot;#x1-52002r5&quot;&gt;4.5&lt;!--tex4ht:ref: thm:Search-3Sat-power-time-reduces --&gt;&lt;/a&gt;. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h4 class=&quot;subsectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.5.2   &lt;/span&gt; &lt;a id=&quot;x1-690005.5.2&quot;&gt;&lt;/a&gt;NP is as easy as detecting unique solutions&lt;/h4&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;A satisfiable 3CNF can have multiple satisfying assignments. On the other hand some problems and puzzles have unique solutions. In this section we relate these two scenarios.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-69001r6&quot;&gt;&lt;/a&gt;                                                                                                                                                                                     &lt;b&gt;Definition&lt;/b&gt; 5.6.  &lt;/span&gt;Unique-CktSat is the problem: Given a circuit &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; s.t.&amp;nbsp;there is at most one input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; for which &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C%28x%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C%28x%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C%28x%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C(x)=1&quot; class=&quot;latex&quot; /&gt;, decide if such an input exists.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Unique-3Sat is the Unique-CktSat problem restricted to 3CNF circuits.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-69002r8&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 5.8.  &lt;/span&gt; &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;journals/tcs/ValiantV86&quot;&gt;33&lt;/a&gt;]&lt;/span&gt; 3Sat reduces to Unique-3Sat in BPP.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We in fact reduce 3Sat to Unique-CktSat. Then Unique-CktSat can be reduced to Unique-3Sat observing that the reduction in Theorem &lt;a href=&quot;#x1-56001r1&quot;&gt;5.1&lt;!--tex4ht:ref: thm:redux-ckt-2-3sat --&gt;&lt;/a&gt; preserves uniqueness.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   The beautiful proof uses a powerful and general technique in randomized computation: &lt;em&gt;pairwise uniformity&lt;/em&gt;, sometimes more generically referred to as &lt;em&gt;hashing. &lt;/em&gt;We first define such functions and give efficient constructions. Then we show how to use them to “isolate” assignments.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-69003r7&quot;&gt;&lt;/a&gt; &lt;b&gt;Definition&lt;/b&gt; 5.7.  &lt;/span&gt;A distribution &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; on functions mapping &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S%5Cto+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S%5Cto+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S%5Cto+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S&amp;#92;to T&quot; class=&quot;latex&quot; /&gt; is called &lt;em&gt;pairwise uniform&lt;/em&gt; if for every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%2Cx%27%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%2Cx%27%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%2Cx%27%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x,x&amp;#039;&amp;#92;in S&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y%2Cy%27%5Cin+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y%2Cy%27%5Cin+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y%2Cy%27%5Cin+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y,y&amp;#039;&amp;#92;in T&quot; class=&quot;latex&quot; /&gt; one has&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7BH%7D%5BH%28x%29%3Dy%5Cwedge+H%28x%27%29%3Dy%27%5D%3D1%2F%7CT%7C%5E%7B2%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7BH%7D%5BH%28x%29%3Dy%5Cwedge+H%28x%27%29%3Dy%27%5D%3D1%2F%7CT%7C%5E%7B2%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7BH%7D%5BH%28x%29%3Dy%5Cwedge+H%28x%27%29%3Dy%27%5D%3D1%2F%7CT%7C%5E%7B2%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;mathbb {P}_{H}[H(x)=y&amp;#92;wedge H(x&amp;#039;)=y&amp;#039;]=1/|T|^{2}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   This is saying that on every pair of inputs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; is behaving as a completely uniform function. Yet unlike completely uniform functions, the next lemma shows that pairwise uniform functions can have a short description, which makes them suitable for use in algorithms.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-69004r6&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 5.6.  &lt;/span&gt;Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathbb {F}_{q}&quot; class=&quot;latex&quot; /&gt; be a finite field. Define the random function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H%3A%5Cmathbb+%7BF%7D_%7Bq%7D%5Cto+%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H%3A%5Cmathbb+%7BF%7D_%7Bq%7D%5Cto+%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H%3A%5Cmathbb+%7BF%7D_%7Bq%7D%5Cto+%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H:&amp;#92;mathbb {F}_{q}&amp;#92;to &amp;#92;mathbb {F}_{q}&quot; class=&quot;latex&quot; /&gt; as &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H%28x%29%3A%3DAx%2BB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H%28x%29%3A%3DAx%2BB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H%28x%29%3A%3DAx%2BB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H(x):=Ax+B&quot; class=&quot;latex&quot; /&gt; where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=A%2CB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=A%2CB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=A%2CB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;A,B&quot; class=&quot;latex&quot; /&gt; are uniform in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BF%7D_%7Bq%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathbb {F}_{q}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Prove that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; is pairwise uniform.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Explain how to use &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; to obtain a pairwise uniform function from &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{n}&quot; class=&quot;latex&quot; /&gt; to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{t}&quot; class=&quot;latex&quot; /&gt; for any given &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;le n&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-69005r7&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 5.7.  &lt;/span&gt;Define the random function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H_%7B1%7D%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H_%7B1%7D%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H_%7B1%7D%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H_{1}:&amp;#92;{0,1&amp;#92;} ^{n}&amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; as &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H%28x%29%3A%3D%5Csum+_%7Bi%5Cle+n%7DA_%7Bi%7Dx_%7Bi%7D%2BB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H%28x%29%3A%3D%5Csum+_%7Bi%5Cle+n%7DA_%7Bi%7Dx_%7Bi%7D%2BB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H%28x%29%3A%3D%5Csum+_%7Bi%5Cle+n%7DA_%7Bi%7Dx_%7Bi%7D%2BB&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H(x):=&amp;#92;sum _{i&amp;#92;le n}A_{i}x_{i}+B&quot; class=&quot;latex&quot; /&gt; where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=A&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;A&quot; class=&quot;latex&quot; /&gt; is uniform in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{n}&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=B&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;B&quot; class=&quot;latex&quot; /&gt; is uniform in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Prove that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H_%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H_%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H_%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H_{1}&quot; class=&quot;latex&quot; /&gt; is pairwise uniform.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Explain how to use &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; to obtain a pairwise uniform function from &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{n}&quot; class=&quot;latex&quot; /&gt; to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bt%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{t}&quot; class=&quot;latex&quot; /&gt; for any given &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#92;le n&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   We can now state the lemma that we use to isolate assignments.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-69006r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Lemma&lt;/b&gt; 5.2.  &lt;/span&gt;Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; be a pairwise uniform function mapping &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S%5Cto+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S%5Cto+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S%5Cto+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S&amp;#92;to T&quot; class=&quot;latex&quot; /&gt;, and let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1%5Cin+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1%5Cin+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1%5Cin+T&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&amp;#92;in T&quot; class=&quot;latex&quot; /&gt;. The probability that there is a unique element &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#92;in S&quot; class=&quot;latex&quot; /&gt; such that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H%28s%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H%28s%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H%28s%29%3D1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H(s)=1&quot; class=&quot;latex&quot; /&gt; is&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cge+%5Cfrac+%7B%7CS%7C%7D%7B%7CT%7C%7D-%5Cfrac+%7B%7CS%7C%5E%7B2%7D%7D%7B%7CT%7C%5E%7B2%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cge+%5Cfrac+%7B%7CS%7C%7D%7B%7CT%7C%7D-%5Cfrac+%7B%7CS%7C%5E%7B2%7D%7D%7B%7CT%7C%5E%7B2%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cge+%5Cfrac+%7B%7CS%7C%7D%7B%7CT%7C%7D-%5Cfrac+%7B%7CS%7C%5E%7B2%7D%7D%7B%7CT%7C%5E%7B2%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;ge &amp;#92;frac {|S|}{|T|}-&amp;#92;frac {|S|^{2}}{|T|^{2}}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   In particular, if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7CT%7C%2F8%5Cle+%7CS%7C%5Cle+%7CT%7C%2F4&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7CT%7C%2F8%5Cle+%7CS%7C%5Cle+%7CT%7C%2F4&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7CT%7C%2F8%5Cle+%7CS%7C%5Cle+%7CT%7C%2F4&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|T|/8&amp;#92;le |S|&amp;#92;le |T|/4&quot; class=&quot;latex&quot; /&gt; this prob.&amp;nbsp;is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+%5Cfrac+%7B1%7D%7B8%7D-%5Cfrac+%7B1%7D%7B16%7D%5Cge+1%2F8&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+%5Cfrac+%7B1%7D%7B8%7D-%5Cfrac+%7B1%7D%7B16%7D%5Cge+1%2F8&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+%5Cfrac+%7B1%7D%7B8%7D-%5Cfrac+%7B1%7D%7B16%7D%5Cge+1%2F8&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge &amp;#92;frac {1}{8}-&amp;#92;frac {1}{16}&amp;#92;ge 1/8&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof&lt;/b&gt;.&amp;nbsp;&lt;/span&gt;For fixed &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#92;in S&quot; class=&quot;latex&quot; /&gt;, the probability &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; is the unique element mapped to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt; is at least the prob.&amp;nbsp;that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; is mapped to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt; minus the prob.&amp;nbsp;that both &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; and some other &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%27%5Cne+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%27%5Cne+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%27%5Cne+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#039;&amp;#92;ne s&quot; class=&quot;latex&quot; /&gt; are mapped to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt;. This is&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cge+%5Cfrac+%7B1%7D%7B%7CT%7C%7D-%5Cfrac+%7B%7CS%7C-1%7D%7B%7CT%7C%5E%7B2%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cge+%5Cfrac+%7B1%7D%7B%7CT%7C%7D-%5Cfrac+%7B%7CS%7C-1%7D%7B%7CT%7C%5E%7B2%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cge+%5Cfrac+%7B1%7D%7B%7CT%7C%7D-%5Cfrac+%7B%7CS%7C-1%7D%7B%7CT%7C%5E%7B2%7D%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;ge &amp;#92;frac {1}{|T|}-&amp;#92;frac {|S|-1}{|T|^{2}}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   These events for different &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#92;in S&quot; class=&quot;latex&quot; /&gt; are disjoint; so the target probability is at least the sum of the above over &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#92;in S&quot; class=&quot;latex&quot; /&gt;. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &lt;span class=&quot;head&quot;&gt;    &lt;b&gt;Proof of Theorem &lt;a href=&quot;#x1-69002r8&quot;&gt;5.8&lt;!--tex4ht:ref: thm:3Sat-reduces-to-unique --&gt;&lt;/a&gt;&lt;/b&gt;.&amp;nbsp;&lt;/span&gt; Given a 3Sat instance &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;phi &quot; class=&quot;latex&quot; /&gt; with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le n&quot; class=&quot;latex&quot; /&gt; variables &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;, we pick a random &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; from &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt; to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%2Bc&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%2Bc&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%2Bc&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n+c&quot; class=&quot;latex&quot; /&gt;. We then pick a pairwise uniform function mapping &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{n}&quot; class=&quot;latex&quot; /&gt; to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{i}&quot; class=&quot;latex&quot; /&gt;, and consider the circuit&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+C%3A%3D%5Cphi+%28x%29%5Cwedge+H%28x%29%3D0%5E%7Bi%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+C%3A%3D%5Cphi+%28x%29%5Cwedge+H%28x%29%3D0%5E%7Bi%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+C%3A%3D%5Cphi+%28x%29%5Cwedge+H%28x%29%3D0%5E%7Bi%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} C:=&amp;#92;phi (x)&amp;#92;wedge H(x)=0^{i}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p&gt;This circuit has size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{c}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   If &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;phi &quot; class=&quot;latex&quot; /&gt; is not satisfiable, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; is not satisfiable, for any random choices.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Now suppose that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cphi+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;phi &quot; class=&quot;latex&quot; /&gt; has &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%5Cge+1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%5Cge+1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%5Cge+1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#92;ge 1&quot; class=&quot;latex&quot; /&gt; satisfying assignment. With prob.&amp;nbsp;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+1%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+1%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+1%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge 1/n&quot; class=&quot;latex&quot; /&gt; we will have &lt;img src=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bi-3%7D%5Cle+s%5Cle+2%5E%7Bi-2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bi-3%7D%5Cle+s%5Cle+2%5E%7Bi-2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=2%5E%7Bi-3%7D%5Cle+s%5Cle+2%5E%7Bi-2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;2^{i-3}&amp;#92;le s&amp;#92;le 2^{i-2}&quot; class=&quot;latex&quot; /&gt;, in which case Lemma &lt;a href=&quot;#x1-69006r2&quot;&gt;5.2&lt;!--tex4ht:ref: lem:pairwise-uniform-unique --&gt;&lt;/a&gt; guarantees that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; has a unique satisfying assignment with prob.&amp;nbsp;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge c&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Overall, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; has a unique satisfying assignment with prob.&amp;nbsp;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+c%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge c/n&quot; class=&quot;latex&quot; /&gt;. Hence the Unique-3Sat algorithm on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;C&quot; class=&quot;latex&quot; /&gt; outputs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt; with prob.&amp;nbsp;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+c%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge c/n&quot; class=&quot;latex&quot; /&gt;. If we repeat this process &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn&quot; class=&quot;latex&quot; /&gt; times, with independent random choices, the Or of the outcomes gives the correct answer with prob.&amp;nbsp;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+2%2F3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+2%2F3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+2%2F3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge 2/3&quot; class=&quot;latex&quot; /&gt;. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;5.6   &lt;/span&gt; &lt;a id=&quot;x1-700005.6&quot;&gt;&lt;/a&gt;Problems&lt;/h3&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-70001r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Problem&lt;/b&gt; 5.1.  &lt;/span&gt;In Theorem &lt;a href=&quot;#x1-52002r5&quot;&gt;4.5&lt;!--tex4ht:ref: thm:Search-3Sat-power-time-reduces --&gt;&lt;/a&gt; we reduced Search-3Sat to 3Sat.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &amp;#8211; Suppose 3Sat is computable by circuits of depth &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c&amp;#92;log n&quot; class=&quot;latex&quot; /&gt;. What would be the depth of the circuits for Search-3Sat given by the reduction?&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   &amp;#8211; Reduce Search-3Sat to 3Sat in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7B%5Censuremath+%7B%5Cbigcup+_%7Ba%3E0%7D%7D%7D%5Ctext+%7BDepth%7D%28a%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7B%5Censuremath+%7B%5Cbigcup+_%7Ba%3E0%7D%7D%7D%5Ctext+%7BDepth%7D%28a%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7B%5Censuremath+%7B%5Cbigcup+_%7Ba%3E0%7D%7D%7D%5Ctext+%7BDepth%7D%28a%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {&amp;#92;ensuremath {&amp;#92;bigcup _{a&amp;gt;0}}}&amp;#92;text {Depth}(a&amp;#92;log n)&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;   Hint: First work with randomized circuits. Use ideas in proof of Theorem &lt;a href=&quot;#x1-52002r5&quot;&gt;4.5&lt;!--tex4ht:ref: thm:Search-3Sat-power-time-reduces --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;h3 class=&quot;likesectionHead&quot;&gt;&lt;a id=&quot;x1-710005.6&quot;&gt;&lt;/a&gt;References&lt;/h3&gt;
&lt;p style=&quot;text-align:justify&quot;&gt;
&lt;div class=&quot;thebibliography&quot;&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [1]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:conf/focs/AbboudBW15&quot;&gt;&lt;/a&gt;Amir Abboud, Arturs Backurs, and Virginia&amp;nbsp;Vassilevska Williams. Tight hardness      results for LCS and other sequence similarity measures.  In Venkatesan Guruswami,      editor, IEEE 56th Annual Symposium on Foundations of Computer Science, FOCS      2015, Berkeley, CA, USA, 17-20 October, 2015, pages 59–78. IEEE Computer Society,      2015.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [2]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XAdleman78&quot;&gt;&lt;/a&gt;Leonard  Adleman.   Two  theorems  on  random  polynomial  time.   In  19th IEEE      Symp.&amp;nbsp;on Foundations of Computer Science (FOCS), pages 75–83. 1978.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [3]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/jcss/AngluinV79&quot;&gt;&lt;/a&gt;Dana Angluin and Leslie&amp;nbsp;G. Valiant. Fast probabilistic algorithms for hamiltonian      circuits and matchings. J. Comput. Syst. Sci., 18(2):155–193, 1979.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [4]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XAroraLuMoSuSz98&quot;&gt;&lt;/a&gt;Sanjeev Arora, Carsten Lund, Rajeev Motwani, Madhu Sudan, and Mario Szegedy.      Proof  verification  and  the  hardness  of  approximation  problems.    J.&amp;nbsp;of  the  ACM,      45(3):501–555, May 1998.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [5]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/siamcomp/BackursI18&quot;&gt;&lt;/a&gt;Arturs Backurs and Piotr Indyk.  Edit distance cannot be computed in strongly      subquadratic time (unless SETH is false). SIAM J. Comput., 47(3):1087–1097, 2018.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [6]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XBatcher68&quot;&gt;&lt;/a&gt;Kenneth&amp;nbsp;E. Batcher.  Sorting networks and their applications.  In AFIPS Spring      Joint Computing Conference, volume&amp;nbsp;32, pages 307–314, 1968.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [7]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XCook73&quot;&gt;&lt;/a&gt;Stephen&amp;nbsp;A. Cook. A hierarchy for nondeterministic time complexity. J.&amp;nbsp;of Computer      and System Sciences, 7(4):343–353, 1973.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [8]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/jct/FraenkelL81&quot;&gt;&lt;/a&gt;Aviezri&amp;nbsp;S. Fraenkel and David Lichtenstein. Computing a perfect strategy for n x n      chess requires time exponential in n. J. Comb. Theory, Ser. A, 31(2):199–214, 1981.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;   [9]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XGajentaanO95&quot;&gt;&lt;/a&gt;Anka Gajentaan and Mark&amp;nbsp;H. Overmars. On a class of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7BO%7D%28n%5E2%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7BO%7D%28n%5E2%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7BO%7D%28n%5E2%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;{O}(n^2)&quot; class=&quot;latex&quot; /&gt; problems in computational      geometry. Comput. Geom., 5:165–185, 1995.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [10]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XGareyJ79&quot;&gt;&lt;/a&gt;M.&amp;nbsp;R. Garey and David&amp;nbsp;S. Johnson. Computers and Intractability: A Guide to the      Theory of NP-Completeness. W. H. Freeman, 1979.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [11]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XMR1549939&quot;&gt;&lt;/a&gt;K.&amp;nbsp;G÷del.   ▄ber  formal  unentscheidbare  sΣtze  der  Principia  Mathematica  und      verwandter systeme I. Monatsh. Math. Phys., 38, 1931.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [12]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XGoldreich08Complexity&quot;&gt;&lt;/a&gt;Oded Goldreich. Computational Complexity: A Conceptual Perspective. Cambridge      University Press, 2008.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [13]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;X10.4007/annals.2021.193.2.4&quot;&gt;&lt;/a&gt;David Harvey and Joris van&amp;nbsp;der Hoeven. Integer multiplication in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=O%28n%5Cmathrm+%7Blog%7D%5C%2C+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=O%28n%5Cmathrm+%7Blog%7D%5C%2C+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=O%28n%5Cmathrm+%7Blog%7D%5C%2C+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;O(n&amp;#92;mathrm {log}&amp;#92;, n)&quot; class=&quot;latex&quot; /&gt;. Annals of      Mathematics, 193(2):563 – 617, 2021.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [14]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/iandc/Hennie65&quot;&gt;&lt;/a&gt;F.&amp;nbsp;C. Hennie.  One-tape, off-line turing machine computations.  Information and      Control, 8(6):553–578, 1965.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [15]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XHennieS66&quot;&gt;&lt;/a&gt;Fred  Hennie  and  Richard  Stearns.    Two-tape  simulation  of  multitape  turing      machines. J.&amp;nbsp;of the ACM, 13:533–546, October 1966.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [16]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XIP99&quot;&gt;&lt;/a&gt;Russell Impagliazzo and Ramamohan Paturi.   The complexity of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=k&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;k&quot; class=&quot;latex&quot; /&gt;-sat.   In IEEE      Conf.&amp;nbsp;on Computational Complexity (CCC), pages 237–, 1999.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [17]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XIPZ01&quot;&gt;&lt;/a&gt;Russell Impagliazzo, Ramamohan Paturi, and Francis Zane.  Which problems have      strongly exponential complexity? J. Computer &amp;amp; Systems Sciences, 63(4):512–530, Dec      2001.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [18]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XImW97&quot;&gt;&lt;/a&gt;Russell  Impagliazzo  and  Avi  Wigderson.    &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathit+%7BP%7D+%3D+%5Cmathit+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathit+%7BP%7D+%3D+%5Cmathit+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathit+%7BP%7D+%3D+%5Cmathit+%7BBPP%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathit {P} = &amp;#92;mathit {BPP}&quot; class=&quot;latex&quot; /&gt;  if  &lt;img src=&quot;https://s0.wp.com/latex.php?latex=E&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=E&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=E&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;E&quot; class=&quot;latex&quot; /&gt;  requires  exponential  circuits:      Derandomizing the XOR lemma.  In 29th ACM Symp.&amp;nbsp;on the Theory of Computing      (STOC), pages 220–229. ACM, 1997.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [19]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XKobayashi1985OnTS&quot;&gt;&lt;/a&gt;Kojiro Kobayashi.  On the structure of one-tape nondeterministic turing machine      time hierarchy. Theor. Comput. Sci., 40:175–193, 1985.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [20]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XLevin73&quot;&gt;&lt;/a&gt;Leonid&amp;nbsp;A.  Levin.    Universal  sequential  search  problems.    Problemy  Peredachi      Informatsii, 9(3):115–116, 1973.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [21]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XLupanov58&quot;&gt;&lt;/a&gt;O.&amp;nbsp;B. Lupanov. A method of circuit synthesis. Izv. VUZ Radiofiz., 1:120–140, 1958.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [22]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XViolaNEU-ram2sat-neu-author&quot;&gt;&lt;/a&gt;NEU. From RAM to SAT. Available at &lt;a href=&quot;http://www.ccs.neu.edu/home/viola/&quot; rel=&quot;nofollow&quot;&gt;http://www.ccs.neu.edu/home/viola/&lt;/a&gt;, 2012.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [23]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/jcss/PapadimitriouY91&quot;&gt;&lt;/a&gt;Christos&amp;nbsp;H. Papadimitriou and Mihalis Yannakakis. Optimization, approximation,                                                                                                                                                                                          and complexity classes. J. Comput. Syst. Sci., 43(3):425–440, 1991.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [24]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XPPST83&quot;&gt;&lt;/a&gt;Wolfgang&amp;nbsp;J. Paul, Nicholas Pippenger, Endre SzemerΘdi, and William&amp;nbsp;T. Trotter.      On determinism versus non-determinism and related problems (preliminary version). In      IEEE Symp.&amp;nbsp;on Foundations of Computer Science (FOCS), pages 429–438, 1983.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [25]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XPippengerF79&quot;&gt;&lt;/a&gt;Nicholas Pippenger and Michael&amp;nbsp;J. Fischer. Relations among complexity measures.      J.&amp;nbsp;of the ACM, 26(2):361–381, 1979.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [26]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/siamcomp/Robson84&quot;&gt;&lt;/a&gt;J.&amp;nbsp;M.  Robson.    N  by  N  checkers  is  exptime  complete.    SIAM  J.  Comput.,      13(2):252–267, 1984.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [27]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:conf/coco/Santhanam01&quot;&gt;&lt;/a&gt;Rahul Santhanam.   On separators, segregators and time versus space.   In IEEE      Conf.&amp;nbsp;on Computational Complexity (CCC), pages 286–294, 2001.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [28]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/siamcomp/Schonhage80&quot;&gt;&lt;/a&gt;Arnold Sch÷nhage. Storage modification machines. SIAM J. Comput., 9(3):490–508,      1980.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [29]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XMR29860&quot;&gt;&lt;/a&gt;Claude&amp;nbsp;E. Shannon. The synthesis of two-terminal switching circuits. Bell System      Tech. J., 28:59–98, 1949.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [30]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XSho90&quot;&gt;&lt;/a&gt;Victor Shoup. New algorithms for finding irreducible polynomials over finite fields.      Mathematics of Computation, 54(189):435–447, 1990.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [31]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XMR2145856&quot;&gt;&lt;/a&gt;Larry Stockmeyer and Albert&amp;nbsp;R. Meyer.  Cosmological lower bound on the circuit      complexity of a small problem in logic. J. ACM, 49(6):753–784, 2002.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [32]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/x/Turing37&quot;&gt;&lt;/a&gt;Alan&amp;nbsp;M.   Turing.      On   computable   numbers,   with   an   application   to   the      entscheidungsproblem. Proc. London Math. Soc., s2-42(1):230–265, 1937.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [33]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/tcs/ValiantV86&quot;&gt;&lt;/a&gt;Leslie&amp;nbsp;G. Valiant and Vijay&amp;nbsp;V. Vazirani. NP is as easy as detecting unique solutions.      Theor. Comput. Sci., 47(3):85–93, 1986.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [34]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XViola-xxx&quot;&gt;&lt;/a&gt;Emanuele Viola.  Reducing 3XOR to listing triangles, an exposition.  Available at      &lt;a href=&quot;http://www.ccs.neu.edu/home/viola/&quot; rel=&quot;nofollow&quot;&gt;http://www.ccs.neu.edu/home/viola/&lt;/a&gt;, 2011.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt;  [35]&lt;span class=&quot;bibsp&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;Xviola-tm&quot;&gt;&lt;/a&gt;Emanuele  Viola.   Pseudorandom  bits  and  lower  bounds  for  randomized  turing      machines. Theory of Computing, 18(10):1–12, 2022.&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;authors&quot;&gt;By Manu&lt;/p&gt;
  </content>
    <author>
      <name>Emanuele Viola</name>
      <uri>https://emanueleviola.wordpress.com</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">Computational Complexity: The Virtual Grad Student</title>
    <link href="https://blog.computationalcomplexity.org/2023/02/the-virtual-grad-student.html"/>
    <id>tag:blogger.com,1999:blog-3722233.post-4166072551581462222</id>
    <updated>2023-02-23T15:02:00+00:00</updated>
    <content type="html" xml:lang="en">
    &lt;p&gt;Martin Haug, who is working on a LaTeX alternative &lt;a href=&quot;https://typst.app/&quot;&gt;Typst&lt;/a&gt;, asked me if I had updates on a &lt;a href=&quot;https://blog.computationalcomplexity.org/2011/07/problems-of-latex.html&quot;&gt;LaTeX rant&lt;/a&gt; from 2011. I haven&#39;t seen any new serious backward compatibility problems. We have easier collaboration through on-line editors like &lt;a href=&quot;https://blog.computationalcomplexity.org/2011/07/problems-of-latex.html&quot;&gt;Overleaf&lt;/a&gt;. We have got closer to WSYWIG thanks to quick compiling but still not at the level of Word or Google Docs. The big problem of user friendliness remains. There&#39;s a reason LaTeX has its own &lt;a href=&quot;https://tex.stackexchange.com/&quot;&gt;Stack Exchange&lt;/a&gt;.&amp;nbsp;&lt;/p&gt;&lt;p&gt;But we live in a new machine learning world. Can we use generative AI to make LaTeX easier to use?&lt;/p&gt;&lt;p&gt;&lt;b&gt;Mandatory Disclaimer&lt;/b&gt;: Generative AI can sometimes create inaccurate, inappropriate or previously-published material. You are ultimately responsible for the contents of your paper no matter how you produced it.&lt;/p&gt;&lt;p&gt;Since I sometimes think of LaTeX as a programming language for papers, I &lt;a href=&quot;https://twitter.com/fortnow/status/1626576896132542464&quot;&gt;tweeted&lt;/a&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;Can we have GitHub co-pilot for LaTeX?&lt;/p&gt;— Lance Fortnow (@fortnow) &lt;a href=&quot;https://twitter.com/fortnow/status/1626576896132542464?ref_src=twsrc%5Etfw&quot;&gt;February 17, 2023&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;Thanks for the responses. The answer to the question is yes, &lt;a href=&quot;https://github.com/features/copilot&quot;&gt;GitHub Copilot&lt;/a&gt;&amp;nbsp;works for LaTeX if you edit LaTeX in a programming environment like &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VS Code&lt;/a&gt;, &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Neovim&lt;/a&gt; or &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Jet Brains&lt;/a&gt;. It helps with formatting of formulas and pictures, less so on the text itself. I made a &lt;a href=&quot;https://www.youtube.com/watch?v=bt0BNdujIy8&quot;&gt;video&lt;/a&gt; so you can see how it works.&lt;/p&gt;
&lt;div style=&quot;text-align: center;&quot;&gt;&lt;iframe allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/bt0BNdujIy8&quot; title=&quot;YouTube video player&quot; width=&quot;560&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://www.latextai.com/&quot;&gt;Latext AI&lt;/a&gt; offers a chrome extension that will let you generate text via GPT in Overleaf based on a prompt or previous text, though Latext requires a subscription after a one-week trial. You can also just cut and paste between any text editor and ChatGPT.&lt;/p&gt;&lt;p&gt;ChatGPT notoriously makes up references if you ask for them. Can we have a good system that finds relevant articles to cite and adds them automatically into your bibliography?&lt;/p&gt;&lt;p&gt;Ideally all these should work together seamlessly, suggestions that happen as you type. A true co-pilot for research papers.&lt;/p&gt;&lt;p&gt;There are many more tools out there, feel free to add them to the comments. I expect the integration to improve over time as we develop new APIs and models.&lt;/p&gt;&lt;p&gt;I look forward to the days of a virtual grad student: Here&#39;s a research goal and an idea to get there. Now go figure out the details and write the paper.&amp;nbsp;&lt;/p&gt;&lt;p&gt;It will be a long wait.&lt;/p&gt; &lt;script async=&quot;&quot; charset=&quot;utf-8&quot; src=&quot;https://platform.twitter.com/widgets.js&quot;&gt;&lt;/script&gt;&lt;p class=&quot;authors&quot;&gt;By Lance Fortnow&lt;/p&gt;
  </content>
    <author>
      <name>Computational Complexity</name>
      <uri>http://blog.computationalcomplexity.org/</uri>
    </author>
  </entry>


  <entry xml:lang="en">
    <title type="html" xml:lang="en">ECCC Papers: TR23-016 |  Proving Unsatisfiability with Hitting Formulas | 

	Edward Hirsch, 

	Yuval Filmus, 

	Artur Riazanov, 

	Alexander Smal, 

	Marc Vinyals</title>
    <link href="https://eccc.weizmann.ac.il/report/2023/016"/>
    <id>https://eccc.weizmann.ac.il/report/2023/016</id>
    <updated>2023-02-22T15:28:10+00:00</updated>
    <content type="html" xml:lang="en">
    Hitting formulas have been studied in many different contexts at least since [Iwama 1989]. A hitting formula is a set of Boolean clauses such that any two of the clauses cannot be simultaneously falsified. [Peitl and Szeider 2022] conjectured that the family of unsatisfiable hitting formulas should contain the hardest formulas for resolution. They have supported their conjecture with experimental findings. Using the fact that hitting formulas are easy to check for satisfiability we use them as a foundation of a static proof system Hitting: a refutation of a CNF in Hitting is an unsatisfiable hitting formula such that each of its clauses is a weakening of a clause of the refuted CNF. Comparing this system to resolution and other proof systems is equivalent to studying the hardness of hitting formulas.

Our first result is that Hitting is quasi-polynomially simulated by tree-like resolution, which means that hitting formulas cannot be exponentially hard for resolution, so Peitl and Szeider&amp;#39;s conjecture is partially refuted. We show that tree-like resolution and Hitting are quasi-polynomially separated, but for resolution, this question remains open. For a system that is only quasi-polynomially stronger than tree-like resolution, Hitting is surprisingly difficult to *polynomially* simulate in another proof system. Using the ideas of PIT for noncommutative circuits [Raz, Spilka 2005] we show that Hitting is simulated by Extended Frege, but we conjecture that much more efficient simulations exist. As a byproduct, we show that a number of static (semi)algebraic systems are verifiable in a deterministic polynomial time.

We consider multiple extensions of Hitting. In particular, refutations in a proof system Hitting(?) are conjunctions of clauses containing affine equations instead of just literals, and every assignment falsifies exactly one of the clauses. This system is related to Res(?) proof system for which no superpolynomial-size lower bounds are known: Hitting(?) simulates the tree-like version of Res(?) and is at least quasi-polynomially stronger. We show that formulas expressing the non-existence of perfect matchings in the graphs K_{n,n+2} are exponentially hard for Hitting(?).
  </content>
    <author>
      <name>ECCC Papers</name>
      <uri>https://eccc.weizmann.ac.il/</uri>
    </author>
  </entry>


</feed>
