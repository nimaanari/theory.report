<?xml version="1.0"?>
<rss version="2.0">

<channel>
  <title>Theory of Computing Report</title>
  <link></link>
  <language>en</language>
  <description></description>


<item>
  <title>TR23-018 |  Memory-Sample Lower Bounds for Learning with Classical-Quantum Hybrid Memory | 

	Qipeng Liu, 

	Ran Raz, 

	Wei Zhan</title>
  <guid>https://eccc.weizmann.ac.il/report/2023/018</guid>
  <link>https://eccc.weizmann.ac.il/report/2023/018</link>
  <description>
    In a work by Raz (J. ACM and FOCS 16), it was proved that any algorithm for parity learning on $n$ bits requires either $\Omega(n^2)$ bits of classical memory or an exponential number (in~$n$) of random samples. A line of recent works continued that research direction and showed that for a large collection of classical learning tasks, either super-linear classical memory size or super-polynomially many samples are needed. All these works consider learning algorithms as classical branching programs, which perform classical computation within bounded memory.

However, these results do not capture all physical computational models, remarkably, quantum computers and the use of quantum memory. It leaves the possibility that a small piece of quantum memory could significantly reduce the need for classical memory or samples and thus completely change the nature of the classical learning task. Despite the recent research on the necessity of quantum memory for intrinsic quantum learning problems like shadow tomography and purity testing, the role of quantum memory in classical learning tasks remains obscure. 

In this work, we study classical learning tasks in the presence of quantum memory. We prove that any quantum algorithm with both, classical memory and quantum memory, for parity learning on $n$ bits, requires either $\Omega(n^2)$ bits of classical memory or $\Omega(n)$ bits of quantum  memory or an exponential number of samples. In other words, the memory-sample lower bound for parity learning remains qualitatively the same, even if the learning algorithm can use, in addition to the classical memory, a quantum memory of size $c n$ (for some constant $c&amp;gt;0$).

Our result is more general and applies to many other classical learning tasks. Following previous works, we represent by the matrix $M: A \times X \to \{-1,1\}$ the following learning task. An unknown $x$ is sampled uniformly at random from a concept class $X$, and a learning algorithm tries to uncover $x$ by seeing streaming of random samples $(a_i, b_i = M(a_i, x))$ where for every $i$, $a_i\in A$ is chosen uniformly at random. Assume that $k,\ell,r$ are integers such that any submatrix of $M$ of at least $2^{-k}\cdot|A|$ rows and at least $2^{-\ell}\cdot|X|$ columns, has a bias of at most $2^{-r}$. We prove that any algorithm with classical and quantum hybrid memory for the learning problem corresponding to $M$ needs either (1) $\Omega(k \cdot \ell)$ bits of classical memory, or (2) $\Omega(r)$ qubits of quantum memory, or (3) $2^{\Omega(r)}$ random samples, to achieve a success probability at least $2^{-O(r)}$. 

Our results refute the possibility that a small amount of quantum memory significantly reduces the size of classical memory needed for efficient learning on these problems. Our results also imply improved security of several existing cryptographical protocols in the bounded-storage model (protocols that are based on parity learning on $n$ bits), proving that security holds even in the presence of a quantum adversary with at most $c n^2$ bits of classical memory and $c n$ bits of quantum memory (for some constant $c&amp;gt;0$).
  </description>
  <pubDate>2023-03-02 04:17:11 UTC</pubDate>
  <author>ECCC Papers</author>
</item>

<item>
  <title>Memory-Sample Lower Bounds for Learning with Classical-Quantum Hybrid Memory</title>
  <guid>http://arxiv.org/abs/2303.00209</guid>
  <link>http://arxiv.org/abs/2303.00209</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Liu_Q/0/1/0/all/0/1&quot;&gt;Qipeng Liu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Raz_R/0/1/0/all/0/1&quot;&gt;Ran Raz&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Zhan_W/0/1/0/all/0/1&quot;&gt;Wei Zhan&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In a work by Raz (J. ACM and FOCS 16), it was proved that any algorithm for
parity learning on $n$ bits requires either $\Omega(n^2)$ bits of classical
memory or an exponential number (in~$n$) of random samples. A line of recent
works continued that research direction and showed that for a large collection
of classical learning tasks, either super-linear classical memory size or
super-polynomially many samples are needed. However, these results do not
capture all physical computational models, remarkably, quantum computers and
the use of quantum memory. It leaves the possibility that a small piece of
quantum memory could significantly reduce the need for classical memory or
samples and thus completely change the nature of the classical learning task.
&lt;/p&gt;
&lt;p&gt;In this work, we prove that any quantum algorithm with both, classical memory
and quantum memory, for parity learning on $n$ bits, requires either
$\Omega(n^2)$ bits of classical memory or $\Omega(n)$ bits of quantum memory or
an exponential number of samples. In other words, the memory-sample lower bound
for parity learning remains qualitatively the same, even if the learning
algorithm can use, in addition to the classical memory, a quantum memory of
size $c n$ (for some constant $c&amp;gt;0$).
&lt;/p&gt;
&lt;p&gt;Our results refute the possibility that a small amount of quantum memory
significantly reduces the size of classical memory needed for efficient
learning on these problems. Our results also imply improved security of several
existing cryptographical protocols in the bounded-storage model (protocols that
are based on parity learning on $n$ bits), proving that security holds even in
the presence of a quantum adversary with at most $c n^2$ bits of classical
memory and $c n$ bits of quantum memory (for some constant $c&amp;gt;0$).
&lt;/p&gt;
  </description>
  <pubDate>2023-03-02 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>Linear Size Universal Point Sets for Classes of Planar Graphs</title>
  <guid>http://arxiv.org/abs/2303.00109</guid>
  <link>http://arxiv.org/abs/2303.00109</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Felsner_S/0/1/0/all/0/1&quot;&gt;Stefan Felsner&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Schrezenmaier_H/0/1/0/all/0/1&quot;&gt;Hendrik Schrezenmaier&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Schroder_F/0/1/0/all/0/1&quot;&gt;Felix Schr&amp;#xf6;der&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Steiner_R/0/1/0/all/0/1&quot;&gt;Raphael Steiner&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A finite set $P$ of points in the plane is $n$-universal with respect to a
class $\mathcal{C}$ of planar graphs if every $n$-vertex graph in $\mathcal{C}$
admits a crossing-free straight-line drawing with vertices at points of $P$.
For the class of all planar graphs the best known upper bound on the size of a
universal point set is quadratic and the best known lower bound is linear in
$n$. Some classes of planar graphs are known to admit universal point sets of
near linear size, however, there are no truly linear bounds for interesting
classes beyond outerplanar graphs.
&lt;/p&gt;
&lt;p&gt;In this paper, we show that there is a universal point set of size $2n-2$ for
the class of bipartite planar graphs with $n$ vertices. The same point set is
also universal for the class of $n$-vertex planar graphs of maximum degree $3$.
The point set used for the results is what we call an exploding double chain,
and we prove that this point set allows planar straight-line embeddings of many
more planar graphs, namely of all subgraphs of planar graphs admitting a
one-sided Hamiltonian cycle. The result for bipartite graphs also implies that
every $n$-vertex plane graph has a $1$-bend drawing all whose bends and
vertices are contained in a specific point set of size $4n-6$, this improves a
bound of $6n-10$ for the same problem by L\&quot;offler and T\&#39;oth.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-02 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Geometry</author>
</item>

<item>
  <title>A linear bound for the Colin de Verdi\&#39;ere parameter $\mu$ for graphs embedded on surfaces</title>
  <guid>http://arxiv.org/abs/2303.00556</guid>
  <link>http://arxiv.org/abs/2303.00556</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Lanuel_C/0/1/0/all/0/1&quot;&gt;Camille Lanuel&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Lazarus_F/0/1/0/all/0/1&quot;&gt;Francis Lazarus&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Pendavingh_R/0/1/0/all/0/1&quot;&gt;Rudi Pendavingh&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We provide a combinatorial and self-contained proof that for all graphs $G$
embedded on a surface $S$, the Colin de Verdi\`ere parameter $\mu(G)$ is upper
bounded by $7-2\chi(S)$.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-02 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Geometry</author>
</item>

<item>
  <title>Is Planted Coloring Easier than Planted Clique?</title>
  <guid>http://arxiv.org/abs/2303.00252</guid>
  <link>http://arxiv.org/abs/2303.00252</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kothari_P/0/1/0/all/0/1&quot;&gt;Pravesh K. Kothari&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Vempala_S/0/1/0/all/0/1&quot;&gt;Santosh S. Vempala&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wein_A/0/1/0/all/0/1&quot;&gt;Alexander S. Wein&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Xu_J/0/1/0/all/0/1&quot;&gt;Jeff Xu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the computational complexity of two related problems: recovering a
planted $q$-coloring in $G(n,1/2)$, and finding efficiently verifiable
witnesses of non-$q$-colorability (a.k.a. refutations) in $G(n,1/2)$. Our main
results show hardness for both these problems in a restricted-but-powerful
class of algorithms based on computing low-degree polynomials in the inputs.
&lt;/p&gt;
&lt;p&gt;The problem of recovering a planted $q$-coloring is equivalent to recovering
$q$ disjoint planted cliques that cover all the vertices -- a potentially
easier variant of the well-studied planted clique problem. Our first result
shows that this variant is as hard as the original planted clique problem in
the low-degree polynomial model of computation: each clique needs to have size
$k \gg \sqrt{n}$ for efficient recovery to be possible. For the related variant
where the cliques cover a $(1-\epsilon)$-fraction of the vertices, we also show
hardness by reduction from planted clique.
&lt;/p&gt;
&lt;p&gt;Our second result shows that refuting $q$-colorability of $G(n,1/2)$ is hard
in the low-degree polynomial model when $q \gg n^{2/3}$ but easy when $q
\lesssim n^{1/2}$, and we leave closing this gap for future work. Our proof is
more subtle than similar results for planted clique and involves constructing a
non-standard distribution over $q$-colorable graphs. We note that while related
to several prior works, this is the first work that explicitly formulates
refutation problems in the low-degree polynomial model.
&lt;/p&gt;
&lt;p&gt;The proofs of our main results involve showing low-degree hardness of
hypothesis testing between an appropriately constructed pair of distributions.
For refutation, we show completeness of this approach: in the low-degree model,
the refutation task is precisely as hard as the hardest associated testing
problem, i.e., proving hardness of refutation amounts to finding a &quot;hard&quot;
distribution.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Computing the Best Policy That Survives a Vote</title>
  <guid>http://arxiv.org/abs/2303.00660</guid>
  <link>http://arxiv.org/abs/2303.00660</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Constantinescu_A/0/1/0/all/0/1&quot;&gt;Andrei Constantinescu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wattenhofer_R/0/1/0/all/0/1&quot;&gt;Roger Wattenhofer&lt;/a&gt;&lt;/p&gt;&lt;p&gt;An assembly of $n$ voters needs to decide on $t$ independent binary issues.
Each voter has opinions about the issues, given by a $t$-bit vector. Anscombe&#39;s
paradox shows that a policy following the majority opinion in each issue may
not survive a vote by the very same set of $n$ voters, i.e., more voters may
feel unrepresented by such a majority-driven policy than represented. A natural
resolution is to come up with a policy that deviates a bit from the majority
policy but no longer gets more opposition than support from the electorate. We
show that a Hamming distance to the majority policy of at most $\lfloor (t - 1)
/ 2 \rfloor$ can always be guaranteed, by giving a new probabilistic argument
relying on structure-preserving symmetries of the space of potential policies.
Unless the electorate is evenly divided between the two options on all issues,
we in fact show that a policy strictly winning the vote exists within this
distance bound. Our approach also leads to a deterministic polynomial-time
algorithm for finding policies with the stated guarantees, answering an open
problem of previous work. For odd $t$, unless we are in the pathological case
described above, we also give a simpler and more efficient algorithm running in
expected polynomial time with the same guarantees. We further show that
checking whether distance strictly less than $\lfloor (t - 1) /2 \rfloor$ can
be achieved is NP-hard, and that checking for distance at most some input $k$
is FPT with respect to several natural parameters.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Non-crossing Hamiltonian Paths and Cycles in Output-Polynomial Time</title>
  <guid>http://arxiv.org/abs/2303.00147</guid>
  <link>http://arxiv.org/abs/2303.00147</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Eppstein_D/0/1/0/all/0/1&quot;&gt;David Eppstein&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We show that, for planar point sets, the number of non-crossing Hamiltonian
paths is polynomially bounded in the number of non-crossing paths, and the
number of non-crossing Hamiltonian cycles (polygonalizations) is polynomially
bounded in the number of surrounding cycles. As a consequence, we can list the
non-crossing Hamiltonian paths or the polygonalizations, in time polynomial in
the output size, by filtering the output of simple backtracking algorithms for
non-crossing paths or surrounding cycles respectively. To prove these results
we relate the numbers of non-crossing structures to two easily-computed
parameters of the point set: the minimum number of points whose removal results
in a collinear set, and the number of points interior to the convex hull. These
relations also lead to polynomial-time approximation algorithms for the numbers
of structures of all four types, accurate to within a constant factor of the
logarithm of these numbers.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Towards Space Efficient Two-Point Shortest Path Queries in a Polygonal Domain</title>
  <guid>http://arxiv.org/abs/2303.00666</guid>
  <link>http://arxiv.org/abs/2303.00666</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Berg_S/0/1/0/all/0/1&quot;&gt;Sarita de Berg&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Miltzow_T/0/1/0/all/0/1&quot;&gt;Tillman Miltzow&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Staals_F/0/1/0/all/0/1&quot;&gt;Frank Staals&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We devise a data structure that can answer shortest path queries for two
query points in a polygonal domain $P$ on $n$ vertices. For any $\varepsilon &amp;gt;
0$, the space complexity of the data structure is $O(n^{10+\varepsilon})$ and
queries can be answered in $O(\log n)$ time. This is the first improvement upon
a conference paper by Chiang and Mitchell from 1999. They present a data
structure with $O(n^{11})$ space complexity. Our main result can be extended to
include a space-time trade-off. Specifically, we devise data structures with
$O(n^{10+\varepsilon}/\hspace{1pt} \ell^{5 + O(\varepsilon)})$ space complexity
and $O(\ell \log n )$ query time for any integer $1 \leq \ell \leq n$.
&lt;/p&gt;
&lt;p&gt;Furthermore, our main result can be improved if we restrict one (or both) of
the query points to lie on the boundary of $P$. When one of the query points is
restricted to lie on the boundary, and the other query point can still lie
anywhere in $P$, the space complexity becomes $O(n^{6+\varepsilon})$. When both
query points are on the boundary, the space is decreased further to
$O(n^{4+\varepsilon})$, thereby improving an earlier result of Bae and Okamoto.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Coordination of Multiple Robots along Given Paths with Bounded Junction Complexity</title>
  <guid>http://arxiv.org/abs/2303.00745</guid>
  <link>http://arxiv.org/abs/2303.00745</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Abrahamsen_M/0/1/0/all/0/1&quot;&gt;Mikkel Abrahamsen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Geft_T/0/1/0/all/0/1&quot;&gt;Tzvika Geft&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Halperin_D/0/1/0/all/0/1&quot;&gt;Dan Halperin&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ugav_B/0/1/0/all/0/1&quot;&gt;Barak Ugav&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study a fundamental NP-hard motion coordination problem for
multi-robot/multi-agent systems: We are given a graph $G$ and set of agents,
where each agent has a given directed path in $G$. Each agent is initially
located on the first vertex of its path. At each time step an agent can move to
the next vertex on its path, provided that the vertex is not occupied by
another agent. The goal is to find a sequence of such moves along the given
paths so that each reaches its target, or to report that no such sequence
exists. The problem models guidepath-based transport systems, which is a
pertinent abstraction for traffic in a variety of contemporary applications,
ranging from train networks or Automated Guided Vehicles (AGVs) in factories,
through computer game animations, to qubit transport in quantum computing. It
also arises as a sub-problem in the more general multi-robot motion-planning
problem.
&lt;/p&gt;
&lt;p&gt;We provide a fine-grained tractability analysis of the problem by considering
new assumptions and identifying minimal values of key parameters for which the
problem remains NP-hard. Our analysis identifies a critical parameter called
vertex multiplicity (VM), defined as the maximum number of paths passing
through the same vertex. We show that a prevalent variant of the problem, which
is equivalent to Sequential Resource Allocation (concerning deadlock prevention
for concurrent processes), is NP-hard even when VM is 3. On the positive side,
for VM $\le$ 2 we give an efficient algorithm that iteratively resolves cycles
of blocking relations among agents. We also present a variant that is NP-hard
when the VM is 2 even when $G$ is a 2D grid and each path lies in a single grid
row or column. By studying highly distilled yet NP-hard variants, we deepen the
understanding of what makes the problem intractable and thereby guide the
search for efficient solutions under practical assumptions.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Improved Quantum Query Complexity on Easier Inputs</title>
  <guid>http://arxiv.org/abs/2303.00217</guid>
  <link>http://arxiv.org/abs/2303.00217</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Anderson_N/0/1/0/all/0/1&quot;&gt;Noel T. Anderson&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Chung_J/0/1/0/all/0/1&quot;&gt;Jay-U Chung&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Kimmel_S/0/1/0/all/0/1&quot;&gt;Shelby Kimmel&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Koh_D/0/1/0/all/0/1&quot;&gt;Da-Yeon Koh&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Ye_X/0/1/0/all/0/1&quot;&gt;Xiaohan Ye&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Quantum span program algorithms for function evaluation sometimes have
reduced query complexity when promised that the input has a certain structure.
We design a modified span program algorithm to show these improvements persist
even without a promise ahead of time, and we extend this approach to the more
general problem of state conversion. As an application, we prove exponential
and superpolynomial quantum advantages in average query complexity for several
search problems, generalizing Montanaro&#39;s Search with Advice [Montanaro, TQC
2010].
&lt;/p&gt;
  </description>
  <pubDate>2023-03-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Computing All Restricted Skyline Probabilities for Uncertain Data</title>
  <guid>http://arxiv.org/abs/2303.00259</guid>
  <link>http://arxiv.org/abs/2303.00259</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gao_X/0/1/0/all/0/1&quot;&gt;Xiangyu Gao&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Li_J/0/1/0/all/0/1&quot;&gt;Jianzhong Li&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Miao_D/0/1/0/all/0/1&quot;&gt;Dongjing Miao&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Since data uncertainty is inherent in multi-criteria decision making, recent
years have witnessed a dramatically increasing amount of attention devoted to
conducting advanced analysis on uncertain data. In this paper, we revisit
restricted skyline query on uncertain datasets from both complexity and
algorithm perspective. Instead of conducting probabilistic restricted skyline
analysis under threshold or top-$k$ semantics, we focus on a more general
problem that aims to compute the restricted skyline probability of all objects.
We prove that the problem can not be solved in truly subquadratic-time unless
the Orthogonal Vectors conjecture fails, and propose two algorithms, one with
near-optimal time complexity and the other with better expected time
complexity. We also propose an algorithm with sublinear query time and
polynomial preprocessing time for the case where the preference region is
described by $d - 1$ ratio bound constraints. Our thorough experiments over
real and synthetic datasets demonstrate the effectiveness of the problem and
the efficiency of the proposed algorithms.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Sampling with Barriers: Faster Mixing via Lewis Weights</title>
  <guid>http://arxiv.org/abs/2303.00480</guid>
  <link>http://arxiv.org/abs/2303.00480</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gatmiry_K/0/1/0/all/0/1&quot;&gt;Khashayar Gatmiry&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kelner_J/0/1/0/all/0/1&quot;&gt;Jonathan Kelner&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Vempala_S/0/1/0/all/0/1&quot;&gt;Santosh S. Vempala&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We analyze Riemannian Hamiltonian Monte Carlo (RHMC) for sampling a polytope
defined by $m$ inequalities in $\R^n$ endowed with the metric defined by the
Hessian of a self-concordant convex barrier function. We use a hybrid of the
$p$-Lewis weight barrier and the standard logarithmic barrier and prove that
the mixing rate is bounded by $\tilde O(m^{1/3}n^{4/3})$, improving on the
previous best bound of $\tilde O(mn^{2/3})$, based on the log barrier. Our
analysis overcomes several technical challenges to establish this result, in
the process deriving smoothness bounds on Hamiltonian curves and extending
self-concordance notions to the infinity norm; both properties appear to be of
independent interest.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>A linear time algorithm for linearizing quadratic and higher-order shortest path problems</title>
  <guid>http://arxiv.org/abs/2303.00569</guid>
  <link>http://arxiv.org/abs/2303.00569</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Cela_E/0/1/0/all/0/1&quot;&gt;Eranda &amp;#xc7;ela&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Klinz_B/0/1/0/all/0/1&quot;&gt;Bettina Klinz&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lendl_S/0/1/0/all/0/1&quot;&gt;Stefan Lendl&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Woeginger_G/0/1/0/all/0/1&quot;&gt;Gerhard J. Woeginger&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wulf_L/0/1/0/all/0/1&quot;&gt;Lasse Wulf&lt;/a&gt;&lt;/p&gt;&lt;p&gt;An instance of the NP-hard Quadratic Shortest Path Problem (QSPP) is called
linearizable iff it is equivalent to an instance of the classic Shortest Path
Problem (SPP) on the same input digraph. The linearization problem for the QSPP
(LinQSPP) decides whether a given QSPP instance is linearizable and determines
the corresponding SPP instance in the positive case. We provide a novel linear
time algorithm for the LinQSPP on acyclic digraphs which runs considerably
faster than the previously best algorithm. The algorithm is based on a new
insight revealing that the linearizability of the QSPP for acyclic digraphs can
be seen as a local property. Our approach extends to the more general
higher-order shortest path problem.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Robust and Practical Solution of Laplacian Equations by Approximate Elimination</title>
  <guid>http://arxiv.org/abs/2303.00709</guid>
  <link>http://arxiv.org/abs/2303.00709</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Gao_Y/0/1/0/all/0/1&quot;&gt;Yuan Gao&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Kyng_R/0/1/0/all/0/1&quot;&gt;Rasmus Kyng&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Spielman_D/0/1/0/all/0/1&quot;&gt;Daniel A. Spielman&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We introduce a new algorithm and software for solving linear equations in
symmetric diagonally dominant matrices with non-positive off-diagonal entries
(SDDM matrices), including Laplacian matrices. We use pre-conditioned conjugate
gradient (PCG) to solve the system of linear equations. Our preconditioner is a
variant of the Approximate Cholesky factorization of Kyng and Sachdeva (FOCS
2016). Our factorization approach is simple: we eliminate matrix rows/columns
one at a time and update the remaining matrix using sampling to approximate the
outcome of complete Cholesky factorization. Unlike earlier approaches, our
sampling always maintains a connectivity in the remaining non-zero structure.
Our algorithm comes with a tuning parameter that upper bounds the number of
samples made per original entry. We implement our algorithm in Julia, providing
two versions, AC and AC2, that respectively use 1 and 2 samples per original
entry. We compare their single-threaded performance to that of current
state-of-the-art solvers Combinatorial Multigrid (CMG),
BoomerAMG-preconditioned Krylov solvers from HyPre and PETSc, Lean Algebraic
Multigrid (LAMG), and MATLAB&#39;s with Incomplete Cholesky Factorization (ICC).
Our evaluation uses a broad class of problems, including all large SDDM
matrices from the SuiteSparse collection and diverse programmatically generated
instances. Our experiments suggest that our algorithm attains a level of
robustness and reliability not seen before in SDDM solvers, while retaining
good performance across all instances. Our code and data are public, and we
provide a tutorial on how to replicate our tests. We hope that others will
adopt this suite of tests as a benchmark, which we refer to as SDDM2023. Our
solver code is available at: https://github.com/danspielman/Laplacians.jl/ Our
benchmarking data and tutorial are available at:
https://rjkyng.github.io/SDDM2023/
&lt;/p&gt;
  </description>
  <pubDate>2023-03-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>TCS+ talk: Wednesday, March 8 — Christos Tzamos, U Athens/UW Madison</title>
  <guid>http://tcsplus.wordpress.com/?p=671</guid>
  <link>https://tcsplus.wordpress.com/2023/03/01/tcs-talk-wednesday-march-8-christos-tzamos-u-athens-uw-madison/</link>
  <description>
    &lt;p&gt;The next TCS+ talk will take place this coming Wednesday, March 8th at 1:00 PM Eastern Time (10:00 AM Pacific Time, 19:00 Central European Time, 18:00 UTC). &lt;strong&gt;Christos Tzamos&lt;/strong&gt; from University of Athens/UW Madison will speak about &amp;#8220;&lt;em&gt;A Strongly Polynomial Algorithm for Approximate Forster Transforms and its Application to Halfspace Learning&lt;/em&gt;&amp;#8221; (abstract below).&lt;/p&gt;
&lt;p&gt;You can reserve a spot as an individual or a group to join us live by signing up on &lt;a href=&quot;https://sites.google.com/view/tcsplus/welcome/next-tcs-talk&quot;&gt;the online form&lt;/a&gt;. Registration is &lt;em&gt;not&lt;/em&gt; required to attend the interactive talk, and the link will be posted on the website the day prior to the talk; however, by registering in the form, you will receive a reminder, along with the link. (The recorded talk will also be posted &lt;a href=&quot;https://sites.google.com/view/tcsplus/welcome/past-talks&quot;&gt;on our website&lt;/a&gt; afterwards) As usual, for more information about the TCS+ online seminar series and the upcoming talks, or to &lt;a href=&quot;https://sites.google.com/view/tcsplus/welcome/suggest-a-talk&quot;&gt;suggest&lt;/a&gt; a possible topic or speaker, please see &lt;a href=&quot;https://sites.google.com/view/tcsplus/&quot;&gt;the website&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote&quot;&gt;&lt;p&gt;Abstract: The Forster transform is a method of regularizing a dataset by placing it in radial isotropic position while maintaining some of its essential properties. Forster transforms have played a key role in a diverse range of settings spanning computer science and functional analysis. Prior work had given weakly polynomial time algorithms for computing Forster transforms, when they exist. Our main result is the first strongly polynomial time algorithm to compute an approximate Forster transform of a given dataset or certify that no such transformation exists. By leveraging our strongly polynomial Forster algorithm, we obtain the first strongly polynomial time algorithm for distribution-free PAC learning of halfspaces. This learning result is surprising because proper PAC learning of halfspaces is equivalent to linear programming. Our learning approach extends to give a strongly polynomial halfspace learner in the presence of random classification noise and, more generally, Massart noise.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;#8220;&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By plustcs&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 21:43:08 UTC</pubDate>
  <author>TCS+ Seminar Series</author>
</item>

<item>
  <title>Non-crossing Hamiltonian paths and cycles in output-polynomial time</title>
  <guid>https://11011110.github.io/blog/2023/03/01/non-crossing-hamiltonian</guid>
  <link>https://11011110.github.io/blog/2023/03/01/non-crossing-hamiltonian.html</link>
  <description>
    &lt;p&gt;My paper “Non-crossing Hamiltonian paths and cycles in output-polynomial time”, to appear at SoCG, is now online as a preprint at &lt;a href=&quot;https://arxiv.org/abs/2303.00147&quot;&gt;arXiv:2303.00147&lt;/a&gt;. This is the full version; the SoCG version will need to be cut down by omitting proofs to reach the 500-line proceedings limit. It’s about &lt;a href=&quot;https://en.wikipedia.org/wiki/Polygonalization&quot;&gt;polygonalization&lt;/a&gt;, the problem of finding all ways of connecting dots in the plane into a simple polygon (allowing connections that pass straight through a dot, but not allowing missing a dot altogether). The main results are that we can list all of these in time polynomial in the output size, and in polynomial time get an approximate count of them that is bounded above and below the true count by a polynomial of its value. Previously, the best we knew were that there were at most exponentially many polygonalizations and that we could list them in exponential time.&lt;/p&gt;

&lt;p&gt;I think of this as being in the vein of recent conferences like the &lt;a href=&quot;https://www.siam.org/conferences/cm/conference/sosa23&quot;&gt;Symposium on Simplicity in Algorithms&lt;/a&gt; or the new “simplicity track” of the &lt;a href=&quot;http://esa-symposium.org/&quot;&gt;European Symposium on Algorithms&lt;/a&gt;: simple algorithms whose analysis isn’t. In fact, the algorithm in my paper isn’t even new. It’s the same one that was already used to achieve exponential time, in a paper “Algorithmic enumeration of surrounding polygons” by Katsuhisa Yamanaka, David Avis, Takashi Horiyama, Yoshio Okamoto, Ryuhei Uehara, and Tanami Yamauchi, published in 2021 in &lt;em&gt;Discrete Applied Mathematics&lt;/em&gt; (&lt;a href=&quot;https://doi.org/10.1016/j.dam.2020.03.034&quot;&gt;doi:10.1016/j.dam.2020.03.03&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;If we want to list all structures, from an exponentally large family of structures, in time polynomial per structure, then I think there’s really only one idea and a lot of elaboration on that idea. The idea is: describe your structures as the vertices of a large state space, with some sort of local operation for moving from state to state; prove that this local operation suffices to connect all the states together; and then apply a graph exploration algorithm like depth-first search to find all of the states from some starting state. The trouble is, for polygonalizations, we don’t know a good local operation. The obvious candidates, local moves that replace two or three edges of a polygon by a different set of edges, &lt;a href=&quot;/blog/2020/01/29/unflippable-polygon.html&quot;&gt;were proven not to work&lt;/a&gt; in a 2002 paper by Carmen Fernando, Michael Houle, and Ferran Hurtado (&lt;a href=&quot;https://doi.org/10.1016%2FS0304-3975%2801%2900409-1&quot;&gt;doi:10.1016/S0304-3975(01)00409-1&lt;/a&gt;). Instead, Yamanaka et al. propose to list all of the members of a larger family of structures, and then filter out the ones that are really polygonalizations. These more general structures are the “surrounding polygons” of their paper’s title.&lt;/p&gt;

&lt;p&gt;A surrounding polygon is just a simple polygon that uses some of the given dots as vertices and contains the rest. The example below is taken from the last section of my paper. There I show that point sets like the one in the illustration, with one concave chain of dots inside a triangle, have \((n-1)2^{n-4}\) polygonalizations but a polynomially-larger number of surrounding polygons proportional to \(n(1+\varphi)^n\). Here \(\varphi\) is the golden ratio; this is &lt;a href=&quot;/blog/2020/01/12/counting-grid-polygonalizations.html&quot;&gt;not the first occurrence of the golden ratio in counting polygonalizations&lt;/a&gt;. A reviewer told me that these point sets are called “party-hat sets” or “ice-cream cone sets” but I’m not sure I believe it; I couldn’t find those names in a Google Scholar search.&lt;/p&gt;

&lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/blog/assets/2023/pseudotriangle.svg&quot; alt=&quot;A set of points in the form of a triangle with a concave chain of points replacing one of its edges, and a surrounding polygon of the points. The points that are vertices of the polygon are colored blue, and the other points surrounded by the polygon are colored red.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The simplest surrounding polygon of any input is just its &lt;a href=&quot;https://en.wikipedia.org/wiki/Convex_hull&quot;&gt;convex hull&lt;/a&gt;. You can get from any surrounding polygon that is not the convex hull to a simpler one by “&lt;a href=&quot;https://en.wikipedia.org/wiki/Two_ears_theorem&quot;&gt;ear-cutting&lt;/a&gt;”: find two consecutive edges of the polygon that form two sides of an empty triangle outside the polygon, and replace them by a single shortcut edge. The shortcutted vertex becomes surrounded, and the area of the polygon grows, so repeated ear-cutting can only stop at the convex hull, implying that all surrounding polygons are connected through the convex hull. If you choose carefully which ear to cut, you give all surrounding polygons the structure of a tree, and the algorithm of Yamanaka et al. amounts to depth-first search of this tree. You can then find the polygonalizations just by running this algorithm and outputting only the surrounding polygons that use all the dots, at some tree leaves.&lt;/p&gt;

&lt;p&gt;The idea of my new paper is to analyze these structures in the style of my book, &lt;a href=&quot;https://www.ics.uci.edu/~eppstein/forbidden/&quot;&gt;&lt;em&gt;Forbidden Configurations in Discrete Geometry&lt;/em&gt;&lt;/a&gt;, in terms of simple parameters of point sets that are monotonic (they don’t go down when you add more points) and that depend only on the order-type of the point set and not its exact coordinates. The question I set out to answer is: which point sets have only a very small number of polygonalizations, and which have many? I quickly identified two ways in which a point set could only have a small number:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Most of its points could belong to a single line. If a set of \(n\) points has \(n-k\) points on a line, and only a much smaller number \(k\) of points elsewhere, then most of the edges would have to connect paths of consecutive points along the line, and there aren’t very many ways of doing that. This number \(k\) is one of the parameters studied in my book. Working out the details of this argument showed more specifically that the number of polygonalizations is \(n^{O(k)}\): there are only \(O(k)\) points of any polygonalization where something interesting happens, and only \(O(n)\) choices for what happens there.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Most of its points could belong to the convex hull. If all points belong to the convex hull, then that is the only polygonalization. And if there are \(n-k\) points on the hull, and only a much smaller number \(k\) of points elsewhere, then the only points where something interesting happens are the \(O(k)\) points that are either not on the hull, or adjacent to a non-hull point. All the rest of their points have to be connected to their two hull neighbors. So again the number of polygonalizations is \(n^{O(k)}\). The parameter used here, the number of points interior to the hull, was not from my book, but maybe it should have been.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More strongly, upper bounds of the same form also apply to surrounding polygons. Allowing an interesting point to be skipped by the polygon doesn’t increase its number of choices much. Consecutive blocks of uninteresting points along a long line of points must either all be skipped or all be part of a surrounding polygon, again not increasing the number of choices by much. And a surrounding polygon cannot skip any point of the convex hull, because then it would not be surrounded. The part of the analysis that I found more difficult was proving that these are the only cases. If you have points that are mostly not on a line and mostly not on a hull, then there are exponentially many polygonalizations. And if you have one of the two situations with few polygonalizations described above, then the number of polygonalizations is accurately described by the upper bounds above. For details of these lower bounds, see the paper. The number of surrounding polygons can only be at least as large as the number of polygonalizations, because every polygonalization is a surrounding polygon.&lt;/p&gt;

&lt;p&gt;Once that analysis was done, the algorithms for listing polygonalizations and for approximately counting them came for free. The lower bound and the upper bound on the number of polygonalizations have the same form as each other, so they give an accurate approximation without any more effort. And the bounds on the number of polygonalizations and on the number of surrounding polygons have the same form as each other, so the analysis of the algorithm for surrounding polygons (that it takes input-polynomial time per polygon) also shows that it generates all polygonalizations in output-polynomial time.&lt;/p&gt;

&lt;p&gt;The “non-crossing Hamiltonian paths” of the new paper’s title are the same thing, but easier. The easier-to-generate structures are non-crossing paths, which you can form into a forest (rooted at the one-vertex paths) by a parent operation that removes the final edge of a path. And points in convex position still have many paths; the only point sets that have a small number of non-crossing Hamiltonian paths (or non-crossing paths) are the ones with most of the points on a single line.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109951209389425592&quot;&gt;Discuss on Mastodon&lt;/a&gt;)&lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By David Eppstein&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 17:51:00 UTC</pubDate>
  <author>David Eppstein</author>
</item>

<item>
  <title>SODA 2023</title>
  <guid>https://rjlipton.wpcomstaging.com/?p=21186</guid>
  <link>https://rjlipton.wpcomstaging.com/2023/03/01/soda-2023/</link>
  <description>
    &lt;p&gt;
&lt;font color=&quot;#0044cc&quot;&gt;&lt;br /&gt;
&lt;em&gt;Traces of strings, plus ways of tracing accepted papers&lt;/em&gt;&lt;br /&gt;
&lt;font color=&quot;#000000&quot;&gt;&lt;/p&gt;
&lt;p&gt;
Anindya De was at Northwestern University and is now at the University of Pennsylvania&amp;#8212;see &lt;a href=&quot;https://www.seas.upenn.edu/~anindyad/&quot;&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;
&lt;a href=&quot;https://rjlipton.wpcomstaging.com/2023/03/01/soda-2023/ad-2/&quot; rel=&quot;attachment wp-att-21192&quot;&gt;&lt;img data-attachment-id=&quot;21192&quot; data-permalink=&quot;https://rjlipton.wpcomstaging.com/2023/03/01/soda-2023/ad-2/&quot; data-orig-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?fit=400%2C400&amp;amp;ssl=1&quot; data-orig-size=&quot;400,400&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;4&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;Canon EOS 5D Mark III&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;1551052800&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;200&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;200&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0.00625&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;1&amp;quot;}&quot; data-image-title=&quot;ad&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?fit=300%2C300&amp;amp;ssl=1&quot; data-large-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?fit=400%2C400&amp;amp;ssl=1&quot; decoding=&quot;async&quot; loading=&quot;lazy&quot; src=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?resize=250%2C250&amp;#038;ssl=1&quot; alt=&quot;&quot; width=&quot;250&quot; height=&quot;250&quot; class=&quot;aligncenter wp-image-21192&quot; srcset=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?w=400&amp;amp;ssl=1 400w, https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?resize=300%2C300&amp;amp;ssl=1 300w, https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?resize=150%2C150&amp;amp;ssl=1 150w, https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/03/ad.jpg?resize=200%2C200&amp;amp;ssl=1 200w&quot; sizes=&quot;(max-width: 250px) 100vw, 250px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
He was advised by two of the top advisors ever there were: Luca Trevisan and Umesh Vazirani. &lt;/p&gt;
&lt;p&gt;
&lt;p&gt;&lt;H2&gt; Traces &lt;/H2&gt;&lt;/p&gt;
&lt;p&gt;&lt;p&gt;
I recently ran across a great paper by Anindya titled &lt;a href=&quot;https://arxiv.org/abs/2211.03292&quot;&gt;Approximate Trace Reconstruction from a Single Trace&lt;/a&gt;. It is co-authored with Xi Chen (Columbia University), Chin Ho Lee (Harvard University), and Rocco Servedio and Sandip Sinha (Columbia University). Notice that we did not put an &lt;a href=&quot;https://jewishstandard.timesofisrael.com/horse-mule-horse-mule/&quot;&gt;Oxford comma&lt;/a&gt; between Servedio and Sinha as they are both from Columbia. The paper appeared at &lt;a href=&quot;https://www.siam.org/conferences/cm/program/accepted-papers/soda23-accepted-papers&quot;&gt;SODA 2023&lt;/a&gt; this January. &lt;/p&gt;
&lt;p&gt;
Here are pointers to the almost 200 papers that were in the conference. I put this together before discovering the site &lt;a href=&quot;https://www.conference-publishing.com/&quot;&gt;conference-publishing.com&lt;/a&gt;, which as mentioned in my STOC 2023 &lt;a href=&quot;https://rjlipton.wpcomstaging.com/2023/02/25/stoc-2023/&quot;&gt;post&lt;/a&gt; generates paper lists with links for a host of conferences. So I did all the following links myself. Do scroll past the list to the bottom to read a little more about traces which Ken and I put together.&lt;/p&gt;
&lt;ol&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/pdf/2204.09129.pdf&quot;&gt;Small Shadows of Lattice Polytopes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.05186&quot;&gt;Fair allocation of a multiset of indivisible items&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.02277&quot;&gt;Hierarchies of Minion Tests for PCSPs through Tensors&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2210.08293&quot;&gt;Approximate Graph Colouring and Crystals&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.04455&quot;&gt;The Price of Stability for First Price Auction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2206.04549&quot;&gt;Spencer&amp;#8217;s theorem in nearly input-sparsity time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.11195&quot;&gt;Spatial Mixing and the random-cluster dynamics on lattices&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch157&quot;&gt;Nonlinear codes exceeding the Gilbert-Varshamov and Tsfasman-Vladut-Zink bounds&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.09391&quot;&gt;A Near-Linear Time Sampler for the Ising Model with External Field&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2209.02655&quot;&gt;Concentration of polynomial random matrices via Efron-Stein inequalities&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.15945&quot;&gt;Quantum Speed-ups for String Synchronizing Sets, Longest Common Substring, and kmismatch Matching&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2208.11275&quot;&gt;Halving by a Thousand Cuts or Punctures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/pdf/10.1137/1.9781611977554.ch50&quot;&gt;On the number incidences when avoiding an induced biclique in geometric settings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2206.00579&quot;&gt;Subexponential mixing for partition chains on grid-like graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2103.02972&quot;&gt;Weisfeilera Leman and Graph Spectra&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2203.09334&quot;&gt;Stronger 3SUM-Indexing Lower Bounds&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.10556&quot;&gt;Tight Bounds for Monotone Minimal Perfect Hashing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2208.02732&quot;&gt;Almost Consistent Systems of Linear Equations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.05898&quot;&gt;Testing and Learning Quantum Juntas Nearly Optimally&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch155&quot;&gt;Testing Convex Truncation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch55&quot;&gt;Player-optimal Stable Regret for Bandit Learning in Matching Markets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2103.03769&quot;&gt;Competitive Information Design for Pandoras Box&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2106.12725&quot;&gt;Breaking the O(n)-Barrier in the Construction of Compressed Suffix Arrays and Suffix Trees&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.14108&quot;&gt;Short Synchronizing Words for Random Automata&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.00450&quot;&gt;Packing cycles in planar and bounded-genus graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://web.eecs.umich.edu/~pettie/papers/LLL.pdf&quot;&gt;Improved Distributed Algorithms for the Lovasz Local Lemma and Edge Coloring&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2112.07050&quot;&gt;Optimal Fully Dynamic &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{k}&quot; class=&quot;latex&quot; /&gt;-Center Clustering for Adaptive and Oblivious Adversaries&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.13335&quot;&gt;A logic-based algorithmic meta-theorem for mim-width&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.12800&quot;&gt;Tiny Pointers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07158&quot;&gt;Streaming complexity of CSPs with randomly ordered constraints&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.04458&quot;&gt;Computing Square Colorings on Bounded-Treewidth and Planar Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2203.00751&quot;&gt;Near-Linear Time Approximations for Cut Problems via Fair Cuts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://deepai.org/publication/stronger-privacy-amplification-by-shuffling-for-renyi-and-approximate-differential-privacy&quot;&gt;Stronger Privacy Amplification by Shuffling for R&amp;eacute;nyi and Approximate Differential Privacy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2208.13696&quot;&gt;Minimizing Completion Times for Stochastic Jobs via Batched Free Times&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2106.02149&quot;&gt;Optimal Pricing Schemes for an Impatient Buyer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07974&quot;&gt;Online Prediction in Sub-linear Space&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.03268&quot;&gt;Fast Discrepancy Minimization with Hereditary Guarantees&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07363&quot;&gt;Exact Flow Sparsification Requires Unbounded Size&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07809&quot;&gt;Curve Simplification and Clustering under Frechet Distance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.08783&quot;&gt;Almost Tight Bounds for Online Facility Location in the Random-Order Model&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2104.00406&quot;&gt;The complete classification for quantified equality constraints&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.02170&quot;&gt;Small subgraphs with large average degree&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2208.07544&quot;&gt;Mean estimation when you have the source code; or, quantum Monte Carlo methods&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2212.03016&quot;&gt;Online Min-Max Paging&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2209.08904&quot;&gt;Gap-ETH-Tight Approximation Schemes for Red-Green-Blue Separation and BicoloredEuclidean Travelling Salesman Tours&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.02951&quot;&gt;Map matching queries on realistic input graphs under the Frachet distance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2208.07410&quot;&gt;Private Query Release via the Johnson Lindenstrauss Transform&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2206.07571&quot;&gt;Efficient decoding up to a constant fraction of the code length for asymptotically goodquantum codes&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.01248&quot;&gt;Passing the Limits of Pure Local Search for weighted k-Set Packing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.11892&quot;&gt;Improved Bounds for Sampling Solutions of Random CNF Formulas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.03158&quot;&gt;Pricing Query Complexity of Revenue Maximization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07422&quot;&gt;Flow-augmentation III: complexity dichotomy for Boolean CSPs parameterized by thenumber of unsatisfied constraints&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07425&quot;&gt;Parameter tractability of Directed Multicut with three terminal pairs parameterizedby the size of the cutset: twin-width meets flow-augmentation&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2012.06713&quot;&gt;Approximate Trace Reconstruction from a Single Trace&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07519&quot;&gt;Dynamic Algorithms for Packing-Covering LPs via Multiplicative Weight Updates&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2204.03469&quot;&gt;Sharp threshold sequence and universality for Ising perceptron models&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2204.02519&quot;&gt;Maintaining Expander Decompositions via Sparse Cuts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.09341&quot;&gt;Near Optimal Analysis of the Cube versus Cube Test&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.09341&quot;&gt;Approximating Knapsack and Partition via Dense Subset Sums&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2210.13755&quot;&gt;Online and Bandit Algorithms for Norms with Gradient-Stable Approximations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2204.04868&quot;&gt;On complex roots of the independence polynomial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://deepai.org/publication/simplex-range-searching-revisited-how-to-shave-logs-in-multi-level-data-structures&quot;&gt;Simplex Range Searching Revisited: How to Shave Logs in Multi-Level Data Structures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.04112&quot;&gt;Improved Pattern-Avoidance Bounds for Greedy BSTs via Matrix Decomposition&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.06527&quot;&gt;Moser-Tardos Algorithm: Beyond Shearer&amp;#8217;s Bound&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2212.14847&quot;&gt;Deterministic counting Lovasz local lemma beyond linear programming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2205.05564&quot;&gt;Conflict-free hypergraph matchings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2208.12721&quot;&gt;A Subquadratic &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bn%5E%5Cepsilon%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{n^&amp;#92;epsilon}&quot; class=&quot;latex&quot; /&gt;-approximation for the Continuous Frachet Distance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2204.08044&quot;&gt;Interdependent Public Projects&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.04994&quot;&gt;A Nearly Time-Optimal Distributed Approximation of Minimum Cost &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{k}&quot; class=&quot;latex&quot; /&gt;-Edge-Connected Spanning Subgraph&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07426&quot;&gt;A tight quasi-polynomial bound for Global Label Min-Cut&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2205.07709&quot;&gt;Polynomial formulations as a barrier for reduction-based hardness proofs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch173&quot;&gt;Faster Algorithm for Turn-based Stochastic Games with Bounded Treewidth&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2203.17144&quot;&gt;Instability of backoff protocols with arbitrary arrival rates&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch158&quot;&gt;On the orbit closure intersection problems for matrix tuples under conjugation and leftright actions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.04377&quot;&gt;Constant Approximating Parameterized k-SetCover is W[2]-hard&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.08268?context=stat.ML&quot;&gt;Online Lewis Weight Sampling&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.11328&quot;&gt;Toeplitz Low-Rank Approximation with Sublinear Query Complexity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.06874&quot;&gt;Kernelization for Graph Packing Problems via Rainbow Matching&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.01143&quot;&gt;Improved Integrality Gap in Max-Min Allocation: or Topology at the North Pole&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.06292&quot;&gt;Generalized Unrelated Machine Scheduling Problem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.04278&quot;&gt;Tight Complexity Bounds for Counting Generalized Dominating Sets in Bounded-Treewidth Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2301.07537&quot;&gt;An Improved Approximation for Maximum Weighted k-Set Packing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2212.09348&quot;&gt;Excluding Single-Crossing Matching Minors in Bipartite Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2206.15335&quot;&gt;Byzantine Agreement with Optimal Resilience via Statistical Fraud Detection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.05345&quot;&gt;Finding Triangles and Other Small Subgraphs in Geometric Intersection Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch188&quot;&gt;Simple, deterministic, fast (but weak) approximations to edit distance and Dyck edit distance&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch132&quot;&gt;From algorithms to connectivity and back: finding a giant component in random k-SAT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2206.00594&quot;&gt;Sparse graphs with bounded induced cycle packing number have logarithmic treewidth&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.08311&quot;&gt;Shrunk subspaces via operator Sinkhorn iteration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.10398&quot;&gt;Improved Approximation Algorithms for Unrelated Machines&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.01723&quot;&gt;Model-Checking for First-Order Logic with Disjoint Paths Predicates in Proper MinorClosed Graph Classes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.10556&quot;&gt;A Distanced Matching Game, Decremental APSP in Expanders, and Faster DeterministicAlgorithms for Graph Cut Problems&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2005.06156&quot;&gt;Super-resolution and Robust Sparse Continuous Fourier Transform in Any Constant Dimension: Nearly Linear Time and Sample Complexity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://chaoxuprime.com/files/papers/sub4part.pdf&quot;&gt;A Polynomial Time Algorithm for Finding a Minimum 4-Partition of a Submodular Function&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.05423&quot;&gt;Positivity of the symmetric group characters is PH-hard&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/1905.08841&quot;&gt;Parallel Exact Shortest Paths in Almost Linear Work and Square Root Depth&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/10.1137/1.9781611977554.ch40&quot;&gt;On the Integrality Gap of MFN Relaxation for the Capacitated Facility Location Problem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/pdf/10.1137/1.9781611977554.ch105&quot;&gt;Weak Bisimulation Finiteness of Pushdown Systems With Deterministic Transitions-ExpTime-Complete&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2206.13057&quot;&gt;Beating Greedy Matching in Sublinear Time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2203.11863&quot;&gt;Integrality Gaps for Random Integer Programs via Discrepancy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2209.10265&quot;&gt;Improved Approximation for Two-Edge-Connectivity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch117&quot;&gt;Zigzagging through acyclic orientations of chordal graphs and hypergraphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.04797&quot;&gt;Shortest Cycles With Monotone Submodular Costs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2107.07347&quot;&gt;Traversing the FFT Computation Tree for Dimension-Independent Sparse FourierTransforms&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07449&quot;&gt;Fixed-Parameter Tractability of Maximum Colored Path and Beyond&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2007.12257&quot;&gt;A half-integral Erd&amp;#337;s-P&amp;oacute;sa theorem for directed odd cycles&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2210.13395&quot;&gt;Improved Bi-point Rounding Algorithms and a Golden Barrier for &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{k}&quot; class=&quot;latex&quot; /&gt;-Median&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.05659&quot;&gt;Approximate Distance Oracles for Planar Graphs with Subpolynomial Error Dependency&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.02717&quot;&gt;A Framework for Approximation Schemes on Disk Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.13281&quot;&gt;Cubic Goldreich-Levin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.04507&quot;&gt;Closing the Gap Between Directed Hopsets and Shortcut Sets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.09215&quot;&gt;&amp;#8220;Who is Next in Line?&amp;#8221; On the Significance of Knowing the Arrival Order in Bayesian Online Settings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.05217&quot;&gt;Smaller Low-Depth Circuits for Kronecker Powers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.14759&quot;&gt;Fast algorithms for solving the Hamilton Cycle problem with high probability&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.05053&quot;&gt;On Minimizing Tardy Processing Time, Max-Min Skewed Convolution, and TrianglarStructured ILPs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2302.02290&quot;&gt;Maximal k-Edge-Connected Subgraphs in Weighted Graphs via Local Random Contraction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.10850&quot;&gt;A simple and sharper proof of the hypergraph Moore bound&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.08643&quot;&gt;A Sublinear-Time Quantum Algorithm for Approximating Partition Functions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2202.13484&quot;&gt;On Problems Related to Unbounded SubsetSum: A Unified Combinatorial Approach&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.03893&quot;&gt;Query Complexity of the Metric Steiner Tree Problem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2210.12601&quot;&gt;Sublinear-Time Algorithms for Max Cut, Max E2Lin&lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%28q%29%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{(q)}&quot; class=&quot;latex&quot; /&gt;, and Unique Label Cover on Expanders&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.06790&quot;&gt;Near-Linear Sample Complexity for &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7BL_p%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{L_p}&quot; class=&quot;latex&quot; /&gt; Polynomial Regression&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2209.07520&quot;&gt;On (Random-order) Online Contention Resolution Schemes for the Matching Polytope of (Bipartite) Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.09964&quot;&gt;Optimal Algorithms for Linear Algebra in the Current Matrix Multiplication Time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07946&quot;&gt;Algebraic Algorithms for Fractional Linear Matroid Parity via Non-commutative Rank&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.05006&quot;&gt;Almost Tight Error Bounds on Differentially Private Continual Counting&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2208.09159&quot;&gt;Secretary Problems: The Power of a Single Sample&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2112.06380&quot;&gt;Robust Voting Rules from Algorithmic Robust Statistics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch9&quot;&gt;Faster and Unified Algorithms for Diameter Reducing Shortcuts and Minimum Chain Cover&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch85&quot;&gt;Improved girth approximation in weighted undirected graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2112.03791&quot;&gt;Online Sorting and Translational Packing of Convex Polygons&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2302.05951&quot;&gt;Fully Dynamic Exact Edge Connectivity in Sublinear Time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.11072&quot;&gt;Algorithmizing the Multiplicity Schwartz-Zippel Lemma&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07949&quot;&gt;A Nearly Tight Analysis of Greedy k-means++&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07007?context=cs&quot;&gt;A polynomial-time algorithm for 1/2-well-supported Nash equilibria in bimatrix games&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.10969&quot;&gt;Bidder subset selection problem in auction design&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2204.09035&quot;&gt;Massively Parallel Computation on Embedded Planar Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2301.09810&quot;&gt;Balanced Allocations: The Power of Memory with Heterogeneous Bins&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2003.00545&quot;&gt;Simple Mechanisms for Agents with Non-linear Utilities&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch59&quot;&gt;The Power of Clairvoyance for Multi-Level Aggregation and Set Cover with Delay&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.05769&quot;&gt;Steiner Connectivity Augmentation and Splitting-off in Poly-logarithmic Maximum Flows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.05509&quot;&gt;Discrepancy minimization via regularization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch162&quot;&gt;Equivalence Test for Read-Once Arithmetic Formulas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2210.07534&quot;&gt;Time-Space Tradeoffs for Element Distinctness and Set Intersection via Pseudorandomness&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2209.11651&quot;&gt;Local Distributed Rounding: Generalized to MIS, Matching, Set Cover, and Beyond&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch143&quot;&gt;Parameterized Approximation Scheme for Biclique-free Max k-Weight SAT and Max Coverage&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2209.11669&quot;&gt;Improved Distributed Network Decomposition, Hitting Sets, and Spanners, via Derandomization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.05150&quot;&gt;Breaching the 2 LMP Approximation Barrier for Facility Location with Applications to kMedian&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.12441&quot;&gt;Query Complexity of Inversion Minimization on Trees&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch4&quot;&gt;Faster Deterministic Worst-Case Fully Dynamic All-Pairs Shortest Paths via Decremental Hop-Restricted Shortest Paths&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch189&quot;&gt;Optimal Square Detection Over General Alphabets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2203.16476&quot;&gt;Differentially Private All-Pairs Shortest Path Distances: Improved Algorithms and Lower Bounds&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch96&quot;&gt;Faster Computation of 3-Edge-Connected Components in Digraphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2201.10758&quot;&gt;Sampling Equilibria: Fast No-Regret Learning in Structured Games&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.07327&quot;&gt;Higher degree sum-of-squares relaxations robust against oblivious outliers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.07606&quot;&gt;Fast Distributed Brooks Theorem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch119&quot;&gt;Graph Classes With Few Minimal Separators. I. Finite Forbidden Subgraphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.03530&quot;&gt;Optimal Deterministic Massively Parallel Connectivity on Forests&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.03151&quot;&gt;Foundations of Transaction Fee Mechanism Design&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch119&quot;&gt;Graph Classes With Few Minimal Separators. II. A Dichotomy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.01945&quot;&gt;Distributed Maximal Matching and Maximal Independent Set on Hypergraphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.08800&quot;&gt;Quantum tomography using state-preparation unitaries&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2204.01911&quot;&gt;Almost-Linear Planted Cliques Elude the Metropolis Process&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.05450&quot;&gt;Timeliness Through Telephones&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://www.ccs.neu.edu/home/viola/papers/resilient.pdf&quot;&gt;Efficient resilient functions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07438&quot;&gt;Dynamic Matching with Better-than-2 Approximation in Polylogarithmic Update Time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.03877&quot;&gt;The Need for Seed (in the abstract Tile Assembly Model)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.08347&quot;&gt;Private Convex Optimization in General Norms&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07607&quot;&gt;Dynamic Algorithms for Maximum Matching Size&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2111.01254&quot;&gt;Unique Games hardness of Quantum Max-Cut, and a conjectured vector-valued Borell&amp;#8217;s inequality&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch23&quot;&gt;A Nearly-tight Analysis of Multipass Pairing Heaps&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2108.04458&quot;&gt;A Tight Analysis of Slim Heaps and Smooth Heaps&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2106.04863&quot;&gt;Lossless Online Rounding for Online Bipartite Matching (Despite its Impossibility)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.07983?context=cs&quot;&gt;Approximation Algorithms for Steiner Tree Augmentation Problems&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2204.08404&quot;&gt;Low Degree Testing over the Reals&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.05170&quot;&gt;Streaming algorithms for the missing item finding problem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://cse.hkust.edu.hk/faculty/arya/pub/soda23.pdf&quot;&gt;Economical Convex Coverings and Applications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://eccc.weizmann.ac.il/report/2022/146/&quot;&gt;Interactive Coding with Small Memory&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2301.05682&quot;&gt;Non-Stochastic CDF Estimation Using Threshold Queries&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch30&quot;&gt;Elliptic Curve Fast Fourier Transform Part I : Low-degree extension in time O(n log n) over all finite fields&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch33&quot;&gt;Single-Pass Streaming Algorithms for Correlation Clustering&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.01468&quot;&gt;A New Approach to Estimating Effective Resistances and Counting Spanning Trees in Expander Graphs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2210.06375&quot;&gt;Superpolynomial Lower Bounds for Decision Tree Learning and Testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.07132&quot;&gt;The &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%5Cell_p%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{&amp;#92;ell_p}&quot; class=&quot;latex&quot; /&gt;-Subspace Sketch Problem in Small Dimensions with Applications to Support Vector Machines&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2210.17515&quot;&gt;Beating &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%281-1%2Fe%29%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{(1-1/e)}&quot; class=&quot;latex&quot; /&gt;-Approximation for Weighted Stochastic Matching&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch35&quot;&gt;Towards Multi-Pass Streaming Lower Bounds for Optimal Approximation of Max-Cut&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.03341&quot;&gt;Parameterized Algorithm for the Planar Disjoint Paths Problem: Exponential in &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bk%5E2%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{k^2}&quot; class=&quot;latex&quot; /&gt;, and Linear in &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{n}&quot; class=&quot;latex&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2207.02581&quot;&gt;Learning Hierarchical Cluster Structure of Graphs in Sublinear Time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.09106&quot;&gt;The Exact Bipartite Matching Polytope Has Exponential Extension Complexity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
&lt;a href=&quot;https://arxiv.org/abs/2211.03161&quot;&gt;4D Range Reporting in the Pointer Machine Model in Almost-Optimal Time&lt;/a&gt;&lt;/p&gt;
&lt;/ol&gt;
&lt;p&gt;
&lt;p&gt;&lt;H2&gt; The Trace Result &lt;/H2&gt;&lt;/p&gt;
&lt;p&gt;&lt;p&gt;
The trace problem begins by sending a binary string &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; of length &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{n}&quot; class=&quot;latex&quot; /&gt; through a &lt;b&gt;deletion channel&lt;/b&gt; with parameter &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%5Cdelta+%5Cin+%5B0%2C1%5D%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{&amp;#92;delta &amp;#92;in [0,1]}&quot; class=&quot;latex&quot; /&gt;. Each bit &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx_i%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x_i}&quot; class=&quot;latex&quot; /&gt; entering the channel survives with probability &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B1+-+%5Cdelta%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{1 - &amp;#92;delta}&quot; class=&quot;latex&quot; /&gt; to be part of the output string &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt;. That is, &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx_i%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x_i}&quot; class=&quot;latex&quot; /&gt; is deleted with probability &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%5Cdelta%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{&amp;#92;delta}&quot; class=&quot;latex&quot; /&gt;. The deletions are independent. For an unknown string &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt;, the problem is:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;b&gt; &lt;/b&gt; &lt;em&gt; Given &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{k}&quot; class=&quot;latex&quot; /&gt; strings &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By_1%2C%5Cdots%2Cy_k%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y_1,&amp;#92;dots,y_k}&quot; class=&quot;latex&quot; /&gt; produced by &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{k}&quot; class=&quot;latex&quot; /&gt; runs of the channel on &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt;, reconstruct &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; if possible. Else, calculate a binary string &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%27%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x&amp;#039;}&quot; class=&quot;latex&quot; /&gt; of length &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{n}&quot; class=&quot;latex&quot; /&gt; that minimizes a distance metric &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bd%28x%2Cx%27%29%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{d(x,x&amp;#039;)}&quot; class=&quot;latex&quot; /&gt;. The metric of choice is to maximize the length &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%5Cell%28x%2Cx%27%29%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{&amp;#92;ell(x,x&amp;#039;)}&quot; class=&quot;latex&quot; /&gt; of the longest common subsequence (not necessarily contiguous) of &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; and &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%27%7D&amp;#038;bg=e8e8e8&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x&amp;#039;}&quot; class=&quot;latex&quot; /&gt;, which corresponds to minimizing their edit distance. &lt;/em&gt;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;p&gt;
As indicated by its title &amp;#8220;Approximate Trace Reconstruction from a Single Trace,&amp;#8221; the &lt;a href=&quot;https://arxiv.org/abs/2211.03292&quot;&gt;paper&lt;/a&gt; tackles the extreme case &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bk%3D1%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{k=1}&quot; class=&quot;latex&quot; /&gt;. Of course one cannot reconstruct &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; (unless no deletions occur so &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By+%3D+x%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y = x}&quot; class=&quot;latex&quot; /&gt;) so the game is to find &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%27%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x&amp;#039;}&quot; class=&quot;latex&quot; /&gt; that are most likely to have produced the lone observed &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt;. The scoring function takes the expectation of &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%5Cell%28x%27%2Cx%29%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{&amp;#92;ell(x&amp;#039;,x)}&quot; class=&quot;latex&quot; /&gt; over both the generation of &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; from the true &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; and the run of the algorithm guessing &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%27%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x&amp;#039;}&quot; class=&quot;latex&quot; /&gt; from &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt;. There are two main questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
How well does the algorithm perform&amp;#8212;relative to theoretically optimal choices given &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt;&amp;#8212;when &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; itself is generated uniformly at random? &lt;/p&gt;
&lt;li&gt;
How well does the algorithm perform when &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; is generated adversarially? Note that &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; is still probabilistic, and the performance of both the theoretical optimal algorithm and their algorithm are evaluated based on the distribution of &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; for the fixed (unseen) &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt;.
&lt;/ul&gt;
&lt;p&gt;
These questions are posed for small, medium, and large values of &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B%5Cdelta%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{&amp;#92;delta}&quot; class=&quot;latex&quot; /&gt;. When the deletion probability is close to &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7B1%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{1}&quot; class=&quot;latex&quot; /&gt;, the strings &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; are most often tiny. One would think they offer no help in coming close to &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt;. However, they do help efficient algorithms come close to the optimal policy for a worst-case chosen &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt;. The paradoxical results of their paper, in their own words (but reversing their order), are: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
In the average-case setting, having access to a single trace is provably not very useful: no algorithm, computationally efficient or otherwise, can achieve significantly higher accuracy given one trace that is &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bo%28n%29%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{o(n)}&quot; class=&quot;latex&quot; /&gt; bits long than it could with no traces. &lt;/p&gt;
&lt;li&gt;
Having access to a single trace is already quite useful for worst-case trace reconstruction: an efficient algorithm can perform much more accurate reconstruction, given one trace that is even only a few bits long, than it could given no traces at all.
&lt;/ol&gt;
&lt;p&gt;
The deep point is that when &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; as well as &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; is random, seeing &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; gives little advantage to both the optimal strategy (which does not know &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt;) and their algorithm. Whereas, when &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{x}&quot; class=&quot;latex&quot; /&gt; is fixed, the knowledge of &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; is more valuable to the optimal strategy and separates it from the case of not seeing &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; at all. However, the profit given by even a short &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt; is one that is apprehendable by a complexity-limited deterministic algorithm that sees only &lt;img decoding=&quot;async&quot; src=&quot;https://s0.wp.com/latex.php?latex=%7By%7D&amp;#038;bg=ffffff&amp;#038;fg=000000&amp;#038;s=0&amp;#038;c=20201002&quot; alt=&quot;{y}&quot; class=&quot;latex&quot; /&gt;. That&amp;#8217;s our attempt at an intuitive takeaway; as always we invite readers to consult the paper in detail.&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;&lt;H2&gt; Open Problems &lt;/H2&gt;&lt;/p&gt;
&lt;p&gt;&lt;p&gt;
Comparing my list of pointer to the papers from SODA, which was a bit of trouble to create by hand, to the STOC&amp;#8217;23 &lt;a href=&quot;https://www.conference-publishing.com/list.php?Event=STOC23&quot;&gt;output&lt;/a&gt; from the conference-publishing site, leads to a curious question:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;b&gt; &lt;/b&gt; &lt;em&gt; Do we scan lists of papers more by looking for subject words in their titles or looking for authors we know? &lt;/em&gt;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;p&gt;
Well, I have not found SODA&amp;#8217;23 on that website, where authors too would be given; for me, copying the authors would more than double the manual work.&lt;/p&gt;
&lt;p&gt;
&lt;p class=&quot;authors&quot;&gt;By RJLipton+KWRegan&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 06:02:29 UTC</pubDate>
  <author>Richard Lipton</author>
</item>

<item>
  <title>An Algorithm and Complexity Results for Causal Unit Selection</title>
  <guid>http://arxiv.org/abs/2302.14412</guid>
  <link>http://arxiv.org/abs/2302.14412</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Huang_H/0/1/0/all/0/1&quot;&gt;Haiying Huang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Darwiche_A/0/1/0/all/0/1&quot;&gt;Adnan Darwiche&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The unit selection problem aims to identify objects, called units, that are
most likely to exhibit a desired mode of behavior when subjected to stimuli
(e.g., customers who are about to churn but would change their mind if
encouraged). Unit selection with counterfactual objective functions was
introduced relatively recently with existing work focusing on bounding a
specific class of objective functions, called the benefit functions, based on
observational and interventional data -- assuming a fully specified model is
not available to evaluate these functions. We complement this line of work by
proposing the first exact algorithm for finding optimal units given a broad
class of causal objective functions and a fully specified structural causal
model (SCM). We show that unit selection under this class of objective
functions is $\text{NP}^\text{PP}$-complete but is $\text{NP}$-complete when
unit variables correspond to all exogenous variables in the SCM. We also
provide treewidth-based complexity bounds on our proposed algorithm while
relating it to a well-known algorithm for Maximum a Posteriori (MAP) inference.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>On Degeneracy in the P-Matroid Oriented Matroid Complementarity Problem</title>
  <guid>http://arxiv.org/abs/2302.14585</guid>
  <link>http://arxiv.org/abs/2302.14585</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Borzechowski_M/0/1/0/all/0/1&quot;&gt;Michaela Borzechowski&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Weber_S/0/1/0/all/0/1&quot;&gt;Simon Weber&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We investigate degeneracy in the P-Matroid Oriented Matroid Complementarity
Problem (P-OMCP) and its impact on the reduction of this problem to
sink-finding in Unique Sink Orientations (USOs). On one hand, this
understanding of degeneracies allows us to prove a linear lower bound for
sink-finding in P-matroid USOs. On the other hand, it allows us to prove a
promise preserving reduction from P-OMCP to USO sink-finding, where we can drop
the assumption that the given P-OMCP is non-degenerate. This places the promise
version of P-OMCP in the complexity class PromiseUEOPL.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>Local Hamiltonians with no low-energy stabilizer states</title>
  <guid>http://arxiv.org/abs/2302.14755</guid>
  <link>http://arxiv.org/abs/2302.14755</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Coble_N/0/1/0/all/0/1&quot;&gt;Nolan J. Coble&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Coudron_M/0/1/0/all/0/1&quot;&gt;Matthew Coudron&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Nelson_J/0/1/0/all/0/1&quot;&gt;Jon Nelson&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Nezhadi_S/0/1/0/all/0/1&quot;&gt;Seyed Sajjad Nezhadi&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The recently-defined No Low-energy Sampleable States (NLSS) conjecture of
Gharibian and Le Gall [GL22] posits the existence of a family of local
Hamiltonians where all states of low-enough constant energy do not have
succinct representations allowing perfect sampling access. States that can be
prepared using only Clifford gates (i.e. stabilizer states) are an example of
sampleable states, so the NLSS conjecture implies the existence of local
Hamiltonians whose low-energy space contains no stabilizer states. We describe
families that exhibit this requisite property via a simple alteration to local
Hamiltonians corresponding to CSS codes. Our method can also be applied to the
recent NLTS Hamiltonians of Anshu, Breuckmann, and Nirkhe [ABN22], resulting in
a family of local Hamiltonians whose low-energy space contains neither
stabilizer states nor trivial states. We hope that our techniques will
eventually be helpful for constructing Hamiltonians which simultaneously
satisfy NLSS and NLTS.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>A Note on the Faces of the Dual Koch Arrangement</title>
  <guid>http://arxiv.org/abs/2302.14125</guid>
  <link>http://arxiv.org/abs/2302.14125</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gartner_B/0/1/0/all/0/1&quot;&gt;Bernd G&amp;#xe4;rtner&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wettstein_M/0/1/0/all/0/1&quot;&gt;Manuel Wettstein&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We analyze the faces of the dual Koch arrangement, which is the arrangement
of $2^s + 1$ lines obtained by projective duality from the Koch chain $K_s$. In
particular, we show that this line arrangement does not contain any $k$-gons
for $k &amp;gt; 5$, and that the number of pentagons is $3 \cdot 2^{s-1} - 3$.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Geometry</author>
</item>

<item>
  <title>Crossing Minimization in Time Interval Storylines</title>
  <guid>http://arxiv.org/abs/2302.14213</guid>
  <link>http://arxiv.org/abs/2302.14213</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Dobler_A/0/1/0/all/0/1&quot;&gt;Alexander Dobler&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nollenburg_M/0/1/0/all/0/1&quot;&gt;Martin N&amp;#xf6;llenburg&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Stojanovic_D/0/1/0/all/0/1&quot;&gt;Daniel Stojanovic&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Villedieu_A/0/1/0/all/0/1&quot;&gt;Ana&amp;#xef;s Villedieu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wulms_J/0/1/0/all/0/1&quot;&gt;Jules Wulms&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Storyline visualizations are a popular way of visualizing characters and
their interactions over time: Characters are drawn as x-monotone curves and
interactions are visualized through close proximity of the corresponding
character curves in a vertical strip. Existing methods to generate storylines
assume a total ordering of the interactions, although real-world data often do
not contain such a total order. Instead, multiple interactions are often
grouped into coarser time intervals such as years. We exploit this grouping
property by introducing a new model called storylines with time intervals and
present two methods to minimize the number of crossings and horizontal space
usage. We then evaluate these algorithms on a small benchmark set to show their
effectiveness.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Geometry</author>
</item>

<item>
  <title>LaplacianFusion: Detailed 3D Clothed-Human Body Reconstruction</title>
  <guid>http://arxiv.org/abs/2302.14251</guid>
  <link>http://arxiv.org/abs/2302.14251</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kim_H/0/1/0/all/0/1&quot;&gt;Hyomin Kim&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nam_H/0/1/0/all/0/1&quot;&gt;Hyeonseo Nam&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kim_J/0/1/0/all/0/1&quot;&gt;Jungeon Kim&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Park_J/0/1/0/all/0/1&quot;&gt;Jaesik Park&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lee_S/0/1/0/all/0/1&quot;&gt;Seungyong Lee&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We propose LaplacianFusion, a novel approach that reconstructs detailed and
controllable 3D clothed-human body shapes from an input depth or 3D point cloud
sequence. The key idea of our approach is to use Laplacian coordinates,
well-known differential coordinates that have been used for mesh editing, for
representing the local structures contained in the input scans, instead of
implicit 3D functions or vertex displacements used previously. Our approach
reconstructs a controllable base mesh using SMPL, and learns a surface function
that predicts Laplacian coordinates representing surface details on the base
mesh. For a given pose, we first build and subdivide a base mesh, which is a
deformed SMPL template, and then estimate Laplacian coordinates for the mesh
vertices using the surface function. The final reconstruction for the pose is
obtained by integrating the estimated Laplacian coordinates as a whole.
Experimental results show that our approach based on Laplacian coordinates
successfully reconstructs more visually pleasing shape details than previous
methods. The approach also enables various surface detail manipulations, such
as detail transfer and enhancement.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Geometry</author>
</item>

<item>
  <title>On the geometric thickness of 2-degenerate graphs</title>
  <guid>http://arxiv.org/abs/2302.14721</guid>
  <link>http://arxiv.org/abs/2302.14721</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Jain_R/0/1/0/all/0/1&quot;&gt;Rahul Jain&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Ricci_M/0/1/0/all/0/1&quot;&gt;Marco Ricci&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Rollin_J/0/1/0/all/0/1&quot;&gt;Jonathan Rollin&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Schulz_A/0/1/0/all/0/1&quot;&gt;Andr&amp;#xe9; Schulz&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A graph is 2-degenerate if every subgraph contains a vertex of degree at most
2. We show that every 2-degenerate graph can be drawn with straight lines such
that the drawing decomposes into 4 plane forests. Therefore, the geometric
arboricity, and hence the geometric thickness, of 2-degenerate graphs is at
most 4. On the other hand, we show that there are 2-degenerate graphs that do
not admit any straight-line drawing with a decomposition of the edge set into 2
plane graphs. That is, there are 2-degenerate graphs with geometric thickness,
and hence geometric arboricity, at least 3. This answers two questions posed by
Eppstein [Separating thickness from geometric thickness. In Towards a Theory of
Geometric Graphs, vol. 342 of Contemp. Math., AMS, 2004].
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Geometry</author>
</item>

<item>
  <title>Query-optimal estimation of unitary channels in diamond distance</title>
  <guid>http://arxiv.org/abs/2302.14066</guid>
  <link>http://arxiv.org/abs/2302.14066</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Haah_J/0/1/0/all/0/1&quot;&gt;Jeongwan Haah&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Kothari_R/0/1/0/all/0/1&quot;&gt;Robin Kothari&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+ODonnell_R/0/1/0/all/0/1&quot;&gt;Ryan O&amp;#x27;Donnell&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Tang_E/0/1/0/all/0/1&quot;&gt;Ewin Tang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We consider process tomography for unitary quantum channels. Given access to
an unknown unitary channel acting on a $\textsf{d}$-dimensional qudit, we aim
to output a classical description of a unitary that is $\varepsilon$-close to
the unknown unitary in diamond norm. We design an algorithm achieving error
$\varepsilon$ using $O(\textsf{d}^2/\varepsilon)$ applications of the unknown
channel and only one qudit. This improves over prior results, which use
$O(\textsf{d}^3/\varepsilon^2)$ [via standard process tomography] or
$O(\textsf{d}^{2.5}/\varepsilon)$ [Yang, Renner, and Chiribella, PRL 2020]
applications. To show this result, we introduce a simple technique to
&quot;bootstrap&quot; an algorithm that can produce constant-error estimates to one that
can produce $\varepsilon$-error estimates with the Heisenberg scaling. Finally,
we prove a complementary lower bound showing that estimation requires
$\Omega(\textsf{d}^2/\varepsilon)$ applications, even with access to the
inverse or controlled versions of the unknown unitary. This shows that our
algorithm has both optimal query complexity and optimal space complexity.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>On Differentially Private Online Predictions</title>
  <guid>http://arxiv.org/abs/2302.14099</guid>
  <link>http://arxiv.org/abs/2302.14099</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kaplan_H/0/1/0/all/0/1&quot;&gt;Haim Kaplan&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mansour_Y/0/1/0/all/0/1&quot;&gt;Yishay Mansour&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Moran_S/0/1/0/all/0/1&quot;&gt;Shay Moran&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nissim_K/0/1/0/all/0/1&quot;&gt;Kobbi Nissim&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Stemmer_U/0/1/0/all/0/1&quot;&gt;Uri Stemmer&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this work we introduce an interactive variant of joint differential
privacy towards handling online processes in which existing privacy definitions
seem too restrictive. We study basic properties of this definition and
demonstrate that it satisfies (suitable variants) of group privacy,
composition, and post processing. We then study the cost of interactive joint
privacy in the basic setting of online classification. We show that any
(possibly non-private) learning rule can be effectively transformed to a
private learning rule with only a polynomial overhead in the mistake bound.
This demonstrates a stark difference with more restrictive notions of privacy
such as the one studied by Golowich and Livni (2021), where only a double
exponential overhead on the mistake bound is known (via an information
theoretic upper bound).
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Tight Algorithms for Connectivity Problems Parameterized by Modular-Treewidth</title>
  <guid>http://arxiv.org/abs/2302.14128</guid>
  <link>http://arxiv.org/abs/2302.14128</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hegerfeld_F/0/1/0/all/0/1&quot;&gt;Falko Hegerfeld&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kratsch_S/0/1/0/all/0/1&quot;&gt;Stefan Kratsch&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study connectivity problems from a fine-grained parameterized perspective.
Cygan et al. (TALG 2022) obtained algorithms with single-exponential running
time $\alpha^{tw} n^{O(1)}$ for connectivity problems parameterized by
treewidth ($tw$) by introducing the cut-and-count-technique, which reduces
connectivity problems to locally checkable counting problems. In addition, the
bases $\alpha$ were proven to be optimal assuming the Strong Exponential-Time
Hypothesis (SETH).
&lt;/p&gt;
&lt;p&gt;As only sparse graphs may admit small treewidth, these results do not apply
to graphs with dense structure. A well-known tool to capture dense structure is
the modular decomposition, which recursively partitions the graph into modules
whose members have the same neighborhood outside of the module. Contracting the
modules yields a quotient graph describing the adjacencies between modules.
Measuring the treewidth of the quotient graph yields the parameter
modular-treewidth, a natural intermediate step between treewidth and
clique-width.
&lt;/p&gt;
&lt;p&gt;We obtain the first tight running times for connectivity problems
parameterized by modular-treewidth. For some problems the obtained bounds are
the same as relative to treewidth, showing that we can deal with a greater
generality in input structure at no cost in complexity. We obtain the following
randomized algorithms for graphs of modular-treewidth $k$, given an appropriate
decomposition: Steiner Tree can be solved in time $3^k n^{O(1)}$, Connected
Dominating Set can be solved in time $4^k n^{O(1)}$, Connected Vertex Cover can
be solved in time $5^k n^{O(1)}$, Feedback Vertex Set can be solved in time
$5^k n^{O(1)}$.
&lt;/p&gt;
&lt;p&gt;The first two algorithms are tight due to known results and the last two
algorithms are complemented by new tight lower bounds under SETH.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Signal Propagation in Double Edged Relays</title>
  <guid>http://arxiv.org/abs/2302.14168</guid>
  <link>http://arxiv.org/abs/2302.14168</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Boucher_A/0/1/0/all/0/1&quot;&gt;Adam Boucher&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A discrete signal propagation model blending characteristics of linear wave
propagation and finite state automata is developed. We show this model obeys a
limited form of superposition and is capable of displaying a wide variety of
interesting behaviors. We show how the model&#39;s superposition properties permit
information to be encoded and retained by signals that pass through discrete
networks. We outline a SPIDER model replacement for Dijkstra&#39;s algorithm.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>A CS guide to the quantum singular value transformation</title>
  <guid>http://arxiv.org/abs/2302.14324</guid>
  <link>http://arxiv.org/abs/2302.14324</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Tang_E/0/1/0/all/0/1&quot;&gt;Ewin Tang&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Tian_K/0/1/0/all/0/1&quot;&gt;Kevin Tian&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We present a simplified exposition of some pieces of [Gily\&#39;en, Su, Low, and
Wiebe, STOC&#39;19, &lt;a href=&quot;/abs/1806.01838&quot;&gt;arXiv:1806.01838&lt;/a&gt;], who introduced a quantum singular value
transformation (QSVT) framework for applying polynomial functions to
block-encoded matrices. The QSVT framework has garnered substantial recent
interest from the quantum algorithms community, as it was demonstrated by
[GSLW19] to encapsulate many existing algorithms naturally phrased as an
application of a matrix function. First, we posit that the lifting of quantum
singular processing (QSP) to QSVT is better viewed not through Jordan&#39;s lemma
(as was suggested by [GSLW19]) but as an application of the cosine-sine
decomposition, which can be thought of as a more explicit and stronger version
of Jordan&#39;s lemma. Second, we demonstrate that the constructions of bounded
polynomial approximations given in [GSLW19], which use a variety of ad hoc
approaches drawing from Fourier analysis, Chebyshev series, and Taylor series,
can be unified under the framework of truncation of Chebyshev series, and
indeed, can in large part be matched via a bounded variant of a standard
meta-theorem from [Trefethen, 2013]. We hope this work finds use to the
community as a companion guide for understanding and applying the powerful
framework of [GSLW19].
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Practical Algorithms for Orientations of Partially Directed Graphical Models</title>
  <guid>http://arxiv.org/abs/2302.14386</guid>
  <link>http://arxiv.org/abs/2302.14386</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Luttermann_M/0/1/0/all/0/1&quot;&gt;Malte Luttermann&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wienobst_M/0/1/0/all/0/1&quot;&gt;Marcel Wien&amp;#xf6;bst&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Liskiewicz_M/0/1/0/all/0/1&quot;&gt;Maciej Li&amp;#x15b;kiewicz&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In observational studies, the true causal model is typically unknown and
needs to be estimated from available observational and limited experimental
data. In such cases, the learned causal model is commonly represented as a
partially directed acyclic graph (PDAG), which contains both directed and
undirected edges indicating uncertainty of causal relations between random
variables. The main focus of this paper is on the maximal orientation task,
which, for a given PDAG, aims to orient the undirected edges maximally such
that the resulting graph represents the same Markov equivalent DAGs as the
input PDAG. This task is a subroutine used frequently in causal discovery, e.
g., as the final step of the celebrated PC algorithm. Utilizing connections to
the problem of finding a consistent DAG extension of a PDAG, we derive faster
algorithms for computing the maximal orientation by proposing two novel
approaches for extending PDAGs, both constructed with an emphasis on simplicity
and practical effectiveness.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Publicly verifiable delegative democracy with secret voting power</title>
  <guid>http://arxiv.org/abs/2302.14421</guid>
  <link>http://arxiv.org/abs/2302.14421</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Karoukis_D/0/1/0/all/0/1&quot;&gt;Dimitrios Karoukis&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We use a commitment scheme to track every individual&#39;s voting power on a
public ledger with the ability to validate transfers and transitive, reversible
delegations of it between them without sacrificing their privacy. Every unit of
voting power is represented by the Merkle root of a tree consisting of its
latest owner&#39;s public key, a random nonce and the Merkle root of the tree of
its previous owner&#39;s public key and random nonce and so on. Transfers and
delegations mention the input units, their owner&#39;s public keys, the hashes of
their nonces and the output units, which are the Merkle roots of the new
owners&#39; public keys, new random nonces and the previous units&#39; identifiers. In
case of a delegation, the receiver provides the sender with the hashed random
nonces and the hashed public keys whose secret keys they control. In case of a
transfer, only the hashes of these hashes&#39; concatenations are provided. To
reverse a delegation, a historical owner reveals the individual hashes that
resulted the subsequent units. In voting, the owner reveals the actual nonces
and public keys of the units.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Massively Parallel Computation in a Heterogeneous Regime</title>
  <guid>http://arxiv.org/abs/2302.14692</guid>
  <link>http://arxiv.org/abs/2302.14692</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fischer_O/0/1/0/all/0/1&quot;&gt;Orr Fischer&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Horowitz_A/0/1/0/all/0/1&quot;&gt;Adi Horowitz&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Oshman_R/0/1/0/all/0/1&quot;&gt;Rotem Oshman&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Massively-parallel graph algorithms have received extensive attention over
the past decade, with research focusing on three memory regimes: the
superlinear regime, the near-linear regime, and the sublinear regime. The
sublinear regime is the most desirable in practice, but conditional hardness
results point towards its limitations.
&lt;/p&gt;
&lt;p&gt;In this work we study a \emph{heterogeneous} model, where the memory of the
machines varies in size. We focus mostly on the heterogeneous setting created
by adding a single near-linear machine to the sublinear MPC regime, and show
that even a single large machine suffices to circumvent most of the conditional
hardness results for the sublinear regime: for graphs with $n$ vertices and $m$
edges, we give (a) an MST algorithm that runs in $O(\log\log(m/n))$ rounds; (b)
an algorithm that constructs an $O(k)$-spanner of size $O(n^{1+1/k})$ in $O(1)$
rounds; and (c) a maximal-matching algorithm that runs in
$O(\sqrt{\log(m/n)}\log\log(m/n))$ rounds.
&lt;/p&gt;
&lt;p&gt;We also observe that the best known near-linear MPC algorithms for several
other graph problems which are conjectured to be hard in the sublinear regime
(minimum cut, maximal independent set, and vertex coloring) can easily be
transformed to work in the heterogeneous MPC model with a single near-linear
machine, while retaining their original round complexity in the near-linear
regime. If the large machine is allowed to have \emph{superlinear} memory, all
of the problems above can be solved in $O(1)$ rounds.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Heuristic Modularity Maximization Algorithms for Community Detection Rarely Return an Optimal Partition or Anything Similar</title>
  <guid>http://arxiv.org/abs/2302.14698</guid>
  <link>http://arxiv.org/abs/2302.14698</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Aref_S/0/1/0/all/0/1&quot;&gt;Samin Aref&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mostajabdaveh_M/0/1/0/all/0/1&quot;&gt;Mahdi Mostajabdaveh&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chheda_H/0/1/0/all/0/1&quot;&gt;Hriday Chheda&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Community detection is a classic problem in network science with extensive
applications in various fields. The most commonly used methods are the
algorithms designed to maximize modularity over different partitions of the
network nodes into communities. Using 80 real and random networks from a wide
range of contexts, we investigate the extent to which current heuristic
modularity maximization algorithms succeed in returning modularity-maximum
(optimal) partitions. We evaluate (1) the ratio of their output modularity to
the maximum modularity for each input graph and (2) the maximum similarity
between their output partition and any optimal partition of that graph. Our
computational experiments involve eight existing heuristic algorithms which we
compare against an exact integer programming method that globally maximizes
modularity. The average modularity-based heuristic algorithm returns optimal
partitions for only 16.9% of the 80 graphs considered. Results on adjusted
mutual information show considerable dissimilarity between the sub-optimal
partitions and any optimal partitions of the graphs in our experiments. More
importantly, our results show that near-optimal partitions tend to be
disproportionally dissimilar to any optimal partition. Taken together, our
analysis points to a crucial limitation of commonly used modularity-based
algorithms for discovering communities: they rarely return an optimal partition
or a partition resembling an optimal partition. Given this finding, developing
an exact or approximate algorithm for modularity maximization is recommendable
for a more methodologically sound usage of modularity in community detection.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Parameterized Complexity of Vertex Splitting to Pathwidth at most 1</title>
  <guid>http://arxiv.org/abs/2302.14725</guid>
  <link>http://arxiv.org/abs/2302.14725</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Baumann_J/0/1/0/all/0/1&quot;&gt;Jakob Baumann&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Pfretzschner_M/0/1/0/all/0/1&quot;&gt;Matthias Pfretzschner&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Rutter_I/0/1/0/all/0/1&quot;&gt;Ignaz Rutter&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Motivated by the planarization of 2-layered straight-line drawings, we
consider the problem of modifying a graph such that the resulting graph has
pathwidth at most 1. The problem Pathwidth-One Vertex Explosion (POVE) asks
whether such a graph can be obtained using at most $k$ vertex explosions, where
a vertex explosion replaces a vertex $v$ by deg$(v)$ degree-1 vertices, each
incident to exactly one edge that was originally incident to $v$. For POVE, we
give an FPT algorithm with running time $O(4^k \cdot m)$ and a quadratic
kernel, thereby improving over the $O(k^6)$-kernel by Ahmed et al. [GD 22] in a
more general setting. Similarly, a vertex split replaces a vertex $v$ by two
distinct vertices $v_1$ and $v_2$ and distributes the edges originally incident
to $v$ arbitrarily to $v_1$ and $v_2$. Analogously to POVE, we define the
problem variant Pathwidth-One Vertex Splitting (POVS) that uses the split
operation instead of vertex explosions. Here we obtain a linear kernel and an
algorithm with running time $O((6k+12)^k \cdot m)$. This answers an open
question by Ahmed et al. [GD22].
&lt;/p&gt;
&lt;p&gt;Finally, we consider the problem $\Pi$ Vertex Splitting ($\Pi$-VS), which
generalizes the problem POVS and asks whether a given graph can be turned into
a graph of a specific graph class $\Pi$ using at most $k$ vertex splits. For
graph classes $\Pi$ that can be tested in monadic second-order graph logic
(MSO$_2$), we show that the problem $\Pi$-VS can be expressed as an MSO$_2$
formula, resulting in an FPT algorithm for $\Pi$-VS parameterized by $k$ if
$\Pi$ additionally has bounded treewidth. We obtain the same result for the
problem variant using vertex explosions.
&lt;/p&gt;
  </description>
  <pubDate>2023-03-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Linkage for 200,000 edits to Wikipedia</title>
  <guid>https://11011110.github.io/blog/2023/02/28/linkage-200k-edits</guid>
  <link>https://11011110.github.io/blog/2023/02/28/linkage-200k-edits.html</link>
  <description>
    &lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.whitehouse.gov/briefing-room/presidential-actions/2023/02/16/executive-order-on-further-advancing-racial-equity-and-support-for-underserved-communities-through-the-federal-government/&quot;&gt;Executive Order on Further Advancing Racial Equity and Support for Underserved Communities Through The Federal Government&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@sorelle@mastodon.social/109875326202971711&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;),&lt;/span&gt; including guidelines for equitable use of AI and automated systems through a new &lt;a href=&quot;https://www.whitehouse.gov/ostp/ai-bill-of-rights/&quot;&gt;Blueprint for an AI Bill of Rights&lt;/a&gt; (that is, rights for people to be protected against unfair uses of AI, not rights for artificial intelligences).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://press.princeton.edu/ideas/why-prove-it&quot;&gt;Why prove it?&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@highergeometer/109854745668334423&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;,&lt;/span&gt; &lt;a href=&quot;https://www.math.columbia.edu/~woit/wordpress/?p=13288&quot;&gt;via&lt;/a&gt;). John Stillwell on human-written vs machine-checkable proofs, with reference to the abc conjecture.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.ics.uci.edu/~eppstein/pix/ltcc/index.html&quot;&gt;Low tide at Crystal Cove State Park&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109894403539276698&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt;&lt;/p&gt;

    &lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;https://www.ics.uci.edu/~eppstein/pix/ltcc/Seagrass2-m.jpg&quot; alt=&quot;Low tide at Crystal Cove State Park, California&quot; style=&quot;border-style:solid;border-color:black&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Another newly promoted Wikipedia Good Article: &lt;a href=&quot;https://en.wikipedia.org/wiki/Polygonalization&quot;&gt;Polygonalization&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109906715996859674&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;),&lt;/span&gt; about finding a polygon that uses all of a given set of points as vertices. The usual definitions allow it to go straight through some of the vertices, rather than always turning, though, and the illustration below shows why: for some point sets, including 3x3 grids, a polygon that turns everywhere might not exist.&lt;/p&gt;

    &lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/blog/assets/2023/3x3_grid_polygonalizations.svg&quot; alt=&quot;Eight ways of polygonalizing a 3x3 grid&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://terrytao.wordpress.com/2023/02/18/would-it-be-possible-to-create-a-tool-to-automatically-diagram-papers/&quot;&gt;Would it be possible to create a tool to automatically diagram papers?&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@tao/109887019658810502&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;),&lt;/span&gt; by Terry Tao, inspired by the diagrams the proof-assistant people have been using to guide their work.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;People who indulge in the fringe belief in the reality of certain folklore beasts are sad that &lt;a href=&quot;https://boingboing.net/2023/02/22/the-cryptid-complications-of-wikipedias-editing-policies.html&quot;&gt;Wikipedia now focuses on the folklore of these beasts without going into much detail about the fringe belief in their reality&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109918360457067075&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; (Based on a both-sides-ist &lt;em&gt;Slate&lt;/em&gt; article that I’m not going to link.)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=MDhT6-6Yr_I&quot;&gt;Origami actuators&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@logicalelegance@mastodon.online/109920746034435458&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;),&lt;/span&gt; for simple repetitive motions of origami models, by attaching flat-printed electromagnets to them.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Gasarch writes: &lt;a href=&quot;https://blog.computationalcomplexity.org/2023/02/it-is-more-important-than-ever-to-teach.html&quot;&gt;It is more important than ever to teach your students probability (even non-stem students)&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109935523877122235&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; Why: because your university may be making deals promoting online gambling to the same students, as the linked copy of a New York Times article details.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://xtools.wmflabs.org/ec/en.wikipedia.org/David_Eppstein&quot;&gt;Sometime in the last month (not exactly sure when) I passed the milestone of 200,000 edits (all non-automated) to Wikipedia&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@11011110/109941265893054592&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;).&lt;/span&gt; That’s…a lot of edits. Although, as of earlier in the month when it was below 200,000, it only places me at 260 on the &lt;a href=&quot;https://en.wikipedia.org/w/index.php?title=Wikipedia:List_of_Wikipedians_by_number_of_edits&amp;amp;oldid=1138516223&quot;&gt;list of all-time prolific editors&lt;/a&gt;. And a couple of the top ten are now blocked, so it’s not exactly always a place of pride.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.thisiscolossal.com/2023/02/zai-divecha-phase-shift/&quot;&gt;Mesmerizing paper sculptures and animations by Zai Divecha convey the subtlety of change&lt;/a&gt; &lt;span style=&quot;white-space:nowrap&quot;&gt;(&lt;a href=&quot;https://mathstodon.xyz/@colossal@mastodon.art/109937307601608046&quot;&gt;\(\mathbb{M}\)&lt;/a&gt;,&lt;/span&gt; &lt;a href=&quot;https://zaidivecha.com/&quot;&gt;see also&lt;/a&gt;). Basically a 3d papercraft zoetrope.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;authors&quot;&gt;By David Eppstein&lt;/p&gt;
  </description>
  <pubDate>2023-02-28 17:40:00 UTC</pubDate>
  <author>David Eppstein</author>
</item>

<item>
  <title>Theory at the Institute and Beyond, February 2023</title>
  <guid>https://blog.simons.berkeley.edu/?p=874</guid>
  <link>https://blog.simons.berkeley.edu/2023/02/theory-at-the-institute-and-beyond-february-2023/</link>
  <description>
    by Venkatesan Guruswami (Simons Institute) This semester at the Simons Institute, the Meta-Complexity program is buzzing along with intense activity in the form of multiple reading groups and a weekly seminar, on top of the usual three workshops and boot &amp;#8230; &lt;a href=&quot;https://blog.simons.berkeley.edu/2023/02/theory-at-the-institute-and-beyond-february-2023/&quot;&gt;Continue reading &lt;span class=&quot;meta-nav&quot;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;p class=&quot;authors&quot;&gt;By Simons Institute Editor&lt;/p&gt;
  </description>
  <pubDate>2023-02-28 17:00:08 UTC</pubDate>
  <author>Simons Institute Blog</author>
</item>

<item>
  <title>Alef’s Corner: Democracy (Israel, 2023)</title>
  <guid>http://gilkalai.wordpress.com/?p=23914</guid>
  <link>https://gilkalai.wordpress.com/2023/02/28/alefs-corner-democracy-israel-2023/</link>
  <description>
    &lt;p&gt;&lt;/p&gt;


&lt;h2&gt;&lt;img loading=&quot;lazy&quot; data-attachment-id=&quot;23916&quot; data-permalink=&quot;https://gilkalai.wordpress.com/2023/02/28/alefs-corner-democracy-israel-2023/dem1/&quot; data-orig-file=&quot;https://gilkalai.files.wordpress.com/2023/02/dem1.jpeg&quot; data-orig-size=&quot;684,701&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;Dem1&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://gilkalai.files.wordpress.com/2023/02/dem1.jpeg?w=293&quot; data-large-file=&quot;https://gilkalai.files.wordpress.com/2023/02/dem1.jpeg?w=640&quot; class=&quot;alignnone size-full wp-image-23916&quot; src=&quot;https://gilkalai.files.wordpress.com/2023/02/dem1.jpeg&quot; alt=&quot;Dem1&quot; width=&quot;684&quot; height=&quot;701&quot; srcset=&quot;https://gilkalai.files.wordpress.com/2023/02/dem1.jpeg 684w, https://gilkalai.files.wordpress.com/2023/02/dem1.jpeg?w=146&amp;amp;h=150 146w, https://gilkalai.files.wordpress.com/2023/02/dem1.jpeg?w=293&amp;amp;h=300 293w&quot; sizes=&quot;(max-width: 684px) 100vw, 684px&quot; /&gt;&lt;img loading=&quot;lazy&quot; data-attachment-id=&quot;23918&quot; data-permalink=&quot;https://gilkalai.wordpress.com/2023/02/28/alefs-corner-democracy-israel-2023/dem2/&quot; data-orig-file=&quot;https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg&quot; data-orig-size=&quot;1000,1000&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;Dem2&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg?w=300&quot; data-large-file=&quot;https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg?w=640&quot; class=&quot;alignnone size-full wp-image-23918&quot; src=&quot;https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg&quot; alt=&quot;Dem2&quot; width=&quot;1000&quot; height=&quot;1000&quot; srcset=&quot;https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg 1000w, https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg?w=150&amp;amp;h=150 150w, https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg?w=300&amp;amp;h=300 300w, https://gilkalai.files.wordpress.com/2023/02/dem2.jpeg?w=768&amp;amp;h=768 768w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; /&gt;&lt;/h2&gt;
&lt;h2&gt;Democracy in Hebrew is דמוקרטיה represented by the letter &amp;#8220;dalet&amp;#8221; &lt;strong&gt;&lt;span style=&quot;color: #ff0000&quot;&gt;ד&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt; &lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By Gil Kalai&lt;/p&gt;
  </description>
  <pubDate>2023-02-28 16:27:04 UTC</pubDate>
  <author>Gil Kalai</author>
</item>

<item>
  <title>Constraint Optimization over Semirings</title>
  <guid>http://arxiv.org/abs/2302.12937</guid>
  <link>http://arxiv.org/abs/2302.12937</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Pavan_A/0/1/0/all/0/1&quot;&gt;A. Pavan&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Meel_K/0/1/0/all/0/1&quot;&gt;Kuldeep S. Meel&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Vinodchandran_N/0/1/0/all/0/1&quot;&gt;N. V. Vinodchandran&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Bhattacharyya_A/0/1/0/all/0/1&quot;&gt;Arnab Bhattacharyya&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Interpretations of logical formulas over semirings have applications in
various areas of computer science including logic, AI, databases, and security.
Such interpretations provide richer information beyond the truth or falsity of
a statement. Examples of such semirings include Viterbi semiring, min-max or
access control semiring, tropical semiring, and fuzzy semiring.
&lt;/p&gt;
&lt;p&gt;The present work investigates the complexity of constraint optimization
problems over semirings. The generic optimization problem we study is the
following: Given a propositional formula $\varphi$ over $n$ variable and a
semiring $(K,+,\cdot,0,1)$, find the maximum value over all possible
interpretations of $\varphi$ over $K$. This can be seen as a generalization of
the well-known satisfiability problem. A related problem is to find an
interpretation that achieves the maximum value. In this work, we first focus on
these optimization problems over the Viterbi semiring, which we call optConfVal
and optConf.
&lt;/p&gt;
&lt;p&gt;We show that for general propositional formulas in negation normal form,
optConfVal and optConf are in ${\mathrm{FP}}^{\mathrm{NP}}$. We investigate
optConf when the input formula $\varphi$ is represented as a CNF. For CNF
formulae, we first derive an upper bound on optConfVal as a function of the
number of maximum satisfiable clauses. In particular, we show that if $r$ is
the maximum number of satisfiable clauses in a CNF formula with $m$ clauses,
then its optConfVal is at most $1/4^{m-r}$. Building on this we establish that
optConfVal for CNF formulae is hard for the complexity class
${\mathrm{FP}}^{\mathrm{NP}[\log]}$. We also design polynomial-time
approximation algorithms and establish an inapproximability for optConfVal. We
establish similar complexity results for these optimization problems over other
semirings including tropical, fuzzy, and access control semirings.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-28 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>Exponential Hardness of Reinforcement Learning with Linear Function Approximation</title>
  <guid>http://arxiv.org/abs/2302.12940</guid>
  <link>http://arxiv.org/abs/2302.12940</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kane_D/0/1/0/all/0/1&quot;&gt;Daniel Kane&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Liu_S/0/1/0/all/0/1&quot;&gt;Sihan Liu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lovett_S/0/1/0/all/0/1&quot;&gt;Shachar Lovett&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mahajan_G/0/1/0/all/0/1&quot;&gt;Gaurav Mahajan&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Szepesvari_C/0/1/0/all/0/1&quot;&gt;Csaba Szepesv&amp;#xe1;ri&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Weisz_G/0/1/0/all/0/1&quot;&gt;Gell&amp;#xe9;rt Weisz&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A fundamental question in reinforcement learning theory is: suppose the
optimal value functions are linear in given features, can we learn them
efficiently? This problem&#39;s counterpart in supervised learning, linear
regression, can be solved both statistically and computationally efficiently.
Therefore, it was quite surprising when a recent work
\cite{kane2022computational} showed a computational-statistical gap for linear
reinforcement learning: even though there are polynomial sample-complexity
algorithms, unless NP = RP, there are no polynomial time algorithms for this
setting.
&lt;/p&gt;
&lt;p&gt;In this work, we build on their result to show a computational lower bound,
which is exponential in feature dimension and horizon, for linear reinforcement
learning under the Randomized Exponential Time Hypothesis. To prove this we
build a round-based game where in each round the learner is searching for an
unknown vector in a unit hypercube. The rewards in this game are chosen such
that if the learner achieves large reward, then the learner&#39;s actions can be
used to simulate solving a variant of 3-SAT, where (a) each variable shows up
in a bounded number of clauses (b) if an instance has no solutions then it also
has no solutions that satisfy more than (1-$\epsilon$)-fraction of clauses. We
use standard reductions to show this 3-SAT variant is approximately as hard as
3-SAT. Finally, we also show a lower bound optimized for horizon dependence
that almost matches the best known upper bound of $\exp(\sqrt{H})$.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-28 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>Optimization Problems on The Weighted Massively Parallel Computation Model: Hardness and Algorithms</title>
  <guid>http://arxiv.org/abs/2302.12953</guid>
  <link>http://arxiv.org/abs/2302.12953</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ma_H/0/1/0/all/0/1&quot;&gt;Hengzhao Ma&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Li_J/0/1/0/all/0/1&quot;&gt;Jianzhong Li&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gao_X/0/1/0/all/0/1&quot;&gt;Xiangyu Gao&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The topology-aware Massively Parallel Computation (MPC) model is proposed and
studied recently, which enhances the classical MPC model by the awareness of
network topology. The work of Hu et. al. on topology-aware MPC model considers
only the tree topology. In this paper a more general case is considered, where
the underlying network is a weighted complete graph. We then call this model as
Weighted Massively Parallel Computation (WMPC) model, and study the problem of
minimizing communication cost under it. Three communication cost minimization
problems are defined based on different pattern of communication, which are the
Data Redistribution Problem, Data Allocation Problem on Continuous data, and
Data Allocation Problem on Categorized data. We also define four kinds of
objective functions for communication cost, which consider the total cost,
bottleneck cost, maximum of send and receive cost, and summation of send and
receive cost, respectively. Combining the three problems in different
communication pattern with the four kinds of objective cost functions, 12
problems are obtained. The hardness results and algorithms of the 12 problems
make up the content of this paper. With rigorous proof, we prove that some of
the 12 problems are in P, some FPT, some NP-complete, and some W[1]-complete.
Approximate algorithms are proposed for several selected problems.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-28 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>Cosecure Domination: Hardness Results and Algorithm</title>
  <guid>http://arxiv.org/abs/2302.13031</guid>
  <link>http://arxiv.org/abs/2302.13031</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kusum/0/1/0/all/0/1&quot;&gt;Kusum&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Pandey_A/0/1/0/all/0/1&quot;&gt;Arti Pandey&lt;/a&gt;&lt;/p&gt;&lt;p&gt;For a simple graph $G=(V,E)$ without any isolated vertex, a cosecure
dominating set $D$ of $G$ satisfies the following two properties (i) $S$ is a
dominating set of $G$, (ii) for every vertex $v \in S$ there exists a vertex $u
\in V \setminus S$ such that $uv \in E$ and $(S \setminus \{v\}) \cup \{u\}$ is
a dominating set of $G$. The minimum cardinality of a cosecure dominating set
of $G$ is called cosecure domination number of $G$ and is denoted by
$\gamma_{cs}(G)$. The Minimum Cosecure Domination problem is to find a cosecure
dominating set of a graph $G$ of cardinality $\gamma_{cs}(G)$. The decision
version of the problem is known to be NP-complete for bipartite, planar, and
split graphs. Also, it is known that the Minimum Cosecure Domination problem is
efficiently solvable for proper interval graphs and cographs.
&lt;/p&gt;
&lt;p&gt;In this paper, we work on various important graph classes in an effort to
reduce the complexity gap of the Minimum Cosecure Domination problem. We show
that the decision version of the problem remains NP-complete for circle graphs,
doubly chordal graphs, chordal bipartite graphs, star-convex bipartite graphs
and comb-convex bipartite graphs. On the positive side, we give an efficient
algorithm to compute the cosecure domination number of chain graphs, which is
an important subclass of bipartite graphs. In addition, we show that the
problem is linear-time solvable for bounded tree-width graphs. Further, we
prove that the computational complexity of this problem varies from the
domination problem.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-28 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>The $\mathsf{AC}^0$-Complexity Of Visibly Pushdown Languages</title>
  <guid>http://arxiv.org/abs/2302.13116</guid>
  <link>http://arxiv.org/abs/2302.13116</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Goller_S/0/1/0/all/0/1&quot;&gt;Stefan G&amp;#xf6;ller&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Grosshans_N/0/1/0/all/0/1&quot;&gt;Nathan Grosshans&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We concern ourselves with the question which visibly pushdown languages are
in the complexity class $\mathsf{AC}^0$.
&lt;/p&gt;
&lt;p&gt;We provide a conjectural characterization that isolates a stubborn subclass
of particular one-turn visibly pushdown languages (that we call intermediate
VPLs) all of which our community seems to lack tools for determining
containment in $\mathsf{AC}^0$.
&lt;/p&gt;
&lt;p&gt;Our main result states that there is an algorithm that, given a visibly
pushdown automaton, correctly outputs if its language is in $\mathsf{AC}^0$,
some $m\geq 2$ such that $\text{MOD}_m\leq_{\text{cd}} L$ (implying that $L$ is
not in $\mathsf{AC}^0$), or a finite disjoint union of intermediate languages
$L$ is constant-depth equivalent to. In the latter case one can moreover
effectively compute $k,l&amp;gt;0$ with $k\not=l$ such that the visibly pushdown
language is hard for the more concrete intermediate language $L(S\rightarrow
\varepsilon\mid a c^{k-1} S b_1\mid ac^{l-1}Sb_2)$.
&lt;/p&gt;
&lt;p&gt;For our proofs we revisit so-called Ext-algebras, introduced by Czarnetzki,
Krebs and Lange, which in turn are closely related to forest algebras
introduced by Boja\&#39;nczyk and Walukiewicz, and Green&#39;s relations.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-28 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>Two-Disk Compound Symmetry Groups</title>
  <guid>http://arxiv.org/abs/2302.12950</guid>
  <link>http://arxiv.org/abs/2302.12950</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Hearn_R/0/1/0/all/0/1&quot;&gt;Robert A. Hearn&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Kretschmer_W/0/1/0/all/0/1&quot;&gt;William Kretschmer&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Rokicki_T/0/1/0/all/0/1&quot;&gt;Tomas Rokicki&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Streeter_B/0/1/0/all/0/1&quot;&gt;Benjamin Streeter&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Vergo_E/0/1/0/all/0/1&quot;&gt;Eric Vergo&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Symmetry is at the heart of much of mathematics, physics, and art.
Traditional geometric symmetry groups are defined in terms of isometries of the
ambient space of a shape or pattern. If we slightly generalize this notion to
allow the isometries to operate on overlapping but non-identical metric spaces,
we obtain what we call compound symmetry groups. A natural example is that of
the groups generated by discrete rotations of overlapping disks in the plane.
Investigation of these groups reveals a new family of fractals, as well as a
rich structure that is intriguing both mathematically and artistically. We
report on our initial investigations.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-28 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Geometry</author>
</item>

<item>
  <title>Limited Query Graph Connectivity Test</title>
  <guid>http://arxiv.org/abs/2302.13036</guid>
  <link>http://arxiv.org/abs/2302.13036</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Guo_M/0/1/0/all/0/1&quot;&gt;Mingyu Guo&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Li_J/0/1/0/all/0/1&quot;&gt;Jialiang Li&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Neumann_A/0/1/0/all/0/1&quot;&gt;Aneta Neumann&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Neumann_F/0/1/0/all/0/1&quot;&gt;Frank Neumann&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nguyen_H/0/1/0/all/0/1&quot;&gt;Hung Nguyen&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We propose a combinatorial optimisation model called Limited Query Graph
Connectivity Test. We consider a graph whose edges have two possible states
(on/off). The edges&#39; states are hidden initially. We could query an edge to
reveal its state. Given a source s and a destination t, we aim to test s-t
connectivity by identifying either a path (consisting of only on edges) or a
cut (consisting of only off edges). We are limited to B queries, after which we
stop regardless of whether graph connectivity is established. We aim to design
a query policy that minimizes the expected number of queries.
&lt;/p&gt;
&lt;p&gt;If we remove the query limit B (i.e., by setting B to the total number of
edges), then our problem becomes a special case of (monotone) Stochastic
Boolean Function Evaluation (SBFE). There are two existing exact algorithms
that are prohibitively expensive. They have best known upper bounds of O(3^m)
and O(2^{2^k}) respectively, where m is the number of edges and k is the number
of paths/cuts. These algorithms do not scale well in practice.
&lt;/p&gt;
&lt;p&gt;We propose a significantly more scalable exact algorithm. Our exact algorithm
works by iteratively improving the performance lower bound until the lower
bound becomes achievable. Even when our exact algorithm does not scale, it can
be used as an anytime algorithm for calculating lower bound.
&lt;/p&gt;
&lt;p&gt;We experiment on a wide range of practical graphs. We observe that even for
large graphs (i.e., tens of thousands of edges), it mostly takes only a few
queries to reach conclusion, which is the practical motivation behind the query
limit B. B is also an algorithm parameter that controls scalability. For small
B, our exact algorithm scales well. For large B, our exact algorithm can be
converted to a heuristic (i.e., always pretend that there are only 5 queries
left). Our heuristic outperforms all existing heuristics ported from SBFE and
related literature.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-28 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>On the Cost of Demographic Parity in Influence Maximization</title>
  <guid>http://arxiv.org/abs/2302.13110</guid>
  <link>http://arxiv.org/abs/2302.13110</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Becker_R/0/1/0/all/0/1&quot;&gt;Ruben Becker&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+DAngelo_G/0/1/0/all/0/1&quot;&gt;Gianlorenzo D&amp;#x27;Angelo&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ghobadi_S/0/1/0/all/0/1&quot;&gt;Sajjad Ghobadi&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Modeling and shaping how information spreads through a network is a major
research topic in network analysis. While initially the focus has been mostly
on efficiency, recently fairness criteria have been taken into account in this
setting. Most work has focused on the maximin criteria however, and thus still
different groups can receive very different shares of information. In this work
we propose to consider fairness as a notion to be guaranteed by an algorithm
rather than as a criterion to be maximized. To this end, we propose three
optimization problems that aim at maximizing the overall spread while enforcing
strict levels of demographic parity fairness via constraints (either ex-post or
ex-ante). The level of fairness hence becomes a user choice rather than a
property to be observed upon output. We study this setting from various
perspectives. First, we prove that the cost of introducing demographic parity
can be high in terms of both overall spread and computational complexity, i.e.,
the price of fairness may be unbounded for all three problems and optimal
solutions are hard to compute, in some case even approximately or when fairness
constraints may be violated. For one of our problems, we still design an
algorithm with both constant approximation factor and fairness violation. We
also give two heuristics that allow the user to choose the tolerated fairness
violation. By means of an extensive experimental study, we show that our
algorithms perform well in practice, that is, they achieve the best demographic
parity fairness values. For certain instances we additionally even obtain an
overall spread comparable to the most efficient algorithms that come without
any fairness guarantee, indicating that the empirical price of fairness may
actually be small when using our algorithms.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-28 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Improving Fairness in Information Exposure by Adding Links</title>
  <guid>http://arxiv.org/abs/2302.13112</guid>
  <link>http://arxiv.org/abs/2302.13112</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Becker_R/0/1/0/all/0/1&quot;&gt;Ruben Becker&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+DAngelo_G/0/1/0/all/0/1&quot;&gt;Gianlorenzo D&amp;#x27;Angelo&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ghobadi_S/0/1/0/all/0/1&quot;&gt;Sajjad Ghobadi&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Fairness in influence maximization has been a very active research topic
recently. Most works in this context study the question of how to find seeding
strategies (deterministic or probabilistic) such that nodes or communities in
the network get their fair share of coverage. Different fairness criteria have
been used in this context. All these works assume that the entity that is
spreading the information has an inherent interest in spreading the information
fairly, otherwise why would they want to use the developed fair algorithms?
This assumption may however be flawed in reality -- the spreading entity may be
purely \emph{efficiency-oriented}. In this paper we propose to study two
optimization problems with the goal to modify the network structure by adding
links in such a way that efficiency-oriented information spreading becomes
\emph{automatically fair}. We study the proposed optimization problems both
from a theoretical and experimental perspective, that is, we give several
hardness and hardness of approximation results, provide efficient algorithms
for some special cases, and more importantly provide heuristics for solving one
of the problems in practice. In our experimental study we then first compare
the proposed heuristics against each other and establish the most successful
one. In a second experiment, we then show that our approach can be very
successful in practice. That is, we show that already after adding a few edges
to the networks the greedy algorithm that purely maximizes spread surpasses all
fairness-tailored algorithms in terms of ex-post fairness. Maybe surprisingly,
we even show that our approach achieves ex-post fairness values that are
comparable or even better than the ex-ante fairness values of the currently
most efficient algorithms that optimize ex-ante fairness.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-28 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Toward Self-Adjusting k-ary Search Tree Networks</title>
  <guid>http://arxiv.org/abs/2302.13113</guid>
  <link>http://arxiv.org/abs/2302.13113</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Feder_E/0/1/0/all/0/1&quot;&gt;Evgenii Feder&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Paramonov_A/0/1/0/all/0/1&quot;&gt;Anton Paramonov&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Salem_I/0/1/0/all/0/1&quot;&gt;Iosif Salem&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Schmid_S/0/1/0/all/0/1&quot;&gt;Stefan Schmid&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Aksenov_V/0/1/0/all/0/1&quot;&gt;Vitaly Aksenov&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Datacenter networks are becoming increasingly flexible with the incorporation
of new networking technologies, such as optical circuit switches. These
technologies allow for programmable network topologies that can be reconfigured
to better serve network traffic, thus enabling a trade-off between the benefits
(i.e., shorter routes) and costs of reconfigurations (i.e., overhead).
Self-Adjusting Networks (SANs) aim at addressing this trade-off by exploiting
patterns in network traffic, both when it is revealed piecewise (online dynamic
topologies) or known in advance (offline static topologies). In this paper, we
take the first steps toward Self-Adjusting k-ary tree networks. These are more
powerful generalizations of existing binary search tree networks (like
SplayNets), which have been at the core of SAN designs. k-ary search tree
networks are a natural generalization offering nodes of higher degrees, reduced
route lengths for a fixed number of nodes, and local routing in spite of
reconfigurations. We first compute an offline (optimal) static network for
arbitrary traffic patterns in $O(n^3 \cdot k)$ time via dynamic programming,
and also improve the bound to $O(n^2 \cdot k)$ for the special case of
uniformly distributed traffic. Then, we present a centroid-based topology of
the network that can be used both in the offline static and the online setting.
In the offline uniform-workload case, we construct this quasi-optimal network
in linear time $O(n)$ and, finally, we present online self-adjusting k-ary
search tree versions of SplayNet. We evaluate experimentally our new structure
for $k=2$ (allowing for a comparison with existing SplayNets) on real and
synthetic network traces. Our results show that this approach works better than
SplayNet in most of the real network traces and in average to low locality
synthetic traces, and is only little inferior to SplayNet in all remaining
traces.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-28 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>The Effect of Points Dispersion on the $k$-nn Search in Random Projection Forests</title>
  <guid>http://arxiv.org/abs/2302.13160</guid>
  <link>http://arxiv.org/abs/2302.13160</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Alshammari_M/0/1/0/all/0/1&quot;&gt;Mashaan Alshammari&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Stavrakakis_J/0/1/0/all/0/1&quot;&gt;John Stavrakakis&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ahmed_A/0/1/0/all/0/1&quot;&gt;Adel F. Ahmed&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Takatsuka_M/0/1/0/all/0/1&quot;&gt;Masahiro Takatsuka&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Partitioning trees are efficient data structures for $k$-nearest neighbor
search. Machine learning libraries commonly use a special type of partitioning
trees called $k$d-trees to perform $k$-nn search. Unfortunately, $k$d-trees can
be ineffective in high dimensions because they need more tree levels to
decrease the vector quantization (VQ) error. Random projection trees rpTrees
solve this scalability problem by using random directions to split the data. A
collection of rpTrees is called rpForest. $k$-nn search in an rpForest is
influenced by two factors: 1) the dispersion of points along the random
direction and 2) the number of rpTrees in the rpForest. In this study, we
investigate how these two factors affect the $k$-nn search with varying $k$
values and different datasets. We found that with larger number of trees, the
dispersion of points has a very limited effect on the $k$-nn search. One should
use the original rpTree algorithm by picking a random direction regardless of
the dispersion of points.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-28 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>I wish we had less students in a Class. Demographics says I may get my wish.</title>
  <guid>tag:blogger.com,1999:blog-3722233.post-4886994334648303687</guid>
  <link>https://blog.computationalcomplexity.org/2023/02/i-wish-we-had-less-students-in-class.html</link>
  <description>
    &lt;p&gt;&amp;nbsp;According to&amp;nbsp;&lt;a href=&quot;https://www.vox.com/the-highlight/23428166/college-enrollment-population-education-crash&quot;&gt;this&lt;/a&gt;&amp;nbsp;article, in the near future LESS people will be going to college. There is even a name for this upcoming shift: &lt;i&gt;The Enrollment Cliff. &lt;/i&gt;Why?&lt;/p&gt;&lt;p&gt;Is it Covid-related?&amp;nbsp; Is it that College has gotten to expensive? To liberal? To much cancel culture?&amp;nbsp; To many dead white males in the core? The core is to multicultural? Online learning is stealing our students?&amp;nbsp;&lt;/p&gt;&lt;p&gt;No. The reason is actually very boring and does not serve anyone&#39;s political agenda. (thats not quite right).&amp;nbsp; Or any agenda. And you can probably guess the cause from the title of this blog post.&lt;/p&gt;&lt;p&gt;For some years up until 2007 the birth rate was slowly dropping. Then there was a large drop in the birth rate after the recession of 2007, and the birth rate has never really recovered. And the recession might not have that much to do with it-- the long term move from an agricultural society (where kids are an economic gain) to an industrial one (where, after child labor laws and the expense of college, kids are an economic loss- though that can be debated) has resulted in a very long term decline in births.&amp;nbsp;&lt;/p&gt;&lt;p&gt;And from personal experience, I know (a) very few people who have 4 or more kids, (b) there is NO stigma about having 0 kids as there once was.&amp;nbsp; Of course the sample size of people I know may be skewed.&amp;nbsp;&lt;/p&gt;&lt;p&gt;ANYWAY, what will this mean for colleges?&amp;nbsp;&lt;/p&gt;&lt;p&gt;a) Harvard, Yale, etc will not be affected. Plenty of people will still apply. Note that they draw from all of American and also internationally.&amp;nbsp;&lt;/p&gt;&lt;p&gt;b) Colleges that draw from a local area may be affected a lot since they depend on locals, and that population may be shrinking.&amp;nbsp;&lt;/p&gt;&lt;p&gt;c) Schools in between Harvard and Small colleges- hard to say.&amp;nbsp;&lt;/p&gt;&lt;p&gt;d) The sports betting places paying schools to allow them to promote on campus (and in some cases helping them promote it) may find far less students to sucker into this loser&#39;s game. See my blog on this topic&amp;nbsp;&lt;a href=&quot;https://blog.computationalcomplexity.org/2023/02/it-is-more-important-than-ever-to-teach.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Univ of MD has around 4000 Computer Science majors (depending on who tells you this its either a brag or a complaint). In the Spring of 2023 there are three lectures of Discrete math of sizes 240, 270, and 90. Each of those also has recitations of&amp;nbsp; 30 (or so) each. If the decline is gradual (either from demographics or from the CS majors bubble finally bursting, or from the other reasons above) then I am sure we can handle it. If it declines very suddenly we may have a problem adjusting.&amp;nbsp;&lt;/p&gt;&lt;p&gt;One caveat to this that I&#39;ve heard is that immigration will save us. Maybe. But America is politically going in the opposite direction. The counterargument of &lt;i&gt;without immigration there will be less students&lt;/i&gt; &lt;i&gt;going to college &lt;/i&gt;is not that compelling to most Americans. There are other more intelligent and compelling pro-immigration arguments. However, American politics is no longer interested in compelling and logical arguments. (The notion that it once was may be nostalgia for a time that never was.)&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By gasarch&lt;/p&gt;
  </description>
  <pubDate>2023-02-27 15:10:00 UTC</pubDate>
  <author>Computational Complexity</author>
</item>

<item>
  <title>TR23-017 |  Near-Optimal Set-Multilinear Formula Lower Bounds | 

	Deepanshu Kush, 

	Shubhangi Saraf</title>
  <guid>https://eccc.weizmann.ac.il/report/2023/017</guid>
  <link>https://eccc.weizmann.ac.il/report/2023/017</link>
  <description>
    The seminal work of Raz (J. ACM 2013) as well as the recent breakthrough results by Limaye, Srinivasan, and Tavenas (FOCS 2021, STOC 2022) have demonstrated a potential avenue for obtaining lower bounds for general algebraic formulas, via strong enough lower bounds for set-multilinear formulas.

In this paper, we make progress along this direction by proving near-optimal lower bounds against low-depth as well
as unbounded-depth set-multilinear formulas.
More precisely, we show that over any field of characteristic zero, there is a polynomial $f$ computed by a polynomial-sized set-multilinear branching program (i.e., $f$ is in set-multilinear VBP) defined over $\Theta(n^2)$ variables and of degree $\Theta(n)$, such that any product-depth $\Delta$ set-multilinear formula computing $f$ has size at
least $n^{\Omega( n^{1/\Delta}/\Delta)}$. Moreover, we show that any unbounded-depth set-multilinear formula computing $f$ has size at least $n^{\Omega(\log n)}$.


If such strong lower bounds are proven for the iterated matrix multiplication (IMM) polynomial or rather, any polynomial
that is computed by an ordered set-multilinear branching program (i.e., a further restriction of set-multilinear VBP), then this would have dramatic consequences as it would imply super-polynomial lower bounds 
for general algebraic formulas (Raz, J. ACM 2013; Tavenas, Limaye, and Srinivasan, STOC 2022).

Prior to our work, either only weaker lower bounds were known for the IMM polynomial (Tavenas, Limaye, and Srinivasan, STOC 2022), or similar strong lower bounds were known but for a
hard polynomial not known to be even in set-multilinear VP (Kush and Saraf, CCC 2022; Raz, J. ACM 2009).

By known depth-reduction results, our lower bounds are essentially tight
for $f$ and in general, for any hard polynomial that is in set-multilinear VBP or set-multilinear VP.
Any asymptotic improvement in the lower bound (for a hard polynomial, say, in VNP) would imply super-polynomial lower bounds for general set-multilinear circuits.
  </description>
  <pubDate>2023-02-27 15:04:14 UTC</pubDate>
  <author>ECCC Papers</author>
</item>

</channel>
</rss>
