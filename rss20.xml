<?xml version="1.0"?>
<rss version="2.0">

<channel>
  <title>Theory of Computing Report</title>
  <link></link>
  <language>en</language>
  <description></description>


<item>
  <title>Artificial Intelligence Just Lost a Leader</title>
  <guid>https://rjlipton.wpcomstaging.com/?p=20980</guid>
  <link>https://rjlipton.wpcomstaging.com/2023/02/05/artificial-intelligence-just-lost-a-leader/</link>
  <description>
    &lt;p&gt;Roger Schank just passed away. Roger was a top leader of AI. I overlapped with him for my time at Yale. In 1974, he became a professor of computer science and psychology at Yale University. In 1981, Schank became Chairman of Computer Science at Yale and director of the Yale Artificial Intelligence Project. I was gone by then off to Berkeley.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://rjlipton.wpcomstaging.com/2023/02/05/artificial-intelligence-just-lost-a-leader/rs-2/&quot; rel=&quot;attachment wp-att-20982&quot;&gt;&lt;img data-attachment-id=&quot;20982&quot; data-permalink=&quot;https://rjlipton.wpcomstaging.com/2023/02/05/artificial-intelligence-just-lost-a-leader/rs-2/&quot; data-orig-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/02/rs.jpeg?fit=268%2C188&amp;amp;ssl=1&quot; data-orig-size=&quot;268,188&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;rs&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/02/rs.jpeg?fit=268%2C188&amp;amp;ssl=1&quot; data-large-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/02/rs.jpeg?fit=268%2C188&amp;amp;ssl=1&quot; decoding=&quot;async&quot; loading=&quot;lazy&quot; src=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/02/rs.jpeg?resize=268%2C188&amp;#038;ssl=1&quot; alt=&quot;&quot; width=&quot;268&quot; height=&quot;188&quot; class=&quot;aligncenter size-full wp-image-20982&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;John Brockman says: He is a computer scientist and cognitive psychologist who has worked in the AI field for twenty-five years. Like Marvin Minsky, he takes the strong AI view, but rather than trying to build an intelligent machine he wants to deconstruct the human mind. He wants to know, in particular, how natural language&amp;#8212; one&amp;#8217;s mother tongue &amp;#8212; is processed, how memory works, and how learning occurs. Schank thinks of the human mind as a learning device, and he thinks that it is being taught in the wrong way. He is something of a gadfly; he deplores the curriculum-based, drill-oriented methods in today&amp;#8217;s schools, and his most recent contributions have been in the area of education, looking at ways to use computers to enhance the learning process.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Roger&amp;#8217;s View&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Roger was a scary guy&amp;#8212;especially for junior theory faculty like me. I did get along with Roger and he did support me when I was up for tenure. But he was scary no matter what. Part of the issue was that Roger did not think much of any research that was not AI based. Theory was not a top issue in his view.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Beat Roger Out&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;At Yale once Schank walked into Alan Perlis&amp;#8217;s office and told Alan that he had thought about some post-doc position we had funding for. Schank began to explain to Perlis that he, Roger, had a couple of ideas of who he planned to hire to fill this position&amp;#8212;of course the position was his. Perlis waved him off and said,&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Lipton already has found a candidate and the position is gone.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I was not there, so all this is second-hand from Perlis, but I can imagine that Roger was not pleased&amp;#8212;in his mind all resources of the department should have gone to build up the AI group. Roger was initially upset, but after this event he acted differently toward me. He treated me with more respect&amp;#8212;in general theory was not his type of research. I always thought that he respected someone who &amp;#8220;beat&amp;#8221; him at the resource game, since he was such a strong player. I probably should not do it again, but doing it once was cool.&lt;/p&gt;
&lt;p&gt;Years later, after Roger had moved to Northwestern University, he tried hard to hire me. Perhaps I should have gone. Oh well.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Open Problems&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We want to announce this from Dilma Da Silva&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://rjlipton.wpcomstaging.com/2023/02/05/artificial-intelligence-just-lost-a-leader/dd-2/&quot; rel=&quot;attachment wp-att-20983&quot;&gt;&lt;img data-attachment-id=&quot;20983&quot; data-permalink=&quot;https://rjlipton.wpcomstaging.com/2023/02/05/artificial-intelligence-just-lost-a-leader/dd-2/&quot; data-orig-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/02/dd.jpeg?fit=299%2C168&amp;amp;ssl=1&quot; data-orig-size=&quot;299,168&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;dd&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/02/dd.jpeg?fit=299%2C168&amp;amp;ssl=1&quot; data-large-file=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/02/dd.jpeg?fit=299%2C168&amp;amp;ssl=1&quot; decoding=&quot;async&quot; loading=&quot;lazy&quot; src=&quot;https://i0.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2023/02/dd.jpeg?resize=299%2C168&amp;#038;ssl=1&quot; alt=&quot;&quot; width=&quot;299&quot; height=&quot;168&quot; class=&quot;aligncenter size-full wp-image-20983&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;the Division Director, Computing and Communication Foundations (CCF) of NSF: NSF/CCF is looking for an IPA (rotator) Program Director (PD) for the Algorithm Foundation cluster. The job posting for the IPA PD position is available at here. My colleague Tracy Kimbrel and I will be happy to address any questions that potential applicants may have.&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By rjlipton&lt;/p&gt;
  </description>
  <pubDate>2023-02-05 15:03:39 UTC</pubDate>
  <author>Richard Lipton</author>
</item>

<item>
  <title>TR23-008 |  Limits of structures and Total NP Search Problems | 

	Ond?ej Ježil</title>
  <guid>https://eccc.weizmann.ac.il/report/2023/008</guid>
  <link>https://eccc.weizmann.ac.il/report/2023/008</link>
  <description>
    For a class of finite graphs, we define a limit object relative to some computationally restricted class of functions. The properties of the limit object then reflect how a computationally restricted viewer &amp;quot;sees&amp;quot; a generic instance from the class. The construction uses Krají?ek&amp;#39;s forcing with random variables [7]. We prove sufficient conditions for universal and existential sentences to be valid in the limit, provide several examples, and prove that such a limit object can then be expanded to a model of weak arithmetic. We then take the limit of all finite pointed paths to obtain a model of arithmetic where the problem OntoWeakPigeon is total but Leaf (the complete problem for $\textbf{PPA}$) is not. This can be viewed as a logical separation of the oracle classes of total NP search problems, which in our setting implies standard nonreducibility of Leaf to OntoWeakPigeon.
  </description>
  <pubDate>2023-02-05 08:30:13 UTC</pubDate>
  <author>ECCC Papers</author>
</item>

<item>
  <title>Thursday, Feb 9th, 2023 — Amit Chakrabarti from Dartmouth College</title>
  <guid>http://dstheory.wordpress.com/?p=147</guid>
  <link>https://dstheory.wordpress.com/2023/02/04/thursday-feb-9th-2023-amit-chakrabarti-from-dartmouth-college/</link>
  <description>
    &lt;p class=&quot;has-text-align-justify&quot;&gt;The next &lt;a rel=&quot;noreferrer noopener&quot; href=&quot;https://sites.google.com/view/dstheory/home&quot; target=&quot;_blank&quot;&gt;Foundations of Data Science&lt;/a&gt; virtual talk series on recent advances in &lt;em&gt;adversarially robust streaming&lt;/em&gt; will take place on &lt;strong&gt;Thursday, February 9th&lt;/strong&gt; at &lt;strong&gt;2:00 PM Pacific Time&lt;/strong&gt; (17:00 Eastern Time, 23:00 Central European Time, 22:00 UTC). &lt;a href=&quot;http://www.cs.dartmouth.edu/~ac&quot;&gt;Amit Chakrabarti&lt;/a&gt; from&lt;strong&gt; Dartmouth College&lt;/strong&gt; will talk about &lt;em&gt;“How to color your adversary&amp;#8217;s graph”&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;https://sites.google.com/view/dstheory&quot;&gt;Details of the talk (Zoom link) are available here.&lt;/a&gt;&lt;/p&gt;



&lt;p class=&quot;has-text-align-justify&quot;&gt;An n-vertex graph with maximum degree D is (D+1)-colorable: an almost trivial combinatorial result, with an equally simple greedy algorithm to produce a (D+1)-coloring. However, given a stream of edges of such a graph, can we maintain a valid (D+1)-coloring as the edges arrive, while using not much more than O(n) space? What if the edges are chosen by an adversary who can look at our current coloring and add additional edges to try to confound us? This is the newly-popular setting of adversarially robust streaming algorithms and this talk is about the coloring problem in this setting.&lt;/p&gt;



&lt;p class=&quot;has-text-align-justify&quot;&gt;We obtain upper and lower bound results for this problem. In O(n polylog n) space, we can maintain an O(D^(5/2))-coloring of such an adversarial graph. On the other hand, every adversarially robust coloring algorithm under the same space limitation must spend Omega(D^2) colors. We in fact prove more general. results that trade off the space usage against the color budget.&amp;nbsp; One interesting by-product of our work is that in combination with the celebrated Assadi-Chen-Khanna algorithm (SODA 2019), it provides the first separation between randomized and deterministic algorithms for the (ordinary, non-robust) streaming graph coloring problem.&lt;/p&gt;



&lt;p&gt;Based on joint works [C.-Ghosh-Stoeckl] and [Assadi-C.-Ghosh-Stoeckl].&lt;/p&gt;



&lt;p&gt;&amp;nbsp;The series is supported by the &lt;a href=&quot;https://www.nsf.gov/awardsearch/showAward?AWD_ID=1934846&amp;amp;HistoricalAwards=false&quot;&gt;NSF HDR TRIPODS Grant 1934846&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By dstheory&lt;/p&gt;
  </description>
  <pubDate>2023-02-04 19:49:34 UTC</pubDate>
  <author>Foundation of Data Science - Virtual Talk Series</author>
</item>

<item>
  <title>Postdoc at IST Austria (apply by March 15, 2023)</title>
  <guid>http://cstheory-jobs.org/2023/02/03/postdoc-at-ist-austria-apply-by-march-15-2023/</guid>
  <link>https://cstheory-jobs.org/2023/02/03/postdoc-at-ist-austria-apply-by-march-15-2023/</link>
  <description>
    &lt;p&gt;Postdoctorial positions at IST Austria are available funded by the ERC Advanced Grant &amp;#8220;Modern Dynamic Data Structures, led by Prof. Monika Henzinger&lt;/p&gt;
&lt;p&gt;Website: &lt;a href=&quot;https://ist.ac.at/en/job/postdoc-research-group-monika-henzinger/&quot;&gt;https://ist.ac.at/en/job/postdoc-research-group-monika-henzinger/&lt;/a&gt;&lt;br /&gt;
Email: monika.henzinger@ista.ac.at&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By shacharlovett&lt;/p&gt;
  </description>
  <pubDate>2023-02-03 12:26:50 UTC</pubDate>
  <author>CCI: jobs</author>
</item>

<item>
  <title>TR23-007 |  Extended Nullstellensatz proof systems | 

	Jan  Krajicek</title>
  <guid>https://eccc.weizmann.ac.il/report/2023/007</guid>
  <link>https://eccc.weizmann.ac.il/report/2023/007</link>
  <description>
    For a finite set $\cal F$ of polynomials over a fixed finite prime field of size  $p$ containing all polynomials $x^2 - x$, a Nullstellensatz proof of the unsolvability of the system
$$
	f = 0\ ,\ \mbox{ all } f \in {\cal F}
$$
is a linear combination $\sum_{f \in {\cal F}} \ h_f \cdot f$ that equals to $1$ in the ring of polynomials. The measure of complexity of such a proof is its degree: $\max_f deg(h_f f)$.

We study the problem to establish degree lower bounds for some {\em extended} NS proof systems: these systems prove the unsolvability of $\cal F$ by proving the unsolvability of a bigger set ${\cal F}\cup {\cal E}$, where set $\cal E$ may use more variables $r$ and contains polynomials $r^p - r$ for them, and satisfies the following soundness condition:
 
-- Any $0,1$-assignment ${\overline a}$ to variables ${\overline x}$ can be appended by an assignment ${\overline b}$ to variables $\overline r$ such that for all $g \in {\cal E}$ it holds that $g(\overline a, \overline b) = 0$.

We define a notion of pseudo-solutions of $\cal F$ and prove that the existence of pseudo-solutions with suitable parameters implies lower bounds for two extended NS proof systems ENS and UENS defined in Buss et al. (1996/97). Further we give a combinatorial example of $\cal F$ and candidate pseudo-solutions based on the pigeonhole principle.
  </description>
  <pubDate>2023-02-03 08:33:12 UTC</pubDate>
  <author>ECCC Papers</author>
</item>

<item>
  <title>This Game Is Not Going To Analyze Itself</title>
  <guid>http://arxiv.org/abs/2302.01145</guid>
  <link>http://arxiv.org/abs/2302.01145</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Adler_A/0/1/0/all/0/1&quot;&gt;Aviv Adler&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ani_J/0/1/0/all/0/1&quot;&gt;Joshua Ani&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chung_L/0/1/0/all/0/1&quot;&gt;Lily Chung&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Coulombe_M/0/1/0/all/0/1&quot;&gt;Michael Coulombe&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Demaine_E/0/1/0/all/0/1&quot;&gt;Erik D. Demaine&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Diomidov_Y/0/1/0/all/0/1&quot;&gt;Yevhenii Diomidov&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hendrickson_D/0/1/0/all/0/1&quot;&gt;Dylan Hendrickson&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lynch_J/0/1/0/all/0/1&quot;&gt;Jayson Lynch&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We analyze the puzzle video game This Game Is Not Going To Load Itself, where
the player routes data packets of three different colors from given sources to
given sinks of the correct color. Given the sources, sinks, and some previously
placed arrow tiles, we prove that the game is in Sigma_2^P; in NP for sources
of equal period; NP-complete for three colors and six equal-period sources with
player input; and even without player input, simulating the game is both NP-
and coNP-hard for two colors and many sources with different periods. On the
other hand, we characterize which locations for three data sinks admit a
perfect placement of arrow tiles that guarantee correct routing no matter the
placement of the data sources, effectively solving most instances of the game
as it is normally played.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-03 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>Order-Preserving Squares in Strings</title>
  <guid>http://arxiv.org/abs/2302.00724</guid>
  <link>http://arxiv.org/abs/2302.00724</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gawrychowski_P/0/1/0/all/0/1&quot;&gt;Pawe&amp;#x142; Gawrychowski&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ghazawi_S/0/1/0/all/0/1&quot;&gt;Samah Ghazawi&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Landau_G/0/1/0/all/0/1&quot;&gt;Gad M. Landau&lt;/a&gt;&lt;/p&gt;&lt;p&gt;An order-preserving square in a string is a fragment of the form $uv$ where
$u\neq v$ and $u$ is order-isomorphic to $v$. We show that a string $w$ of
length $n$ over an alphabet of size $\sigma$ contains $\mathcal{O}(\sigma n)$
order-preserving squares that are distinct as words. This improves the upper
bound of $\mathcal{O}(\sigma^{2}n)$ by Kociumaka, Radoszewski, Rytter, and
Wale\&#39;n [TCS 2016]. Further, for every $\sigma$ and $n$ we exhibit a string
with $\Omega(\sigma n)$ order-preserving squares that are distinct as words,
thus establishing that our upper bound is asymptotically tight. Finally, we
design an $\mathcal{O}(\sigma n)$ time algorithm that outputs all
order-preserving squares that occur in a given string and are distinct as
words. By our lower bound, this is optimal in the worst case.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-03 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>A Universal Technique for Machine-Certified Proofs of Linearizable Algorithms</title>
  <guid>http://arxiv.org/abs/2302.00737</guid>
  <link>http://arxiv.org/abs/2302.00737</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jayanti_P/0/1/0/all/0/1&quot;&gt;Prasad Jayanti&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jayanti_S/0/1/0/all/0/1&quot;&gt;Siddhartha Jayanti&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Yavuz_U/0/1/0/all/0/1&quot;&gt;Ugur Y. Yavuz&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hernandez_L/0/1/0/all/0/1&quot;&gt;Lizzie Hernandez&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Linearizability has been the long standing gold standard for consistency in
concurrent data structures. However, proofs of linearizability can be long and
intricate, hard to produce, and extremely time consuming even to verify. In
this work, we address this issue by introducing simple $universal$, $sound$,
and $complete$ proof methods for producing machine-verifiable proofs of
linearizability and its close cousin, strong linearizability. Universality
means that our method works for any object type; soundness means that an
algorithm can be proved correct by our method only if it is linearizable (resp.
strong linearizable); and completeness means that any linearizable (resp.
strong linearizable) implementation can be proved so using our method. We
demonstrate the simplicity and power of our method by producing proofs of
linearizability for the Herlihy-Wing queue and Jayanti&#39;s single-scanner
snapshot, as well as a proof of strong linearizability of the Jayanti-Tarjan
union-find object. All three of these proofs are machine-verified by TLAPS (the
Temporal Logic of Actions Proof System).
&lt;/p&gt;
  </description>
  <pubDate>2023-02-03 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Constant RMR Recoverable Mutex under System-wide Crashes</title>
  <guid>http://arxiv.org/abs/2302.00748</guid>
  <link>http://arxiv.org/abs/2302.00748</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jayanti_P/0/1/0/all/0/1&quot;&gt;Prasad Jayanti&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jayanti_S/0/1/0/all/0/1&quot;&gt;Siddhartha Jayanti&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Joshi_A/0/1/0/all/0/1&quot;&gt;Anup Joshi&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We design two Recoverable Mutual Exclusion (RME) locks for the system-wide
crash model. Our first algorithm requires only $O(1)$ space per process, and
achieves $O(1)$ worst-case RMR complexity in the CC model. Our second algorithm
enhances the first algorithm to achieve (the same) $O(1)$ space per process and
$O(1)$ worst-case RMR complexity in both the CC and DSM models. Furthermore,
both algorithms allow dynamically created threads of arbitrary names to join
the protocol and access the locks. To our knowledge, these are the only RME
locks to achieve worst-case $O(1)$ RMR complexity assuming nothing more than
standard hardware support. In light of Chan and Woelfel&#39;s $\Omega(\log n /
\log\log n)$ worst-case RMR lower bound for RME in the individual crash model,
our results show a separation between the system-wide crash and individual
crash models in worst-case RMR complexity in both the CC and DSM models.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-03 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Rethinking Warm-Starts with Predictions: Learning Predictions Close to Sets of Optimal Solutions for Faster $\text{L}$-/$\text{L}^\natural$-Convex Function Minimization</title>
  <guid>http://arxiv.org/abs/2302.00928</guid>
  <link>http://arxiv.org/abs/2302.00928</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sakaue_S/0/1/0/all/0/1&quot;&gt;Shinsaku Sakaue&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Oki_T/0/1/0/all/0/1&quot;&gt;Taihei Oki&lt;/a&gt;&lt;/p&gt;&lt;p&gt;An emerging line of work has shown that machine-learned predictions are
useful to warm-start algorithms for discrete optimization problems, such as
bipartite matching. Previous studies have shown time complexity bounds
proportional to some distance between a prediction and an optimal solution,
which we can approximately minimize by learning predictions from past optimal
solutions. However, such guarantees may not be meaningful when multiple optimal
solutions exist. Indeed, the dual problem of bipartite matching and, more
generally, $\text{L}$-/$\text{L}^\natural$-convex function minimization have
arbitrarily many optimal solutions, making such prediction-dependent bounds
arbitrarily large. To resolve this theoretically critical issue, we present a
new warm-start-with-prediction framework for
$\text{L}$-/$\text{L}^\natural$-convex function minimization. Our framework
offers time complexity bounds proportional to the distance between a prediction
and the set of all optimal solutions. The main technical difficulty lies in
learning predictions that are provably close to sets of all optimal solutions,
for which we present an online-gradient-descent-based method. We thus give the
first polynomial-time learnability of predictions that can provably warm-start
algorithms regardless of multiple optimal solutions.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-03 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Speed-Oblivious Online Scheduling: Knowing (Precise) Speeds is not Necessary</title>
  <guid>http://arxiv.org/abs/2302.00985</guid>
  <link>http://arxiv.org/abs/2302.00985</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lindermayr_A/0/1/0/all/0/1&quot;&gt;Alexander Lindermayr&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Megow_N/0/1/0/all/0/1&quot;&gt;Nicole Megow&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Rapp_M/0/1/0/all/0/1&quot;&gt;Martin Rapp&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We consider online scheduling on unrelated (heterogeneous) machines in a
speed-oblivious setting, where an algorithm is unaware of the exact
job-dependent processing speeds. We show strong impossibility results for
clairvoyant and non-clairvoyant algorithms and overcome them in models inspired
by practical settings: (i) we provide competitive learning-augmented
algorithms, assuming that (possibly erroneous) predictions on the speeds are
given, and (ii) we provide competitive algorithms for the speed-ordered model,
where a single global order of machines according to their unknown
job-dependent speeds is known. We prove strong theoretical guarantees and
evaluate our findings on a representative heterogeneous multi-core processor.
These seem to be the first empirical results for algorithms with predictions
that are performed in a non-synthetic environment on real hardware.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-03 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Postdoc at Centre for Quantum Computer Science, University of Latvia (apply by February 20, 2023)</title>
  <guid>http://cstheory-jobs.org/2023/02/02/postdoc-at-centre-for-quantum-computer-science-university-of-latvia-apply-by-february-20-2023/</guid>
  <link>https://cstheory-jobs.org/2023/02/02/postdoc-at-centre-for-quantum-computer-science-university-of-latvia-apply-by-february-20-2023/</link>
  <description>
    &lt;p&gt;Applications are invited for a postdoctoral position at the Centre for Quantum Computer Science, University of Latvia (&lt;a href=&quot;https://www.quantum.lu.lv&quot;&gt;https://www.quantum.lu.lv&lt;/a&gt;), lead by prof. Andris Ambainis. The Centre is among the strongest European research groups in quantum algorithms and currently consists of 18 researchers (including postdocs and graduate students).&lt;/p&gt;
&lt;p&gt;Website: &lt;a href=&quot;https://quantum.lu.lv/join-us/&quot;&gt;https://quantum.lu.lv/join-us/&lt;/a&gt;&lt;br /&gt;
Email: andris.ambainis@lu.lv&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By shacharlovett&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 22:21:11 UTC</pubDate>
  <author>CCI: jobs</author>
</item>

<item>
  <title>Non-convex quadratic optimization problems</title>
  <guid>https://francisbach.com/?p=7025</guid>
  <link>https://francisbach.com/non-convex-quadratic-problems/</link>
  <description>
    &lt;p class=&quot;justify-text&quot;&gt;Among continuous optimization problems, convex problems (with convex objectives and convex constraints) define a class that can be solved efficiently with a variety of algorithms and with arbitrary precision. This is not true more generally when the convexity assumption is removed (see &lt;a href=&quot;https://francisbach.com/optimization-is-as-hard-as-approximation/&quot;&gt;this post&lt;/a&gt;). This of course does not mean that (1) nobody should attempt to solve high-dimensional non-convex problems (in fact, the spell checker run on this document was trained solving such a problem&amp;#8230;), and that (2) no other problems have efficient solutions.&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;In this post, we will look at a classical class of continuous optimization problems that can be solved efficiently, namely quadratic optimization problems on the Euclidean sphere or ball. That is, we look at solving $$\tag{1} \min_{ \| x\| \leqslant 1} \ \frac{1}{2} x^\top A x \ &amp;#8211; b^\top x, $$ and $$\tag{2} \min_{ \| x\| = 1} \ \frac{1}{2} x^\top A x \ &amp;#8211; b^\top x,  $$ for \(\|x\|^2 = x^\top x\) the standard squared Euclidean norm.&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;The matrix \(A \in \mathbb{R}^{n \times n}\) is assumed only symmetric (no need to be positive semi-definite), and \(b \in \mathbb{R}^n\). Therefore, the objective may not be convex, and the constraint set (in the case of the sphere), is not convex either. We could replace the standard squared Euclidean norm \(x^\top x\) by any Mahanalobis squared norm \(x^\top B x\) for \(B\) positive-definite, but to keep it simple, let&amp;#8217;s only consider \(B = I\).&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;Note that there are other continuous non-convex optimization problems that can be solved efficiently through a convex reformulation, such as the minimization of one-dimensional (trigonometric) polynomials, and more generally sum-of-squares problems (see &lt;a href=&quot;https://francisbach.com/sums-of-squares-for-dummies/&quot;&gt;this post&lt;/a&gt;). If you are aware of many more beyond combinatorial optimization problems, please let me know.&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;Special case of eigenvalues.&lt;/strong&gt; If \(b=0\) (no linear term), then the solution of Problem \((2)\) is the eigenvector associated with the smallest eigenvalue of \(A\), while the solution of Problem \((1)\) is the same eigenvector if the smallest eigenvalue of \(A\) is negative, and zero otherwise. This has a large number of applications, is the topic of tons of &lt;a href=&quot;https://www.google.com/search?q=spectral+relaxation&quot;&gt;&amp;#8220;spectral relaxation&amp;#8221; works&lt;/a&gt;, and will not be the focus of this post.&lt;/p&gt;



&lt;h2&gt;Applications&lt;/h2&gt;



&lt;p class=&quot;justify-text&quot;&gt;Problems \((1)\) and \((2)\) appear in several areas and first appeared in [&lt;a href=&quot;https://epubs.siam.org/doi/epdfplus/10.1137/0113073&quot;&gt;2&lt;/a&gt;] in 1965 (if you know of an earlier reference, please let me know). The three main occurrences that I am aware of are in &lt;a href=&quot;https://en.wikipedia.org/wiki/Trust_region&quot;&gt;trust-region methods&lt;/a&gt;, constrained eigenvalue problems, and relaxation of binary optimization problems.&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;Trust-region methods.&lt;/strong&gt; When minimizing a differentiable function \(f\) on \(\mathbb{R}^n\), the classical gradient descent iteration $$x^+ = x \, &amp;#8211; \gamma f(x)$$ can be seen as the solution of $$\min_{y \in \mathbb{R}^n} \ f(x) + f&#39;(x)^\top ( y\,  &amp;#8211; x ) \mbox{ such that } \| y\,  &amp;#8211; x\| \leqslant \delta,$$ for \(\delta = \gamma  \| f&#39;(x)\|_2\). This corresponds to minimizing the first-order Taylor expansion in a ball centered at \(x\), and leads to the minimization of an affine function on an Euclidean ball. When using the second order model, we get to solve $$\min_{y \in \mathbb{R}^n} \ f(x) + f&#39;(x)^\top ( y \, &amp;#8211; x ) + \frac{1}{2} ( y\,  -x )^\top f^{\prime \prime}(x) ( y \, -x ) \mbox{ such that } \| y \, &amp;#8211; x\| \leqslant \delta, $$ which can be cast as Problem \((1)\).&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;The intuitive idea is that the Taylor expansion is only local, so we optimize it locally, instead of globally, like the classical Newton method would do. Moreover, it is well-defined even for singular Hessians. See figure below and [4] for more details.&lt;/p&gt;


&lt;div class=&quot;wp-block-image justify-text&quot;&gt;
&lt;figure class=&quot;aligncenter size-full is-resized&quot;&gt;&lt;img src=&quot;https://francisbach.com/wp-content/uploads/2023/01/tr-2.png&quot; alt=&quot;&quot; class=&quot;wp-image-8723&quot; width=&quot;779&quot; height=&quot;280&quot; srcset=&quot;https://francisbach.com/wp-content/uploads/2023/01/tr-2.png 2514w, https://francisbach.com/wp-content/uploads/2023/01/tr-2-300x108.png 300w, https://francisbach.com/wp-content/uploads/2023/01/tr-2-1024x369.png 1024w, https://francisbach.com/wp-content/uploads/2023/01/tr-2-768x277.png 768w, https://francisbach.com/wp-content/uploads/2023/01/tr-2-1536x554.png 1536w, https://francisbach.com/wp-content/uploads/2023/01/tr-2-2048x738.png 2048w, https://francisbach.com/wp-content/uploads/2023/01/tr-2-850x306.png 850w&quot; sizes=&quot;(max-width: 779px) 100vw, 779px&quot; /&gt;&lt;figcaption&gt;We consider two quadratic functions and we compare the minimization of their linear and quadratic Taylor expansions under a ball constraint with increasing radius. Left: convex function (hence the quadratic minimization ends up reaching the global minimum). Right: function with a saddle. Below, only the quadratic minimization path is shown for several starting points.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;figure class=&quot;aligncenter size-full is-resized&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;https://francisbach.com/wp-content/uploads/2023/01/video_tr-1.gif&quot; alt=&quot;&quot; class=&quot;wp-image-8747&quot; width=&quot;547&quot; height=&quot;353&quot;/&gt;&lt;/figure&gt;&lt;/div&gt;


&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;Constrained eigenvalue problems.&lt;/strong&gt; If we aim to minimize \(x^\top A x\) subject to \(x^\top x = 1\) and an affine constraint [&lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/0024379589904941/pdf?md5=754201682cef36aa80a3ef681fce6d62&amp;amp;pid=1-s2.0-0024379589904941-main.pdf&quot;&gt;3&lt;/a&gt;], then, by writing the affine constraint as \(x = Cz+d\), we obtain the minimization of a quadratic-linear function subject to a quadratic-linear constraint, which we can rewrite in a form similar to Problem \((2)\).&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;Relaxation of binary optimization problems.&lt;/strong&gt; When minimizing a linear-quadratic function on \(\{-1,1\}^n\), we can relax it by replacing the constraint \(x \in \{-1,1\}^n\) by \(x^\top x = n\).&lt;/p&gt;



&lt;h2&gt;From local to global optimality conditions&lt;/h2&gt;



&lt;p class=&quot;justify-text&quot;&gt;Let&amp;#8217;s now look at optimality conditions from first principles (see [&lt;a href=&quot;http://users.clas.ufl.edu/hager/papers/Regular/sphere.pdf&quot;&gt;5&lt;/a&gt;, &lt;a href=&quot;https://epubs.siam.org/doi/epdf/10.1137/0719026&quot;&gt;6&lt;/a&gt;] for more details), before relating them to a broader discussion on tight semi-definite relaxations.&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;Existence of minimizers.&lt;/strong&gt; Minimizers always exists for \(f(x) = \frac{1}{2} x^\top A x \ &amp;#8211; b^\top x\) since the two sets \(\mathbb{S} = \{ x \in \mathbb{R}^n, x^\top x = 1\}\) and \(\mathbb{B} = \{ x \in \mathbb{R}^n, x^\top x \leqslant 1\}\) are compact. Therefore, the problems are well-formulated.&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;First-order necessary conditions on the sphere. &lt;/strong&gt;We consider an optimal \(x \in \mathbb{S}\). For any \(y \in \mathbb{S}\) which is orthogonal to \(x\), and any \(\theta  \in \mathbb{R}\), we have: $$f( \cos \theta \cdot x + \sin \theta \cdot y) = f(x) + f&#39;(x)^\top y \cdot \theta + o(\theta).$$ Thus, since \(\cos \theta \cdot x + \sin \theta \cdot y\) is always on \(\mathbb{S}\), we must have \(f&#39;(x)^\top y=0\), and this holds for all \(y\) orthogonal to \(x\). Thus \(f&#39;(x)\) has to be proportional to \(x\), that is, there exists \(\mu \in \mathbb{R}\) such that \(f&#39;(x) + \mu x = 0\), that is, \((A + \mu I) x = b\).  &lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;First-order necessary conditions on the ball.&lt;/strong&gt; If \(x \in \mathbb{B}\) is optimal and in the interior, that is, \(x^\top x &amp;lt; 1\), then we directly have \(f&#39;(x) = 0\). If \(x \in \mathbb{S}\), it has to be optimal for the sphere, and thus there exists \(\mu \in \mathbb{R}\) such that \(f&#39;(x) + \mu x = 0\).  By considering that \(g: t \mapsto f(t x)\) has to be minimized on \([0,1]\), for \(t=1\), we must have \(g&#39;(1) \leqslant 0\), i.e., \(\mu = \, &amp;#8211; f&#39;(x) ^\top x \geqslant 0\). &lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;In order to cover the interior case, we need to add the &amp;#8220;complementary slackness&amp;#8221; condition \(\mu ( 1 -x^\top x)=0\).&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;Obtaining necessary conditions from Lagrange duality.&lt;/strong&gt; We can obtain the same first-order optimality conditions using &lt;a href=&quot;https://en.wikipedia.org/wiki/Duality_(optimization)&quot;&gt;Lagrange duality&lt;/a&gt;, by adding a Lagrange multiplier \(\mu \in \mathbb{R}\) for the equality constraint \(x^\top x = 1\), or \(\mu \in \mathbb{R}_+\) for the inequality constraint \(x^\top x \leqslant 1\), and forming the Lagrangian $$\tag{3} \mathcal{L}(x,\mu) = \frac{1}{2} x^\top A x\, &amp;#8211; b^\top x + \frac{1}{2} \mu ( x^\top x\, &amp;#8211; 1).$$ A necessary condition is thus that the partial derivative with respect to \(x\) is zero for a certain \(\mu\), which is exactly the condition \(f&#39;(x) + \mu x = 0\) above.&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;Second-order conditions on the sphere.&lt;/strong&gt; Assuming that \(f&#39;(x) + \mu x = 0\), with \(\mu\) potentially negative (i.e., the first-order optimality conditions are satisfied), we then have, for any \(y \in \mathbb{S}\), $$\begin{array}{rcl}f(y) &amp;amp; = &amp;amp; f(x) + f&#39;(x)^\top(y-x) + \frac{1}{2}(x-y)^\top A ( x-y) \\ &amp;amp; = &amp;amp;  f(x) + \frac{1}{2}(x-y)^\top (  A + \mu I) ( x-y) + \frac{\mu}{2} ( x^\top x &amp;#8211; y^\top y). \end{array}$$ Thus, if \(x\) is optimal, we must have \((x-y)^\top (  A + \mu I) ( x-y) \geqslant 0\) for all \(y \in \mathbb{S}\), which implies that \(A+ \mu I \succcurlyeq 0\). Note that our reasoning implies that the optimality condition, that is, existence of \(\mu \in \mathbb{R}\) such that $$\begin{array}{l} ( A+ \mu I) x = b \\ A+ \mu I \succcurlyeq 0 \\ x^\top x = 1 , \end{array} $$ is necessary and sufficient for the optimality of \(x\). The sufficiency can also be obtained through &lt;a href=&quot;https://en.wikipedia.org/wiki/Karush%E2%80%93Kuhn%E2%80%93Tucker_conditions#:~:text=In%20mathematical%20optimization%2C%20the%20Karush,some%20regularity%20conditions%20are%20satisfied.&quot;&gt;Karush-Kuhn-Tucker (KKT) conditions&lt;/a&gt;, which apply regardless of convexity. This is one of few problems where strong duality holds for a non-convex optimization problems.&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;Second-order necessary condition on the ball.&lt;/strong&gt; We also get the following necessary and sufficient condition, that is, the existence of \(\mu \in \mathbb{R}_+\) such that $$\begin{array}{l} ( A+ \mu I) x = b \\ A+ \mu I  \succcurlyeq 0 \\ x^\top x \leqslant 1 \\ \mu \, ( 1 \, &amp;#8211; \, x^\top x) = 0.  \end{array}$$&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;In both cases, once \(\mu\) is known, we can recover the optimizers \(x\). We now focus on the sphere for simplicity.&lt;/p&gt;



&lt;h2&gt;Equivalence to a one-dimensional problem&lt;/h2&gt;



&lt;p class=&quot;justify-text&quot;&gt;We can define the function \((M,u) \mapsto u^\top M^{-1} u\) as the minimal \(t \in \mathbb{R}\) such that the matrix \(\bigg( \begin{array}{cc} \!M\!\! &amp;amp; \!u\! \\[-.1cm] \!u^\top \!\! &amp;amp; \! t \! \end{array} \bigg) \succcurlyeq 0\). It is thus jointly convex in \((M,u)\), is infinite when \(M\) is not positive-semidefinite (PSD). When \(M\) is PSD but not invertible, the function is finite if and only if \(u\) is in the column space of \(M\). We can define similarly \(u^\top M^{-2} u\).&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;We can now get the dual problem associated to the Lagrangian in \((3)\), by minimizing it with respect to \(x\), leading to $$\max_{\mu \in \mathbb{R}} \  &amp;#8211; \frac{\mu}{2} \, &amp;#8211; \frac{1}{2} b^\top ( A+\mu I)^{-1} b, $$ which is a concave maximization problem in one dimension (with the constraint that \(A + \mu I \succcurlyeq 0\)).&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;Thus, a simple algorithm for solving the problem is to solve this one-dimensional concave maximization problem. Once an eigenvalue decomposition \(A = \sum_{i=1}^n \! \lambda_i u_i u_i^\top\) has been obtained, we need to minimize $$ \tag{4} &amp;#8211; \frac{\mu}{2} \, &amp;#8211; \frac{1}{2} \sum_{i=1}^n \frac{ (b^\top u_i)^2}{\lambda_i + \mu}. $$&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;Assuming that \(\lambda_1 \geqslant \lambda_2 \geqslant \cdots \geqslant \lambda_n\), we have the constraint \(\lambda_n + \mu \geqslant 0\). We first need to check if \(\mu = \, &amp;#8211; \lambda_n\) is the solution, which occurs when \(b^\top ( A+ \mu I)^{-2} b \leqslant 1\) (the problem is then called &amp;#8220;degenerate&amp;#8221;, and this can only happen if \(b\) in the eigensubspace of \(A\) associated with eigenvalue \(&amp;#8211; \lambda_n\), which is rather uncommon). Otherwise, the minimum is attained at \(\mu &amp;gt; -\lambda_n\) (note that since we have assumed \(b \neq 0\), the problem is strictly concave and thus has a unique maximizer in \(\mu\)). Moreover, \(\mu\) is characterized by the equation $$ \tag{5}   b^\top ( A+ \mu I)^{-2} b = 1,$$ which can be obtained directly from the optimality conditions.&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;This one-dimensional problem can be solved using Newton&amp;#8217;s method [&lt;a href=&quot;https://epubs.siam.org/doi/epdf/10.1137/0719026&quot;&gt;6&lt;/a&gt;, &lt;a href=&quot;https://epubs.siam.org/doi/epdf/10.1137/S1052623494274374&quot;&gt;7&lt;/a&gt;] to estimate \(\mu\) given the eigendecomposition of \(A\). There are also cheaper less precise algorithms that do not require a full eigendecomposition. We will also see below a surprising reformulation as a simple eigenvalue problem.&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;Other &amp;#8220;secular&amp;#8221; equations.&lt;/strong&gt; Equation \((5)\) is often referred to a &lt;a href=&quot;https://en.wikipedia.org/wiki/Characteristic_polynomial&quot;&gt;secular equation&lt;/a&gt;. There are other types of similar equations, in particular for rank-one perturbations of the symmetric eigenvalue problem [&lt;a href=&quot;https://link.springer.com/content/pdf/10.1007/BF01396012.pdf?pdf=button&quot;&gt;8&lt;/a&gt;, &lt;a href=&quot;https://epubs.siam.org/doi/epdf/10.1137/S089547989223924X&quot;&gt;9&lt;/a&gt;].&lt;/p&gt;



&lt;h2&gt;Semi-definite relaxations&lt;/h2&gt;



&lt;p class=&quot;justify-text&quot;&gt;We can now give a more modern take on the quadratic maximization problem on the sphere, using &lt;a href=&quot;https://en.wikipedia.org/wiki/Semidefinite_programming&quot;&gt;semi-definite programming&lt;/a&gt;. We can first rewrite the objective function in Equation \((1)\) as $$f(x) = \frac{1}{2}x^\top A x \, &amp;#8211; b^\top x = \frac{1}{2} {\rm tr}(AX) \, &amp;#8211; b^\top x, $$ with \(X = xx^\top\). We now have a linear objective in \((X,x)\). Moreover, the matrix \(X\) satisfies the convex constraints $$ X \succcurlyeq xx^\top \Leftrightarrow \left( \begin{array}{cc} \!X\!\! &amp;amp; \!x\! \\[-.1cm] \!x^\top \!\!&amp;amp;\!  1\!  \end{array} \right) \succcurlyeq 0, $$ and \({\rm tr}(X) = x^\top x = 1\). However the rank-one constraint is not convex. &lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;A classical tool in optimization is to remove the rank-one constraint, and only obtain a lower bound (a so-called &amp;#8220;relaxation&amp;#8221;), with the following optimization problem: $$\tag{6} \min_{ X, x} \frac{1}{2} {\rm tr}(AX)-b^\top x \mbox{ such that } \left( \begin{array}{cc} \!X\!\! &amp;amp; \!x\! \\[-.1cm] \!x^\top \!\!&amp;amp;\!  1\!  \end{array} \right)  \succcurlyeq 0 \mbox{ and } {\rm tr}(X)=1. $$ One can check that the dual problem is exactly Equation \((4)\), and thus the relaxation is here tight. Moreover, the SDP formulation can be used to derive algorithms that do not need a full eigenvalue decomposition [&lt;a href=&quot;https://link.springer.com/content/pdf/10.1007/BF02614438.pdf?pdf=button&quot;&gt;12&lt;/a&gt;].&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;Semi-definite relaxation of QCQP&amp;#8217;s.&lt;/strong&gt; Problems \((1)\) and \((2)\) are in fact instances of &lt;a href=&quot;https://en.wikipedia.org/wiki/Quadratically_constrained_quadratic_program&quot;&gt;quadratically constrained quadratic programming&lt;/a&gt; problems, and the problem \((6)\) is the usual semi-definite relaxation. It turns out that with a single constraint, such relaxations are always tight, owing to the &lt;a href=&quot;https://en.wikipedia.org/wiki/S-procedure&quot;&gt;S-lemma&lt;/a&gt; [&lt;a href=&quot;https://epubs.siam.org/doi/epdf/10.1137/S003614450444614X&quot;&gt;10&lt;/a&gt;] (see a nice derivation in Boyd and Vandenberghe&amp;#8217;s book [&lt;a href=&quot;https://web.stanford.edu/~boyd/cvxbook/bv_cvxbook.pdf&quot;&gt;11&lt;/a&gt;, Appendix B.1]).&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;Tight &lt;span style=&quot;font-size: revert; color: initial; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &amp;quot;Helvetica Neue&amp;quot;, sans-serif;&quot;&gt;sum-of-squares relaxation.&lt;/span&gt;&lt;/strong&gt; Yet another reformulation is through sum-of-squares (see an earlier &lt;a href=&quot;https://francisbach.com/finding-global-minima-with-kernel-approximations/&quot;&gt;post&lt;/a&gt;), where we consider the feature vector \(\varphi(x) = {x \choose 1}\) and represent non-negative functions as quadratic forms \(x \mapsto \varphi(x)^\top B \varphi(x)\). The problem in \((2)\) can then be relaxed as $$\max_{c \in \mathbb{R}, \ B \succcurlyeq 0} c \ \mbox{ such that } \ f(x) \, &amp;#8211; c = \varphi(x)^\top B \varphi(x),$$ which is exactly the tight SDP relaxation above.&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;Having fun with adding affine constraints. &lt;/strong&gt;Recently I had to look at Problem \((2)\) with an extra affine constraint, which I will take for simplicity of the form \(c^\top x = 1\) (for a vector \(c \in \mathbb{R}^n\) such that \(\|c\| &amp;gt; 1\) to avoid a trivial problem). By projecting on the subspace orthogonal to \(c \in \mathbb{R}^n\), we obtain again a quadratic minimization problem, this time on a Euclidean sphere embedded in a space of dimension \(n-1\). Therefore, we can apply the above techniques on the reduced problem. However, I did not want to do that and wanted keep the original formulation on \(\mathbb{R}^n\), and then tried to use duality to solve it. Two natural possibilities emerge here.&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;In order to solve it, we could first imagine using Lagrange duality, with a Lagrange multiplier \(\mu\) for the constraint \(x^\top x = 1\) (this worked exactly without the extra affine constraint), and now an extra Lagrange multiplier \(\nu\) for the constraint \(c^\top x = 1\). This leads to the Lagrangian $$ \mathcal{L}(x,\mu,\nu) = \frac{1}{2} x^\top A x\, &amp;#8211; b^\top x + \frac{1}{2} \mu ( x^\top x\, &amp;#8211; 1) + \nu( c^\top x -1),$$ and thus, after a short calculation, the dual problem $$\max_{\mu,\nu \in \mathbb{R}} \ -\frac{\mu}{2} \, &amp;#8211; \nu   \, &amp;#8211; \frac{1}{2} (b \, &amp;#8211; \nu c)^\top ( A + \mu I)^{-1} (b \, &amp;#8211; \nu c).$$ Another Lagrangian can be obtained with the equivalent constraint \((c^\top x\, &amp;#8211; 1)^2 = 0\), leading to a new Lagrangian $$ \mathcal{L}&#39;(x,\mu,\nu&amp;#8217;) = \frac{1}{2} x^\top A  x\, -b^\top x + \frac{1}{2} \mu ( x^\top x\, &amp;#8211; 1) + \frac{1}{2} \nu&amp;#8217;  (c^\top x \, &amp;#8211; 1)^2,$$ and then the dual problem $$\max_{\mu,\nu&amp;#8217; \in \mathbb{R}} \ -\frac{\mu}{2} \, -\frac{\nu&amp;#8217;}{2} \, &amp;#8211; \frac{1}{2} (b+\nu&amp;#8217; c)^\top ( A +  \nu&amp;#8217; cc^\top  +  \mu I)^{-1} (b+\nu&amp;#8217; c).$$ Are they both tight? Make up your own mind and see the bottom of the post for the answer.&lt;/p&gt;



&lt;h2&gt;Amazing eigenvalue reformulations&lt;/h2&gt;



&lt;p class=&quot;justify-text&quot;&gt;The Newton method to solve the one-dimensional problem is efficient, but requires some safeguards to work properly, and a full eigenvalue decomposition. It turns out that one can obtain &lt;em&gt;exact&lt;/em&gt; reformulations as eigenvalue problems &lt;em&gt;for a single eigenvalue&lt;/em&gt;, for which efficient &lt;a href=&quot;https://en.wikipedia.org/wiki/ARPACK&quot;&gt;packages&lt;/a&gt; exist.&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;From [&lt;a href=&quot;https://reader.elsevier.com/reader/sd/pii/0024379589904941?token=5ED11F6E1B740CDF399B40623394985F3CDDA6BEF749F490CA64773677A63CBDE4C213284E03445941BCF501D0C12336&amp;amp;originRegion=eu-west-1&amp;amp;originCreation=20230128095330&quot;&gt;3&lt;/a&gt;], for the optimization on the sphere, we can obtain the optimal \(\mu\) from the largest real eigenvalue of the following non symmetric matrix: $$\left( \begin{array}{cc} \!-A\!  &amp;amp; \!\! I\!  \\[-.1cm]   \! bb^\top \!&amp;amp; \!\! -A\!  \end{array} \right).$$ Indeed, one can check that, in the non-degenerate case, given the optimal \((x,\mu)\), then \(y = \left( \begin{array}{c} \!(A+\mu I)^{-1} x \!    \\[-.1cm]  x  \end{array} \right)\) is an eigenvector of the \(2n \times 2n\) matrix above, with eigenvalue \(\mu\).&lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;This leads to two lines of code to solve the problem, at least for the non-degenerate case! See more details in [&lt;a href=&quot;https://reader.elsevier.com/reader/sd/pii/0024379589904941?token=5ED11F6E1B740CDF399B40623394985F3CDDA6BEF749F490CA64773677A63CBDE4C213284E03445941BCF501D0C12336&amp;amp;originRegion=eu-west-1&amp;amp;originCreation=20230128095330&quot;&gt;3&lt;/a&gt;, &lt;a href=&quot;https://epubs.siam.org/doi/epdf/10.1137/16M1058200&quot;&gt;14&lt;/a&gt;], in particular, to deal with the degenerate case, often called the &amp;#8220;hard case&amp;#8221;. See the code snippets in Matlab, Julia, and Python.&lt;/p&gt;



&lt;figure class=&quot;wp-block-table&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Matlab&lt;/td&gt;&lt;td&gt;&lt;code&gt;[y,mu] = eigs([-A, eye(n); b*b&#39;, -A],1,&#39;largestreal&#39;);&amp;nbsp;&lt;br&gt;x&amp;nbsp;= y(n+1:2*n) / (b&#39;*y(1:n));&amp;nbsp;&lt;br&gt;&lt;/code&gt;or &lt;code&gt;x = sign(b&#39;*y(1:n)) * y(n+1:2*n) / norm(y(n+1:2*n))&lt;/code&gt;;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Julia&lt;/td&gt;&lt;td&gt;&lt;code&gt;E = eigs([-A I(n) ; b*b&#39; -A ], nev=1 , which=:LR )&lt;br&gt;y, μ = E[2][:, 1], E[1][1]&lt;br&gt;x = y[n+1:2n] ./ (b&#39; * y[1:n])&lt;br&gt;&lt;/code&gt;or &lt;code&gt;x = sign.(b&#39; * y[1:n]) .* y[n+1:2n] / norm(y[n+1:2*n])&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Python&lt;/td&gt;&lt;td&gt;&lt;code&gt;M = np.block([[-A, np.eye(n)], [np.outer(b,b), -A]])&lt;br&gt;mu, y = scipy.sparse.linalg.eigs(M, k=1, which=&#39;LR&#39;, return_eigenvectors=True)&lt;br&gt;x = y[n:2*n]/(np.dot(b,y[:n]))&amp;nbsp;&lt;br&gt;&lt;/code&gt;or &lt;code&gt;x&amp;nbsp;= np.sign(np.dot(b,y[:n]))*y[n:2*n]/np.linalg.norm(y[n:2*n])&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;Symmetric generalized eigenproblems. &lt;/strong&gt;If you prefer symmetric matrices, one can obtain a similar result with the generalized eigenvector of the two matrices $$\left( \begin{array}{cc} \!I\!\!  &amp;amp; \!\!-A\! \\ \!-A\!\! &amp;amp; \! bb^\top\! \end{array} \right) \ \mbox{ and }   \  \left( \begin{array}{cc} \! 0  \! &amp;amp; \! \! I \\[-.1cm] I \!\! &amp;amp; \!\! 0   \end{array} \right).$$ If you want to avoid forming a potentially dense matrix \(bb^\top\), you and use instead the matrices $$\left( \begin{array}{ccc}  \!-1\!  &amp;amp; \! 0\! &amp;amp; \! b^\top \! \\[-1.cm] \!0\! &amp;amp;\!  I \!&amp;amp;\! -A \! \\[-.1cm]\! b \!&amp;amp;\! -A \!&amp;amp; \!0\! \end{array} \right) \  \mbox{ and } \  \left( \begin{array}{ccc} \! 0\! &amp;amp;\! 0 \!&amp;amp; \! 0\! \\[-.1cm]\! 0 \! &amp;amp; \! 0 \!&amp;amp;\! I \! \\[-.1cm] \! 0 \! &amp;amp;\! I \! &amp;amp;\! 0 \!  \end{array} \right).$$ See all details in [&lt;a href=&quot;https://epubs.siam.org/doi/epdf/10.1137/16M1058200&quot;&gt;14&lt;/a&gt;]. Note that beyond the two-line code above that lead to precise solutions, more efficient algorithms exist that lead to approximate solutions [&lt;a href=&quot;https://link.springer.com/content/pdf/10.1007/s10107-015-0933-y.pdf?pdf=button&quot;&gt;14&lt;/a&gt;, &lt;a href=&quot;https://epubs.siam.org/doi/epdf/10.1137/16M1150281&quot;&gt;15&lt;/a&gt;].&lt;/p&gt;



&lt;h2&gt;Conclusion&lt;/h2&gt;



&lt;p class=&quot;justify-text&quot;&gt;In this blog post, I described one of the few non-convex problems where strong duality holds. There are many other instances within combinatorial optimization (that is, with variables in \(\{0,1\}^n\) or \(\{-1,1\}^n\)), in particular related to &lt;a href=&quot;https://en.wikipedia.org/wiki/Submodular_set_function&quot;&gt;submodularity&lt;/a&gt;. I will hopefully cover these in future posts. &lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;&lt;strong&gt;Acknowledgements.&lt;/strong&gt; I would like to thank Alessandro Rudi, Gaspard Beugnot, and ChatGPT for helping with the code snippets.&lt;/p&gt;



&lt;h2&gt;References&lt;/h2&gt;



&lt;p class=&quot;justify-text&quot;&gt;[2] George E. Forsythe, and Gene H. Golub. &lt;a href=&quot;https://epubs.siam.org/doi/epdfplus/10.1137/0113073&quot;&gt;On the stationary values of a second-degree polynomial on the unit sphere&lt;/a&gt;.&amp;nbsp;&lt;em&gt;Journal of the Society for Industrial and Applied Mathematics&lt;/em&gt;,&amp;nbsp;13(4): 1050-1068, 1965.[3] Walter Gander, Gene H. Golub, and Urs Von Matt. &lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/0024379589904941/pdf?md5=754201682cef36aa80a3ef681fce6d62&amp;amp;pid=1-s2.0-0024379589904941-main.pdf&quot;&gt;A constrained eigenvalue problem&lt;/a&gt;.&amp;nbsp;&lt;em&gt;Linear Algebra and its applications&lt;/em&gt;&amp;nbsp;114: 815-839, 1989.&lt;br&gt;[4] Andrew R. Conn, Nicholas I. M. Gould, and Philippe L. Toint.&amp;nbsp;&lt;em&gt;Trust region methods&lt;/em&gt;. Society for Industrial and Applied Mathematics, 2000.&lt;br&gt;[5] William W. Hager. &lt;a href=&quot;http://users.clas.ufl.edu/hager/papers/Regular/sphere.pdf&quot;&gt;Minimizing a quadratic over a sphere&lt;/a&gt;.&amp;nbsp;&lt;em&gt;SIAM Journal on Optimization&lt;/em&gt;,&amp;nbsp;12(1):188-208, 2001.&lt;br&gt;[6] Danny C. Sorensen. &lt;a href=&quot;https://epubs.siam.org/doi/epdf/10.1137/0719026&quot;&gt;Newton’s method with a model trust region modification&lt;/a&gt;. &lt;em&gt;SIAM Journal on Numerical Analysis&lt;/em&gt;,&amp;nbsp;19(2):409-426, 1982.&lt;br&gt;[7] Danny C. Sorensen. &lt;a href=&quot;https://epubs.siam.org/doi/epdf/10.1137/S1052623494274374&quot;&gt;Minimization of a large-scale quadratic function subject to a spherical constraint&lt;/a&gt;.&amp;nbsp;&lt;em&gt;SIAM Journal on Optimization&lt;/em&gt;,&amp;nbsp;7(1):141-161, 1997.&lt;br&gt;[8] James R. Bunch, Christopher P. Nielsen, Danny C. Sorensen. &lt;a href=&quot;https://link.springer.com/content/pdf/10.1007/BF01396012.pdf?pdf=button&quot;&gt;Rank-one modification of the symmetric eigenproblem&lt;/a&gt;.&amp;nbsp;&lt;em&gt;Numerische Mathematik&lt;/em&gt;,&amp;nbsp;31(1):31-48, 1978.&lt;br&gt;[9] Ming Gu, Stanley C. Eisenstat. &lt;a href=&quot;https://epubs.siam.org/doi/epdf/10.1137/S089547989223924X&quot;&gt;A stable and efficient algorithm for the rank-one modification of the symmetric eigenproblem&lt;/a&gt;.&amp;nbsp;&lt;em&gt;SIAM Journal on Matrix Analysis and Applications&lt;/em&gt;&amp;nbsp;,15(4):1266-1276, 1994.&lt;br&gt;[10] Imre Pólik, Tamás Terlaky. &lt;a href=&quot;https://epubs.siam.org/doi/epdf/10.1137/S003614450444614X&quot;&gt;A survey of the S-lemma&lt;/a&gt;.&amp;nbsp;&lt;em&gt;SIAM Review&lt;/em&gt;,&amp;nbsp;49(3):371-418, 2007.&lt;br&gt;[11] Stephen P. Boyd, Lieven Vandenberghe.&amp;nbsp;&lt;em&gt;&lt;a href=&quot;https://web.stanford.edu/~boyd/cvxbook/bv_cvxbook.pdf&quot;&gt;Convex Optimization&lt;/a&gt;&lt;/em&gt;. Cambridge University Press, 2004.&lt;br&gt;[12] Franz Rendl, Henry Wolkowicz. &lt;a href=&quot;https://link.springer.com/content/pdf/10.1007/BF02614438.pdf?pdf=button&quot;&gt;A semidefinite framework for trust region subproblems with applications to large scale minimization&lt;/a&gt;.&amp;nbsp;&lt;em&gt;Mathematical Programming&lt;/em&gt;,&amp;nbsp;77(1):273-299, 1997.&lt;br&gt;[13] Satoru Adachi, Satoru Iwata, Yuji Nakatsukasa, Akiko Takeda. &lt;a href=&quot;https://epubs.siam.org/doi/epdf/10.1137/16M1058200&quot;&gt;Solving the trust-region subproblem by a generalized eigenvalue problem&lt;/a&gt;.&amp;nbsp;&lt;em&gt;SIAM Journal on Optimization&lt;/em&gt;,&amp;nbsp;&lt;em&gt;27&lt;/em&gt;(1):269-291, 2017.&lt;br&gt;[14] Elad Hazan, Tomer Koren. &lt;a href=&quot;https://link.springer.com/content/pdf/10.1007/s10107-015-0933-y.pdf?pdf=button&quot;&gt;A linear-time algorithm for trust region problems&lt;/a&gt;.&amp;nbsp;&lt;em&gt;Mathematical Programming&lt;/em&gt;,&amp;nbsp;158(1-2):363-381, 2016.&lt;br&gt;[15] Amir Beck, Yakov Vaisbourd. &lt;a href=&quot;https://epubs.siam.org/doi/epdf/10.1137/16M1150281&quot;&gt;Globally solving the trust region subproblem using simple first-order methods&lt;/a&gt;.&amp;nbsp;&lt;em&gt;SIAM Journal on Optimization&lt;/em&gt;,&amp;nbsp;28(3):1951-1967, 2018.&lt;/p&gt;



&lt;h2&gt;Having fun with affine constraints&lt;/h2&gt;



&lt;p class=&quot;justify-text&quot;&gt;Let&amp;#8217;s know look at the solution! The second relaxation is tight, while the first is not. To prove that we have a non-tight solution for the first relaxation, we can simply find a counter-example from random matrices in dimension \(n = 2\). For example, for $$A = \left( \begin{array}{cc} \!3\! &amp;amp;\! 0\! \\[-.1cm] \! 0\! &amp;amp; \!-2 \!  \end{array} \right) , \ \ b = \left( \begin{array}{c} \! 0\! \\[-.1cm] \!-1 \! \end{array} \right), \mbox{ and } \ c = \left( \begin{array}{c} \! 0\! \\[-.1cm] \!2 \! \end{array} \right),$$ a minimizer is \( x =  \left( \begin{array}{c}\! \sqrt{3}/2\! \\[-.1cm] \! 1/2 \! \end{array} \right)\), with optimal value \(11/8\), while the non-tight relaxation leads to a value of \(-1/2\). &lt;/p&gt;



&lt;p class=&quot;justify-text&quot;&gt;To show the tightness of the second relaxation, we first notice that the convex problem is equivalent to the following SDP relaxation:  $$\min_{ X, x} \frac{1}{2} {\rm tr}(AX)-b^\top x \mbox{ such that } \left( \begin{array}{cc} \!X\!\! &amp;amp; \!x\! \\[-.1cm] \!x^\top \!\!&amp;amp;\!  1\!  \end{array} \right) \succcurlyeq 0, {\rm tr}(X)=1, \mbox{ and } {\rm tr}(cc^\top X)\,  &amp;#8211; 2 t c^\top x + t^2 = 0. $$ Given the PSD constraint and the fact that $${\rm tr}(cc^\top X)\,  &amp;#8211; 2 t c^\top x + t^2 = {\rm tr} \left( \begin{array}{cc} \!X\!\! &amp;amp; \!x\! \\[-.1cm] \!x^\top \!\!&amp;amp;\!  1\!  \end{array} \right)\left( \begin{array}{cc} \! cc^\top \! &amp;amp; \! -tc \! \\[-.1cm] \!-tc^\top \! &amp;amp; \! t^2 \! \end{array} \right),$$ the new constraint implies that $$ \left( \begin{array}{cc} \!X\!\! &amp;amp; \!x\! \\[-.1cm] \!x^\top \!\!&amp;amp;\!  1\!  \end{array} \right) \left( \begin{array}{c} \!c\!  \\[-.1cm] \!-t \!  \end{array} \right)= 0, $$ that is, \(Xc = t x\) and \(c^\top x = t\). One can then check that these constraints are exactly equivalent to a projection of the problem in to a space of dimension \(n-1\). The incorrect relaxation only has \(c^\top x = t\), which is not enough. It took me a while to realize it&amp;#8230;&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By Francis Bach&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 14:46:35 UTC</pubDate>
  <author>Francis Bach</author>
</item>

<item>
  <title>Responsibility</title>
  <guid>tag:blogger.com,1999:blog-3722233.post-7427073338389892323</guid>
  <link>https://blog.computationalcomplexity.org/2023/02/responsibility.html</link>
  <description>
    &lt;p&gt;Nature &lt;a href=&quot;https://www.nature.com/articles/d41586-023-00191-1&quot;&gt;laid out their ground rules&lt;/a&gt; for large language models like ChatGPT including&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;No LLM tool will be accepted as a credited author on a research paper. That is because any attribution of authorship carries with it accountability for the work, and AI tools cannot take such responsibility.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Let&#39;s focus on the last word &quot;responsibility&quot;. What does that mean for an author? It means we can hold an author, or set of authors, responsible for any issues in the paper such as&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;The proofs, calculations, code, formulas, measurements, statistics, and other details of the research.&lt;/li&gt;&lt;li&gt;Any interpretation or conclusions made in the article&lt;/li&gt;&lt;li&gt;Properly citing related work, especially work that calls into question the novelty of this research&lt;/li&gt;&lt;li&gt;The article does not contain text identical or very similar to previous work.&lt;/li&gt;&lt;li&gt;Anything else described in the article.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;The authors should take reasonable measures to ensure that a paper is free from any issues above. Nobody is perfect and if you make a mistake in a paper, you should, as with all mistakes, take responsibility and acknowledge the problems, do everything you can to rectify the issues, such as publishing a corrigendum if needed, and work to ensure you won&#39;t make similar mistakes in the future.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Mistakes can arise outside of an author&#39;s actions. Perhaps a computer chip &lt;a href=&quot;https://en.wikipedia.org/wiki/Pentium_FDIV_bug&quot;&gt;makes faulty calculations&lt;/a&gt;, you relied on a faulty theorem in another paper, your main result appeared in a paper fifteen years ago in an obscure journal, a LaTeX package for the journal created some mistakes in the formulas or a student who helped with the research or exposition took a lazy way out, or you put too much trust in AI generative text. Nevertheless the responsibility remains with the authors.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Could an AI ever take responsibility for an academic paper? Would a toaster ever take responsibility for burning my breakfast?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p class=&quot;authors&quot;&gt;By Lance Fortnow&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 14:39:00 UTC</pubDate>
  <author>Computational Complexity</author>
</item>

<item>
  <title>Assistant/Associate Professor at Ecole polytechnique, Institut Polytechnique de Paris (apply by March 15, 2023)</title>
  <guid>http://cstheory-jobs.org/2023/02/02/assistant-associate-professor-at-ecole-polytechnique-institut-polytechnique-de-paris-apply-by-march-15-2023/</guid>
  <link>https://cstheory-jobs.org/2023/02/02/assistant-associate-professor-at-ecole-polytechnique-institut-polytechnique-de-paris-apply-by-march-15-2023/</link>
  <description>
    &lt;p&gt;Ecole polytechnique, leading engineering school in France, member of the&lt;br /&gt;
Institut Polytechnique de Paris, welcomes outstanding applications for one assistant Monge Professor in Computer Science, specialty &amp;#8220;Foundations of Computer Science&amp;#8221;, tenure track teaching/research position.&lt;/p&gt;
&lt;p&gt;Website: &lt;a href=&quot;https://portail.polytechnique.edu/informatique/en/recruitment2023&quot;&gt;https://portail.polytechnique.edu/informatique/en/recruitment2023&lt;/a&gt;&lt;br /&gt;
Email: samuel.mimram@polytechnique.edu&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By shacharlovett&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 13:54:05 UTC</pubDate>
  <author>CCI: jobs</author>
</item>

<item>
  <title>Mathematics of the impossible: Computational Complexity,  Chapter 3: The grand challenge</title>
  <guid>http://emanueleviola.wordpress.com/?p=1152</guid>
  <link>https://emanueleviola.wordpress.com/2023/02/02/mathematics-of-the-impossible-computational-complexity-chapter-3-the-grand-challenge/</link>
  <description>
    &lt;p&gt;&lt;a href=&quot;https://emanueleviola.wordpress.com/tag/moti/&quot;&gt;All posts in this series.&lt;/a&gt;&lt;br /&gt;
A PDF version of this post will be published with a delay, but if you&amp;#8217;d like to have it soon let me know.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot; ?--&gt; &lt;!--http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd--&gt; &lt;!-- html,xhtml,-css,NoFonts --&gt;&lt;/p&gt;
&lt;h2 class=&quot;likechapterHead&quot;&gt;&lt;a id=&quot;x1-1000&quot;&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;div class=&quot;tableofcontents&quot;&gt;&lt;span class=&quot;chapterToc&quot;&gt;1 &lt;a id=&quot;QQ2-1-2&quot; href=&quot;#x1-20001&quot;&gt;The grand challenge&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;sectionToc&quot;&gt;1.1 &lt;a id=&quot;QQ2-1-3&quot; href=&quot;#x1-30001.1&quot;&gt;Information bottleneck: Palindromes requires quadratic time on TMs&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;sectionToc&quot;&gt;1.2 &lt;a id=&quot;QQ2-1-4&quot; href=&quot;#x1-40001.2&quot;&gt;Counting: impossibility results for non-explicit functions&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;sectionToc&quot;&gt;1.3 &lt;a id=&quot;QQ2-1-5&quot; href=&quot;#x1-50001.3&quot;&gt;Diagonalization: Enumerating machines&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;subsectionToc&quot;&gt;1.3.1 &lt;a id=&quot;QQ2-1-6&quot; href=&quot;#x1-60001.3.1&quot;&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28o%28n+%5Clog+n%29%29%3D%5Ctext+%7BTM-Time%7D%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28o%28n+%5Clog+n%29%29%3D%5Ctext+%7BTM-Time%7D%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28o%28n+%5Clog+n%29%29%3D%5Ctext+%7BTM-Time%7D%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {TM-Time}(o(n &amp;#92;log n))=&amp;#92;text {TM-Time}(n)&quot; class=&quot;latex&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;sectionToc&quot;&gt;1.4 &lt;a id=&quot;QQ2-1-7&quot; href=&quot;#x1-70001.4&quot;&gt;Circuits&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;subsectionToc&quot;&gt;1.4.1 &lt;a id=&quot;QQ2-1-8&quot; href=&quot;#x1-80001.4.1&quot;&gt;The circuit won’t fit in the universe: Non-asymptotic, cosmological results&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;sectionToc&quot;&gt;1.5 &lt;a id=&quot;QQ2-1-9&quot; href=&quot;#x1-90001.5&quot;&gt;Problems&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;verbatim-1&quot; class=&quot;verbatim&quot;&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;img data-attachment-id=&quot;1160&quot; data-permalink=&quot;https://emanueleviola.wordpress.com/2023/02/02/mathematics-of-the-impossible-computational-complexity-chapter-3-the-grand-challenge/phdcomics/&quot; data-orig-file=&quot;https://emanueleviola.files.wordpress.com/2023/02/phdcomics.png&quot; data-orig-size=&quot;600,260&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;PhDComics&quot; data-image-description=&quot;&quot; data-image-caption=&quot;&quot; data-medium-file=&quot;https://emanueleviola.files.wordpress.com/2023/02/phdcomics.png?w=300&quot; data-large-file=&quot;https://emanueleviola.files.wordpress.com/2023/02/phdcomics.png?w=600&quot; class=&quot;alignnone size-full wp-image-1160&quot; src=&quot;https://emanueleviola.files.wordpress.com/2023/02/phdcomics.png?w=640&quot; alt=&quot;PhDComics&quot; srcset=&quot;https://emanueleviola.files.wordpress.com/2023/02/phdcomics.png 600w, https://emanueleviola.files.wordpress.com/2023/02/phdcomics.png?w=150 150w, https://emanueleviola.files.wordpress.com/2023/02/phdcomics.png?w=300 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;   /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;As mentioned in Chapter ??, our ability to prove impossibility results related to efficient computation appears very limited. We can now express this situation more precisely with the models we’ve introduced since then.&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;div class=&quot;minipage&quot;&gt;It is consistent with our knowledge that any problem in a standard algorithm textbook can be solved&lt;/p&gt;
&lt;ol class=&quot;enumerate1&quot;&gt;
&lt;li id=&quot;x1-2002x1&quot; class=&quot;enumerate&quot;&gt;in Time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn^{2}&quot; class=&quot;latex&quot; /&gt; on a TM, and&lt;/li&gt;
&lt;li id=&quot;x1-2004x2&quot; class=&quot;enumerate&quot;&gt;in Time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn&quot; class=&quot;latex&quot; /&gt; on a 2-TM, and&lt;/li&gt;
&lt;li id=&quot;x1-2006x3&quot; class=&quot;enumerate&quot;&gt;by circuits of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn&quot; class=&quot;latex&quot; /&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Note that 2. implies 1. by Theorem ??.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;In this chapter we begin to present several impossibility results, covering a variety of techniques which will be used later as well. As hinted above, they appear somewhat weak. However, jumping ahead, there is a flip side to all of this:&lt;/p&gt;
&lt;ol class=&quot;enumerate1&quot;&gt;
&lt;li id=&quot;x1-2008x1&quot; class=&quot;enumerate&quot;&gt;At times, contrary to our intuition, stronger impossibility results are actually &lt;em&gt;false&lt;/em&gt;. One example appears in Chapter ??. A list will be given later.&lt;/li&gt;
&lt;li id=&quot;x1-2010x2&quot; class=&quot;enumerate&quot;&gt;Many times, the impossibility results that we can prove turn out to be, surprisingly, just “short” of proving major results. Here by “major result” I mean a result that would be phenomenal and that was in focus long before the connection was established. We will see several examples of this (section º??, section º??).&lt;/li&gt;
&lt;li id=&quot;x1-2012x3&quot; class=&quot;enumerate&quot;&gt;Yet other times, one can identify broad classes of proof techniques, and argue that impossibility results can’t be proved with them (section º??).&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Given this situation, I don’t subscribe to the general belief that stronger impossibility results are true and we just can’t prove them.&lt;/p&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;1.1 &lt;/span&gt; &lt;a id=&quot;x1-30001.1&quot;&gt;&lt;/a&gt;Information bottleneck: Palindromes requires quadratic time on TMs&lt;/h3&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Intuitively, the weakness of TMs is the bottleneck of passing information from one end of the tape to the other. We now show how to formalize this and use it show that deciding if a string is a palindrome requires &lt;em&gt;quadratic &lt;/em&gt;time on TMs, which is tight and likely matches the time in Exercise ??. The same bound can be shown for other functions; palindromes just happen to be convenient to obtain matching bounds.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-3001r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 1.1. &lt;/span&gt; &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BPalindromes%7D%5Cnot+%5Cin+%5Ctext+%7BTM-Time%7D%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BPalindromes%7D%5Cnot+%5Cin+%5Ctext+%7BTM-Time%7D%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BPalindromes%7D%5Cnot+%5Cin+%5Ctext+%7BTM-Time%7D%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {Palindromes}&amp;#92;not &amp;#92;in &amp;#92;text {TM-Time}(t(n))&quot; class=&quot;latex&quot; /&gt; for any &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%3Do%28n%5E%7B2%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%3Do%28n%5E%7B2%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29%3Do%28n%5E%7B2%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)=o(n^{2})&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;More precisely, for every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt;, an &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt;-state TM that decides if an &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;-bit input is a palindrome requires time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+cn%5E%7B2%7D%2F%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+cn%5E%7B2%7D%2F%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+cn%5E%7B2%7D%2F%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge cn^{2}/&amp;#92;log s&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;The main concept that allows us to formalize the information bottleneck mentioned above is the following.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-3002r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Definition&lt;/b&gt; 1.1. &lt;/span&gt;A &lt;em&gt;crossing sequence&lt;/em&gt; of a TM &lt;em&gt;M&lt;/em&gt; on input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; and boundary &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;, abbreviated &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;-CS, is the sequence of states that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; is transitioning to when crossing cell boundary &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; (i.e., going from Cell &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i%2B1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i%2B1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i%2B1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i+1&quot; class=&quot;latex&quot; /&gt; or vice versa) during the computation on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;The idea in the proof is very interesting. If &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; accepts inputs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; and those two inputs have the same &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;-CS for some &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;, then we can “stitch together” the computation of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; at boundary &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; to create a new input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;z&quot; class=&quot;latex&quot; /&gt; that is still accepted by &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt;. The input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;z&quot; class=&quot;latex&quot; /&gt; is formed by picking bits from &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; to the left of cell boundary &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; and bits from &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; to the right of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;:&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+z%3A%3Dx_%7B1%7Dx_%7B2%7D%5Ccdots+x_%7Bi%7Dy_%7Bi%2B1%7Dy_%7Bi%2B2%7D%5Ccdots+y_%7Bn%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+z%3A%3Dx_%7B1%7Dx_%7B2%7D%5Ccdots+x_%7Bi%7Dy_%7Bi%2B1%7Dy_%7Bi%2B2%7D%5Ccdots+y_%7Bn%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+z%3A%3Dx_%7B1%7Dx_%7B2%7D%5Ccdots+x_%7Bi%7Dy_%7Bi%2B1%7Dy_%7Bi%2B2%7D%5Ccdots+y_%7Bn%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} z:=x_{1}x_{2}&amp;#92;cdots x_{i}y_{i+1}y_{i+2}&amp;#92;cdots y_{n}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;The proof that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;z&quot; class=&quot;latex&quot; /&gt; is still accepted is left as an exercise.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Now, for many problems, input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;z&quot; class=&quot;latex&quot; /&gt; should &lt;em&gt;not&lt;/em&gt; be accepted by &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt;, and this gives a contradiction. In particular this will be be the case for palindromes. We are going to find two palindromes &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; that have the same &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;-CS for some &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;, but the corresponding &lt;img src=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=z&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;z&quot; class=&quot;latex&quot; /&gt; is not a palindrome, yet it is still accepted by &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt;. We can find these two palindromes if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; takes too little time. The basic idea is that if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; runs in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt;, because &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;-CSs for different &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; correspond to different steps of the computation, for every input there is a value of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; such that the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;-CS is short, namely has length at most &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28%7Cx%7C%29%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28%7Cx%7C%29%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28%7Cx%7C%29%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(|x|)/n&quot; class=&quot;latex&quot; /&gt;. If &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)&quot; class=&quot;latex&quot; /&gt; is much less than &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{2}&quot; class=&quot;latex&quot; /&gt;, the length of this CS is much less than &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;, from which we can conclude that the number of CSs is much less than the number of inputs, and so we can find two inputs with the same CS.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;b&gt;Proof&lt;/b&gt;. &lt;/span&gt;Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; be divisible by four, without loss of generality, and consider palindromes of the form&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+p%28x%29%3A%3Dx0%5E%7Bn%2F2%7Dx%5E%7BR%7D+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+p%28x%29%3A%3Dx0%5E%7Bn%2F2%7Dx%5E%7BR%7D+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+p%28x%29%3A%3Dx0%5E%7Bn%2F2%7Dx%5E%7BR%7D+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} p(x):=x0^{n/2}x^{R} &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%2F4%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%2F4%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%2F4%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{n/4}&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%5E%7BR%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%5E%7BR%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%5E%7BR%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x^{R}&quot; class=&quot;latex&quot; /&gt; is the reverse of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Assume there are &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%5Cne+y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%5Cne+y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%5Cne+y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&amp;#92;ne y&quot; class=&quot;latex&quot; /&gt; in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%2F4%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%2F4%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7Bn%2F4%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{n/4}&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; in the middle part, i.e., &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%2F4%5Cle+i%5Cle+3n%2F4-1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%2F4%5Cle+i%5Cle+3n%2F4-1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%2F4%5Cle+i%5Cle+3n%2F4-1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n/4&amp;#92;le i&amp;#92;le 3n/4-1&quot; class=&quot;latex&quot; /&gt;, so that the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;-CS of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p(x)&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p%28y%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p%28y%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p%28y%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p(y)&quot; class=&quot;latex&quot; /&gt; is the same. Then we can define &lt;img src=&quot;https://s0.wp.com/latex.php?latex=z%3A%3Dx0%5E%7Bn%2F2%7Dy%5E%7BR%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=z%3A%3Dx0%5E%7Bn%2F2%7Dy%5E%7BR%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=z%3A%3Dx0%5E%7Bn%2F2%7Dy%5E%7BR%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;z:=x0^{n/2}y^{R}&quot; class=&quot;latex&quot; /&gt; which is not a palindrome but is still accepted by &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt;, concluding the proof.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;There remains to prove that the assumption of Theorem &lt;a href=&quot;#x1-3001r1&quot;&gt;1.1&lt;!--tex4ht:ref: thm:TM-pal-requires-quadratic --&gt;&lt;/a&gt; implies the assumption in the previous paragraph. Suppose &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; runs in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt;. Since crossing sequences at different boundaries correspond to different steps of the computation, for every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%2F4%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%2F4%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%2F4%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{n/4}&quot; class=&quot;latex&quot; /&gt; there is a value of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; in the middle part such that the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;-CS of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p(x)&quot; class=&quot;latex&quot; /&gt; has length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+ct%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+ct%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+ct%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le ct/n&quot; class=&quot;latex&quot; /&gt;. This implies that there is an &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; in the middle s.t. there are &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c2%5E%7Bn%2F4%7D%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c2%5E%7Bn%2F4%7D%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+c2%5E%7Bn%2F4%7D%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge c2^{n/4}/n&quot; class=&quot;latex&quot; /&gt; inputs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; for which the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;-CS of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; has length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+ct%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+ct%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+ct%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le ct/n&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;For fixed &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;, the number of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;-CS of length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+%5Cell+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+%5Cell+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+%5Cell+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le &amp;#92;ell &quot; class=&quot;latex&quot; /&gt; is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+%28s%2B1%29%5E%7B%5Cell+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+%28s%2B1%29%5E%7B%5Cell+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+%28s%2B1%29%5E%7B%5Cell+%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le (s+1)^{&amp;#92;ell }&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Hence there are &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%5Cne+y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%5Cne+y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%5Cne+y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&amp;#92;ne y&quot; class=&quot;latex&quot; /&gt; for which &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p(x)&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=p%28y%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=p%28y%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=p%28y%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;p(y)&quot; class=&quot;latex&quot; /&gt; have the same &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;-CS whenever &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c2%5E%7Bn%2F4%7D%2Fn%5Cge+%28s%2B1%29%5E%7Bct%2Fn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c2%5E%7Bn%2F4%7D%2Fn%5Cge+%28s%2B1%29%5E%7Bct%2Fn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c2%5E%7Bn%2F4%7D%2Fn%5Cge+%28s%2B1%29%5E%7Bct%2Fn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c2^{n/4}/n&amp;#92;ge (s+1)^{ct/n}&quot; class=&quot;latex&quot; /&gt;. Taking logs one gets &lt;img src=&quot;https://s0.wp.com/latex.php?latex=ct%5Clog+%28s%29%2Fn%5Cle+cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=ct%5Clog+%28s%29%2Fn%5Cle+cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=ct%5Clog+%28s%29%2Fn%5Cle+cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;ct&amp;#92;log (s)/n&amp;#92;le cn&quot; class=&quot;latex&quot; /&gt;. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-3003r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 1.1. &lt;/span&gt;For every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; describe an &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt;-state TM deciding palindromes in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn%5E%7B2%7D%2F%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn%5E%7B2%7D%2F%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn%5E%7B2%7D%2F%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn^{2}/&amp;#92;log s&quot; class=&quot;latex&quot; /&gt; (matching Theorem &lt;a href=&quot;#x1-3001r1&quot;&gt;1.1&lt;!--tex4ht:ref: thm:TM-pal-requires-quadratic --&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-3004r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 1.2. &lt;/span&gt;Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%3A%3D%5C%7Bxx%3Ax%5Cin+%5C%7B0%2C1%5C%7D+%5E%7B%2A%7D%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%3A%3D%5C%7Bxx%3Ax%5Cin+%5C%7B0%2C1%5C%7D+%5E%7B%2A%7D%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%3A%3D%5C%7Bxx%3Ax%5Cin+%5C%7B0%2C1%5C%7D+%5E%7B%2A%7D%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L:=&amp;#92;{xx:x&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{*}&amp;#92;}&quot; class=&quot;latex&quot; /&gt;. Show &lt;img src=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BTM-Time%5Censuremath+%7B%28cn%5E%7B2%7D%29%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BTM-Time%5Censuremath+%7B%28cn%5E%7B2%7D%29%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=L%5Cin+%5Ctext+%7BTM-Time%5Censuremath+%7B%28cn%5E%7B2%7D%29%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;L&amp;#92;in &amp;#92;text {TM-Time&amp;#92;ensuremath {(cn^{2})}}&quot; class=&quot;latex&quot; /&gt;, and prove this is tight up to constants.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;One may be tempted to think that it is not hard to prove stronger bounds for similar functions. In fact as mentioned above this has resisted all attempts!&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;1.2 &lt;/span&gt; &lt;a id=&quot;x1-40001.2&quot;&gt;&lt;/a&gt;Counting: impossibility results for non-explicit functions&lt;/h3&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Proving the &lt;em&gt;existence&lt;/em&gt; of hard functions is simple: Just count. If there are more functions than efficient machines, some function is not efficiently computable. This is applicable to any model; next we state it for TMs for concreteness. Later we will state it for circuits.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-4001r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 1.2. &lt;/span&gt;There exists a function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f:&amp;#92;{0,1&amp;#92;} ^{n}&amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; that cannot be computed by a TM with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; states unless &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cs%5Clog+s%5Cge+2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cs%5Clog+s%5Cge+2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cs%5Clog+s%5Cge+2%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cs&amp;#92;log s&amp;#92;ge 2^{n}&quot; class=&quot;latex&quot; /&gt;, regardless of time.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;b&gt;Proof&lt;/b&gt;. &lt;/span&gt;The number of TMs with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt; states is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+s%7B%7D%5E%7Bcs%7D%2C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+s%7B%7D%5E%7Bcs%7D%2C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+s%7B%7D%5E%7Bcs%7D%2C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le s{}^{cs},&quot; class=&quot;latex&quot; /&gt; and each TM computes at most one function (it may compute none, if it does not stop). The number of functions on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; bits is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=2%5E%7B2%5E%7Bn%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=2%5E%7B2%5E%7Bn%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=2%5E%7B2%5E%7Bn%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;2^{2^{n}}&quot; class=&quot;latex&quot; /&gt;. Hence if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D%3Ecs%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D%3Ecs%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=2%5E%7Bn%7D%3Ecs%5Clog+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;2^{n}&amp;gt;cs&amp;#92;log s&quot; class=&quot;latex&quot; /&gt; some function cannot be computed. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Note this bound is not far from that in Exercise ??.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;It is instructive to present this basic result as an application of the probabilistic method:&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;b&gt;Proof&lt;/b&gt;. &lt;/span&gt;Let us pick &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; uniformly at random. We want to show that&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7Bf%7D%5B%5Cexists+%5Ctext+%7B+an+%7Ds%5Ctext+%7B-state+TM+%7DM%5Ctext+%7B+such+that+%7DM%28x%29%3Df%28x%29%5Ctext+%7B+for+every+%7Dx%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5D%3C1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7Bf%7D%5B%5Cexists+%5Ctext+%7B+an+%7Ds%5Ctext+%7B-state+TM+%7DM%5Ctext+%7B+such+that+%7DM%28x%29%3Df%28x%29%5Ctext+%7B+for+every+%7Dx%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5D%3C1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cmathbb+%7BP%7D_%7Bf%7D%5B%5Cexists+%5Ctext+%7B+an+%7Ds%5Ctext+%7B-state+TM+%7DM%5Ctext+%7B+such+that+%7DM%28x%29%3Df%28x%29%5Ctext+%7B+for+every+%7Dx%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5D%3C1.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;mathbb {P}_{f}[&amp;#92;exists &amp;#92;text { an }s&amp;#92;text {-state TM }M&amp;#92;text { such that }M(x)=f(x)&amp;#92;text { for every }x&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{n}]&amp;lt;1. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p&gt;Indeed, if the probability is less than &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt; than some function exists that cannot be computed. By a union bound we can say that this probability is&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cle+%5Csum+_%7BM%7D%5Cmathbb+%7BP%7D_%7Bf%7D%5BM%28x%29%3Df%28x%29%5Ctext+%7B+for+every+%7Dx%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5D%2C+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cle+%5Csum+_%7BM%7D%5Cmathbb+%7BP%7D_%7Bf%7D%5BM%28x%29%3Df%28x%29%5Ctext+%7B+for+every+%7Dx%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5D%2C+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cle+%5Csum+_%7BM%7D%5Cmathbb+%7BP%7D_%7Bf%7D%5BM%28x%29%3Df%28x%29%5Ctext+%7B+for+every+%7Dx%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5D%2C+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;le &amp;#92;sum _{M}&amp;#92;mathbb {P}_{f}[M(x)=f(x)&amp;#92;text { for every }x&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{n}], &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p&gt;where the sum is over all &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt;-state machines. Each probability in the sum is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%281%2F2%29%5E%7B2%5E%7Bn%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%281%2F2%29%5E%7B2%5E%7Bn%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%281%2F2%29%5E%7B2%5E%7Bn%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(1/2)^{2^{n}}&quot; class=&quot;latex&quot; /&gt;, since &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; is fixed. The number of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt;-state machines is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+s%5E%7Bcs%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+s%5E%7Bcs%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+s%5E%7Bcs%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le s^{cs}&quot; class=&quot;latex&quot; /&gt;. So the sum is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+s%5E%7Bcs%7D%281%2F2%29%5E%7B2%5E%7Bn%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+s%5E%7Bcs%7D%281%2F2%29%5E%7B2%5E%7Bn%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+s%5E%7Bcs%7D%281%2F2%29%5E%7B2%5E%7Bn%7D%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le s^{cs}(1/2)^{2^{n}}&quot; class=&quot;latex&quot; /&gt;, and we can conclude as before taking logs. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;1.3 &lt;/span&gt; &lt;a id=&quot;x1-50001.3&quot;&gt;&lt;/a&gt;Diagonalization: Enumerating machines&lt;/h3&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Can you compute more if you have more time? For example, can you write a program that runs in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{2}&quot; class=&quot;latex&quot; /&gt; and computes something that cannot be computed in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B1.5%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B1.5%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7B1.5%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{1.5}&quot; class=&quot;latex&quot; /&gt;? The answer is yes for trivial reasons if we allow for non-boolean functions.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-5001r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 1.3. &lt;/span&gt;Give a function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D%5E%2A+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D%5E%2A+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D%5E%2A+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f:&amp;#92;{0,1&amp;#92;}^* &amp;#92;to &amp;#92;{0,1&amp;#92;}^* &quot; class=&quot;latex&quot; /&gt; in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28n%5E%7B2%7D%29%5Csetminus+%5Ctext+%7BTime%7D%28n%5E%7B1.5%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28n%5E%7B2%7D%29%5Csetminus+%5Ctext+%7BTime%7D%28n%5E%7B1.5%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28n%5E%7B2%7D%29%5Csetminus+%5Ctext+%7BTime%7D%28n%5E%7B1.5%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {Time}(n^{2})&amp;#92;setminus &amp;#92;text {Time}(n^{1.5})&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;The answer is more interesting if the functions are boolean. Such results are known as &lt;em&gt;time hierarchies&lt;/em&gt;, and a generic technique for proving them is &lt;em&gt;diagonalization, &lt;/em&gt;applicable to any model.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;We first illustrate the result in the simpler case of partial functions, which contains the main ideas. Later we discuss total functions.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-5002r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 1.3. &lt;/span&gt;There is a partial function in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {TM-Time}(t(n))&quot; class=&quot;latex&quot; /&gt; such that any TM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; computing it runs in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c_%7BM%7Dt%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+c_%7BM%7Dt%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+c_%7BM%7Dt%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge c_{M}t(n)&quot; class=&quot;latex&quot; /&gt;, for any &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%3D%5Comega+%281%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%3D%5Comega+%281%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29%3D%5Comega+%281%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)=&amp;#92;omega (1)&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;In other words, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28t%28n%29%29%5Csupsetneq+%5Ctext+%7BTime%7D%28o%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28t%28n%29%29%5Csupsetneq+%5Ctext+%7BTime%7D%28o%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTime%7D%28t%28n%29%29%5Csupsetneq+%5Ctext+%7BTime%7D%28o%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {Time}(t(n))&amp;#92;supsetneq &amp;#92;text {Time}(o(t(n))&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;b&gt;Proof&lt;/b&gt;. &lt;/span&gt;Consider the TM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; that on input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%3D%28M%2C1%5E%7Bn-%7CM%7C%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%3D%28M%2C1%5E%7Bn-%7CM%7C%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%3D%28M%2C1%5E%7Bn-%7CM%7C%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x=(M,1^{n-|M|})&quot; class=&quot;latex&quot; /&gt; of length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; runs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; until it stops and then complements the answer. (We can use a simple encoding of these pairs, for example every even-position bit of the description of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; is a &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt;.)&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Now define &lt;img src=&quot;https://s0.wp.com/latex.php?latex=X&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=X&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=X&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;X&quot; class=&quot;latex&quot; /&gt; to be the subset of pairs s.t. &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; runs in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+t%28n%29%2F%7CM%7C%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+t%28n%29%2F%7CM%7C%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+t%28n%29%2F%7CM%7C%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le t(n)/|M|^{c}&quot; class=&quot;latex&quot; /&gt; on inputs of length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;, and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7CM%7C%5E%7Bc%7D%5Cle+t%28n%29%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7CM%7C%5E%7Bc%7D%5Cle+t%28n%29%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7CM%7C%5E%7Bc%7D%5Cle+t%28n%29%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|M|^{c}&amp;#92;le t(n)/2&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;On these inputs, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; runs in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7CM%7C%5E%7Bc%7D%2B%7CM%7C%5E%7Bc%7D%5Ccdot+t%28n%29%2F%7CM%7C%5E%7Bc%7D%5Cle+t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7CM%7C%5E%7Bc%7D%2B%7CM%7C%5E%7Bc%7D%5Ccdot+t%28n%29%2F%7CM%7C%5E%7Bc%7D%5Cle+t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7CM%7C%5E%7Bc%7D%2B%7CM%7C%5E%7Bc%7D%5Ccdot+t%28n%29%2F%7CM%7C%5E%7Bc%7D%5Cle+t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|M|^{c}+|M|^{c}&amp;#92;cdot t(n)/|M|^{c}&amp;#92;le t(n)&quot; class=&quot;latex&quot; /&gt;, as desired. To accomplish this, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; can begin by making a copy of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7CM%7C%5E%7Bc%7D%5Cle+t%28n%29%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7CM%7C%5E%7Bc%7D%5Cle+t%28n%29%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7CM%7C%5E%7Bc%7D%5Cle+t%28n%29%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|M|^{c}&amp;#92;le t(n)/2&quot; class=&quot;latex&quot; /&gt;. Then every step of the computation of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; can be simulated by &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7CM%7C%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7CM%7C%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7CM%7C%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|M|^{c}&quot; class=&quot;latex&quot; /&gt; steps, always keeping the description of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; to the left of the head.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Now suppose &lt;img src=&quot;https://s0.wp.com/latex.php?latex=N&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=N&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=N&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;N&quot; class=&quot;latex&quot; /&gt; computes the same function as &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%2F%7CN%7C%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%2F%7CN%7C%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29%2F%7CN%7C%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)/|N|^{c}&quot; class=&quot;latex&quot; /&gt;. Note that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%3A%3D%28N%2C1%5E%7Bn-%7CN%7C%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%3A%3D%28N%2C1%5E%7Bn-%7CN%7C%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%3A%3D%28N%2C1%5E%7Bn-%7CN%7C%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x:=(N,1^{n-|N|})&quot; class=&quot;latex&quot; /&gt; falls in the domain &lt;img src=&quot;https://s0.wp.com/latex.php?latex=X&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=X&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=X&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;X&quot; class=&quot;latex&quot; /&gt; of the function, for &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; sufficiently large, using that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%3D%5Comega+%281%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%3D%5Comega+%281%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29%3D%5Comega+%281%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)=&amp;#92;omega (1)&quot; class=&quot;latex&quot; /&gt;. Now consider running &lt;img src=&quot;https://s0.wp.com/latex.php?latex=N&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=N&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=N&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;N&quot; class=&quot;latex&quot; /&gt; on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;. We have &lt;img src=&quot;https://s0.wp.com/latex.php?latex=N%28x%29%3DH%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=N%28x%29%3DH%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=N%28x%29%3DH%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;N(x)=H(x)&quot; class=&quot;latex&quot; /&gt; by supposition, but &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H(x)&quot; class=&quot;latex&quot; /&gt; is the complement of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=N%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=N%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=N%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;N(x)&quot; class=&quot;latex&quot; /&gt;, contradiction. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;This proof is somewhat unsatisfactory; in particular we have no control on the running time of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; on inputs not in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=X&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=X&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=X&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;X&quot; class=&quot;latex&quot; /&gt;. It is desirable to have a version of this fundamental result for total functions. Such a version is stated next. It requires additional assumptions on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; and a larger gap between the running times. Perhaps surprisingly, as we shall discuss, both requirements are essential.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-5003r4&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 1.4. &lt;/span&gt; Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29%5Cge+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)&amp;#92;ge n&quot; class=&quot;latex&quot; /&gt; be a function. Suppose that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%28x%29%3A%3Dt%28%7Cx%7C%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%28x%29%3A%3Dt%28%7Cx%7C%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%28x%29%3A%3Dt%28%7Cx%7C%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f(x):=t(|x|)&quot; class=&quot;latex&quot; /&gt; is in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28t%28n%29%2F%5Clog+%5E%7Bc%7Dn%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28t%28n%29%2F%5Clog+%5E%7Bc%7Dn%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28t%28n%29%2F%5Clog+%5E%7Bc%7Dn%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {TM-Time}(t(n)/&amp;#92;log ^{c}n)&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;There is a total function in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28ct%28n%29%5Clog+t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28ct%28n%29%5Clog+t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28ct%28n%29%5Clog+t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {TM-Time}(ct(n)&amp;#92;log t(n))&quot; class=&quot;latex&quot; /&gt; that cannot be computed by any TM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7Dt%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7Dt%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7BM%7Dt%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{M}t(n)&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;The assumption about &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; is satisfied by all standard functions, including all those in this book. (For example, take &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%3A%3Dn%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%3A%3Dn%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29%3A%3Dn%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n):=n^{2}&quot; class=&quot;latex&quot; /&gt;. The corresponding &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; is then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7Cx%7C%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7Cx%7C%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7Cx%7C%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|x|^{2}&quot; class=&quot;latex&quot; /&gt;. To compute &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; on input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; bits we can first compute &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7Cx%7C%3Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7Cx%7C%3Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7Cx%7C%3Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|x|=n&quot; class=&quot;latex&quot; /&gt; in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn&amp;#92;log n&quot; class=&quot;latex&quot; /&gt; (Exercise ??). This is a number of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=b%3A%3D%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=b%3A%3D%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=b%3A%3D%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;b:=&amp;#92;log n&quot; class=&quot;latex&quot; /&gt; bits. We can then square this number in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=b%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=b%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=b%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;b^{c}&quot; class=&quot;latex&quot; /&gt;. Note that the time to compute &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f(x)&quot; class=&quot;latex&quot; /&gt; is dominated by the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn&amp;#92;log n&quot; class=&quot;latex&quot; /&gt; term coming from computing &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;|x|&quot; class=&quot;latex&quot; /&gt;, which does not depend on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; and is much less than the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B2%7D%2F%5Clog+%5E%7Bc%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B2%7D%2F%5Clog+%5E%7Bc%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7B2%7D%2F%5Clog+%5E%7Bc%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{2}/&amp;#92;log ^{c}n&quot; class=&quot;latex&quot; /&gt; in the assumption.) The assumption cannot be removed altogether because there exist pathological functions &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&quot; class=&quot;latex&quot; /&gt; for which the result is false.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;The proof is similar to that of Theorem &lt;a href=&quot;#x1-5002r3&quot;&gt;1.3&lt;!--tex4ht:ref: thm:time-hierarchy-TM-Time-partial --&gt;&lt;/a&gt;. However, to make the function total we need to deal with arbitrary machines, which may not run in the desired time or even stop at all. The solution is to clock &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; in a manner similar to the proof of the universal machine, Lemma ??.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Also, we define a slightly different language to give a stronger result – a unary language – and to avoid some minor technical details (the possibility that the computation of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; erases the input).&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;We define a TM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; that on input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1^{n}&quot; class=&quot;latex&quot; /&gt; obtains a description of a TM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt;, computes &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)&quot; class=&quot;latex&quot; /&gt;, and then simulates &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; on input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1^{n}&quot; class=&quot;latex&quot; /&gt; for &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)&quot; class=&quot;latex&quot; /&gt; steps in a way similar to Lemma ??, and if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; stops then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; outputs the complement of the output of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt;; and if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; does not stop then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; stops and outputs anything. Now &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; computes a function in time about &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)&quot; class=&quot;latex&quot; /&gt;. We argue that this function cannot be computed in much less time as follows. Suppose some TM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; computes the function in time somewhat less than &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)&quot; class=&quot;latex&quot; /&gt;. Then we can pick an &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1^{n}&quot; class=&quot;latex&quot; /&gt; for which &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; obtains the description of this &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt;, and the simulation always stops. Hence, for that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1^{n}&quot; class=&quot;latex&quot; /&gt; we would obtain &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M%281%5E%7Bn%7D%29%3DH%281%5E%7Bn%7D%29%3D1-M%281%5E%7Bn%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M%281%5E%7Bn%7D%29%3DH%281%5E%7Bn%7D%29%3D1-M%281%5E%7Bn%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M%281%5E%7Bn%7D%29%3DH%281%5E%7Bn%7D%29%3D1-M%281%5E%7Bn%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M(1^{n})=H(1^{n})=1-M(1^{n})&quot; class=&quot;latex&quot; /&gt;, which is a contradiction.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;However, there are interesting differences with the simulation in Lemma ??. In that lemma the universal machine &lt;img src=&quot;https://s0.wp.com/latex.php?latex=U&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=U&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=U&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;U&quot; class=&quot;latex&quot; /&gt; was clocking the steps of the machine &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; being simulated. Now instead we need to clock the steps of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=U&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=U&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=U&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;U&quot; class=&quot;latex&quot; /&gt; itself, even while &lt;img src=&quot;https://s0.wp.com/latex.php?latex=U&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=U&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=U&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;U&quot; class=&quot;latex&quot; /&gt; is parsing the description of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; to compute its transition function. This is necessary to guarantee that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; does not waste time on big TM descriptions.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Whereas in Lemma ?? the tape was arranged as&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%28x%2CM%2C%5Cunderline+%7Bi%7D%2Ct%27%2Cy%29%2C+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%28x%2CM%2C%5Cunderline+%7Bi%7D%2Ct%27%2Cy%29%2C+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%28x%2CM%2C%5Cunderline+%7Bi%7D%2Ct%27%2Cy%29%2C+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} (x,M,&amp;#92;underline {i},t&amp;#039;,y), &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;it will now be arranged as&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%28x%2CM%27%2C%5Cunderline+%7Bi%7D%2Ct%27%2CM%27%27%2Cy%29+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%28x%2CM%27%2C%5Cunderline+%7Bi%7D%2Ct%27%2CM%27%27%2Cy%29+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%28x%2CM%27%2C%5Cunderline+%7Bi%7D%2Ct%27%2CM%27%27%2Cy%29+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} (x,M&amp;#039;,&amp;#92;underline {i},t&amp;#039;,M&amp;#039;&amp;#039;,y) &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p&gt;which is parsed as follows. The description of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M%27M%27%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M%27M%27%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M%27M%27%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&amp;#039;M&amp;#039;&amp;#039;&quot; class=&quot;latex&quot; /&gt;, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; is in state &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cunderline+%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cunderline+%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cunderline+%7Bi%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;underline {i}&quot; class=&quot;latex&quot; /&gt;, the tape of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; contains &lt;img src=&quot;https://s0.wp.com/latex.php?latex=xy&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=xy&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=xy&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;xy&quot; class=&quot;latex&quot; /&gt; and the head is on the left-most symbol of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt;. The integer &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t&amp;#039;&quot; class=&quot;latex&quot; /&gt; is the counter decreased at every step&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;b&gt;Proof&lt;/b&gt;. &lt;/span&gt;Define TM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; that on input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1^{n}&quot; class=&quot;latex&quot; /&gt;:&lt;/p&gt;
&lt;ol class=&quot;enumerate1&quot;&gt;
&lt;li id=&quot;x1-5005x1&quot; class=&quot;enumerate&quot;&gt;Compute &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28n%2Ct%28n%29%2C1%5E%7Bn%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28n%2Ct%28n%29%2C1%5E%7Bn%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28n%2Ct%28n%29%2C1%5E%7Bn%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(n,t(n),1^{n})&quot; class=&quot;latex&quot; /&gt;.&lt;/li&gt;
&lt;li id=&quot;x1-5007x2&quot; class=&quot;enumerate&quot;&gt;Compute &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28M_%7Bn%7D%2Ct%28n%29%2C1%5E%7Bn%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28M_%7Bn%7D%2Ct%28n%29%2C1%5E%7Bn%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28M_%7Bn%7D%2Ct%28n%29%2C1%5E%7Bn%7D%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(M_{n},t(n),1^{n})&quot; class=&quot;latex&quot; /&gt;. Here &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M_{n}&quot; class=&quot;latex&quot; /&gt; is obtained from &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; by removing all left-most zeroes until the first &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1&quot; class=&quot;latex&quot; /&gt;. I.e., if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%3D0%5E%7Bj%7D1x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%3D0%5E%7Bj%7D1x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%3D0%5E%7Bj%7D1x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n=0^{j}1x&quot; class=&quot;latex&quot; /&gt; then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M_%7Bn%7D%3Dx&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M_%7Bn%7D%3Dx&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M_%7Bn%7D%3Dx&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M_{n}=x&quot; class=&quot;latex&quot; /&gt;. This is similar to the fact that a program does not change if you add, say, empty lines at the bottom.&lt;/li&gt;
&lt;li id=&quot;x1-5009x3&quot; class=&quot;enumerate&quot;&gt;Simulate &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M_{n}&quot; class=&quot;latex&quot; /&gt; on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1^{n}&quot; class=&quot;latex&quot; /&gt;, reducing the counter &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)&quot; class=&quot;latex&quot; /&gt; at every step, including those parsing &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M_{n}&quot; class=&quot;latex&quot; /&gt;, as explained before.&lt;/li&gt;
&lt;li id=&quot;x1-5011x4&quot; class=&quot;enumerate&quot;&gt;If &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M_%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M_{n}&quot; class=&quot;latex&quot; /&gt; stops before the counter reaches &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt;, output the complement of its output. If the counter reaches &lt;img src=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=0&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;0&quot; class=&quot;latex&quot; /&gt; stop and output anything.&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;em&gt;Running time of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;ol class=&quot;enumerate1&quot;&gt;
&lt;li id=&quot;x1-5013x1&quot; class=&quot;enumerate&quot;&gt;Computing &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; is similar to Exercise ??. By assumption &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)&quot; class=&quot;latex&quot; /&gt; is computable in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%2F%5Clog+%5E%7Bc%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%2F%5Clog+%5E%7Bc%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29%2F%5Clog+%5E%7Bc%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)/&amp;#92;log ^{c}n&quot; class=&quot;latex&quot; /&gt;. Our definition of computation allows for erasing the input, but we can keep &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; around spending at most another &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bc%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bc%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Clog+%5E%7Bc%7Dn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;log ^{c}n&quot; class=&quot;latex&quot; /&gt; factor. Thus we can compute &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28n%2Ct%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28n%2Ct%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28n%2Ct%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(n,t(n))&quot; class=&quot;latex&quot; /&gt; in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)&quot; class=&quot;latex&quot; /&gt;. Finally, in case it was erased, we can re-compute &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1^{n}&quot; class=&quot;latex&quot; /&gt; in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn%5Clog+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn&amp;#92;log n&quot; class=&quot;latex&quot; /&gt; by keeping a counter (initialized to a copy of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;).&lt;/li&gt;
&lt;li id=&quot;x1-5015x2&quot; class=&quot;enumerate&quot;&gt;This takes time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c%28n%2Bt%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c%28n%2Bt%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c%28n%2Bt%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c(n+t(n))&quot; class=&quot;latex&quot; /&gt;: simply scan the input and remove zeroes.&lt;/li&gt;
&lt;li id=&quot;x1-5017x3&quot; class=&quot;enumerate&quot;&gt;Decreasing the counter takes &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c%7Ct%28n%29%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c%7Ct%28n%29%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c%7Ct%28n%29%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c|t(n)|&quot; class=&quot;latex&quot; /&gt; steps. Hence this simulation will take &lt;img src=&quot;https://s0.wp.com/latex.php?latex=ct%28n%29%5Clog+t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=ct%28n%29%5Clog+t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=ct%28n%29%5Clog+t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;ct(n)&amp;#92;log t(n)&quot; class=&quot;latex&quot; /&gt; time.&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Overall the running time is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=ct%28n%29%5Clog+t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=ct%28n%29%5Clog+t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=ct%28n%29%5Clog+t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;ct(n)&amp;#92;log t(n)&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;em&gt;Proof that the function computed by &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; requires much time.&lt;/em&gt; Suppose some TM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; computes the same function as &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt;. Consider inputs &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1^{n}&quot; class=&quot;latex&quot; /&gt; where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%3D0%5E%7Bj%7D1M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%3D0%5E%7Bj%7D1M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%3D0%5E%7Bj%7D1M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n=0^{j}1M&quot; class=&quot;latex&quot; /&gt;. Parsing the description of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; to compute its transition function takes time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{M}&quot; class=&quot;latex&quot; /&gt;, a value that depends on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; only and not on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=j&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=j&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=j&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;j&quot; class=&quot;latex&quot; /&gt;. Hence &lt;img src=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=H&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;H&quot; class=&quot;latex&quot; /&gt; will simulate &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Clfloor+t%28n%29%2Fc_%7BM%7D%5Crfloor+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Clfloor+t%28n%29%2Fc_%7BM%7D%5Crfloor+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Clfloor+t%28n%29%2Fc_%7BM%7D%5Crfloor+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;lfloor t(n)/c_{M}&amp;#92;rfloor &quot; class=&quot;latex&quot; /&gt; steps of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt;. If &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; stops within that time (which requires &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)&quot; class=&quot;latex&quot; /&gt; to be larger than &lt;img src=&quot;https://s0.wp.com/latex.php?latex=b_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=b_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=b_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;b_{M}&quot; class=&quot;latex&quot; /&gt;, and so &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=j&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=j&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=j&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;j&quot; class=&quot;latex&quot; /&gt; sufficiently large compared to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt;) then the simulation terminates and we reach a contradiction as explained before. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;The extra &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Clog+t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Clog+t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Clog+t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;log t(n)&quot; class=&quot;latex&quot; /&gt; factor cannot be reduced because of the surprising result presented in Theorem &lt;a href=&quot;#x1-6001r5&quot;&gt;1.5&lt;!--tex4ht:ref: thm:TIMEonlogn=00003Dregular --&gt;&lt;/a&gt; showing that, on TMs, time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=o%28n%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=o%28n%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=o%28n%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;o(n&amp;#92;log n)&quot; class=&quot;latex&quot; /&gt; equals time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; for computing total functions.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;However, tighter time hierarchies hold for more powerful models, like RAMs. Also, a time hierarchy for total functions for &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPTime%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPTime%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPTime%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {BPTime}&quot; class=&quot;latex&quot; /&gt; is&amp;#8230; an open problem! But a hierarchy is known for partial functions.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-5018r4&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 1.4. &lt;/span&gt;(1) State and prove a tighter time hierarchy for Time (which recall corresponds to RAMs) for total functions. You don’t need to address simulation details, but you need to explain why a sharper separation is possible.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;(2) Explain the difficulty in extending (1) to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPTime%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPTime%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPTime%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {BPTime}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;(3) State and prove a time hierarchy for &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPTime%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPTime%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BBPTime%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {BPTime}&quot; class=&quot;latex&quot; /&gt; for partial functions.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;h4 class=&quot;subsectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;1.3.1 &lt;/span&gt; &lt;a id=&quot;x1-60001.3.1&quot;&gt;&lt;/a&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28o%28n%5Clog+n%29%29%3D%5Ctext+%7BTM-Time%7D%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28o%28n%5Clog+n%29%29%3D%5Ctext+%7BTM-Time%7D%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28o%28n%5Clog+n%29%29%3D%5Ctext+%7BTM-Time%7D%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {TM-Time}(o(n&amp;#92;log n))=&amp;#92;text {TM-Time}(n)&quot; class=&quot;latex&quot; /&gt;&lt;/h4&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;In this subsection we prove the result in the title, which we also mentioned earlier. First let us state the result formally.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-6001r5&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 1.5. &lt;/span&gt; &lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;journals/iandc/Hennie65&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;#XKobayashi1985OnTS&quot;&gt;2&lt;/a&gt;]&lt;/span&gt; Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f:&amp;#92;{0,1&amp;#92;}^* &amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; be in &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28t%28n%29%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {TM-Time}(t(n))&quot; class=&quot;latex&quot; /&gt; for a &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%3Do%28n%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%3Do%28n%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29%3Do%28n%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)=o(n&amp;#92;log n)&quot; class=&quot;latex&quot; /&gt;. Then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%5Cin+%5Ctext+%7BTM-Time%7D%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%5Cin+%5Ctext+%7BTM-Time%7D%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%5Cin+%5Ctext+%7BTM-Time%7D%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&amp;#92;in &amp;#92;text {TM-Time}(n)&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Note that time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; is barely enough to scan the input. Indeed, the corresponding machines in Theorem &lt;a href=&quot;#x1-6001r5&quot;&gt;1.5&lt;!--tex4ht:ref: thm:TIMEonlogn=00003Dregular --&gt;&lt;/a&gt; will only move the head in one direction.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;The rest of this section is devoted to proving the above theorem. Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; be a machine for &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; witnessing the assumption of the theorem. We can assume that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; stops on every input (even though our definition of time only applies to large enough inputs), possibly by adding &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le n&quot; class=&quot;latex&quot; /&gt; to the time, which does not change the assumption on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)&quot; class=&quot;latex&quot; /&gt;. The theorem now follows from the combination of the next two lemmas.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-6002r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Lemma&lt;/b&gt; 1.1. &lt;/span&gt;Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; be a TM running in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%5Cle+o%28n%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=t%28n%29%5Cle+o%28n%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=t%28n%29%5Cle+o%28n%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;t(n)&amp;#92;le o(n&amp;#92;log n)&quot; class=&quot;latex&quot; /&gt;. Then on every input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D%5E%2A+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D%5E%2A+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D%5E%2A+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&amp;#92;in &amp;#92;{0,1&amp;#92;}^* &quot; class=&quot;latex&quot; /&gt; every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;-CS with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i%5Cle+%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i%5Cle+%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i%5Cle+%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&amp;#92;le |x|&quot; class=&quot;latex&quot; /&gt; has length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le c_{M}&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;b&gt;Proof&lt;/b&gt;. &lt;/span&gt;For an integer &lt;img src=&quot;https://s0.wp.com/latex.php?latex=b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;b&quot; class=&quot;latex&quot; /&gt; let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x(b)&quot; class=&quot;latex&quot; /&gt; be a shortest input such that there exists &lt;img src=&quot;https://s0.wp.com/latex.php?latex=j%5Cin+%5C%7B0%2C1%2C%5Cldots+%2Cn%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=j%5Cin+%5C%7B0%2C1%2C%5Cldots+%2Cn%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=j%5Cin+%5C%7B0%2C1%2C%5Cldots+%2Cn%5C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;j&amp;#92;in &amp;#92;{0,1,&amp;#92;ldots ,n&amp;#92;}&quot; class=&quot;latex&quot; /&gt; for which the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=j&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=j&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=j&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;j&quot; class=&quot;latex&quot; /&gt;-CS in the computation of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x(b)&quot; class=&quot;latex&quot; /&gt; has length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge b&quot; class=&quot;latex&quot; /&gt;. Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%28b%29%3A%3D%7Cx%28b%29%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%28b%29%3A%3D%7Cx%28b%29%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%28b%29%3A%3D%7Cx%28b%29%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n(b):=|x(b)|&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-6003r5&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 1.5. &lt;/span&gt;Prove &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%28b%29%5Cto+%5Cinfty+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%28b%29%5Cto+%5Cinfty+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%28b%29%5Cto+%5Cinfty+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n(b)&amp;#92;to &amp;#92;infty &quot; class=&quot;latex&quot; /&gt; for &lt;img src=&quot;https://s0.wp.com/latex.php?latex=b%5Cto+%5Cinfty+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=b%5Cto+%5Cinfty+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=b%5Cto+%5Cinfty+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;b&amp;#92;to &amp;#92;infty &quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;There are &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%28b%29%2B1%5Cge+n%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%28b%29%2B1%5Cge+n%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%28b%29%2B1%5Cge+n%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n(b)+1&amp;#92;ge n(b)&quot; class=&quot;latex&quot; /&gt; tape boundaries within or bordering &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x(b)&quot; class=&quot;latex&quot; /&gt;. If we pick a boundary uniformly at random, the average length of a CS on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x(b)&quot; class=&quot;latex&quot; /&gt; is &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+t%28n%28b%29%29%2Fn%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+t%28n%28b%29%29%2Fn%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+t%28n%28b%29%29%2Fn%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le t(n(b))/n(b)&quot; class=&quot;latex&quot; /&gt;. Hence there are &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+n%28b%29%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+n%28b%29%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+n%28b%29%2F2&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge n(b)/2&quot; class=&quot;latex&quot; /&gt; choices for &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt; s.t. the &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;-CS on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x(b)&quot; class=&quot;latex&quot; /&gt; has length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+2t%28n%28b%29%29%2Fn%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+2t%28n%28b%29%29%2Fn%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+2t%28n%28b%29%29%2Fn%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le 2t(n(b))/n(b)&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;The number of such crossing sequences is&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cle+%28s%2B1%29%5E%7B2t%28n%28b%29%29%2Fn%28b%29%7D%3D%28s%2B1%29%5E%7Bo%28n%28b%29%5Clog+%28n%28b%29%29%2Fn%28b%29%7D%3Dn%28b%29%5E%7Bo%28%5Clog+s%29%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cle+%28s%2B1%29%5E%7B2t%28n%28b%29%29%2Fn%28b%29%7D%3D%28s%2B1%29%5E%7Bo%28n%28b%29%5Clog+%28n%28b%29%29%2Fn%28b%29%7D%3Dn%28b%29%5E%7Bo%28%5Clog+s%29%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+%5Cle+%28s%2B1%29%5E%7B2t%28n%28b%29%29%2Fn%28b%29%7D%3D%28s%2B1%29%5E%7Bo%28n%28b%29%5Clog+%28n%28b%29%29%2Fn%28b%29%7D%3Dn%28b%29%5E%7Bo%28%5Clog+s%29%7D.+%5Cend%7Baligned%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;begin{aligned} &amp;#92;le (s+1)^{2t(n(b))/n(b)}=(s+1)^{o(n(b)&amp;#92;log (n(b))/n(b)}=n(b)^{o(&amp;#92;log s)}. &amp;#92;end{aligned}&quot; class=&quot;latex&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Hence, the same crossing sequence occurs at &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+%28n%28b%29%2F2%29%2Fn%28b%29%5E%7Bo%28%5Clog+s%29%7D%5Cge+4&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+%28n%28b%29%2F2%29%2Fn%28b%29%5E%7Bo%28%5Clog+s%29%7D%5Cge+4&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+%28n%28b%29%2F2%29%2Fn%28b%29%5E%7Bo%28%5Clog+s%29%7D%5Cge+4&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge (n(b)/2)/n(b)^{o(&amp;#92;log s)}&amp;#92;ge 4&quot; class=&quot;latex&quot; /&gt; positions &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;, using that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n(b)&quot; class=&quot;latex&quot; /&gt; is large enough.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Of these four, one could be the CS of length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge b&quot; class=&quot;latex&quot; /&gt; from the definition of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%28b%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x(b)&quot; class=&quot;latex&quot; /&gt;. Of the other three, two are on the same side of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=j&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=j&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=j&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;j&quot; class=&quot;latex&quot; /&gt;. We can remove the corresponding interval of the input without removing the CS of length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge b&quot; class=&quot;latex&quot; /&gt;. Hence we obtained a shorter input with a CS of length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge b&quot; class=&quot;latex&quot; /&gt;. Contradiction. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-6004r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Lemma&lt;/b&gt; 1.2. &lt;/span&gt;Suppose &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f:&amp;#92;{0,1&amp;#92;}^* &amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; is computable by a TM such that on every input &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt;, every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&quot; class=&quot;latex&quot; /&gt;-CS with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i%5Cle+%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=i%5Cle+%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=i%5Cle+%7Cx%7C&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;i&amp;#92;le |x|&quot; class=&quot;latex&quot; /&gt; has length &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+b&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le b&quot; class=&quot;latex&quot; /&gt;. Then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; is computable in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; by a TM with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=c_%7Bb%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c_%7Bb%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c_%7Bb%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c_{b}&quot; class=&quot;latex&quot; /&gt; states that only moves the head in one direction.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-6005r6&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 1.6. &lt;/span&gt;Prove this.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;1.4 &lt;/span&gt; &lt;a id=&quot;x1-70001.4&quot;&gt;&lt;/a&gt;Circuits&lt;/h3&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;The situation for circuits is similar to that of 2-TMs, and by Theorem ?? we know that proving &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Comega+%28n%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Comega+%28n%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Comega+%28n%5Clog+n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;omega (n&amp;#92;log n)&quot; class=&quot;latex&quot; /&gt; bounds on circuits is harder than for 2-TMs. Even a bound of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn&quot; class=&quot;latex&quot; /&gt; is unknown. The following is a circuit version of Theorem &lt;a href=&quot;#x1-4001r2&quot;&gt;1.2&lt;!--tex4ht:ref: thm:TM-counting-lower-bound --&gt;&lt;/a&gt;. Again, the bound is close to what we saw in Theorem ??.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-7001r6&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 1.6. &lt;/span&gt;&lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XMR29860&quot;&gt;3&lt;/a&gt;]&lt;/span&gt; There are functions &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D+%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f:&amp;#92;{0,1&amp;#92;} ^{n}&amp;#92;to &amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt; that require circuits of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+%281-o%281%29%292%5E%7Bn%7D%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+%281-o%281%29%292%5E%7Bn%7D%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+%281-o%281%29%292%5E%7Bn%7D%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge (1-o(1))2^{n}/n&quot; class=&quot;latex&quot; /&gt;, for every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;One can prove a hierarchy for circuit size, by combining Theorem &lt;a href=&quot;#x1-7001r6&quot;&gt;1.6&lt;!--tex4ht:ref: thm:shannon-hard-function --&gt;&lt;/a&gt; and Theorem ??. As stated, the results give that circuits of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cs&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cs&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cs&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cs&quot; class=&quot;latex&quot; /&gt; compute more functions than those of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt;. In fact, the “&lt;img src=&quot;https://s0.wp.com/latex.php?latex=o%281%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=o%281%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=o%281%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;o(1)&quot; class=&quot;latex&quot; /&gt;” in the theorems is small, so one can prove a sharper result. But a stronger and more enjoyable argument exists.&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-7002r7&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 1.7. &lt;/span&gt;[Hierarchy for circuit size] For every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%5Cle+c2%5E%7Bn%7D%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%5Cle+c2%5E%7Bn%7D%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%5Cle+c2%5E%7Bn%7D%2Fn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&amp;#92;le c2^{n}/n&quot; class=&quot;latex&quot; /&gt; there is a function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%3A%5Czonzo+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%3A%5Czonzo+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%3A%5Czonzo+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f:&amp;#92;zonzo &quot; class=&quot;latex&quot; /&gt; that can be computed by circuits of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s%2Bcn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s%2Bcn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s%2Bcn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s+cn&quot; class=&quot;latex&quot; /&gt; but not by circuits of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;s&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;div class=&quot;proof&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;b&gt;Proof&lt;/b&gt;. &lt;/span&gt;Consider a path from the all-zero function to a function which requires circuits of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cge+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cge+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cge+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;ge s&quot; class=&quot;latex&quot; /&gt;, guaranteed to exist by Theorem &lt;a href=&quot;#x1-7001r6&quot;&gt;1.6&lt;!--tex4ht:ref: thm:shannon-hard-function --&gt;&lt;/a&gt;, changing the output of the function on one input at each step of the path. Let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=h&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=h&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=h&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;h&quot; class=&quot;latex&quot; /&gt; be the first function that requires size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%3Es&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%3Es&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%3Es&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;gt;s&quot; class=&quot;latex&quot; /&gt;, and let &lt;img src=&quot;https://s0.wp.com/latex.php?latex=h%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=h%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=h%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;h&amp;#039;&quot; class=&quot;latex&quot; /&gt; be the function right before that in the path. Note that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=h%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=h%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=h%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;h&amp;#039;&quot; class=&quot;latex&quot; /&gt; has circuits of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cle+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cle+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cle+s&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;le s&quot; class=&quot;latex&quot; /&gt;, and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=h&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=h&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=h&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;h&quot; class=&quot;latex&quot; /&gt; can be computed from &lt;img src=&quot;https://s0.wp.com/latex.php?latex=h%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=h%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=h%27&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;h&amp;#039;&quot; class=&quot;latex&quot; /&gt; by changing the value on a single input. The latter can be implemented by circuits of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn&quot; class=&quot;latex&quot; /&gt;. &lt;b&gt;QED&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-7003r7&quot;&gt;&lt;/a&gt; &lt;b&gt;Exercise&lt;/b&gt; 1.7. &lt;/span&gt;Prove a stronger hierarchy result for alternating circuits, where the “&lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn&quot; class=&quot;latex&quot; /&gt;” in Theorem &lt;a href=&quot;#x1-7002r7&quot;&gt;1.7&lt;!--tex4ht:ref: thm:hierarchy-circuits-cn --&gt;&lt;/a&gt; is replaced with “&lt;img src=&quot;https://s0.wp.com/latex.php?latex=c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c&quot; class=&quot;latex&quot; /&gt;.”&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;In fact, this improvement is possible even for (non aternating) circuits, see Problem &lt;a href=&quot;#x1-9002r2&quot;&gt;1.2&lt;!--tex4ht:ref: prob:hierarchy-circuits-c --&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;h4 class=&quot;subsectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;1.4.1 &lt;/span&gt; &lt;a id=&quot;x1-80001.4.1&quot;&gt;&lt;/a&gt;The circuit won’t fit in the universe: Non-asymptotic, cosmological results&lt;/h4&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Most of the results in this book are &lt;em&gt;asymptotic&lt;/em&gt;, i.e., we do not explicitly work out the constants because they become irrelevant for larger and larger input lengths. As stated, these results don’t say anything for inputs of a fixed length. For example, any function on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=10%5E%7B100%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=10%5E%7B100%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=10%5E%7B100%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;10^{100}&quot; class=&quot;latex&quot; /&gt; bits is in Time&lt;img src=&quot;https://s0.wp.com/latex.php?latex=%28c%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%28c%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%28c%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;(c)&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;However, it is important to note that all the proofs are &lt;em&gt;constructive &lt;/em&gt;and one can work out the constants, and produce non-asymptotic results. We state next one representative example when this was done. It is about a problem in logic, an area which often produces very hard problems.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;On an alphabet of size &lt;img src=&quot;https://s0.wp.com/latex.php?latex=63&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=63&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=63&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;63&quot; class=&quot;latex&quot; /&gt;, the language used to write formulas includes first-order variables that range over &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathbb {N}&quot; class=&quot;latex&quot; /&gt;, second-order variables that range over finite subsets of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cmathbb+%7BN%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;mathbb {N}&quot; class=&quot;latex&quot; /&gt;, the predicates “&lt;img src=&quot;https://s0.wp.com/latex.php?latex=y%3Dx%2B1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y%3Dx%2B1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y%3Dx%2B1&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y=x+1&quot; class=&quot;latex&quot; /&gt;” and “&lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%5Cin+S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&amp;#92;in S&quot; class=&quot;latex&quot; /&gt;” where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=y&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;y&quot; class=&quot;latex&quot; /&gt; denote first-order variables and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=S&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;S&quot; class=&quot;latex&quot; /&gt; denotes a set variable, and standard quantifiers, connectives, constants, binary relation symbols on integers, and set equality. For example one can write things like “every finite set has a maximum:” &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cforall+S%5Cexists+x%5Cin+S%5Cforall+y%5Cin+S%2Cy%5Cle+x.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Cforall+S%5Cexists+x%5Cin+S%5Cforall+y%5Cin+S%2Cy%5Cle+x.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Cforall+S%5Cexists+x%5Cin+S%5Cforall+y%5Cin+S%2Cy%5Cle+x.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;forall S&amp;#92;exists x&amp;#92;in S&amp;#92;forall y&amp;#92;in S,y&amp;#92;le x.&quot; class=&quot;latex&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-8001r8&quot;&gt;&lt;/a&gt; &lt;b&gt;Theorem&lt;/b&gt; 1.8. &lt;/span&gt;&lt;span class=&quot;cite&quot;&gt;[&lt;a href=&quot;#XMR2145856&quot;&gt;4&lt;/a&gt;]&lt;/span&gt; To decide the truth of logical formulas of length at most &lt;img src=&quot;https://s0.wp.com/latex.php?latex=610&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=610&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=610&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;610&quot; class=&quot;latex&quot; /&gt; in this language requires a circuit containing at least &lt;img src=&quot;https://s0.wp.com/latex.php?latex=10%5E%7B125%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=10%5E%7B125%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=10%5E%7B125%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;10^{125}&quot; class=&quot;latex&quot; /&gt; gates. So even if each gate were the size of a proton, the circuit would not fit in the known universe.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Their result applies even to randomized circuits with error &lt;img src=&quot;https://s0.wp.com/latex.php?latex=1%2F3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=1%2F3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=1%2F3&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;1/3&quot; class=&quot;latex&quot; /&gt;, if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=610&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=610&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=610&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;610&quot; class=&quot;latex&quot; /&gt; is replaced with &lt;img src=&quot;https://s0.wp.com/latex.php?latex=614&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=614&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=614&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;614&quot; class=&quot;latex&quot; /&gt;. (We can define randomized circuits analogously to BPTime.)&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;h3 class=&quot;sectionHead&quot;&gt;&lt;span class=&quot;titlemark&quot;&gt;1.5 &lt;/span&gt; &lt;a id=&quot;x1-90001.5&quot;&gt;&lt;/a&gt;Problems&lt;/h3&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-9001r1&quot;&gt;&lt;/a&gt; &lt;b&gt;Problem&lt;/b&gt; 1.1. &lt;/span&gt;Hierarchy Theorem &lt;a href=&quot;#x1-5003r4&quot;&gt;1.4&lt;!--tex4ht:ref: thm:TIME-hierarchy-TM --&gt;&lt;/a&gt; only gives a function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; that cannot be computed fast on &lt;em&gt;all &lt;/em&gt;large enough input lengths: it is consistent with the theorem that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt; can be computed fast on infinitely many input lengths.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Give a function &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D%5E%2A+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D%5E%2A+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5E%2A+%5Cto+%5C%7B0%2C1%5C%7D%5E%2A+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f:&amp;#92;{0,1&amp;#92;}^* &amp;#92;to &amp;#92;{0,1&amp;#92;}^* &quot; class=&quot;latex&quot; /&gt; mapping &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&quot; class=&quot;latex&quot; /&gt; to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7B%5Clog+%5Clog+%5Clog+%7Cx%7C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7B%5Clog+%5Clog+%5Clog+%7Cx%7C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+%5E%7B%5Clog+%5Clog+%5Clog+%7Cx%7C%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} ^{&amp;#92;log &amp;#92;log &amp;#92;log |x|}&quot; class=&quot;latex&quot; /&gt; that is computable in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7Bc%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{c}&quot; class=&quot;latex&quot; /&gt; but such that for any TM &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M&quot; class=&quot;latex&quot; /&gt; running in time &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5E%7B2%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n^{2}&quot; class=&quot;latex&quot; /&gt; the following holds. For every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=n%5Cge+c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=n%5Cge+c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=n%5Cge+c_%7BM%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;n&amp;#92;ge c_{M}&quot; class=&quot;latex&quot; /&gt; and every &lt;img src=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=x%5Cin+%5C%7B0%2C1%5C%7D+%5E%7Bn%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;x&amp;#92;in &amp;#92;{0,1&amp;#92;} ^{n}&quot; class=&quot;latex&quot; /&gt; such that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=M%28x%29%5Cne+f%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=M%28x%29%5Cne+f%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=M%28x%29%5Cne+f%28x%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;M(x)&amp;#92;ne f(x)&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;Hint: Note the range of &lt;img src=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=f&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;f&quot; class=&quot;latex&quot; /&gt;. Can this result hold as stated with range &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%2C1%5C%7D+&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0,1&amp;#92;} &quot; class=&quot;latex&quot; /&gt;?&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-9002r2&quot;&gt;&lt;/a&gt; &lt;b&gt;Problem&lt;/b&gt; 1.2. &lt;/span&gt;Replace “&lt;img src=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=cn&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;cn&quot; class=&quot;latex&quot; /&gt;” in Theorem &lt;a href=&quot;#x1-7002r7&quot;&gt;1.7&lt;!--tex4ht:ref: thm:hierarchy-circuits-cn --&gt;&lt;/a&gt; with “&lt;img src=&quot;https://s0.wp.com/latex.php?latex=c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=c&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;c&quot; class=&quot;latex&quot; /&gt;.”&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-9003r3&quot;&gt;&lt;/a&gt; &lt;b&gt;Problem&lt;/b&gt; 1.3. &lt;/span&gt;Prove that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%5E%7Bi%7D1%5E%7Bi%7D%3Ai%5Cge+0%5C%7D%5Cin+%5Ctext+%7BTM-Time%5Censuremath+%7B%28cn%5Clog+n%29%5Csetminus+%5Ctext+%7BTM-Time%7D%28n%29%7D.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5C%7B0%5E%7Bi%7D1%5E%7Bi%7D%3Ai%5Cge+0%5C%7D%5Cin+%5Ctext+%7BTM-Time%5Censuremath+%7B%28cn%5Clog+n%29%5Csetminus+%5Ctext+%7BTM-Time%7D%28n%29%7D.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5C%7B0%5E%7Bi%7D1%5E%7Bi%7D%3Ai%5Cge+0%5C%7D%5Cin+%5Ctext+%7BTM-Time%5Censuremath+%7B%28cn%5Clog+n%29%5Csetminus+%5Ctext+%7BTM-Time%7D%28n%29%7D.%7D&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;{0^{i}1^{i}:i&amp;#92;ge 0&amp;#92;}&amp;#92;in &amp;#92;text {TM-Time&amp;#92;ensuremath {(cn&amp;#92;log n)&amp;#92;setminus &amp;#92;text {TM-Time}(n)}.}&quot; class=&quot;latex&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;This shows Theorem &lt;a href=&quot;#x1-6001r5&quot;&gt;1.5&lt;!--tex4ht:ref: thm:TIMEonlogn=00003Dregular --&gt;&lt;/a&gt; is tight, and gives an explicit problem witnessing the time-hierarchy separation in Theorem &lt;a href=&quot;#x1-5003r4&quot;&gt;1.4&lt;!--tex4ht:ref: thm:TIME-hierarchy-TM --&gt;&lt;/a&gt;, for a specific time bound. For the negative result, don’t use pumping lemmas or other characterization results not covered in this book.&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;newtheorem&quot;&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;&lt;span class=&quot;head&quot;&gt; &lt;a id=&quot;x1-9004r4&quot;&gt;&lt;/a&gt; &lt;b&gt;Problem&lt;/b&gt; 1.4. &lt;/span&gt;The following argument contradicts Theorem &lt;a href=&quot;#x1-5003r4&quot;&gt;1.4&lt;!--tex4ht:ref: thm:TIME-hierarchy-TM --&gt;&lt;/a&gt;; what is wrong with it?&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;“By Theorem &lt;a href=&quot;#x1-6001r5&quot;&gt;1.5&lt;!--tex4ht:ref: thm:TIMEonlogn=00003Dregular --&gt;&lt;/a&gt;, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28n%5Clog+%5E%7B0.9%7Dn%29%3D%5Ctext+%7BTM-Time%7D%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28n%5Clog+%5E%7B0.9%7Dn%29%3D%5Ctext+%7BTM-Time%7D%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28n%5Clog+%5E%7B0.9%7Dn%29%3D%5Ctext+%7BTM-Time%7D%28n%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {TM-Time}(n&amp;#92;log ^{0.9}n)=&amp;#92;text {TM-Time}(n)&quot; class=&quot;latex&quot; /&gt;. By padding (Theorem &lt;a href=&quot;#x1-6001r5&quot;&gt;1.5&lt;!--tex4ht:ref: thm:TIMEonlogn=00003Dregular --&gt;&lt;/a&gt;), &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28n%5Clog+%5E%7B1.1%7Dn%29%3D%5Ctext+%7BTM-Time%7D%28n%5Clog+%5E%7B0.9%7Dn%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28n%5Clog+%5E%7B1.1%7Dn%29%3D%5Ctext+%7BTM-Time%7D%28n%5Clog+%5E%7B0.9%7Dn%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28n%5Clog+%5E%7B1.1%7Dn%29%3D%5Ctext+%7BTM-Time%7D%28n%5Clog+%5E%7B0.9%7Dn%29&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {TM-Time}(n&amp;#92;log ^{1.1}n)=&amp;#92;text {TM-Time}(n&amp;#92;log ^{0.9}n)&quot; class=&quot;latex&quot; /&gt;. Hence &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28n%5Clog+%5E%7B1.1%7Dn%29%3D%5Ctext+%7BTM-Time%7D%28n%29.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&quot; srcset=&quot;https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28n%5Clog+%5E%7B1.1%7Dn%29%3D%5Ctext+%7BTM-Time%7D%28n%29.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002 1x, https://s0.wp.com/latex.php?latex=%5Ctext+%7BTM-Time%7D%28n%5Clog+%5E%7B1.1%7Dn%29%3D%5Ctext+%7BTM-Time%7D%28n%29.&amp;#038;bg=ffffff&amp;#038;fg=333333&amp;#038;s=0&amp;#038;c=20201002&amp;#038;zoom=4.5 4x&quot; alt=&quot;&amp;#92;text {TM-Time}(n&amp;#92;log ^{1.1}n)=&amp;#92;text {TM-Time}(n).&quot; class=&quot;latex&quot; /&gt;”&lt;/p&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;/div&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;h3 class=&quot;likesectionHead&quot;&gt;&lt;a id=&quot;x1-100001.5&quot;&gt;&lt;/a&gt;References&lt;/h3&gt;
&lt;p style=&quot;text-align: justify&quot;&gt;
&lt;div class=&quot;thebibliography&quot;&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt; [1]&lt;span class=&quot;bibsp&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XDBLP:journals/iandc/Hennie65&quot;&gt;&lt;/a&gt;F. C. Hennie. One-tape, off-line turing machine computations. Information and Control, 8(6):553–578, 1965.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt; [2]&lt;span class=&quot;bibsp&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XKobayashi1985OnTS&quot;&gt;&lt;/a&gt;Kojiro Kobayashi. On the structure of one-tape nondeterministic turing machine time hierarchy. Theor. Comput. Sci., 40:175–193, 1985.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt; [3]&lt;span class=&quot;bibsp&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XMR29860&quot;&gt;&lt;/a&gt;Claude E. Shannon. The synthesis of two-terminal switching circuits. Bell System Tech. J., 28:59–98, 1949.&lt;/p&gt;
&lt;p class=&quot;bibitem&quot;&gt;&lt;span class=&quot;biblabel&quot;&gt; [4]&lt;span class=&quot;bibsp&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;XMR2145856&quot;&gt;&lt;/a&gt;Larry Stockmeyer and Albert R. Meyer. Cosmological lower bound on the circuit complexity of a small problem in logic. J. ACM, 49(6):753–784, 2002.&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;authors&quot;&gt;By Manu&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 13:17:45 UTC</pubDate>
  <author>Emanuele Viola</author>
</item>

<item>
  <title>Professor in Theoretical Computer Science at The University of Melbourne (apply by February 12, 2023)</title>
  <guid>http://cstheory-jobs.org/2023/02/02/professor-in-theoretical-computer-science-at-the-university-of-melbourne-apply-by-february-12-2023/</guid>
  <link>https://cstheory-jobs.org/2023/02/02/professor-in-theoretical-computer-science-at-the-university-of-melbourne-apply-by-february-12-2023/</link>
  <description>
    &lt;p&gt;The University of Melbourne is seeking an outstanding academic with expertise in Theoretical Computer Science to join an internationally recognised group of academics within the School of Computing and Information Systems in the Faculty of Engineering and Information Technology. We are seeking to appoint at the Full Professor level. The University is an equal opportunity employer.&lt;/p&gt;
&lt;p&gt;Website: &lt;a href=&quot;https://jobs.unimelb.edu.au/en/job/911413/professor-in-theoretical-computing-science&quot;&gt;https://jobs.unimelb.edu.au/en/job/911413/professor-in-theoretical-computing-science&lt;/a&gt;&lt;br /&gt;
Email: awirth@unimelb.edu.au&lt;/p&gt;
&lt;p class=&quot;authors&quot;&gt;By shacharlovett&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 06:58:22 UTC</pubDate>
  <author>CCI: jobs</author>
</item>

<item>
  <title>Hardness of braided quantum circuit optimization in the surface code</title>
  <guid>http://arxiv.org/abs/2302.00273</guid>
  <link>http://arxiv.org/abs/2302.00273</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Wasa_K/0/1/0/all/0/1&quot;&gt;Kunihiro Wasa&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Nishio_S/0/1/0/all/0/1&quot;&gt;Shin Nishio&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Suetsugu_K/0/1/0/all/0/1&quot;&gt;Koki Suetsugu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Hanks_M/0/1/0/all/0/1&quot;&gt;Michael Hanks&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Stephens_A/0/1/0/all/0/1&quot;&gt;Ashley Stephens&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Yokoi_Y/0/1/0/all/0/1&quot;&gt;Yu Yokoi&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Nemoto_K/0/1/0/all/0/1&quot;&gt;Kae Nemoto&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Large-scale quantum information processing requires the use of quantum error
correcting codes to mitigate the effects of noise in quantum devices.
Topological error-correcting codes, such as surface codes, are promising
candidates as they can be implemented using only local interactions in a
two-dimensional array of physical qubits. Procedures such as defect braiding
and lattice surgery can then be used to realize a fault-tolerant universal set
of gates on the logical space of such topological codes. However, error
correction also introduces a significant overhead in computation time, the
number of physical qubits, and the number of physical gates. While optimizing
fault-tolerant circuits to minimize this overhead is critical, the
computational complexity of such optimization problems remains unknown. This
ambiguity leaves room for doubt surrounding the most effective methods for
compiling fault-tolerant circuits for a large-scale quantum computer. In this
paper, we show that the optimization of a special subset of braided quantum
circuits is NP-hard by a polynomial-time reduction of the optimization problem
into a specific problem called Planar Rectilinear 3SAT.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>Parameterized Complexity of Weighted Team Definability</title>
  <guid>http://arxiv.org/abs/2302.00541</guid>
  <link>http://arxiv.org/abs/2302.00541</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kontinen_J/0/1/0/all/0/1&quot;&gt;Juha Kontinen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mahmood_Y/0/1/0/all/0/1&quot;&gt;Yasir Mahmood&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Meier_A/0/1/0/all/0/1&quot;&gt;Arne Meier&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Vollmer_H/0/1/0/all/0/1&quot;&gt;Heribert Vollmer&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this article, we study the complexity of weighted team definability for
logics with team semantics. This problem is a natural analogue of one of the
most studied problems in parameterized complexity, the notion of weighted
Fagin-definability, which is formulated in terms of satisfaction of first-order
formulas with free relation variables. We focus on the parameterized complexity
of weighted team definability for a fixed formula phi of central team-based
logics. Given a first-order structure A and the parameter value k as input, the
question is to determine whether A,T models phi for some team T of size k. We
show several results on the complexity of this problem for dependence,
independence, and inclusion logic formulas. Moreover, we also relate the
complexity of weighted team definability to the complexity classes in the
well-known W-hierarchy as well as paraNP.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>An automated, geometry-based method for the analysis of hippocampal thickness</title>
  <guid>http://arxiv.org/abs/2302.00573</guid>
  <link>http://arxiv.org/abs/2302.00573</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Diers_K/0/1/0/all/0/1&quot;&gt;Kersten Diers&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Baumeister_H/0/1/0/all/0/1&quot;&gt;Hannah Baumeister&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jessen_F/0/1/0/all/0/1&quot;&gt;Frank Jessen&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Duzel_E/0/1/0/all/0/1&quot;&gt;Emrah D&amp;#xfc;zel&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Berron_D/0/1/0/all/0/1&quot;&gt;David Berron&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Reuter_M/0/1/0/all/0/1&quot;&gt;Martin Reuter&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The hippocampus is one of the most studied neuroanatomical structures due to
its involvement in attention, learning, and memory as well as its atrophy in
ageing, neurological, and psychiatric diseases. Hippocampal shape changes,
however, are complex and cannot be fully characterized by a single summary
metric such as hippocampal volume as determined from MR images. In this work,
we propose an automated, geometry-based approach for the unfolding, point-wise
correspondence, and local analysis of hippocampal shape features such as
thickness and curvature. Starting from an automated segmentation of hippocampal
subfields, we create a 3D tetrahedral mesh model as well as a 3D intrinsic
coordinate system of the hippocampal body. From this coordinate system, we
derive local curvature and thickness estimates as well as a 2D sheet for
hippocampal unfolding. We evaluate the performance of our algorithm with a
series of experiments to quantify neurodegenerative changes in Mild Cognitive
Impairment and Alzheimer&#39;s disease dementia. We find that hippocampal thickness
estimates detect known differences between clinical groups and can determine
the location of these effects on the hippocampal sheet. Further, thickness
estimates improve classification of clinical groups and cognitively unimpaired
controls when added as an additional predictor. Comparable results are obtained
with different datasets and segmentation algorithms. Taken together, we
replicate canonical findings on hippocampal volume/shape changes in dementia,
extend them by gaining insight into their spatial localization on the
hippocampal sheet, and provide additional, complementary information beyond
traditional measures. We provide a new set of sensitive processing and analysis
tools for the analysis of hippocampal geometry that allows comparisons across
studies without relying on image registration or requiring manual intervention.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Geometry</author>
</item>

<item>
  <title>Faster maximal clique enumeration in large real-world link streams</title>
  <guid>http://arxiv.org/abs/2302.00360</guid>
  <link>http://arxiv.org/abs/2302.00360</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Baudin_A/0/1/0/all/0/1&quot;&gt;Alexis Baudin&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Magnien_C/0/1/0/all/0/1&quot;&gt;Cl&amp;#xe9;mence Magnien&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Tabourier_L/0/1/0/all/0/1&quot;&gt;Lionel Tabourier&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Link streams offer a good model for representing interactions over time. They
consist of links $(b,e,u,v)$, where $u$ and $v$ are vertices interacting during
the whole time interval $[b,e]$. In this paper, we deal with the problem of
enumerating maximal cliques in link streams. A clique is a pair
$(C,[t_0,t_1])$, where $C$ is a set of vertices that all interact pairwise
during the full interval $[t_0,t_1]$. It is maximal when neither its set of
vertices nor its time interval can be increased. Some of the main works solving
this problem are based on the famous Bron-Kerbosch algorithm for enumerating
maximal cliques in graphs. We take this idea as a starting point to propose a
new algorithm which matches the cliques of the instantaneous graphs formed by
links existing at a given time $t$ to the maximal cliques of the link stream.
We prove its validity and compute its complexity, which is better than the
state-of-the art ones in many cases of interest. We also study the
output-sensitive complexity, which is close to the output size, thereby showing
that our algorithm is efficient. To confirm this, we perform experiments on
link streams used in the state of the art, and on massive link streams, up to
100 million links. In all cases our algorithm is faster, mostly by a factor of
at least 10 and up to a factor of $10^4$. Moreover, it scales to massive link
streams for which the existing algorithms are not able to provide the solution.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>On the Within-Group Discrimination of Screening Classifiers</title>
  <guid>http://arxiv.org/abs/2302.00025</guid>
  <link>http://arxiv.org/abs/2302.00025</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Okati_N/0/1/0/all/0/1&quot;&gt;Nastaran Okati&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Tsirtsis_S/0/1/0/all/0/1&quot;&gt;Stratis Tsirtsis&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Rodriguez_M/0/1/0/all/0/1&quot;&gt;Manuel Gomez Rodriguez&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Screening classifiers are increasingly used to identify qualified candidates
in a variety of selection processes. In this context, it has been recently
shown that, if a classifier is calibrated, one can identify the smallest set of
candidates which contains, in expectation, a desired number of qualified
candidates using a threshold decision rule. This lends support to focusing on
calibration as the only requirement for screening classifiers. In this paper,
we argue that screening policies that use calibrated classifiers may suffer
from an understudied type of within-group discrimination -- they may
discriminate against qualified members within demographic groups of interest.
Further, we argue that this type of discrimination can be avoided if
classifiers satisfy within-group monotonicity, a natural monotonicity property
within each of the groups. Then, we introduce an efficient post-processing
algorithm based on dynamic programming to minimally modify a given calibrated
classifier so that its probability estimates satisfy within-group monotonicity.
We validate our algorithm using US Census survey data and show that
within-group monotonicity can be often achieved at a small cost in terms of
prediction granularity and shortlist size.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Differentially-Private Hierarchical Clustering with Provable Approximation Guarantees</title>
  <guid>http://arxiv.org/abs/2302.00037</guid>
  <link>http://arxiv.org/abs/2302.00037</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Imola_J/0/1/0/all/0/1&quot;&gt;Jacob Imola&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Epasto_A/0/1/0/all/0/1&quot;&gt;Alessandro Epasto&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mahdian_M/0/1/0/all/0/1&quot;&gt;Mohammad Mahdian&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Cohen_Addad_V/0/1/0/all/0/1&quot;&gt;Vincent Cohen-Addad&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mirrokni_V/0/1/0/all/0/1&quot;&gt;Vahab Mirrokni&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Hierarchical Clustering is a popular unsupervised machine learning method
with decades of history and numerous applications. We initiate the study of
differentially private approximation algorithms for hierarchical clustering
under the rigorous framework introduced by (Dasgupta, 2016). We show strong
lower bounds for the problem: that any $\epsilon$-DP algorithm must exhibit
$O(|V|^2/ \epsilon)$-additive error for an input dataset $V$. Then, we exhibit
a polynomial-time approximation algorithm with $O(|V|^{2.5}/
\epsilon)$-additive error, and an exponential-time algorithm that meets the
lower bound. To overcome the lower bound, we focus on the stochastic block
model, a popular model of graphs, and, with a separation assumption on the
blocks, propose a private $1+o(1)$ approximation algorithm which also recovers
the blocks exactly. Finally, we perform an empirical study of our algorithms
and validate their performance.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Exploring Wedges of an Oriented Grid by an Automaton with Pebbles</title>
  <guid>http://arxiv.org/abs/2302.00052</guid>
  <link>http://arxiv.org/abs/2302.00052</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Bhagat_S/0/1/0/all/0/1&quot;&gt;Subhash Bhagat&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Pelc_A/0/1/0/all/0/1&quot;&gt;Andrzej Pelc&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A mobile agent, modeled as a deterministic finite automaton, navigates in the
infinite anonymous oriented grid $\mathbb{Z} \times \mathbb{Z}$. It has to
explore a given infinite subgraph of the grid by visiting all of its nodes. We
focus on the simplest subgraphs, called {\em wedges}, spanned by all nodes of
the grid located between two half-lines in the plane, with a common origin.
Many wedges turn out to be impossible to explore by an automaton that cannot
mark nodes of the grid. Hence, we study the following question: Given a wedge
$W$, what is the smallest number $p$ of (movable) pebbles for which there
exists an automaton that can explore $W$ using $p$ pebbles? Our main
contribution is a complete solution of this problem. For each wedge $W$ we
determine this minimum number $p$, show an automaton that explores it using $p$
pebbles and show that fewer pebbles are not enough. We show that this smallest
number of pebbles can vary from 0 to 3, depending on the angle between
half-lines limiting the wedge and depending on whether the automaton can cross
these half-lines or not.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Adding an Edge in a $P_4$-sparse Graph</title>
  <guid>http://arxiv.org/abs/2302.00112</guid>
  <link>http://arxiv.org/abs/2302.00112</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mpanti_A/0/1/0/all/0/1&quot;&gt;Anna Mpanti&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nikolopoulos_S/0/1/0/all/0/1&quot;&gt;Stavros D. Nikolopoulos&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Palios_L/0/1/0/all/0/1&quot;&gt;Leonidas Palios&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The minimum completion (fill-in) problem is defined as follows: Given a graph
family $\mathcal{F}$ (more generally, a property $\Pi$) and a graph $G$, the
completion problem asks for the minimum number of non-edges needed to be added
to $G$ so that the resulting graph belongs to the graph family $\mathcal{F}$
(or has property $\Pi$). This problem is NP-complete for many subclasses of
perfect graphs and polynomial solutions are available only for minimal
completion sets. We study the minimum completion problem of a $P_4$-sparse
graph $G$ with an added edge. For any optimal solution of the problem, we prove
that there is an optimal solution whose form is of one of a small number of
possibilities. This along with the solution of the problem when the added edge
connects two non-adjacent vertices of a spider or connects two vertices in
different connected components of the graph enables us to present a
polynomial-time algorithm for the problem.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Sublinear Approximation Schemes for Scheduling Precedence Graphs of Bounded Depth</title>
  <guid>http://arxiv.org/abs/2302.00133</guid>
  <link>http://arxiv.org/abs/2302.00133</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fu_B/0/1/0/all/0/1&quot;&gt;Bin Fu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Huo_Y/0/1/0/all/0/1&quot;&gt;Yumei Huo&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhao_H/0/1/0/all/0/1&quot;&gt;Hairong Zhao&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the classical scheduling problem on parallel machines %with
precedence constraints where the precedence graph has the bounded depth $h$.
Our goal is to minimize the maximum completion time. We focus on developing
approximation algorithms that use only sublinear space or sublinear time. We
develop the first one-pass streaming approximation schemes using sublinear
space when all jobs&#39; processing times differ no more than a constant factor $c$
and the number of machines $m$ is at most $\tfrac {2n \epsilon}{3 h c }$. This
is so far the best approximation we can have in terms of $m$, since no
polynomial time approximation better than $\tfrac{4}{3}$ exists when $m =
\tfrac{n}{3}$ unless P=NP. %the problem cannot be approximated within a factor
of $\tfrac{4}{3}$ when $m = \tfrac{n}{3}$ even if all jobs have equal
processing time. The algorithms are then extended to the more general problem
where the largest $\alpha n$ jobs have no more than $c$ factor difference. %
for some constant $0 &amp;lt; \alpha \le 1$. We also develop the first sublinear time
algorithms for both problems. For the more general problem, when $ m \le \tfrac
{ \alpha n \epsilon}{20 c^2 \cdot h } $, our algorithm is a randomized
$(1+\epsilon)$-approximation scheme that runs in sublinear time. This work not
only provides an algorithmic solution to the studied problem under big data %
and cloud computing environment, but also gives a methodological framework for
designing sublinear approximation algorithms for other scheduling problems.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Durable Algorithms for Writable LL/SC and CAS with Dynamic Joining</title>
  <guid>http://arxiv.org/abs/2302.00135</guid>
  <link>http://arxiv.org/abs/2302.00135</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jayanti_P/0/1/0/all/0/1&quot;&gt;Prasad Jayanti&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jayanti_S/0/1/0/all/0/1&quot;&gt;Siddhartha Jayanti&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Jayanti_S/0/1/0/all/0/1&quot;&gt;Sucharita Jayanti&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We present durable implementations for two well known universal primitives --
CAS (compare-and-swap), and its ABA-free counter-part LLSC (load-linked,
store-conditional). All our implementations are: writable, meaning they support
a Write() operation; have constant time complexity per operation; allow for
dynamic joining, meaning newly created processes (a.k.a. threads) of arbitrary
names can join a protocol and access our implementations; and have adaptive
space complexities, meaning the space use scales in the number of processes $n$
that actually use the objects, as opposed to previous protocols which are
designed for a maximum number of processes $N$. Our durable Writable-CAS
implementation, DuraCAS, requires $O(m + n)$ space to support $m$ objects that
get accessed by $n$ processes, improving on the state-of-the-art $O(m + N^2)$.
By definition, LLSC objects must store &quot;contexts&quot; in addition to object values.
Our Writable-LLSC implementation, DuraLL, requires $O(m + n + C)$ space, where
$C$ is the number of &quot;contexts&quot; stored across all the objects. While LLSC has
an advantage over CAS due to being ABA-free, the object definition seems to
require additional space usage. To address this trade-off, we define an
External Context (EC) variant of LLSC. Our EC Writable-LLSC implementation is
ABA-free and has a space complexity of just $O(m + n)$.
&lt;/p&gt;
&lt;p&gt;To our knowledge, we are the first to present durable CAS algorithms that
allow for dynamic joining, and our algorithms are the first to exhibit adaptive
space complexities. To our knowledge, we are the first to implement any type of
durable LLSC objects.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Approximating Red-Blue Set Cover</title>
  <guid>http://arxiv.org/abs/2302.00213</guid>
  <link>http://arxiv.org/abs/2302.00213</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Chlamtac_E/0/1/0/all/0/1&quot;&gt;Eden Chlamt&amp;#xe1;&amp;#x10d;&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Makarychev_Y/0/1/0/all/0/1&quot;&gt;Yury Makarychev&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Vakilian_A/0/1/0/all/0/1&quot;&gt;Ali Vakilian&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We provide a new approximation algorithm for the Red-Blue Set Cover problem
and give a new hardness result. Our approximation algorithm achieves $\tilde
O(m^{1/3})$-approximation improving on the $\tilde O(m^{1/2})$-approximation
due to Elkin and Peleg (where $m$ is the number of sets). Additionally, we
provide a nearly approximation preserving reduction from Min $k$-Union to
Red-Blue Set Cover that gives an $\tilde\Omega(m^{1/4 - \varepsilon})$ hardness
under the Dense-vs-Random conjecture.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>A Nearly-Optimal Bound for Fast Regression with $\ell_\infty$ Guarantee</title>
  <guid>http://arxiv.org/abs/2302.00248</guid>
  <link>http://arxiv.org/abs/2302.00248</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Song_Z/0/1/0/all/0/1&quot;&gt;Zhao Song&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ye_M/0/1/0/all/0/1&quot;&gt;Mingquan Ye&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Yin_J/0/1/0/all/0/1&quot;&gt;Junze Yin&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhang_L/0/1/0/all/0/1&quot;&gt;Lichen Zhang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Given a matrix $A\in \mathbb{R}^{n\times d}$ and a vector $b\in
\mathbb{R}^n$, we consider the regression problem with $\ell_\infty$
guarantees: finding a vector $x&#39;\in \mathbb{R}^d$ such that $ \|x&#39;-x^*\|_\infty
\leq \frac{\epsilon}{\sqrt{d}}\cdot \|Ax^*-b\|_2\cdot \|A^\dagger\|$ where
$x^*=\arg\min_{x\in \mathbb{R}^d}\|Ax-b\|_2$. One popular approach for solving
such $\ell_2$ regression problem is via sketching: picking a structured random
matrix $S\in \mathbb{R}^{m\times n}$ with $m\ll n$ and $SA$ can be quickly
computed, solve the ``sketched&#39;&#39; regression problem $\arg\min_{x\in
\mathbb{R}^d} \|SAx-Sb\|_2$. In this paper, we show that in order to obtain
such $\ell_\infty$ guarantee for $\ell_2$ regression, one has to use sketching
matrices that are dense. To the best of our knowledge, this is the first user
case in which dense sketching matrices are necessary. On the algorithmic side,
we prove that there exists a distribution of dense sketching matrices with
$m=\epsilon^{-2}d\log^3(n/\delta)$ such that solving the sketched regression
problem gives the $\ell_\infty$ guarantee, with probability at least
$1-\delta$. Moreover, the matrix $SA$ can be computed in time $O(nd\log n)$.
Our row count is nearly-optimal up to logarithmic factors, and significantly
improves the result in [Price, Song and Woodruff, ICALP&#39;17], in which a
super-linear in $d$ rows, $m=\Omega(\epsilon^{-2}d^{1+\gamma})$ for
$\gamma=\Theta(\sqrt{\frac{\log\log n}{\log d}})$ is required. We also develop
a novel analytical framework for $\ell_\infty$ guarantee regression that
utilizes the Oblivious Coordinate-wise Embedding (OCE) property introduced in
[Song and Yu, ICML&#39;21]. Our analysis is arguably much simpler and more general
than [Price, Song and Woodruff, ICALP&#39;17], and it extends to dense sketches for
tensor product of vectors.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Flip-width: Cops and Robber on dense graphs</title>
  <guid>http://arxiv.org/abs/2302.00352</guid>
  <link>http://arxiv.org/abs/2302.00352</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Torunczyk_S/0/1/0/all/0/1&quot;&gt;Symon Toru&amp;#x144;czyk&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We define new graph parameters that generalize tree-width, degeneracy, and
generalized coloring numbers for sparse graphs, and clique-width and twin-width
for dense graphs. Those parameters are defined using variants of the Cops and
Robber game, in which the robber has speed bounded by a fixed constant
$r\in\mathbb N\cup\{\infty\}$, and the cops perform flips (or perturbations) of
the considered graph. We propose a new notion of tameness of a graph class,
called bounded flip-width, which is a dense counterpart of classes of bounded
expansion of Ne\v{s}et\v{r}il and Ossona de Mendez, and includes classes of
bounded twin-width of Bonnet, Kim, Thomass\&#39;e and Watrigant. We prove that
boundedness of flip-width is preserved by first-order interpretations, or
transductions, generalizing previous results concerning classes of bounded
expansion and bounded twin-width. We provide an algorithm approximating the
flip-width of a given graph, which runs in slicewise polynomial time (XP) in
the size of the graph. We also propose a more general notion of tameness,
called almost bounded flip-width, which is a dense counterpart of nowhere dense
classes, and includes all structurally nowhere dense classes. We conjecture,
and provide evidence, that classes with almost bounded flip-width coincide with
monadically dependent classes, introduced by Shelah in model theory.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Improved Exact and Heuristic Algorithms for Maximum Weight Clique</title>
  <guid>http://arxiv.org/abs/2302.00458</guid>
  <link>http://arxiv.org/abs/2302.00458</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Erhardt_R/0/1/0/all/0/1&quot;&gt;Roman Erhardt&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Hanauer_K/0/1/0/all/0/1&quot;&gt;Kathrin Hanauer&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kriege_N/0/1/0/all/0/1&quot;&gt;Nils Kriege&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Schulz_C/0/1/0/all/0/1&quot;&gt;Christian Schulz&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Strash_D/0/1/0/all/0/1&quot;&gt;Darren Strash&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We propose improved exact and heuristic algorithms for solving the maximum
weight clique problem, a well-known problem in graph theory with many
applications. Our algorithms interleave successful techniques from related work
with novel data reduction rules that use local graph structure to identify and
remove vertices and edges while retaining the optimal solution. We evaluate our
algorithms on a range of synthetic and real-world graphs, and find that they
outperform the current state of the art on most inputs. Our data reductions
always produce smaller reduced graphs than existing data reductions alone. As a
result, our exact algorithm, MWCRedu, finds solutions orders of magnitude
faster on naturally weighted, medium-sized map labeling graphs and random
hyperbolic graphs. Our heuristic algorithm, MWCPeel, outperforms its
competitors on these instances, but is slightly less effective on extremely
dense or large instances.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>The Investment Management Game: Extending the Scope of the Notion of Core</title>
  <guid>http://arxiv.org/abs/2302.00608</guid>
  <link>http://arxiv.org/abs/2302.00608</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/econ/1/au:+Vazirani_V/0/1/0/all/0/1&quot;&gt;Vijay V. Vazirani&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The core is a dominant solution concept in economics and game theory. In this
context, the following question arises, ``How versatile is this solution
concept?&#39;&#39; We note that within game theory, this notion has been used for
profit -- equivalently, cost or utility -- sharing only. In this paper, we show
a completely different use for it: in an {\em investment management game},
under which an agent needs to allocate her money among investment firms in such
a way that {\em in each of exponentially many future scenarios}, sufficient
money is available in the ``right&#39;&#39; firms so she can buy an ``optimal
investment&#39;&#39; for that scenario.
&lt;/p&gt;
&lt;p&gt;We study a restriction of this game to {\em perfect graphs} and characterize
its core. Our characterization is analogous to Shapley and Shubik&#39;s
characterization of the core of the assignment game. The difference is the
following: whereas their characterization follows from {\em total
unimodularity}, ours follows from {\em total dual integrality}. The latter is
another novelty of our work.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Parameterized Algorithms for Colored Clustering</title>
  <guid>http://arxiv.org/abs/2302.00630</guid>
  <link>http://arxiv.org/abs/2302.00630</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kellerhals_L/0/1/0/all/0/1&quot;&gt;Leon Kellerhals&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Koana_T/0/1/0/all/0/1&quot;&gt;Tomohiro Koana&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kunz_P/0/1/0/all/0/1&quot;&gt;Pascal Kunz&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Niedermeier_R/0/1/0/all/0/1&quot;&gt;Rolf Niedermeier&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In the Colored Clustering problem, one is asked to cluster edge-colored
(hyper-)graphs whose colors represent interaction types. More specifically, the
goal is to select as many edges as possible without choosing two edges that
share an endpoint and are colored differently. Equivalently, the goal can also
be described as assigning colors to the vertices in a way that fits the
edge-coloring as well as possible. As this problem is NP-hard, we build on
previous work by studying its parameterized complexity. We give a $2^{\mathcal
O(k)} \cdot n^{\mathcal O(1)}$-time algorithm where $k$ is the number of edges
to be selected and $n$ the number of vertices. We also prove the existence of a
problem kernel of size $\mathcal O(k^{5/2} )$, resolving an open problem posed
in the literature. We consider parameters that are smaller than $k$, the number
of edges to be selected, and $r$, the number of edges that can be deleted. Such
smaller parameters are obtained by considering the difference between $k$ or
$r$ and some lower bound on these values. We give both algorithms and lower
bounds for Colored Clustering with such parameterizations. Finally, we settle
the parameterized complexity of Colored Clustering with respect to structural
graph parameters by showing that it is $W[1]$-hard with respect to both vertex
cover number and tree-cut width, but fixed-parameter tractable with respect to
slim tree-cut width.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Adding a Tail in Classes of Perfect Graphs</title>
  <guid>http://arxiv.org/abs/2302.00657</guid>
  <link>http://arxiv.org/abs/2302.00657</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mpanti_A/0/1/0/all/0/1&quot;&gt;Anna Mpanti&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nikolopoulos_S/0/1/0/all/0/1&quot;&gt;Stavros D. Nikolopoulos&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Palios_L/0/1/0/all/0/1&quot;&gt;Leonidas Palios&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Consider a graph $G$ which belongs to a graph class ${\cal C}$. We are
interested in connecting a node $w \not\in V(G)$ to $G$ by a single edge $u w$
where $u \in V(G)$; we call such an edge a \emph{tail}. As the graph resulting
from $G$ after the addition of the tail, denoted $G+uw$, need not belong to the
class ${\cal C}$, we want to compute a minimum ${\cal C}$-completion of $G+w$,
i.e., the minimum number of non-edges (excluding the tail $u w$) to be added to
$G+uw$ so that the resulting graph belongs to ${\cal C}$. In this paper, we
study this problem for the classes of split, quasi-threshold, threshold, and
$P_4$-sparse graphs and we present linear-time algorithms by exploiting the
structure of split graphs and the tree representation of quasi-threshold,
threshold, and $P_4$-sparse graphs.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-02 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Near-perfect Reachability of Variational Quantum Search with Depth-1 Ansatz</title>
  <guid>http://arxiv.org/abs/2301.13224</guid>
  <link>http://arxiv.org/abs/2301.13224</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/quant-ph/1/au:+Zhan_J/0/1/0/all/0/1&quot;&gt;Junpeng Zhan&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Grover&#39;s search algorithm is renowned for its dramatic speedup in solving
many important scientific problems. The recently proposed Variational Quantum
Search (VQS) algorithm has shown an exponential advantage over Grover&#39;s
algorithm for up to 26 qubits. However, its advantage for larger numbers of
qubits has not yet been proven. Here we show that the exponentially deep
circuit required by Grover&#39;s algorithm can be replaced by a multi-controlled
NOT gate together with either a single layer of Ry gates or two layers of
circuits consisting of Hadamard and NOT gates, which is valid for any number of
qubits greater than five. We prove that the VQS, with a single layer of Ry
gates as its Ansatz, has near-perfect reachability in finding the good element
of an arbitrarily large unstructured data set, and its reachability
exponentially improves with the number of qubits, where the reachability is
defined to quantify the ability of a given Ansatz to generate an optimal
quantum state. Numerical studies further validate the excellent reachability of
the VQS. Proving the near-perfect reachability of the VQS, with a depth-1
Ansatz, for any number of qubits completes an essential step in proving its
exponential advantage over Grover&#39;s algorithm for any number of qubits, and the
latter proving is significant as it means that the VQS can efficiently solve
NP-complete problems.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>A Finer Analysis of Multi-Structural Games and Beyond</title>
  <guid>http://arxiv.org/abs/2301.13329</guid>
  <link>http://arxiv.org/abs/2301.13329</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Carmosino_M/0/1/0/all/0/1&quot;&gt;Marco Carmosino&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Fagin_R/0/1/0/all/0/1&quot;&gt;Ronald Fagin&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Immerman_N/0/1/0/all/0/1&quot;&gt;Neil Immerman&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kolaitis_P/0/1/0/all/0/1&quot;&gt;Phokion Kolaitis&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lenchner_J/0/1/0/all/0/1&quot;&gt;Jonathan Lenchner&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sengupta_R/0/1/0/all/0/1&quot;&gt;Rik Sengupta&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Multi-structural (MS) games are combinatorial games that capture the number
of quantifiers of first-order sentences. On the face of their definition, MS
games differ from Ehrenfeucht-Fraisse (EF) games in two ways: first, MS games
are played on two sets of structures, while EF games are played on a pair of
structures; second, in MS games, Duplicator can make any number of copies of
structures. In the first part of this paper, we perform a finer analysis of MS
games and develop a closer comparison of MS games with EF games. In particular,
we point out that the use of sets of structures is of the essence and that when
MS games are played on pairs of structures, they capture Boolean combinations
of first-order sentences with a fixed number of quantifiers. After this, we
focus on another important difference between MS games and EF games, namely,
the necessity for Spoiler to play on top of a previous move in order to win
some MS games. Via an analysis of the types realized during MS games, we
delineate the expressive power of the variant of MS games in which Spoiler
never plays on top of a previous move. In the second part we focus on
simultaneously capturing number of quantifiers and number of variables in
first-order logic. We show that natural variants of the MS game do not achieve
this. We then introduce a new game, the quantifier-variable tree game, and show
that it simultaneously captures the number of quantifiers and number of
variables.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>Limits of structures and Total NP Search Problems</title>
  <guid>http://arxiv.org/abs/2301.13603</guid>
  <link>http://arxiv.org/abs/2301.13603</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Jezil_O/0/1/0/all/0/1&quot;&gt;Ond&amp;#x159;ej Je&amp;#x17e;il&lt;/a&gt;&lt;/p&gt;&lt;p&gt;For a class of finite graphs, we define a limit object relative to some
computationally restricted class of functions. The properties of the limit
object then reflect how a computationally restricted viewer &quot;sees&quot; a generic
instance from the class. The construction uses Kraj\&#39;i\v{c}ek&#39;s forcing with
random variables [7]. We prove sufficient conditions for universal and
existential sentences to be valid in the limit, provide several examples, and
prove that such a limit object can then be expanded to a model of weak
arithmetic. We then take the limit of all finite pointed paths to obtain a
model of arithmetic where the problem OntoWeakPigeon is total but Leaf (the
complete problem for $\textbf{PPA}$) is not. This can be viewed as a logical
separation of the oracle classes of total NP search problems, which in our
setting implies standard nonreducibility of Leaf to OntoWeakPigeon.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Complexity</author>
</item>

<item>
  <title>A Survey and Benchmark of Automatic Surface Reconstruction from Point Clouds</title>
  <guid>http://arxiv.org/abs/2301.13656</guid>
  <link>http://arxiv.org/abs/2301.13656</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sulzer_R/0/1/0/all/0/1&quot;&gt;Raphael Sulzer&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Landrieu_L/0/1/0/all/0/1&quot;&gt;Loic Landrieu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Marlet_R/0/1/0/all/0/1&quot;&gt;Renaud Marlet&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Vallet_B/0/1/0/all/0/1&quot;&gt;Bruno Vallet&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We survey and benchmark traditional and novel learning-based algorithms that
address the problem of surface reconstruction from point clouds. Surface
reconstruction from point clouds is particularly challenging when applied to
real-world acquisitions, due to noise, outliers, non-uniform sampling and
missing data. Traditionally, different handcrafted priors of the input points
or the output surface have been proposed to make the problem more tractable.
However, hyperparameter tuning for adjusting priors to different acquisition
defects can be a tedious task. To this end, the deep learning community has
recently addressed the surface reconstruction problem. In contrast to
traditional approaches, deep surface reconstruction methods can learn priors
directly from a training set of point clouds and corresponding true surfaces.
In our survey, we detail how different handcrafted and learned priors affect
the robustness of methods to defect-laden input and their capability to
generate geometric and topologically accurate reconstructions. In our
benchmark, we evaluate the reconstructions of several traditional and
learning-based methods on the same grounds. We show that learning-based methods
can generalize to unseen shape categories, but their training and test sets
must share the same point cloud characteristics. We also provide the code and
data to compete in our benchmark and to further stimulate the development of
learning-based surface reconstruction
https://github.com/raphaelsulzer/dsr-benchmark.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Computational Geometry</author>
</item>

<item>
  <title>Singular Value Approximation and Reducing Directed to Undirected Graph Sparsification</title>
  <guid>http://arxiv.org/abs/2301.13541</guid>
  <link>http://arxiv.org/abs/2301.13541</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ahmadinejad_A/0/1/0/all/0/1&quot;&gt;AmirMahdi Ahmadinejad&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Peebles_J/0/1/0/all/0/1&quot;&gt;John Peebles&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Pyne_E/0/1/0/all/0/1&quot;&gt;Edward Pyne&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sidford_A/0/1/0/all/0/1&quot;&gt;Aaron Sidford&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Vadhan_S/0/1/0/all/0/1&quot;&gt;Salil Vadhan&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this paper, we introduce a new, spectral notion of approximation between
directed graphs, which we call Singular Value (SV) approximation.
SV-approximation is stronger than previous notions of spectral approximation
considered in the literature, including spectral approximation of Laplacians
for undirected graphs (Spielman Teng STOC 2004), standard approximation for
directed graphs (Cohen et. al. STOC 2007), and unit-circle approximation for
directed graphs (Ahmadinejad et. al. FOCS 2020). Moreover, SV approximation
enjoys several useful properties not known to be possessed by previous notions
of approximation, such as being preserved under products of random-walk
matrices and with matrices of bounded norm.
&lt;/p&gt;
&lt;p&gt;Notably, we show that there is a simple black-box reduction from
SV-sparsifying Eulerian directed graphs to SV-sparsifying undirected graphs.
With this reduction in hand, we provide a nearly linear-time algorithm for
SV-sparsifying undirected and hence also Eulerian directed graphs. This also
yields the first nearly linear-time algorithm for unit-circle-sparsifying
Eulerian directed graphs. In addition, we give a nearly linear-time algorithm
for SV-sparsifying (and UC-sparsifying) random-walk polynomials of Eulerian
directed graphs with second normalized singular value bounded away from $1$ by
$1/\text{poly}(n)$.
&lt;/p&gt;
&lt;p&gt;Finally, we show that a simple repeated-squaring and sparsification algorithm
for solving Laplacian systems, introduced by (Peng Spielman STOC 2014) for
undirected graphs, also works for Eulerian digraphs whose random-walk matrix is
normal (i.e. unitarily diagonalizable), if we use SV-sparsification at each
step. Prior Laplacian solvers for Eulerian digraphs are significantly more
complicated.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>A Safety Framework for Flow Decomposition Problems via Integer Linear Programming</title>
  <guid>http://arxiv.org/abs/2301.13245</guid>
  <link>http://arxiv.org/abs/2301.13245</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Dias_F/0/1/0/all/0/1&quot;&gt;Fernando H. C. Dias&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Caceres_M/0/1/0/all/0/1&quot;&gt;Manuel Caceres&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Williams_L/0/1/0/all/0/1&quot;&gt;Lucia Williams&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mumey_B/0/1/0/all/0/1&quot;&gt;Brendan Mumey&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Tomescu_A/0/1/0/all/0/1&quot;&gt;Alexandru I. Tomescu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Many important problems in Bioinformatics (e.g., assembly or multi-assembly)
admit multiple solutions, while the final objective is to report only one. A
common approach to deal with this uncertainty is finding safe partial solutions
(e.g., contigs) which are common to all solutions. Previous research on safety
has focused on polynomially-time solvable problems, whereas many successful and
natural models are NP-hard to solve, leaving a lack of &quot;safety tools&quot; for such
problems. We propose the first method for computing all safe solutions for an
NP-hard problem, minimum flow decomposition. We obtain our results by
developing a &quot;safety test&quot; for paths based on a general Integer Linear
Programming (ILP) formulation. Moreover, we provide implementations with
practical optimizations aimed to reduce the total ILP time, the most efficient
of these being based on a recursive group-testing procedure.
&lt;/p&gt;
&lt;p&gt;Results: Experimental results on the transcriptome datasets of Shao and
Kingsford (TCBB, 2017) show that all safe paths for minimum flow decompositions
correctly recover up to 90% of the full RNA transcripts, which is at least 25%
more than previously known safe paths, such as (Caceres et al. TCBB, 2021),
(Zheng et al., RECOMB 2021), (Khan et al., RECOMB 2022, ESA 2022). Moreover,
despite the NP-hardness of the problem, we can report all safe paths for 99.8%
of the over 27,000 non-trivial graphs of this dataset in only 1.5 hours. Our
results suggest that, on perfect data, there is less ambiguity than thought in
the notoriously hard RNA assembly problem.
&lt;/p&gt;
&lt;p&gt;Availability: https://github.com/algbio/mfd-safety
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Breadth-First Depth-Next: Optimal Collaborative Exploration of Trees with Low Diameter</title>
  <guid>http://arxiv.org/abs/2301.13307</guid>
  <link>http://arxiv.org/abs/2301.13307</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Cosson_R/0/1/0/all/0/1&quot;&gt;Romain Cosson&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Massoulie_L/0/1/0/all/0/1&quot;&gt;Laurent Massouli&amp;#xe9;&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Viennot_L/0/1/0/all/0/1&quot;&gt;Laurent Viennot&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We consider the problem of collaborative tree exploration posed by
Fraigniaud, Gasieniec, Kowalski, and Pelc where a team of $k$ agents is tasked
to collectively go through all the edges of an unknown tree as fast as
possible. Denoting by $n$ the total number of nodes and by $D$ the tree depth,
the $\mathcal{O}(n/\log(k)+D)$ algorithm of Fraigniaud et al. achieves the
best-known competitive ratio with respect to the cost of offline exploration
which is $\Theta(\max{\{2n/k,2D\}})$. Brass, Cabrera-Mora, Gasparri, and Xiao
consider an alternative performance criterion, namely the additive overhead
with respect to $2n/k$, and obtain a $2n/k+\mathcal{O}((D+k)^k)$ runtime
guarantee. In this paper, we introduce `Breadth-First Depth-Next&#39; (BFDN), a
novel and simple algorithm that performs collaborative tree exploration in time
$2n/k+\mathcal{O}(D^2\log(k))$, thus outperforming Brass et al. for all values
of $(n,D)$ and being order-optimal for all trees with depth $D=o_k(\sqrt{n})$.
Moreover, a recent result from Disser et al. implies that no exploration
algorithm can achieve a $2n/k+\mathcal{O}(D^{2-\epsilon})$ runtime guarantee.
The dependency in $D^2$ of our bound is in this sense optimal. The proof of our
result crucially relies on the analysis of an associated two-player game. We
extend the guarantees of BFDN to: scenarios with limited memory and
communication, adversarial setups where robots can be blocked, and exploration
of classes of non-tree graphs. Finally, we provide a recursive version of BFDN
with a runtime of $\mathcal{O}_\ell(n/k^{1/\ell}+\log(k) D^{1+1/\ell})$ for
parameter $\ell\ge 1$, thereby improving performance for trees with large
depth.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>The Iteration Number of the Weisfeiler-Leman Algorithm</title>
  <guid>http://arxiv.org/abs/2301.13317</guid>
  <link>http://arxiv.org/abs/2301.13317</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Grohe_M/0/1/0/all/0/1&quot;&gt;Martin Grohe&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Lichter_M/0/1/0/all/0/1&quot;&gt;Moritz Lichter&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Neuen_D/0/1/0/all/0/1&quot;&gt;Daniel Neuen&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We prove new upper and lower bounds on the number of iterations the
$k$-dimensional Weisfeiler-Leman algorithm ($k$-WL) requires until
stabilization. For $k \geq 3$, we show that $k$-WL stabilizes after at most
$O(kn^{k-1}\log n)$ iterations (where $n$ denotes the number of vertices of the
input structures), obtaining the first improvement over the trivial upper bound
of $n^{k}-1$ and extending a previous upper bound of $O(n \log n)$ for $k=2$
[Lichter et al., LICS 2019].
&lt;/p&gt;
&lt;p&gt;We complement our upper bounds by constructing $k$-ary relational structures
on which $k$-WL requires at least $n^{\Omega(k)}$ iterations to stabilize. This
improves over a previous lower bound of $n^{\Omega(k / \log k)}$ [Berkholz,
Nordstr\&quot;{o}m, LICS 2016].
&lt;/p&gt;
&lt;p&gt;We also investigate tradeoffs between the dimension and the iteration number
of WL, and show that $d$-WL, where $d = \lceil\frac{3(k+1)}{2}\rceil$, can
simulate the $k$-WL algorithm using only $O(k^2 \cdot n^{\lfloor k/2\rfloor +
1} \log n)$ many iterations, but still requires at least $n^{\Omega(k)}$
iterations for any $d$ (that is sufficiently smaller than $n$).
&lt;/p&gt;
&lt;p&gt;The number of iterations required by $k$-WL to distinguish two structures
corresponds to the quantifier rank of a sentence distinguishing them in the $(k
+ 1)$-variable fragment $C_{k+1}$ of first-order logic with counting
quantifiers. Hence, our results also imply new upper and lower bounds on the
quantifier rank required in the logic $C_{k+1}$, as well as tradeoffs between
variable number and quantifier rank.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>A Framework for Adapting Offline Algorithms to Solve Combinatorial Multi-Armed Bandit Problems with Bandit Feedback</title>
  <guid>http://arxiv.org/abs/2301.13326</guid>
  <link>http://arxiv.org/abs/2301.13326</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nie_G/0/1/0/all/0/1&quot;&gt;Guanyu Nie&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Nadew_Y/0/1/0/all/0/1&quot;&gt;Yididiya Y Nadew&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Zhu_Y/0/1/0/all/0/1&quot;&gt;Yanhui Zhu&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Aggarwal_V/0/1/0/all/0/1&quot;&gt;Vaneet Aggarwal&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Quinn_C/0/1/0/all/0/1&quot;&gt;Christopher John Quinn&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We investigate the problem of stochastic, combinatorial multi-armed bandits
where the learner only has access to bandit feedback and the reward function
can be non-linear. We provide a general framework for adapting discrete offline
approximation algorithms into sublinear $\alpha$-regret methods that only
require bandit feedback, achieving
$\mathcal{O}\left(T^\frac{2}{3}\log(T)^\frac{1}{3}\right)$ expected cumulative
$\alpha$-regret dependence on the horizon $T$. The framework only requires the
offline algorithms to be robust to small errors in function evaluation. The
adaptation procedure does not even require explicit knowledge of the offline
approximation algorithm -- the offline algorithm can be used as black box
subroutine.
&lt;/p&gt;
&lt;p&gt;To demonstrate the utility of the proposed framework, the proposed framework
is applied to multiple problems in submodular maximization, adapting
approximation algorithms for cardinality and for knapsack constraints. The new
CMAB algorithms for knapsack constraints outperform a full-bandit method
developed for the adversarial setting in experiments with real-world data.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>A Bias-Variance-Privacy Trilemma for Statistical Estimation</title>
  <guid>http://arxiv.org/abs/2301.13334</guid>
  <link>http://arxiv.org/abs/2301.13334</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Kamath_G/0/1/0/all/0/1&quot;&gt;Gautam Kamath&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Mouzakis_A/0/1/0/all/0/1&quot;&gt;Argyris Mouzakis&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Regehr_M/0/1/0/all/0/1&quot;&gt;Matthew Regehr&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Singhal_V/0/1/0/all/0/1&quot;&gt;Vikrant Singhal&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Steinke_T/0/1/0/all/0/1&quot;&gt;Thomas Steinke&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Ullman_J/0/1/0/all/0/1&quot;&gt;Jonathan Ullman&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The canonical algorithm for differentially private mean estimation is to
first clip the samples to a bounded range and then add noise to their empirical
mean. Clipping controls the sensitivity and, hence, the variance of the noise
that we add for privacy. But clipping also introduces statistical bias. We
prove that this tradeoff is inherent: no algorithm can simultaneously have low
bias, low variance, and low privacy loss for arbitrary distributions.
&lt;/p&gt;
&lt;p&gt;On the positive side, we show that unbiased mean estimation is possible under
approximate differential privacy if we assume that the distribution is
symmetric. Furthermore, we show that, even if we assume that the data is
sampled from a Gaussian, unbiased mean estimation is impossible under pure or
concentrated differential privacy.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Weitzman&#39;s Rule for Pandora&#39;s Box with Correlations</title>
  <guid>http://arxiv.org/abs/2301.13534</guid>
  <link>http://arxiv.org/abs/2301.13534</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gergatsouli_E/0/1/0/all/0/1&quot;&gt;Evangelia Gergatsouli&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Tzamos_C/0/1/0/all/0/1&quot;&gt;Christos Tzamos&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Pandora&#39;s Box is a central problem in decision making under uncertainty that
can model various real life scenarios. In this problem we are given $n$ boxes,
each with a fixed opening cost, and an unknown value drawn from a known
distribution, only revealed if we pay the opening cost. Our goal is to find a
strategy for opening boxes to minimize the sum of the value selected and the
opening cost paid.
&lt;/p&gt;
&lt;p&gt;In this work we revisit Pandora&#39;s Box when the value distributions are
correlated, first studied in Chawla et al. (&lt;a href=&quot;/abs/1911.01632&quot;&gt;arXiv:1911.01632&lt;/a&gt;). We show that the
optimal algorithm for the independent case, given by Weitzman&#39;s rule, directly
works for the correlated case. In fact, our algorithm results in significantly
improved approximation guarantees compared to the previous work, while also
being substantially simpler. We finally show how to implement the rule given
only sample access to the correlated distribution of values. Specifically, we
find that a number of samples that is polynomial in the number of boxes is
sufficient for the algorithm to work.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>p-median location interdiction on trees</title>
  <guid>http://arxiv.org/abs/2301.13723</guid>
  <link>http://arxiv.org/abs/2301.13723</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Leiss_L/0/1/0/all/0/1&quot;&gt;Lena Lei&amp;#xdf;&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Heller_T/0/1/0/all/0/1&quot;&gt;Till Heller&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Schafer_L/0/1/0/all/0/1&quot;&gt;Luca E. Sch&amp;#xe4;fer&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Streicher_M/0/1/0/all/0/1&quot;&gt;Manuel Streicher&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ruzika_S/0/1/0/all/0/1&quot;&gt;Stefan Ruzika&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In p-median location interdiction the aim is to find a subset of edges in a
graph, such that the objective value of the p-median problem in the same graph
without the selected edges is as large as possible.
&lt;/p&gt;
&lt;p&gt;We prove that this problem is NP-hard even on acyclic graphs. Restricting the
problem to trees with unit lengths on the edges, unit interdiction costs, and a
single edge interdiction, we provide an algorithm which solves the problem in
polynomial time. Furthermore, we investigate path graphs with unit and
arbitrary lengths. For the former case, we present an algorithm, where multiple
edges can get interdicted. Furthermore, for the latter case, we present a
method to compute an optimal solution for one interdiction step which can also
be extended to multiple interdicted edges.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Flipper games for monadically stable graph classes</title>
  <guid>http://arxiv.org/abs/2301.13735</guid>
  <link>http://arxiv.org/abs/2301.13735</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Gajarsky_J/0/1/0/all/0/1&quot;&gt;Jakub Gajarsk&amp;#xfd;&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Mahlmann_N/0/1/0/all/0/1&quot;&gt;Nikolas M&amp;#xe4;hlmann&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+McCarty_R/0/1/0/all/0/1&quot;&gt;Rose McCarty&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Ohlmann_P/0/1/0/all/0/1&quot;&gt;Pierre Ohlmann&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Pilipczuk_M/0/1/0/all/0/1&quot;&gt;Micha&amp;#x142; Pilipczuk&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Przybyszewski_W/0/1/0/all/0/1&quot;&gt;Wojciech Przybyszewski&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Siebertz_S/0/1/0/all/0/1&quot;&gt;Sebastian Siebertz&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sokolowski_M/0/1/0/all/0/1&quot;&gt;Marek Soko&amp;#x142;owski&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Torunczyk_S/0/1/0/all/0/1&quot;&gt;Szymon Toru&amp;#x144;czyk&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A class of graphs $\mathscr{C}$ is monadically stable if for any unary
expansion $\widehat{\mathscr{C}}$ of $\mathscr{C}$, one cannot interpret, in
first-order logic, arbitrarily long linear orders in graphs from
$\widehat{\mathscr{C}}$. It is known that nowhere dense graph classes are
monadically stable; these encompass most of the studied concepts of sparsity in
graphs, including graph classes that exclude a fixed topological minor. On the
other hand, monadic stability is a property expressed in purely model-theoretic
terms and hence it is also suited for capturing structure in dense graphs.
&lt;/p&gt;
&lt;p&gt;For several years, it has been suspected that one can create a structure
theory for monadically stable graph classes that mirrors the theory of nowhere
dense graph classes in the dense setting. In this work we provide a step in
this direction by giving a characterization of monadic stability through the
Flipper game: a game on a graph played by Flipper, who in each round can
complement the edge relation between any pair of vertex subsets, and Connector,
who in each round localizes the game to a ball of bounded radius. This is an
analog of the Splitter game, which characterizes nowhere dense classes of
graphs (Grohe, Kreutzer, and Siebertz, J.ACM&#39;17).
&lt;/p&gt;
&lt;p&gt;We give two different proofs of our main result. The first proof uses tools
from model theory, and it exposes an additional property of monadically stable
graph classes that is close in spirit to definability of types. Also, as a
byproduct, we give an alternative proof of the recent result of Braunfeld and
Laskowski (arXiv &lt;a href=&quot;/abs/2209.05120&quot;&gt;2209.05120&lt;/a&gt;) that monadic stability for graph classes coincides
with existential monadic stability. The second proof relies on the recently
introduced notion of flip-wideness (Dreier, M\&quot;ahlmann, Siebertz, and
Toru\&#39;nczyk, arXiv &lt;a href=&quot;/abs/2206.13765&quot;&gt;2206.13765&lt;/a&gt;) and provides an efficient algorithm to compute
Flipper&#39;s moves in a winning strategy.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Multicalibration as Boosting for Regression</title>
  <guid>http://arxiv.org/abs/2301.13767</guid>
  <link>http://arxiv.org/abs/2301.13767</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Globus_Harris_I/0/1/0/all/0/1&quot;&gt;Ira Globus-Harris&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Harrison_D/0/1/0/all/0/1&quot;&gt;Declan Harrison&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Kearns_M/0/1/0/all/0/1&quot;&gt;Michael Kearns&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Roth_A/0/1/0/all/0/1&quot;&gt;Aaron Roth&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Sorrell_J/0/1/0/all/0/1&quot;&gt;Jessica Sorrell&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We study the connection between multicalibration and boosting for squared
error regression. First we prove a useful characterization of multicalibration
in terms of a ``swap regret&#39;&#39; like condition on squared error. Using this
characterization, we give an exceedingly simple algorithm that can be analyzed
both as a boosting algorithm for regression and as a multicalibration algorithm
for a class H that makes use only of a standard squared error regression oracle
for H. We give a weak learning assumption on H that ensures convergence to
Bayes optimality without the need to make any realizability assumptions --
giving us an agnostic boosting algorithm for regression. We then show that our
weak learning assumption on H is both necessary and sufficient for
multicalibration with respect to H to imply Bayes optimality. We also show that
if H satisfies our weak learning condition relative to another class C then
multicalibration with respect to H implies multicalibration with respect to C.
Finally we investigate the empirical performance of our algorithm
experimentally using an open source implementation that we make available. Our
code repository can be found at
https://github.com/Declancharrison/Level-Set-Boosting.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Bounds for c-Ideal Hashing</title>
  <guid>http://arxiv.org/abs/2301.13832</guid>
  <link>http://arxiv.org/abs/2301.13832</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Frei_F/0/1/0/all/0/1&quot;&gt;Fabian Frei&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/cs/1/au:+Wehner_D/0/1/0/all/0/1&quot;&gt;David Wehner&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In this paper, we analyze hashing from a worst-case perspective. To this end,
we study a new property of hash families that is strongly related to d-perfect
hashing, namely c-ideality. On the one hand, this notion generalizes the
definition of perfect hashing, which has been studied extensively; on the other
hand, it provides a direct link to the notion of c-approximativity. We focus on
the usually neglected case where the average load \alpha is at least 1 and
prove upper and lower parametrized bounds on the minimal size of c-ideal hash
families.
&lt;/p&gt;
&lt;p&gt;As an aside, we show how c-ideality helps to analyze the advice complexity of
hashing. The concept of advice, introduced a decade ago, lets us measure the
information content of an online problem. We prove hashing&#39;s advice complexity
to be linear in the hash table size.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

<item>
  <title>Gaussian Noise is Nearly Instance Optimal for Private Unbiased Mean Estimation</title>
  <guid>http://arxiv.org/abs/2301.13850</guid>
  <link>http://arxiv.org/abs/2301.13850</link>
  <description>
    &lt;p class=&quot;arxiv-authors&quot;&gt;&lt;b&gt;Authors:&lt;/b&gt; &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Nikolov_A/0/1/0/all/0/1&quot;&gt;Aleksandar Nikolov&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/find/math/1/au:+Tang_H/0/1/0/all/0/1&quot;&gt;Haohua Tang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;We investigate unbiased high-dimensional mean estimators in differential
privacy. We consider differentially private mechanisms whose expected output
equals the mean of the input dataset, for every dataset drawn from a fixed
convex domain $K$ in $\mathbb{R}^d$. In the setting of concentrated
differential privacy, we show that, for every input such an unbiased mean
estimator introduces approximately at least as much error as a mechanism that
adds Gaussian noise with a carefully chosen covariance. This is true when the
error is measured with respect to $\ell_p$ error for any $p \ge 2$. We extend
this result to local differential privacy, and to approximate differential
privacy, but for the latter the error lower bound holds either for a dataset or
for a neighboring dataset. We also extend our results to mechanisms that take
i.i.d.~samples from a distribution over $K$ and are unbiased with respect to
the mean of the distribution.
&lt;/p&gt;
  </description>
  <pubDate>2023-02-01 01:30:00 UTC</pubDate>
  <author>arXiv: Data Structures and Algorithms</author>
</item>

</channel>
</rss>
